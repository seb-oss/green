"use strict";(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[7223],{"./libs/angular/src/lib/pagination/pagination.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>NggPaginationComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),src=__webpack_require__("./libs/extract/src/index.ts");let NggPaginationComponent=class NggPaginationComponent{constructor(){this.i18n=src.pS,this.size="small",this.displayPages=5,this.length=0,this.pageSize=10,this._pageIndex=0,this._pageIndicies=[],this.page=new core.EventEmitter}get pageIndex(){return this._pageIndex}set pageIndex(value){this._pageIndex=Math.max(value,0)}get pageIndicies(){return this._pageIndicies}get totalPages(){return this.pageSize?Math.ceil(this.length/this.pageSize):0}ngOnChanges(changes){(changes.displayPages||changes.pageIndex||changes.pageSize||changes.length)&&(this._pageIndicies=this.getDisplayedPageIndicies())}hasPrevious(){return this.pageIndex>=1}hasNext(){return this.pageIndex<this.totalPages-1}gotoFirst(){if(!this.hasPrevious())return;const previous=this.pageIndex;this.pageIndex=0,this.emit(previous)}gotoLast(){if(!this.hasNext())return;const previous=this.pageIndex;this.pageIndex=this.totalPages-1,this.emit(previous)}gotoPrevious(){if(!this.hasPrevious())return;const previous=this.pageIndex;this.pageIndex=previous-1,this.emit(previous)}gotoNext(){if(!this.hasNext())return;const previous=this.pageIndex;this.pageIndex=previous+1,this.emit(previous)}goto(index){if(index===this.pageIndex||index<0||index>=this.totalPages)return;const previous=this.pageIndex;this.pageIndex=index,this.emit(previous)}emit(previous){this._pageIndicies=this.getDisplayedPageIndicies(),this.page.emit({pageIndex:this.pageIndex,previousPageIndex:previous})}getDisplayedPageIndicies(){return this.totalPages<=1?[]:this.totalPages<=this.displayPages?[...Array(this.totalPages-2).keys()].map((index=>index+1)):2===this.totalPages?[]:this.getCenteredPageIndicies()}getCenteredPageIndicies(){const pages=[];0===this.pageIndex?pages.push(this.pageIndex+1):this.pageIndex===this.totalPages-1?pages.push(this.pageIndex-1):pages.push(this.pageIndex);const addAfter=()=>{const next=pages[pages.length-1]+1;return next<this.totalPages-1&&counter>0&&(pages.push(next),!0)},addBefore=()=>{const previous=pages[0]-1;return previous>0&&counter>0&&(pages.unshift(previous),!0)};let counter=this.displayPages-1;for(;counter>0;){const addedAfter=addAfter();addedAfter&&counter--;const addedBefore=addBefore();if(addedBefore&&counter--,!addedAfter&&!addedBefore)break}return pages}static{this.propDecorators={i18n:[{type:core.Input}],size:[{type:core.Input}],displayPages:[{type:core.Input}],length:[{type:core.Input}],pageSize:[{type:core.Input}],pageIndex:[{type:core.Input}],page:[{type:core.Output}]}}};NggPaginationComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngg-pagination",template:'<nav\n  [class]="\'pagination \' + size"\n  role="navigation"\n  [attr.aria-label]="i18n.paginationLabel"\n  *ngIf="totalPages > 1"\n>\n  <ul class="gds-reset">\n    <li *ngIf="hasPrevious()">\n      <a\n        class="gds-reset"\n        tabindex="0"\n        (click)="gotoPrevious()"\n        (keydown.enter)="gotoPrevious()"\n        [attr.aria-label]="i18n.previousPageLabel"\n        role="button"\n      >\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">\n          <path\n            d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z"\n          />\n        </svg>\n      </a>\n    </li>\n\n    <li>\n      <a\n        class="gds-reset"\n        tabindex="0"\n        (click)="gotoFirst()"\n        (keydown.enter)="gotoFirst()"\n        [attr.aria-current]="pageIndex === 0 ? \'page\' : null"\n        [attr.aria-label]="i18n.firstPageLabel"\n        role="button"\n      >\n        1\n      </a>\n    </li>\n    <li *ngIf="pageIndicies[0] > 1" aria-hidden="true">...</li>\n\n    <li *ngFor="let index of pageIndicies">\n      <a\n        class="gds-reset"\n        tabindex="0"\n        (click)="goto(index)"\n        (keydown.enter)="goto(index)"\n        [attr.aria-current]="pageIndex === index ? \'page\' : null"\n        [attr.aria-label]="i18n.getPageLabel(index)"\n        role="button"\n      >\n        {{ index + 1 }}\n      </a>\n    </li>\n\n    <li\n      *ngIf="pageIndicies[pageIndicies.length - 1] < totalPages - 2"\n      aria-hidden="true"\n    >\n      ...\n    </li>\n\n    <li>\n      <a\n        class="gds-reset"\n        tabindex="0"\n        (click)="gotoLast()"\n        (keydown.enter)="gotoLast()"\n        [attr.aria-current]="pageIndex === totalPages - 1 ? \'page\' : null"\n        [attr.aria-label]="i18n.lastPageLabel"\n        role="button"\n      >\n        {{ totalPages }}\n      </a>\n    </li>\n    <li *ngIf="hasNext()">\n      <a\n        class="gds-reset"\n        tabindex="0"\n        (click)="gotoNext()"\n        (keydown.enter)="gotoNext()"\n        [attr.aria-label]="i18n.nextPageLabel"\n        role="button"\n      >\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">\n          <path\n            d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z"\n          />\n        </svg>\n      </a>\n    </li>\n  </ul>\n</nav>\n',changeDetection:core.ChangeDetectionStrategy.OnPush})],NggPaginationComponent)},"./libs/extract/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{pS:()=>PaginationI18n,Ud:()=>calculateDegrees,jz:()=>getSliderTrackBackground,zE:()=>randomId,SE:()=>sliderColors});const randomId=()=>"gds-"+Math.random().toString(36).substring(2,9),PaginationI18n={paginationLabel:"Pagination",nextPageLabel:"Next page",previousPageLabel:"Previous page",firstPageLabel:"First page",lastPageLabel:"Last page",jumpToPageLabel:"Go to page",getPageLabel:index=>`Page ${index+1}`},calculateDegrees=percent=>percent>100?180:percent<0?0:1.8*percent,sliderColors={primary:"#007ac7",disabled:"#dedede"},getSliderTrackBackground=val=>`linear-gradient(\n        to right,\n        ${sliderColors.primary} 0%,\n        ${sliderColors.primary} ${val}%,\n        ${sliderColors.disabled} ${val}%,\n        ${sliderColors.disabled} 100%\n      )`},"./libs/angular/src/lib/pagination/pagination.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>pagination_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),pagination_component=__webpack_require__("./libs/angular/src/lib/pagination/pagination.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let NggPaginationModule=class NggPaginationModule{};NggPaginationModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[pagination_component.M],imports:[common.CommonModule],exports:[pagination_component.M]})],NggPaginationModule);const pagination_stories={title:"Components/Navigation/Pagination",component:pagination_component.M,decorators:[(0,dist.moduleMetadata)({imports:[NggPaginationModule]})],parameters:{componentIds:["component-pagination"]},argTypes:{size:{options:["small","large"],control:{type:"radio"}}}},Default=(args=>({template:'\n    <ngg-pagination [size]="size" [length]="length" [pageSize]="pageSize" [pageIndex]="pageIndex" [displayPages]="displayPages"></ngg-pagination>\n    ',props:args})).bind({});Default.args={length:100,pageSize:10,pageIndex:4,displayPages:5,size:"small"};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  return {\n    template: `\n    <ngg-pagination [size]="size" [length]="length" [pageSize]="pageSize" [pageIndex]="pageIndex" [displayPages]="displayPages"></ngg-pagination>\n    `,\n    props: args\n  };\n}',...Default.parameters?.docs?.source}}}}}]);