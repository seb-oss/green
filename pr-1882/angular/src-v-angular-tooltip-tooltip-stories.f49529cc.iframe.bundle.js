"use strict";(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[2983],{"./libs/angular/src/v-angular/tooltip/tooltip.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Accessible:()=>Accessible,Bottom:()=>Bottom,Left:()=>Left,Right:()=>Right,Top:()=>Top,__namedExportsOrder:()=>__namedExportsOrder,default:()=>tooltip_stories});var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");const tooltipBoxStyles=new Map([["position","absolute"],["z-index","1040"],["border-radius",".25rem"],["padding",".5rem 1rem"],["background-color","#1a1a1a"],["color","#fff"],["font-size","0.875rem"],["font-weight","400"],["line-height","1.5"],["padding","0.5rem"],["pointer-events","none"]]),tooltipArrowStyles={top:new Map([["position","absolute"],["width","0"],["height","0"],["border","0.5rem solid transparent"],["bottom","-1rem"],["left","50%"],["transform","translateX(-50%)"],["border-color","#1a1a1a transparent transparent"]]),bottom:new Map([["position","absolute"],["width","0"],["height","0"],["border","0.5rem solid transparent"],["top","-1rem"],["left","50%"],["transform","translateX(-50%)"],["border-color","transparent transparent #1a1a1a"]]),left:new Map([["position","absolute"],["width","0"],["height","0"],["border","0.5rem solid transparent"],["right","-1rem"],["top","50%"],["transform","translateY(-50%)"],["border-color","transparent transparent transparent #1a1a1a"]]),right:new Map([["position","absolute"],["width","0"],["height","0"],["border","0.5rem solid transparent"],["left","-1rem"],["top","50%"],["transform","translateY(-50%)"],["border-color","transparent #1a1a1a transparent transparent"]])};var NgvTooltipDirective_1;let NgvTooltipDirective=class NgvTooltipDirective{static{NgvTooltipDirective_1=this}static shouldUpdate(change){return change&&!change.firstChange&&change.previousValue!==change.currentValue}constructor(anchorElementRef,renderer){this.anchorElementRef=anchorElementRef,this.renderer=renderer,this.thook="tooltip",this.placement="top",this.shown=!1,this.offset=10,this.resizeThrottle=50,this.maxWidth=343,this.nggvShow=new core.EventEmitter,this.nggvHide=new core.EventEmitter,this.timeout=0,this.anchorElement=this.anchorElementRef.nativeElement,this.parentElement=document.body}ngAfterViewInit(){setTimeout((()=>this.shown?this.show(!0):this.hide(!0)))}ngOnChanges(changes){(NgvTooltipDirective_1.shouldUpdate(changes.nggvTooltip)||NgvTooltipDirective_1.shouldUpdate(changes.placement)||NgvTooltipDirective_1.shouldUpdate(changes.thook))&&(this.shown?this.show(!0):this.hide(!0)),NgvTooltipDirective_1.shouldUpdate(changes.shown)&&(this.shown?this.show():this.hide()),NgvTooltipDirective_1.shouldUpdate(changes.offset)&&this.updatePosition()}ngOnDestroy(){this.hide(!0)}onMouseEnter(){this.show()}onMouseLeave(){this.hide()}resize(){this.timeout||(this.timeout=window.setTimeout((()=>{this.timeout=0,this.updatePosition()}),this.resizeThrottle))}show(recreate=!1){this.nggvTooltip&&0!==this.nggvTooltip.length&&(recreate||!this.tooltipElement?(this.hide(!0),this.create(this.nggvTooltip)):this.renderer.appendChild(this.parentElement,this.tooltipElement),this.updatePosition(),this.shown=!0,this.nggvShow.emit(this.tooltipElement))}hide(destroy=!1){this.tooltipElement&&(this.parentElement.contains(this.tooltipElement)&&this.renderer.removeChild(this.parentElement,this.tooltipElement),destroy&&this.destroy(),this.shown=!1,this.nggvHide.emit(this.tooltipElement))}create(text){this.tooltipElement=this.renderer.createElement("div"),this.renderer.addClass(this.tooltipElement,"gds-tooltip"),this.renderer.setAttribute(this.tooltipElement,"data-thook",this.thook),this.renderer.setAttribute(this.tooltipElement,"role","tooltip"),this.tooltipId&&this.renderer.setAttribute(this.tooltipElement,"id",this.tooltipId),Array.from(tooltipBoxStyles.entries()).forEach((([style,value])=>{this.renderer.setStyle(this.tooltipElement,style,value)}));const relativeMaxWidth=this.pxToRem(this.maxWidth);this.renderer.setStyle(this.tooltipElement,"max-width",relativeMaxWidth),this.renderer.appendChild(this.tooltipElement,this.renderer.createText(text)),this.renderer.appendChild(this.parentElement,this.tooltipElement),this.arrowElement=this.renderer.createElement("div"),this.renderer.addClass(this.arrowElement,`gds-tooltip__arrow-${this.placement}`),this.renderer.appendChild(this.tooltipElement,this.arrowElement)}destroy(){this.tooltipElement=void 0,this.arrowElement=void 0}updatePosition(){if(!this.tooltipElement||!this.arrowElement)return;const scrollPos=window.pageYOffset||document.documentElement.scrollTop||this.parentElement.scrollTop||0,anchorRect=this.anchorElement.getBoundingClientRect(),tooltipRect=this.tooltipElement.getBoundingClientRect(),arrowRect=this.arrowElement.getBoundingClientRect();switch(this.placement){case"top":this.alignVertical(!0,scrollPos,anchorRect,tooltipRect.width,tooltipRect.height,arrowRect.width);break;case"bottom":this.alignVertical(!1,scrollPos,anchorRect,tooltipRect.width,tooltipRect.height,arrowRect.width);break;case"left":this.alignHorizontal(!0,scrollPos,anchorRect,tooltipRect.height);break;case"right":this.alignHorizontal(!1,scrollPos,anchorRect,tooltipRect.height);break;default:return}}alignVertical(above,scrollPos,anchor,tooltipWidth,tooltipHeight,arrowWidth){const width=this.parentElement.clientWidth,anchorMidX=anchor.left+anchor.width/2,tooltip={},arrow={};tooltip.top=above?anchor.top-tooltipHeight-this.offset+scrollPos:anchor.bottom+this.offset+scrollPos,anchorMidX<width/2?(tooltip.left=Math.max(0,anchorMidX-tooltipWidth/2),arrow.left=anchorMidX-tooltip.left):(tooltip.right=Math.max(0,width-(anchorMidX+tooltipWidth/2)),arrow.right=width-anchorMidX-tooltip.right-arrowWidth),this.setStyle(tooltip,arrow)}alignHorizontal(before,scrollPos,anchor,tooltipHeight){const width=this.parentElement.clientWidth,tooltip={top:anchor.top+(anchor.height-tooltipHeight)/2+scrollPos},arrow={top:tooltipHeight/2};before?tooltip.right=width-anchor.left+this.offset:tooltip.left=anchor.right+this.offset,this.setStyle(tooltip,arrow)}setStyle(tooltip,arrow){Object.entries(tooltip).forEach((([prop,value])=>{const position=this.pxToRem(value);this.renderer.setStyle(this.tooltipElement,prop,position)})),Object.entries(arrow).forEach((([prop,value])=>{const position=this.pxToRem(value);this.renderer.setStyle(this.arrowElement,prop,position)})),Array.from(tooltipArrowStyles[this.placement].entries()).forEach((([style,value])=>{this.renderer.setStyle(this.arrowElement,style,value)}))}pxToRem(value){const fontSizePx=window?.getComputedStyle(this.parentElement)?.getPropertyValue("font-size"),fontSizeNumberMatch=fontSizePx?.match(/\d{1,}/);return`${value/(fontSizeNumberMatch?+fontSizeNumberMatch[0]:16)}rem`}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={nggvTooltip:[{type:core.Input}],thook:[{type:core.Input}],placement:[{type:core.Input}],shown:[{type:core.Input}],offset:[{type:core.Input}],resizeThrottle:[{type:core.Input}],tooltipId:[{type:core.Input}],maxWidth:[{type:core.Input}],nggvShow:[{type:core.Output}],nggvHide:[{type:core.Output}],onMouseEnter:[{type:core.HostListener,args:["mouseenter"]},{type:core.HostListener,args:["focus"]}],onMouseLeave:[{type:core.HostListener,args:["mouseleave"]},{type:core.HostListener,args:["blur"]},{type:core.HostListener,args:["keyup.escape"]}],resize:[{type:core.HostListener,args:["window:resize"]}]}}};NgvTooltipDirective=NgvTooltipDirective_1=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[nggvTooltip]"}),(0,tslib_es6.Sn)("design:paramtypes",[core.ElementRef,core.Renderer2])],NgvTooltipDirective);const tooltip_stories={title:"V-Angular/Tooltip",decorators:[(0,dist.moduleMetadata)({declarations:[NgvTooltipDirective],imports:[common.CommonModule]})],argTypes:{placement:{options:["top","right","bottom","left"],control:{type:"select"}}}},argsToAttr=args=>Object.keys(args).map((attr=>`[${attr}]="${attr}"`)).join(" "),Template=args=>({template:`\n    <p>Mauris tristique, nisi eu ultricies pellentesque, ligula neque ornare dolor, sit amet feugiat augue neque in dui.\n      Curabitur euismod rhoncus magna, vitae pulvinar tellus dignissim vel. Etiam faucibus iaculis egestas. Quisque\n      tristique nisi ut ex dignissim viverra. Nam massa justo, consequat sollicitudin accumsan eget, condimentum sed felis.\n      Phasellus finibus arcu elit, sed malesuada lectus eleifend dignissim. Proin diam enim, ultrices sit amet\n      consectetur sit amet, <a ${argsToAttr(args)}>placerat</a> ut lorem. In dignissim, justo quis ullamcorper euismod,\n      erat sem rutrum velit, vitae vestibulum quam sem a diam. Donec scelerisque mi at maximus hendrerit.\n      Integer diam est, euismod in nisl sagittis, pharetra imperdiet metus.\n      Pellentesque a ante lacus. Donec vitae euismod lorem, ut tincidunt ex. Nam a fringilla\n      lorem. Nulla et ornare quam.</p>\n    `,props:{...args}}),Top=Template.bind({});Top.args={nggvTooltip:"This is a tooltip with a really long text that should always be visible. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",placement:"top",offset:10,shown:!0,resizeThrottle:50};const Bottom=Template.bind({});Bottom.args={...Top.args,placement:"bottom"};const Left=Template.bind({});Left.args={...Top.args,nggvTooltip:"This is a tooltip with a long text that should attempt to be visible",placement:"left"};const Right=Template.bind({});Right.args={...Top.args,nggvTooltip:"This is a tooltip with a long text that should attempt to be visible",placement:"right"};const Accessible=(args=>({template:`\n  <button ${argsToAttr(args)} aria-describedby="accessible-tooltip">Hover me</button>\n  `,props:{...args}})).bind({});Accessible.args={...Top.args,nggvTooltip:"This is a tooltip with a long text that should attempt to be visible",placement:"right",shown:!1,tooltipId:"accessible-tooltip"};const __namedExportsOrder=["Top","Bottom","Left","Right","Accessible"];Top.parameters={...Top.parameters,docs:{...Top.parameters?.docs,source:{originalSource:"(args: NgvTooltipDirective & any) => ({\n  /* spell-checker: disable */\n  template: /*html*/`\n    <p>Mauris tristique, nisi eu ultricies pellentesque, ligula neque ornare dolor, sit amet feugiat augue neque in dui.\n      Curabitur euismod rhoncus magna, vitae pulvinar tellus dignissim vel. Etiam faucibus iaculis egestas. Quisque\n      tristique nisi ut ex dignissim viverra. Nam massa justo, consequat sollicitudin accumsan eget, condimentum sed felis.\n      Phasellus finibus arcu elit, sed malesuada lectus eleifend dignissim. Proin diam enim, ultrices sit amet\n      consectetur sit amet, <a ${argsToAttr(args)}>placerat</a> ut lorem. In dignissim, justo quis ullamcorper euismod,\n      erat sem rutrum velit, vitae vestibulum quam sem a diam. Donec scelerisque mi at maximus hendrerit.\n      Integer diam est, euismod in nisl sagittis, pharetra imperdiet metus.\n      Pellentesque a ante lacus. Donec vitae euismod lorem, ut tincidunt ex. Nam a fringilla\n      lorem. Nulla et ornare quam.</p>\n    `,\n  /* spell-checker: enable */\n  props: {\n    ...args\n  }\n})",...Top.parameters?.docs?.source}}},Bottom.parameters={...Bottom.parameters,docs:{...Bottom.parameters?.docs,source:{originalSource:"(args: NgvTooltipDirective & any) => ({\n  /* spell-checker: disable */\n  template: /*html*/`\n    <p>Mauris tristique, nisi eu ultricies pellentesque, ligula neque ornare dolor, sit amet feugiat augue neque in dui.\n      Curabitur euismod rhoncus magna, vitae pulvinar tellus dignissim vel. Etiam faucibus iaculis egestas. Quisque\n      tristique nisi ut ex dignissim viverra. Nam massa justo, consequat sollicitudin accumsan eget, condimentum sed felis.\n      Phasellus finibus arcu elit, sed malesuada lectus eleifend dignissim. Proin diam enim, ultrices sit amet\n      consectetur sit amet, <a ${argsToAttr(args)}>placerat</a> ut lorem. In dignissim, justo quis ullamcorper euismod,\n      erat sem rutrum velit, vitae vestibulum quam sem a diam. Donec scelerisque mi at maximus hendrerit.\n      Integer diam est, euismod in nisl sagittis, pharetra imperdiet metus.\n      Pellentesque a ante lacus. Donec vitae euismod lorem, ut tincidunt ex. Nam a fringilla\n      lorem. Nulla et ornare quam.</p>\n    `,\n  /* spell-checker: enable */\n  props: {\n    ...args\n  }\n})",...Bottom.parameters?.docs?.source}}},Left.parameters={...Left.parameters,docs:{...Left.parameters?.docs,source:{originalSource:"(args: NgvTooltipDirective & any) => ({\n  /* spell-checker: disable */\n  template: /*html*/`\n    <p>Mauris tristique, nisi eu ultricies pellentesque, ligula neque ornare dolor, sit amet feugiat augue neque in dui.\n      Curabitur euismod rhoncus magna, vitae pulvinar tellus dignissim vel. Etiam faucibus iaculis egestas. Quisque\n      tristique nisi ut ex dignissim viverra. Nam massa justo, consequat sollicitudin accumsan eget, condimentum sed felis.\n      Phasellus finibus arcu elit, sed malesuada lectus eleifend dignissim. Proin diam enim, ultrices sit amet\n      consectetur sit amet, <a ${argsToAttr(args)}>placerat</a> ut lorem. In dignissim, justo quis ullamcorper euismod,\n      erat sem rutrum velit, vitae vestibulum quam sem a diam. Donec scelerisque mi at maximus hendrerit.\n      Integer diam est, euismod in nisl sagittis, pharetra imperdiet metus.\n      Pellentesque a ante lacus. Donec vitae euismod lorem, ut tincidunt ex. Nam a fringilla\n      lorem. Nulla et ornare quam.</p>\n    `,\n  /* spell-checker: enable */\n  props: {\n    ...args\n  }\n})",...Left.parameters?.docs?.source}}},Right.parameters={...Right.parameters,docs:{...Right.parameters?.docs,source:{originalSource:"(args: NgvTooltipDirective & any) => ({\n  /* spell-checker: disable */\n  template: /*html*/`\n    <p>Mauris tristique, nisi eu ultricies pellentesque, ligula neque ornare dolor, sit amet feugiat augue neque in dui.\n      Curabitur euismod rhoncus magna, vitae pulvinar tellus dignissim vel. Etiam faucibus iaculis egestas. Quisque\n      tristique nisi ut ex dignissim viverra. Nam massa justo, consequat sollicitudin accumsan eget, condimentum sed felis.\n      Phasellus finibus arcu elit, sed malesuada lectus eleifend dignissim. Proin diam enim, ultrices sit amet\n      consectetur sit amet, <a ${argsToAttr(args)}>placerat</a> ut lorem. In dignissim, justo quis ullamcorper euismod,\n      erat sem rutrum velit, vitae vestibulum quam sem a diam. Donec scelerisque mi at maximus hendrerit.\n      Integer diam est, euismod in nisl sagittis, pharetra imperdiet metus.\n      Pellentesque a ante lacus. Donec vitae euismod lorem, ut tincidunt ex. Nam a fringilla\n      lorem. Nulla et ornare quam.</p>\n    `,\n  /* spell-checker: enable */\n  props: {\n    ...args\n  }\n})",...Right.parameters?.docs?.source}}},Accessible.parameters={...Accessible.parameters,docs:{...Accessible.parameters?.docs,source:{originalSource:'(args: NgvTooltipDirective & any) => ({\n  /* spell-checker: disable */\n  template: /*html*/`\n  <button ${argsToAttr(args)} aria-describedby="accessible-tooltip">Hover me</button>\n  `,\n  /* spell-checker: enable */\n  props: {\n    ...args\n  }\n})',...Accessible.parameters?.docs?.source}}}}}]);