const e="1.0.0",t="",n=[{kind:"javascript-module",path:"setup-jest.js",declarations:[],exports:[]},{kind:"javascript-module",path:"build-scripts/build-tests.js",declarations:[],exports:[]},{kind:"javascript-module",path:"build-scripts/tokens-color.js",declarations:[],exports:[]},{kind:"javascript-module",path:"src/gds-element.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./components"}},{kind:"js",name:"*",declaration:{name:"*",package:"./utils/helpers/custom-element-scoping"}}]},{kind:"javascript-module",path:"src/localization.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./utils/localization/localization"}}]},{kind:"javascript-module",path:"src/scoping.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./utils/helpers/custom-element-scoping"}}]},{kind:"javascript-module",path:"src/tokens.style.ts",declarations:[{kind:"variable",name:"tokens",type:{text:"array"},default:"[ unsafeCSS(sizeTokens), unsafeCSS(textTokens), unsafeCSS(motionTokens), unsafeCSS(shadowTokens), ]"}],exports:[{kind:"js",name:"tokens",declaration:{name:"tokens",module:"src/tokens.style.ts"}},{kind:"js",name:"colorsLight",declaration:{name:"colorsLight",module:"src/tokens.style.ts"}},{kind:"js",name:"colorsDark",declaration:{name:"colorsDark",module:"src/tokens.style.ts"}}]},{kind:"javascript-module",path:"src/transitional-styles.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./utils/transitional-styles/transitional-styles"}}]},{kind:"javascript-module",path:"src/components/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"../primitives/listbox/option"}},{kind:"js",name:"*",declaration:{name:"*",package:"../primitives/menu/menu-heading"}},{kind:"js",name:"*",declaration:{name:"*",package:"../primitives/menu/menu-item"}},{kind:"js",name:"*",declaration:{name:"*",package:"./button"}},{kind:"js",name:"*",declaration:{name:"*",package:"./badge"}},{kind:"js",name:"*",declaration:{name:"*",package:"./menu-button"}},{kind:"js",name:"*",declaration:{name:"*",package:"./context-menu"}},{kind:"js",name:"*",declaration:{name:"*",package:"./coachmark"}},{kind:"js",name:"*",declaration:{name:"*",package:"./datepicker"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dialog"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dropdown"}},{kind:"js",name:"*",declaration:{name:"*",package:"./grid/grid"}},{kind:"js",name:"*",declaration:{name:"*",package:"./card/card"}},{kind:"js",name:"*",declaration:{name:"*",package:"./flex/flex"}},{kind:"js",name:"*",declaration:{name:"*",package:"./mask"}},{kind:"js",name:"*",declaration:{name:"*",package:"./container"}},{kind:"js",name:"*",declaration:{name:"*",package:"./div"}},{kind:"js",name:"*",declaration:{name:"*",package:"./img"}},{kind:"js",name:"*",declaration:{name:"*",package:"./video"}},{kind:"js",name:"*",declaration:{name:"*",package:"./text"}},{kind:"js",name:"*",declaration:{name:"*",package:"./link"}},{kind:"js",name:"*",declaration:{name:"*",package:"./divider"}},{kind:"js",name:"*",declaration:{name:"*",package:"./spacer"}},{kind:"js",name:"*",declaration:{name:"*",package:"./signal"}},{kind:"js",name:"*",declaration:{name:"*",package:"./popover"}},{kind:"js",name:"*",declaration:{name:"*",package:"./grouped-list"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icon/icons"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icon/icon"}},{kind:"js",name:"*",declaration:{name:"*",package:"./segmented-control"}},{kind:"js",name:"*",declaration:{name:"*",package:"./theme"}},{kind:"js",name:"*",declaration:{name:"*",package:"./filter-chips"}},{kind:"js",name:"*",declaration:{name:"*",package:"./form"}},{kind:"js",name:"*",declaration:{name:"*",package:"./input"}},{kind:"js",name:"*",declaration:{name:"*",package:"./select"}},{kind:"js",name:"*",declaration:{name:"*",package:"./spinner"}},{kind:"js",name:"*",declaration:{name:"*",package:"./textarea"}},{kind:"js",name:"*",declaration:{name:"*",package:"./radio"}}]},{kind:"javascript-module",path:"src/components/pure.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"../primitives/listbox/option.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"../primitives/menu/menu-heading.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"../primitives/menu/menu-item.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./button/button.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./badge/badge.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./menu-button/menu-button.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./context-menu/context-menu.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./coachmark/coachmark.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./datepicker/datepicker.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dropdown/dropdown.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dialog/dialog.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./grid/grid.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./card/card.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./flex/flex.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./mask/mask.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./container/container.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./div/div.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./img/img.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./video/video.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./text/text.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./link/link.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./popover/popover.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./divider/divider.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./spacer/spacer.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./signal/signal.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./grouped-list/grouped-list.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icon/icons/pure"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icon/icon.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./segmented-control/segmented-control.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./theme/theme.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./filter-chips/filter-chips.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./form/summary/summary.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./input/input.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./select/select.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./spinner/spinner.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./textarea/textarea.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./radio/radio-group/radio-group.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./radio/radio.component"}}]},{kind:"javascript-module",path:"src/generated/locale-codes.ts",declarations:[{kind:"variable",name:"sourceLocale",default:"`en`",description:"The locale code that templates in this source code are written in."},{kind:"variable",name:"targetLocales",type:{text:"[\n  `da`,\n  `de`,\n  `fi`,\n  `fr`,\n  `it`,\n  `nl`,\n  `no`,\n  `sv`,\n]"},default:"[ `da`, `de`, `fi`, `fr`, `it`, `nl`, `no`, `sv`, ]",description:`The other locale codes that this application is localized into. Sorted
lexicographically.`},{kind:"variable",name:"allLocales",type:{text:"[\n  `da`,\n  `de`,\n  `en`,\n  `fi`,\n  `fr`,\n  `it`,\n  `nl`,\n  `no`,\n  `sv`,\n]"},default:"[ `da`, `de`, `en`, `fi`, `fr`, `it`, `nl`, `no`, `sv`, ]",description:"All valid project locale codes. Sorted lexicographically."}],exports:[{kind:"js",name:"sourceLocale",declaration:{name:"sourceLocale",module:"src/generated/locale-codes.ts"}},{kind:"js",name:"targetLocales",declaration:{name:"targetLocales",module:"src/generated/locale-codes.ts"}},{kind:"js",name:"allLocales",declaration:{name:"allLocales",module:"src/generated/locale-codes.ts"}}]},{kind:"javascript-module",path:"src/shared-styles/form-control-host.style.ts",declarations:[],exports:[{kind:"js",name:"default",declaration:{module:"src/shared-styles/form-control-host.style.ts"}}]},{kind:"javascript-module",path:"src/storybook-docs/story.tsx",declarations:[{kind:"function",name:"Story",parameters:[{name:"{ path, children }",type:{text:"StoryProps"}}]}],exports:[{kind:"js",name:"default",declaration:{name:"Story",module:"src/storybook-docs/story.tsx"}}]},{kind:"javascript-module",path:"src/storybook-docs/version.tsx",declarations:[{kind:"function",name:"version",parameters:[{name:"{ pack }"}]}],exports:[{kind:"js",name:"default",declaration:{name:"version",module:"src/storybook-docs/version.tsx"}}]},{kind:"javascript-module",path:"src/utils/global-styles.ts",declarations:[{kind:"class",description:"",name:"GlobalStylesRegistry",members:[{kind:"field",name:"instance",static:!0,description:"Get the global singleton instance of the GlobalStylesRegistry.",readonly:!0},{kind:"method",name:"injectGlobalStyles",parameters:[{name:"key",type:{text:"string"},description:"unique identifier for this stylesheet."},{name:"styles",type:{text:"CSSResult"},description:"CSSResult produced by the lit css template literal tag"}],description:`Injects global styles into the document. This function is intended to be used for global styles
that cannot be scoped to a specific component.`}]}],exports:[{kind:"js",name:"GlobalStylesRegistry",declaration:{name:"GlobalStylesRegistry",module:"src/utils/global-styles.ts"}}]},{kind:"javascript-module",path:"src/utils/react.ts",declarations:[{kind:"function",name:"getReactComponent",parameters:[{name:"tagName",type:{text:"string"}}],description:"Get a React 19 compatible component from a GDS component"}],exports:[{kind:"js",name:"getReactComponent",declaration:{name:"getReactComponent",module:"src/utils/react.ts"}}]},{kind:"javascript-module",path:"src/components/badge/badge.component.ts",declarations:[{kind:"class",description:"`gds-badge`",name:"GdsBadge",members:[{kind:"field",name:"variant",type:{text:"string"},default:"'information'",description:`Controls the variant of the badge.
Supports all valid variants like information, notice, positive, warning, negative.`,attribute:"variant"},{kind:"field",name:"size",type:{text:"'default' | 'small'"},default:"'default'",description:"Defines the size of the badge.\nThe default value is `default`.",attribute:"size"},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"Indicates whether the badge is disabled.\nWhen set to `true`, the badge will appear in a disabled state and will not be interactive.",attribute:"disabled",reflects:!0},{kind:"field",name:"notification",type:{text:"boolean"},default:"false",description:"Indicates whether the badge is in notification mode.\nWhen set to `true`, the badge will act as a notification badge with only two variants: `positive` or `negative`.",attribute:"notification",reflects:!0},{kind:"field",name:"rounded",type:{text:"boolean"},default:"false",description:"Indicates whether the badge is rounded.",attribute:"rounded",reflects:!0},{kind:"field",name:"mainSlotOccupied",type:{text:"boolean"},default:"false"},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"variant",type:{text:"string"},default:"'information'",description:`Controls the variant of the badge.
Supports all valid variants like information, notice, positive, warning, negative.`,fieldName:"variant"},{name:"size",type:{text:"'default' | 'small'"},default:"'default'",description:"Defines the size of the badge.\nThe default value is `default`.",fieldName:"size"},{name:"disabled",type:{text:"boolean"},default:"false",description:"Indicates whether the badge is disabled.\nWhen set to `true`, the badge will appear in a disabled state and will not be interactive.",fieldName:"disabled"},{name:"notification",type:{text:"boolean"},default:"false",description:"Indicates whether the badge is in notification mode.\nWhen set to `true`, the badge will act as a notification badge with only two variants: `positive` or `negative`.",fieldName:"notification"},{name:"rounded",type:{text:"boolean"},default:"false",description:"Indicates whether the badge is rounded.",fieldName:"rounded"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-badge",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsBadge",declaration:{name:"GdsBadge",module:"src/components/badge/badge.component.ts"}}]},{kind:"javascript-module",path:"src/components/badge/badge.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Badge', component: 'gds-badge', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-badge'), }, }",description:'A badge is a small status or notification indicator that can be used to display a message or status.\n\nFeatures:\n- **Variants**: The badge supports multiple variants including `information`, `notice`, `positive`, `warning`, and `negative`, allowing for different contextual uses.\n- **Slots**: The badge includes a `lead` slot for adding leading content such as icons, enhancing the visual representation.\n- **Disabled State**: The badge can be disabled, making it non-interactive and visually indicating its disabled state.\n- **Size Control**: The badge size can be controlled via the `size` property, with options for `default` and `small`.\n\nExample usage:\n\n```html\n<gds-badge variant="positive">\n  <gds-icon-rocket slot="lead"></gds-icon-rocket>\n  Launch\n</gds-badge>\n```'},{kind:"variable",name:"Variants",type:{text:"Story"},default:'{ name: \'Variants\', render: (args) => html` <gds-flex flex-direction="column" justify-content="center" gap="4xl" padding="4xl" > <gds-flex flex-direction="column" gap="m"> <gds-flex flex-direction="column" gap="s"> <gds-text>Icon</gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-flex gap="xl"> <gds-badge variant="information"> <gds-icon-circle-info slot="lead"></gds-icon-circle-info> Information </gds-badge> <gds-badge variant="notice"> <gds-icon-circle-info slot="lead"></gds-icon-circle-info> Notice </gds-badge> <gds-badge variant="positive"> <gds-icon-circle-check slot="lead"></gds-icon-circle-check> Positive </gds-badge> <gds-badge variant="warning"> <gds-icon-circle-check slot="lead"></gds-icon-circle-check> Warning </gds-badge> <gds-badge variant="negative"> <gds-icon-triangle-exclamation slot="lead"> </gds-icon-triangle-exclamation> Negative </gds-badge> <gds-badge variant="negative" disabled> <gds-icon-triangle-exclamation slot="lead"> </gds-icon-triangle-exclamation> Disabled </gds-badge> </gds-flex> </gds-flex> <gds-flex flex-direction="column" gap="m"> <gds-flex flex-direction="column" gap="s"> <gds-text>Basic</gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-flex gap="xl"> <gds-badge variant="information"> Information </gds-badge> <gds-badge variant="notice"> Notice </gds-badge> <gds-badge variant="positive"> Positive </gds-badge> <gds-badge variant="warning"> Warning </gds-badge> <gds-badge variant="negative"> Negative </gds-badge> <gds-badge variant="negative" disabled> Disabled </gds-badge> </gds-flex> </gds-flex> <gds-flex flex-direction="column" gap="m"> <gds-flex flex-direction="column" gap="s"> <gds-text>Small</gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-flex gap="xl"> <gds-badge size="small" variant="information"> 120 </gds-badge> <gds-badge size="small" variant="notice"> 428 </gds-badge> <gds-badge size="small" variant="positive"> 32 </gds-badge> <gds-badge size="small" variant="warning"> 602 </gds-badge> <gds-badge size="small" variant="negative"> 537 </gds-badge> <gds-badge size="small" variant="negative" disabled> 982 </gds-badge> </gds-flex> </gds-flex> <gds-flex flex-direction="column" gap="m"> <gds-flex flex-direction="column" gap="s"> <gds-text>Notification</gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-flex gap="xl" align-items="center"> <gds-badge variant="positive" notification></gds-badge> <gds-badge variant="positive" notification>9</gds-badge> <gds-badge variant="positive" notification> 999 <gds-icon-plus-small slot="trail"></gds-icon-plus-small ></gds-badge> <gds-badge variant="negative" notification></gds-badge> <gds-badge variant="negative" notification>9</gds-badge> <gds-badge variant="negative" notification> 999 <gds-icon-plus-small slot="trail"></gds-icon-plus-small ></gds-badge> </gds-flex> </gds-flex> </gds-flex> `, }'},{kind:"variable",name:"Lead",type:{text:"Story"},default:'{ name: \'Lead\', parameters: { controls: { include: [] }, }, render: (args) => html` <gds-flex gap="xl"> <gds-badge variant="positive"> <gds-icon-rocket slot="lead"></gds-icon-rocket> Launch </gds-badge> <gds-badge variant="warning"> <gds-icon-arrow-rotate-counter-clockwise slot="lead"> </gds-icon-arrow-rotate-counter-clockwise> Discard </gds-badge> </gds-flex> `, }',description:`The \`gds-badge\` component includes a \`lead\` slot that allows for the addition of leading content, such as icons.

This slot can be used to enhance the visual representation of the badge by including elements like \`gds-icon\`.

Example usage:

\`\`\`html
<gds-badge variant="positive">
  <gds-icon-rocket slot="lead"></gds-icon-rocket>
  Launch
</gds-badge>
<gds-badge variant="warning">
  <gds-icon-chevron-up slot="lead"></gds-icon-chevron-up>
  Discard
</gds-badge>
\`\`\``},{kind:"variable",name:"Trail",type:{text:"Story"},default:'{ name: \'Trail\', parameters: { controls: { include: [] }, }, render: (args) => html` <gds-flex gap="xl"> <gds-badge variant="positive"> <gds-icon-plus-small slot="lead"></gds-icon-plus-small> 10,000.00 <span slot="trail">SEK</span> </gds-badge> <gds-badge variant="negative"> <gds-icon-minus-small slot="lead"></gds-icon-minus-small> 142.00 <span slot="trail">EUR</span> </gds-badge> </gds-flex> `, }',description:'`gds-badge` has a trail slot that can be used to add additional content to the badge.\n\n```html\n<gds-badge>\n <span slot="trail">...</span>\n</gds-badge>\n```'},{kind:"variable",name:"Size",type:{text:"Story"},default:'{ name: \'Size\', render: (args) => html` <gds-flex gap="4xl"> <gds-flex flex-direction="column" gap="xl"> <gds-badge variant="information" size="small">140</gds-badge> <gds-badge variant="notice" size="small">140</gds-badge> <gds-badge variant="positive" size="small">140</gds-badge> <gds-badge variant="warning" size="small">140</gds-badge> <gds-badge variant="negative" size="small">140</gds-badge> </gds-flex> <gds-flex flex-direction="column" gap="xl"> <gds-badge variant="information" size="small">kr</gds-badge> <gds-badge variant="notice" size="small">kr</gds-badge> <gds-badge variant="positive" size="small">kr</gds-badge> <gds-badge variant="warning" size="small">kr</gds-badge> <gds-badge variant="negative" size="small">kr</gds-badge> </gds-flex> </gds-flex> `, }',description:"Defines the size of the badge.\nThe default value is `default`."},{kind:"variable",name:"Disabled",type:{text:"Story"},default:'{ name: \'Disabled\', render: (args) => html` <gds-flex gap="xl"> <gds-badge variant="positive" disabled> <gds-icon-rocket slot="lead"></gds-icon-rocket> Launch </gds-badge> <gds-badge variant="warning" disabled> <gds-icon-arrow-rotate-counter-clockwise slot="lead"> </gds-icon-arrow-rotate-counter-clockwise> Discard </gds-badge> </gds-flex> `, }',description:"Indicates whether the badge is disabled.\nWhen set to `true`, the badge will appear in a disabled state and will not be interactive."},{kind:"variable",name:"Notification",type:{text:"Story"},default:`{ name: 'Notification', parameters: { actions: { handles: ['mouseover', 'mouseout'], }, }, play: async () => { document.querySelectorAll('gds-badge[notification]').forEach((badge) => { let interval: number | undefined const startAnimation = () => { const content = badge.textContent?.trim() || '' const numericContent = content.replace(/\\D/g, '') // Remove non-numeric characters if (numericContent && !isNaN(Number(numericContent))) { const targetValue = parseInt(numericContent, 10) let currentValue = 0 interval = window.setInterval(() => { badge.textContent = currentValue.toString() + content.replace(/\\d/g, '') // Preserve non-numeric characters if (currentValue === targetValue) { clearInterval(interval) } else { currentValue++ } }, 50) // Adjust the interval speed as needed } } const stopAnimation = () => { if (interval) { clearInterval(interval) interval = undefined } } badge.addEventListener('mouseover', startAnimation) badge.addEventListener('mouseout', stopAnimation) }) }, render: (args) => html\` <gds-flex gap="xl" align-items="center"> <gds-badge variant="positive" notification></gds-badge> <gds-badge variant="positive" notification>9</gds-badge> <gds-badge variant="positive" notification> 999 <gds-icon-plus-small slot="trail"></gds-icon-plus-small> </gds-badge> <gds-badge variant="negative" notification></gds-badge> <gds-badge variant="negative" notification>9</gds-badge> <gds-badge variant="negative" notification> 999 <gds-icon-plus-small slot="trail"></gds-icon-plus-small> </gds-badge> </gds-flex> \`, }`,description:'The `Notification` story demonstrates the use of the `gds-badge` component in notification mode.\nIn this mode, the badge acts as a notification indicator with only two possible variants: `positive` or `negative`.\n\nExample usage:\n\n```html\n<gds-flex gap="xl">\n  <gds-badge notification>...</gds-badge>\n  <gds-badge notification>...</gds-badge>\n</gds-flex>\n```'},{kind:"variable",name:"Rounded",type:{text:"Story"},default:'{ name: \'Rounded\', parameters: {}, render: (args) => html` <gds-flex gap="xl" flex-direction="column"> <gds-flex flex-direction="column" gap="m"> <gds-flex flex-direction="column" gap="s"> <gds-text>Rounded Default</gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-flex gap="xl"> <gds-badge rounded variant="information"> 01 </gds-badge> <gds-badge rounded variant="notice"> 02 </gds-badge> <gds-badge rounded variant="positive"> 03 </gds-badge> <gds-badge rounded variant="warning"> 04 </gds-badge> <gds-badge rounded variant="negative"> 05 </gds-badge> <gds-badge rounded variant="negative" disabled> 06 </gds-badge> </gds-flex> </gds-flex> <gds-flex flex-direction="column" gap="m"> <gds-flex flex-direction="column" gap="s"> <gds-text>Rounded Small</gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-flex gap="xl"> <gds-badge rounded size="small" variant="information"> 01 </gds-badge> <gds-badge rounded size="small" variant="notice"> 02 </gds-badge> <gds-badge rounded size="small" variant="positive"> 03 </gds-badge> <gds-badge rounded size="small" variant="warning"> 04 </gds-badge> <gds-badge rounded size="small" variant="negative"> 05 </gds-badge> <gds-badge rounded size="small" variant="negative" disabled> 06 </gds-badge> </gds-flex> </gds-flex> </gds-flex> `, }',description:'The `Rounded` story demonstrates the use of the `gds-badge` component with the `rounded` property.\n\nWhen set to `true`, the badge will have fully rounded corners.\n\nExample usage:\n\n```html\n<gds-badge rounded variant="information"> 01 </gds-badge>\n```'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/badge/badge.stories.ts"}},{kind:"js",name:"Variants",declaration:{name:"Variants",module:"src/components/badge/badge.stories.ts"}},{kind:"js",name:"Lead",declaration:{name:"Lead",module:"src/components/badge/badge.stories.ts"}},{kind:"js",name:"Trail",declaration:{name:"Trail",module:"src/components/badge/badge.stories.ts"}},{kind:"js",name:"Size",declaration:{name:"Size",module:"src/components/badge/badge.stories.ts"}},{kind:"js",name:"Disabled",declaration:{name:"Disabled",module:"src/components/badge/badge.stories.ts"}},{kind:"js",name:"Notification",declaration:{name:"Notification",module:"src/components/badge/badge.stories.ts"}},{kind:"js",name:"Rounded",declaration:{name:"Rounded",module:"src/components/badge/badge.stories.ts"}}]},{kind:"javascript-module",path:"src/components/badge/badge.style.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { display: inline-block; } slot[name='lead']::slotted(*) { line-height: var(--gds-space-m); } :host([notification]) slot[name='trail']::slotted(*) { line-height: var(--gds-space-s); } :host([notification]) slot[name='lead']::slotted(*) { line-height: var(--gds-space-s); } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/badge/badge.style.ts"}}]},{kind:"javascript-module",path:"src/components/badge/badge.ts",declarations:[],exports:[{kind:"js",name:"GdsBadge",declaration:{name:"GdsBadge",module:"src/components/badge/badge.ts"}}]},{kind:"javascript-module",path:"src/components/badge/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./badge"}}]},{kind:"javascript-module",path:"src/components/blur/blur.component.ts",declarations:[{kind:"class",description:"",name:"GdsBlur",slots:[{description:"Content to be blurred.",name:""}],members:[{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-blur",customElement:!0,attributes:[{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsBlur",declaration:{name:"GdsBlur",module:"src/components/blur/blur.component.ts"}}]},{kind:"javascript-module",path:"src/components/blur/blur.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Blur', component: 'gds-blur', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-blur'), }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/blur)

The Blur component is used to apply a blur effect over content,
often used to obscure sensitive or background information.`},{kind:"variable",name:"Default",type:{text:"Story"},default:"{ ...DefaultParams, render: () => html` <gds-blur> <gds-text>Blur</gds-text> </gds-blur> `, }"}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/blur/blur.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/blur/blur.stories.ts"}}]},{kind:"javascript-module",path:"src/components/blur/blur.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { --_blur: 5px; filter: blur(var(--_blur)); } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/blur/blur.styles.ts"}}]},{kind:"javascript-module",path:"src/components/blur/blur.ts",declarations:[],exports:[{kind:"js",name:"GdsBlur",declaration:{name:"GdsBlur",module:"src/components/blur/blur.ts"}}]},{kind:"javascript-module",path:"src/components/blur/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./blur"}}]},{kind:"javascript-module",path:"src/components/button/button.component.ts",declarations:[{kind:"class",description:"",name:"GdsButton",slots:[{description:"Content to be displayed as the button label.",name:""},{description:"An optional slot that allows a `gds-icon-[ICON_NAME]` element to be placed before the label.",name:"lead"},{description:"An optional slot that allows a `gds-icon-[ICON_NAME]` element to be placed after the label.",name:"trail"}],events:[{description:"Fired when the button is clicked.",name:"click",reactName:"onClick",eventName:"ClickEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"Button",module:"src/components/button/button.component.ts"},tagName:"gds-button",customElement:!0,summary:"A custom button element that can display a label, lead and trail icons, and a ripple effect on click.",members:[{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the button is disabled.",attribute:"disabled",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"type",type:{text:"HTMLButtonElement['type'] | undefined"},description:"The type of the button.",attribute:"type",reflects:!0,inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"rank",type:{text:"'primary' | 'secondary' | 'tertiary'"},default:"'primary'",description:'The rank of the button. Defaults to "primary".',attribute:"rank",reflects:!0,inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"variant",type:{text:"'neutral' | 'positive' | 'negative'"},default:"'neutral'",description:'Defines which variant the button belongs to. Defaults to "neutral".',attribute:"variant",reflects:!0,inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"size",type:{text:"'xs' | 'small' | 'medium' | 'large'"},default:"'medium'",description:'Sets the size of the button. Defaults to "small".',attribute:"size",reflects:!0,inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label of the button. Use this to add an accessible label to the button when no text is provided in the default slot.",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"href",type:{text:"string"},default:"''",description:"When set, the underlying button will be rendered as an anchor element.",attribute:"href",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"target",type:{text:"'_self' | '_blank' | '_parent' | '_top' | undefined"},description:"Where to display the linked URL. Only used when href is present.",attribute:"target",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"rel",type:{text:"string | undefined"},description:'The relationship of the linked URL as space-separated link types. Only used when href is present. Defaults to "noreferrer noopener" for security reasons when target is set.',attribute:"rel",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"download",type:{text:"string | undefined"},description:"Causes the browser to treat the linked URL as a download. Can be used with or without a filename value. Only used when href is present.",attribute:"download",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"formAssociated",type:{text:"boolean"},static:!0,default:"true",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validator",type:{text:"GdsValidator | undefined"},description:"A validator that can be used to validate the form control and set an error message.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",attribute:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"errorMessage",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,attribute:"error-message",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",attribute:"aria-invalid",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"value",description:"Get or set the value of the form control.",attribute:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"name",type:{text:"string"},default:"''",attribute:"name",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"form",description:"The form element that the form control is associated with.",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validity",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validationMessage",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"willValidate",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"checkValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"reportValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formResetCallback",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formAssociatedCallback",parameters:[{name:"form",optional:!0,type:{text:"HTMLFormElement"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the button is disabled.",fieldName:"disabled",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"type",type:{text:"HTMLButtonElement['type'] | undefined"},description:"The type of the button.",fieldName:"type",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"rank",type:{text:"'primary' | 'secondary' | 'tertiary'"},default:"'primary'",description:'The rank of the button. Defaults to "primary".',fieldName:"rank",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"variant",type:{text:"'neutral' | 'positive' | 'negative'"},default:"'neutral'",description:'Defines which variant the button belongs to. Defaults to "neutral".',fieldName:"variant",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"size",type:{text:"'xs' | 'small' | 'medium' | 'large'"},default:"'medium'",description:'Sets the size of the button. Defaults to "small".',fieldName:"size",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:"The label of the button. Use this to add an accessible label to the button when no text is provided in the default slot.",fieldName:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"href",type:{text:"string"},default:"''",description:"When set, the underlying button will be rendered as an anchor element.",fieldName:"href",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"target",type:{text:"'_self' | '_blank' | '_parent' | '_top' | undefined"},description:"Where to display the linked URL. Only used when href is present.",fieldName:"target",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"rel",type:{text:"string | undefined"},description:'The relationship of the linked URL as space-separated link types. Only used when href is present. Defaults to "noreferrer noopener" for security reasons when target is set.',fieldName:"rel",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"download",type:{text:"string | undefined"},description:"Causes the browser to treat the linked URL as a download. Can be used with or without a filename value. Only used when href is present.",fieldName:"download",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"aria-invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",fieldName:"invalid",attribute:"aria-invalid",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",fieldName:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"error-message",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,fieldName:"errorMessage",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"value",description:"Get or set the value of the form control.",fieldName:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"name",type:{text:"string"},default:"''",fieldName:"name",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsButton",declaration:{name:"GdsButton",module:"src/components/button/button.component.ts"}}]},{kind:"javascript-module",path:"src/components/button/button.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Button', component: 'gds-button', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-button'), rank: { options: ['primary', 'secondary', 'tertiary'], control: { type: 'select' }, }, variant: { options: ['neutral', 'positive', 'negative'], control: { type: 'select' }, }, size: { options: ['small', 'medium', 'large'], control: { type: 'select' }, }, target: { options: ['_self', '_blank', '_parent', '_top'], control: { type: 'select' }, }, rel: { control: { type: 'text' }, }, download: { control: { type: 'text' }, }, }, }",description:`A button serve as an interactive element that enables users to perform an action or make
a choice with a simple click or tap. To decide which kind of button/buttons and putting
them in the right order is key to make sure users know how to take the right action.
A good rule of thumb is to use only one primary action in each context.`},{kind:"variable",name:"DefaultParams",type:{text:"Story"},default:"{ parameters: { docs: { source: { format: true, type: 'dynamic' }, }, controls: { expanded: true }, }, args: { innerText: 'Button', }, }"},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"RanksAndVariants",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Ranks and variants\', parameters: { ...DefaultParams.parameters, controls: { include: [] }, }, render: (args) => html` <gds-flex flex-direction="column" gap="4xl" padding="4xl"> <gds-flex flex-direction="column" gap="m"> <gds-text>Neutral</gds-text> <gds-divider opacity="0.2"></gds-divider> <gds-flex gap="xl"> <gds-button> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> Primary</gds-button> <gds-button rank="secondary"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> Secondary</gds-button> <gds-button rank="tertiary"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> Tertiary</gds-button> </gds-flex> </gds-flex> <gds-flex flex-direction="column" gap="m"> <gds-text>Positive</gds-text> <gds-divider opacity="0.2"></gds-divider> <gds-flex gap="xl"> <gds-button variant="positive"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> Primary</gds-button> <gds-button variant="positive" rank="secondary"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> Secondary</gds-button> <gds-button variant="positive" rank="tertiary"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> Tertiary</gds-button> </gds-flex> </gds-flex> <gds-flex flex-direction="column" gap="m"> <gds-text>Negative</gds-text> <gds-divider opacity="0.2"></gds-divider> <gds-flex gap="xl"> <gds-button variant="negative"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> Primary</gds-button> <gds-button variant="negative" rank="secondary"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> Secondary</gds-button> <gds-button variant="negative" rank="tertiary"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> Tertiary</gds-button> </gds-flex> </gds-flex> </gds-grid> `, }',description:`Buttons can have different ranks and variants. The rank defines the visual importance of the button,
while the variant defines the intent of the button.`},{kind:"variable",name:"Sizes",type:{text:"Story"},default:'{ ...DefaultParams, parameters: { ...DefaultParams.parameters, controls: { include: [\'rank\', \'variant\'] }, }, render: (args) => html` <gds-flex gap="l" align-items="center"> <gds-button .rank=${args.rank} .variant=${args.variant} size="xs"> XS </gds-button> <gds-button .rank=${args.rank} .variant=${args.variant} size="small"> Small </gds-button> <gds-button .rank=${args.rank} .variant=${args.variant}> Medium </gds-button> <gds-button .rank=${args.rank} .variant=${args.variant} size="large"> Large </gds-button> </gds-flex> `, }',description:"Buttons can be small, medium or large. The default size is medium."},{kind:"variable",name:"WithIcon",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Using icons in button', parameters: { ...DefaultParams.parameters, controls: { include: ['rank', 'variant', 'size'] }, }, render: (args) => html` <gds-flex gap=\"l\"> <gds-button .rank=${args.rank} .variant=${args.variant} .size=${args.size} > <gds-icon-credit-card slot=\"lead\"></gds-icon-credit-card> Leading icon </gds-button> <gds-button .rank=${args.rank} .variant=${args.variant} .size=${args.size} > Trailing icon <gds-icon-credit-card slot=\"trail\"></gds-icon-credit-card> </gds-button> </gds-flex> `, }",description:"Buttons can have an icon on the left or right side of the text. These are called leading or trailing icons,\nand are added by placing a `gds-icon` component in either the `lead` or `trail` slot."},{kind:"variable",name:"IconButton",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Icon button\', parameters: { ...DefaultParams.parameters, controls: { include: [\'rank\', \'variant\'] }, }, render: (args) => html` <gds-flex gap="l" align-items="center"> <gds-button .rank=${args.rank} .variant=${args.variant} size="xs"> <gds-icon-arrow-right /> </gds-button> <gds-button .rank=${args.rank} .variant=${args.variant} size="small"> <gds-icon-arrow-right /> </gds-button> <gds-button .rank=${args.rank} .variant=${args.variant}> <gds-icon-arrow-right /> </gds-button> <gds-button .rank=${args.rank} .variant=${args.variant} size="large"> <gds-icon-arrow-right /> </gds-button> </gds-flex> `, }',description:"If a single `gds-icon` is the only child of a button, it will render as a circular icon button."},{kind:"variable",name:"Disabled",type:{text:"Story"},default:'{ ...DefaultParams, parameters: { ...DefaultParams.parameters, controls: { include: [] }, }, render: () => html` <gds-flex gap="l"> <gds-button disabled>Primary</gds-button> <gds-button rank="secondary" variant="positive" disabled> Secondary </gds-button> <gds-button rank="tertiary" disabled> Tertiary </gds-button> </gds-flex> `, }',description:`The buttons support a disabled state, but in general, it should not be used. It can be
hard for the user to understand why the button is disabled, so it is often better to
keep the button clickable and then show an error message instead.`},{kind:"variable",name:"Link",type:{text:"Story"},default:"{ ...DefaultParams, parameters: { ...DefaultParams.parameters, controls: { include: ['href', 'target', 'rel', 'download'] }, }, args: { href: 'https://github.com/seb-oss/green', }, render: (args) => html` <gds-button href=${args.href} target=${args.target || nothing} rel=${args.rel || nothing} download=${args?.hasOwnProperty('download') ? args.download : nothing} > Link </gds-button> `, }",description:"A link styled as a button."},{kind:"variable",name:"Length",type:{text:"Story"},default:'{ ...DefaultParams, parameters: { ...DefaultParams.parameters, controls: { include: [] }, }, render: (args) => html` <div style="width: 30ch"> <gds-button> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> This is a long text that will truncated </gds-button> </div> `, }',description:"Text content will get truncated if it does not fit."},{kind:"variable",name:"Aria",type:{text:"Story"},default:'{ ...DefaultParams, parameters: { ...DefaultParams.parameters, controls: { include: [] }, }, render: () => html` <gds-button label="This is a button" aria-haspopup="dialog" aria-expanded="false" gds-aria-description="This is a description" > Aria button </gds-button> `, }',description:"Some aria attributes are forwarded to the inner button element by default, but if you want to force a certain\naria-attribute on the inner button, you can use the `gds-aria-*` attributes on the `gds-button` element.\n\nAlso note that `label` will render as `aria-label` on the inner button element."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"DefaultParams",declaration:{name:"DefaultParams",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"RanksAndVariants",declaration:{name:"RanksAndVariants",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"Sizes",declaration:{name:"Sizes",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"WithIcon",declaration:{name:"WithIcon",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"IconButton",declaration:{name:"IconButton",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"Disabled",declaration:{name:"Disabled",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"Link",declaration:{name:"Link",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"Length",declaration:{name:"Length",module:"src/components/button/button.stories.ts"}},{kind:"js",name:"Aria",declaration:{name:"Aria",module:"src/components/button/button.stories.ts"}}]},{kind:"javascript-module",path:"src/components/button/button.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/button/button.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/button/button.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/button/button.ts",declarations:[],exports:[{kind:"js",name:"GdsButton",declaration:{name:"GdsButton",module:"src/components/button/button.ts"}}]},{kind:"javascript-module",path:"src/components/button/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./button"}}]},{kind:"javascript-module",path:"src/components/calendar/calendar.component.ts",declarations:[{kind:"class",description:"",name:"GdsCalendar",members:[{kind:"field",name:"shadowRootOptions",type:{text:"ShadowRootInit"},static:!0,default:"{ mode: 'open', delegatesFocus: true, }"},{kind:"field",name:"value",type:{text:"Date | undefined"},description:"The currently selected date.",attribute:"value"},{kind:"field",name:"min",default:"new Date(new Date().getFullYear() - 10, 0, 1)",description:"The minimum date that can be selected.",attribute:"min"},{kind:"field",name:"max",default:"new Date(new Date().getFullYear() + 10, 0, 1)",description:"The maximum date that can be selected.",attribute:"max"},{kind:"field",name:"focusedDate",default:"new Date()",description:"The date that is currently focused.",attribute:"focusedDate"},{kind:"field",name:"disabledWeekends",type:{text:"boolean"},default:"false",description:"Whether to disable weekends or not.",attribute:"disabled-weekends"},{kind:"field",name:"disabledDates",type:{text:"Date[] | undefined"},description:"An array of dates that should be disabled in the calendar.",attribute:"disabled-dates"},{kind:"field",name:"focusedMonth",description:"The month that is currently focused.",attribute:"focusedMonth"},{kind:"field",name:"focusedYear",description:"The year that is currently focused.",attribute:"focusedYear"},{kind:"field",name:"showWeekNumbers",type:{text:"boolean"},default:"false",description:"Whether to show week numbers or not.",attribute:"showWeekNumbers"},{kind:"field",name:"hideExtraneousDays",type:{text:"boolean"},default:"false",description:"Whether to hide extraneous days (that fall ouside of current month)",attribute:"hideExtraneousDays"},{kind:"field",name:"hideDayNames",type:{text:"boolean"},default:"false",description:"Whether to hide the day names shown above the calendar.",attribute:"hideDayNames"},{kind:"field",name:"customizedDates",type:{text:"CustomizedDate[] | undefined"},description:"An array of `CustomizedDate` objects that can be used customize the appearance of dates.\nThis can only be set through the property, not through an attribute."},{kind:"field",name:"label",type:{text:"string | undefined"},description:"The accessible label for the calendar.",attribute:"label"},{kind:"field",name:"dateLabelTemplate",description:"A template function to customize the accessible date label."},{kind:"method",name:"getDateCell",parameters:[{name:"dayNumber",type:{text:"number"}}],description:"Returns the date cell element for the given day number."},{kind:"method",name:"focus"},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"change",type:{text:"CustomEvent"},description:"Fired when a date is selected.",reactName:"onChange",eventName:"ChangeEvent"},{name:"gds-date-focused",type:{text:"CustomEvent"},description:"Fired when focus is changed. Can be cancelled using `event.preventDefault()`.",reactName:"onGdsDateFocused",eventName:"GdsDateFocusedEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"value",type:{text:"Date | undefined"},description:"The currently selected date.",fieldName:"value"},{name:"min",default:"new Date(new Date().getFullYear() - 10, 0, 1)",description:"The minimum date that can be selected.",fieldName:"min"},{name:"max",default:"new Date(new Date().getFullYear() + 10, 0, 1)",description:"The maximum date that can be selected.",fieldName:"max"},{name:"focusedDate",default:"new Date()",description:"The date that is currently focused.",fieldName:"focusedDate"},{name:"disabled-weekends",type:{text:"boolean"},default:"false",description:"Whether to disable weekends or not.",fieldName:"disabledWeekends"},{name:"disabled-dates",type:{text:"Date[] | undefined"},description:"An array of dates that should be disabled in the calendar.",fieldName:"disabledDates"},{name:"focusedMonth",description:"The month that is currently focused.",fieldName:"focusedMonth"},{name:"focusedYear",description:"The year that is currently focused.",fieldName:"focusedYear"},{name:"showWeekNumbers",type:{text:"boolean"},default:"false",description:"Whether to show week numbers or not.",fieldName:"showWeekNumbers"},{name:"hideExtraneousDays",type:{text:"boolean"},default:"false",description:"Whether to hide extraneous days (that fall ouside of current month)",fieldName:"hideExtraneousDays"},{name:"hideDayNames",type:{text:"boolean"},default:"false",description:"Whether to hide the day names shown above the calendar.",fieldName:"hideDayNames"},{name:"label",type:{text:"string | undefined"},description:"The accessible label for the calendar.",fieldName:"label"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-calendar",customElement:!0}],exports:[{kind:"js",name:"GdsCalendar",declaration:{name:"GdsCalendar",module:"src/components/calendar/calendar.component.ts"}}]},{kind:"javascript-module",path:"src/components/calendar/calendar.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Calendar', component: 'gds-calendar', parameters: { layout: 'centered', disabledWeekends: true, }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-calendar'), }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/calendar)

The calendar component is a visual representation of a calendar that allows users to select a date.`},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, args: { label: 'Calendar', }, }"},{kind:"variable",name:"Minimal",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-calendar label="Pick a day" hideDayNames="true" hideExtraneousDays="true" ></gds-calendar> `, }'},{kind:"variable",name:"Usage",type:{text:"Story"},default:`{ ...DefaultParams, render: (args) => html\` <div style="width: 320px"> <gds-flex gap="m"> <gds-dropdown id="year" label="Year" size="small"> <gds-option value="2024">2024</gds-option> <gds-option value="2025">2025</gds-option> <gds-option value="2026">2026</gds-option> </gds-dropdown> <gds-dropdown id="month" max-height="200" label="Month" size="small"> <gds-option value="0">Jan</gds-option> <gds-option value="1">Feb</gds-option> <gds-option value="2">Mar</gds-option> <gds-option value="3">Apr</gds-option> <gds-option value="4">May</gds-option> <gds-option value="5">Jun</gds-option> <gds-option value="6">Jul</gds-option> <gds-option value="7">Aug</gds-option> <gds-option value="8">Sep</gds-option> <gds-option value="9">Oct</gds-option> <gds-option value="10">Nov</gds-option> <gds-option value="11">Dec</gds-option> </gds-dropdown> </gds-flex> <gds-calendar id="cal" label="Calendar"></gds-calendar> <div> Selected date: <span id="selected-date" style="font-weight: bold"></span> </div> </div> <script> const cal = document.getElementById('cal') const year = document.getElementById('year') const month = document.getElementById('month') const customizedDates = [ { date: new Date('2024-06-04'), color: 'var(--intent-danger-background)', }, { date: new Date('2024-06-06'), color: 'var(--intent-danger-background)', indicator: 'dot', }, { date: new Date('2024-07-06'), disabled: true, }, ] function setYear(e) { cal.focusedYear = e.target.value } function setMonth(e) { cal.focusedMonth = e.target.value } function onCalFocusChange(e) { year.value = String(e.target.focusedYear) month.value = String(e.target.focusedMonth) } function onCalChange() { const selectedDate = cal.value document.getElementById('selected-date').innerText = selectedDate.toDateString() } cal.addEventListener('gds-date-focused', onCalFocusChange) cal.addEventListener('change', onCalChange) cal.customizedDates = customizedDates year.addEventListener('change', setYear) year.value = String(cal.focusedYear) month.addEventListener('change', setMonth) month.value = String(cal.focusedMonth) <\/script> \`, }`,description:`This is an example of a simple inline datepicker using the calendar
component. It demonstrates how to control the view in the calendar,
how to react to changes and how to customize dates.

This example is written in plain vanilla js/html, but you can adapt it to your
framework of choice.`}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/calendar/calendar.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/calendar/calendar.stories.ts"}},{kind:"js",name:"Minimal",declaration:{name:"Minimal",module:"src/components/calendar/calendar.stories.ts"}},{kind:"js",name:"Usage",declaration:{name:"Usage",module:"src/components/calendar/calendar.stories.ts"}}]},{kind:"javascript-module",path:"src/components/calendar/calendar.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer base, reset; @layer base { :host { display: flex; justify-content: center; } :host table { border-spacing: var(--gds-space-2xs); flex-grow: 1; width: 100%; padding: 1ch; } thead { box-shadow: 0 var(--gds-space-4xs) 0 0 var(--gds-color-l2-border-primary); th { height: var(--gds-space-2xl); width: var(--gds-space-2xl); box-sizing: border-box; text-align: center; font-weight: normal; } } tbody { td { position: relative; height: var(--gds-space-3xl); width: var(--gds-space-3xl); box-sizing: border-box; text-align: center; user-select: none; border-width: var(--gds-space-3xs); border-style: solid; border-color: transparent; border-radius: var(--gds-space-2xs); transition: background 0.2s; outline-style: solid; outline-color: transparent; outline-width: 0px; outline-offset: var(--gds-space-3xs); &:not(.disabled):hover, &[aria-selected='true'] { background: var(--gds-color-l2-background-tertiary); cursor: pointer; color: var(--gds-color-l2-content-tertiary); } &.today { border-color: var(--gds-color-l2-background-tertiary); } &.disabled { color: var(--gds-color-l3-content-disabled); cursor: not-allowed; } &:active:not(.disabled) { scale: 0.96; } &:focus-visible { outline-color: var(--gds-color-l2-content-primary); outline-width: var(--gds-space-3xs); } } .indicator-dot { display: flex; position: absolute; width: var(--gds-space-2xs); height: var(--gds-space-2xs); border-radius: var(--gds-space-max); background-color: var(--_color, currentColor); inset: var(--gds-space-2xs) var(--gds-space-2xs) auto auto; } } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/calendar/calendar.styles.ts"}}]},{kind:"javascript-module",path:"src/components/calendar/calendar.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/calendar/calendar.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/calendar/calendar.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/calendar/calendar.ts",declarations:[],exports:[{kind:"js",name:"GdsCalendar",declaration:{name:"GdsCalendar",module:"src/components/calendar/calendar.ts"}}]},{kind:"javascript-module",path:"src/components/calendar/functions.ts",declarations:[{kind:"function",name:"renderMonthGridView",parameters:[{name:"date",type:{text:"Date"}},{name:"template",type:{text:"(weeks: Week[]) => TemplateResult"}}]}],exports:[{kind:"js",name:"renderMonthGridView",declaration:{name:"renderMonthGridView",module:"src/components/calendar/functions.ts"}}]},{kind:"javascript-module",path:"src/components/calendar/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./calendar"}}]},{kind:"javascript-module",path:"src/components/card/card.component.ts",declarations:[{kind:"class",description:"A container for content representing a single entity. e.g. a contact, article, or task.\n\n`gds-card` inherits all properties from `gds-div`, but comes with some predefined defaults\nand a shortcut property for specifiying different card variants.",name:"GdsCard",members:[{kind:"field",name:"shadow",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",deprecated:"Use the `box-shadow` property instead."},{kind:"field",name:"variant",type:{text:"string"},default:"'primary'",description:`Shortcut for setting the border, background and text color of the card to the specified color variant, such as 'primary', 'secondary', 'tertiary', etc.

You can find all available variants in the L2 section of the [Color System documentation page](./?path=/docs/style-colors--docs)

Supports Style Expression syntax for setting the value responsively.`},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",default:"'s;m{l}'",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",type:{text:"string"},default:"'s;m{l}'"},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsDiv",module:"/src/components/div/div.component"},tagName:"gds-card",customElement:!0,attributes:[{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsCard",declaration:{name:"GdsCard",module:"src/components/card/card.component.ts"}}]},{kind:"javascript-module",path:"src/components/card/card.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Card', component: 'gds-card', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-card'), }, }",description:"A container for content representing a single entity. e.g. a contact, article, or task.\n\n`gds-card` inherits all properties from `gds-div`, but comes with some predefined defaults\nand a shortcut property for specifiying different card variants."},{kind:"variable",name:"Card",type:{text:"Story"},default:"{ ...DefaultParams, args: { innerHTML: 'Card content', style: 'max-width: 200px', }, }"},{kind:"variable",name:"Variants",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-flex gap="l" flex-direction="column"> <gds-card variant="secondary" border-color="primary"> <gds-flex gap="l" flex-direction="column"> <gds-text tag="h3">Light mode</gds-text> <gds-grid columns="3" gap="l"> <gds-card variant="primary">Primary</gds-card> <gds-card variant="secondary" border-color="secondary" >Secondary</gds-card > <gds-card variant="tertiary">Tertiary</gds-card> </gds-grid> <gds-grid columns="5" gap="l"> <gds-card variant="positive">Positive</gds-card> <gds-card variant="negative">Negative</gds-card> <gds-card variant="notice">Notice</gds-card> <gds-card variant="warning">Warning</gds-card> <gds-card variant="information">Information</gds-card> </gds-grid> <gds-grid columns="4" gap="l"> <gds-card variant="copper-01">Copper 01</gds-card> <gds-card variant="copper-02">Copper 02</gds-card> <gds-card variant="purple-01">Purple 01</gds-card> <gds-card variant="purple-02">Purple 02</gds-card> <gds-card variant="green-01">Green 01</gds-card> <gds-card variant="green-02">Green 02</gds-card> <gds-card variant="blue-01">Blue 01</gds-card> <gds-card variant="blue-02">Blue 02</gds-card> </gds-grid> </gds-flex> </gds-card> <gds-theme color-scheme="dark"> <gds-card> <gds-flex gap="l" flex-direction="column"> <gds-text tag="h3">Dark mode</gds-text> <gds-grid columns="3" gap="l"> <!-- If the backgrouns has the same color as the card, it will be necessary to set the border-color --> <gds-card variant="primary" border-color="primary" >Primary</gds-card > <gds-card variant="secondary" border-color="secondary" >Secondary</gds-card > <gds-card variant="tertiary">Tertiary</gds-card> </gds-grid> <gds-grid columns="5" gap="l"> <gds-card variant="positive">Positive</gds-card> <gds-card variant="negative">Negative</gds-card> <gds-card variant="notice">Notice</gds-card> <gds-card variant="warning">Warning</gds-card> <gds-card variant="information">Information</gds-card> </gds-grid> <gds-grid columns="4" gap="l"> <gds-card variant="copper-01">Copper 01</gds-card> <gds-card variant="copper-02">Copper 02</gds-card> <gds-card variant="purple-01">Purple 01</gds-card> <gds-card variant="purple-02">Purple 02</gds-card> <gds-card variant="green-01">Green 01</gds-card> <gds-card variant="green-02">Green 02</gds-card> <gds-card variant="blue-01">Blue 01</gds-card> <gds-card variant="blue-02">Blue 02</gds-card> </gds-grid> </gds-flex> </gds-card> </gds-theme> </gds-flex> `, }',description:"Examples of different color variants"},{kind:"variable",name:"CardAdvancedExample",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-grid columns="xs{1} m{3} l{3}" gap="l"> <gds-card shadow="s{xs} m{xs} l{s}" border-radius="xs" overflow="hidden" padding="0" background="secondary" > <gds-flex gap="0" flex-direction="column" align-items="stretch"> <gds-div position="relative"> <gds-img src="https://github.com/seb-oss/green/assets/2398447/cd458a77-13f1-495c-960c-ce23a18e5d9f" aspect-ratio="1/1" ></gds-img> <gds-div position="absolute" inset="20px 20px auto auto"> <gds-button> <gds-icon-arrow-down></gds-icon-arrow-down> </gds-button> </gds-div> </gds-div> <gds-flex flex-direction="column" padding="s{xs} m{l} l{l}" align-items="flex-start" gap="l" > <gds-flex gap="s" flex-direction="column"> <gds-text font-size="body-l">James Doe</gds-text> <gds-text tag="p"> Passionate software engineer with a love for coding and problem-solving. </gds-text> </gds-flex> <gds-divider opacity="0.2"></gds-divider> <gds-button> Follow <gds-icon-circles-three slot="lead"></gds-icon-circles-three> </gds-button> </gds-flex> </gds-flex> </gds-card> <gds-card shadow="l" border-radius="m" border="3xs/primary" overflow="hidden" padding="0" background="secondary" > <gds-flex gap="m" flex-direction="column" padding="s"> <gds-div position="relative"> <gds-img src="https://github.com/seb-oss/green/assets/2398447/dff488cc-700e-47f9-b7f7-3788eb742c11" aspect-ratio="1/1" border-radius="xs" ></gds-img> <gds-div position="absolute" inset="20px 20px auto auto"> <gds-button> <gds-icon-arrow-down></gds-icon-arrow-down> </gds-button> </gds-div> </gds-div> <gds-flex flex-direction="column" padding="s{xs} m{s} l{s}" align-items="flex-start" gap="l" > <gds-flex gap="s" flex-direction="column"> <gds-text font-size="body-l">Lorem Ipsum</gds-text> <gds-text tag="p"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt. </gds-text> </gds-flex> <gds-button> Button <gds-icon-arrow-right slot="trail"></gds-icon-arrow-right> </gds-button> </gds-flex> </gds-flex> </gds-card> <gds-card border-radius="m" overflow="hidden" padding="0"> <gds-flex position="relative" height="100%"> <gds-video src="https://github.com/seb-oss/green/assets/2398447/d77a95d0-e4d7-4c49-bd95-50d0f72f1a7a" object-fit="cover" aspect-ratio="1/1" pointer-events="none" autoplay muted loop ></gds-video> <gds-mask mask-image="top" background-color="tertiary/0.4" position="absolute" > <gds-flex flex-direction="column" justify-content="flex-end" padding="4xl 2xl 2xl 2xl" gap="l" height="100%" width="100%" color="tertiary" > <gds-div> <gds-text font-size="body-l">Jane Doe</gds-text> <gds-text font-size="body-m">UX Designer</gds-text> </gds-div> <gds-flex gap="s"> <gds-button rank="secondary">Message</gds-button> <gds-button rank="secondary">Follow</gds-button> </gds-flex> </gds-flex> </gds-mask> </gds-flex> </gds-card> </gds-grid> `, }',description:"Advanced example"},{kind:"variable",name:"Cardshadow",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Shadow\', render: (args) => html`<gds-grid columns="5" gap="l"> <gds-card padding="s{xs} m{l} l{l}" shadow="s{xs} m{xs} l{xs}" border-radius="xs" variant="secondary" > <gds-flex display="flex" align-items="center" justify-content="center"> XS </gds-flex> </gds-card> <gds-card padding="s{xs} m{l} l{l}" shadow="s{s} m{s} l{s}" border-radius="xs" variant="secondary" > <gds-flex display="flex" align-items="center" justify-content="center"> S </gds-flex> </gds-card> <gds-card padding="s{xs} m{l} l{l}" shadow="s{m} m{m} l{m}" border-radius="xs" variant="secondary" > <gds-flex display="flex" align-items="center" justify-content="center"> M </gds-flex> </gds-card> <gds-card padding="s{xs} m{l} l{l}" shadow="s{l} m{l} l{l}" border-radius="xs" variant="secondary" > <gds-flex display="flex" align-items="center" justify-content="center"> L </gds-flex> </gds-card> <gds-card padding="s{xs} m{l} l{l}" shadow="s{xl} m{xl} l{xl}" border-radius="xs" variant="secondary" > <gds-flex display="flex" align-items="center" justify-content="center"> xl </gds-flex> </gds-card> </gds-grid>`, }'},{kind:"variable",name:"CardGrid",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Using with Grid\', render: (args) => html` <gds-grid columns="4" gap="l"> <gds-div> <gds-card border-radius="xs"> <gds-flex gap="m" flex-direction="column" align-items="flex-start"> <gds-text font-size="l{heading-s} m{heading-s} s{heading-s}"> Sidebar </gds-text> <gds-text text-wrap="balance"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> <gds-button>Button</gds-button> </gds-flex> </gds-card> </gds-div> <gds-div grid-column="2 / -1" grid-row="1 / -1" display="flex"> <gds-card border-radius="xs"> <gds-flex flex-direction="column" align-items="flex-start" justify-content="center" gap="m" > <gds-text font-size="heading-s"> Span Columns: [2 / -1]</gds-text> <gds-text> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> <gds-text font-size="body-m"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> <gds-button>Button</gds-button> </gds-flex> </gds-card> </gds-div> <gds-div grid-column="1 / -1"> <gds-card border-radius="xs"> <gds-flex flex-direction="column" align-items="flex-start" justify-content="center" gap="m" > <gds-text font-size="heading-s">Span all columns [1 / -1]</gds-text> <gds-text text-wrap="balance" lines="3"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> <gds-button>Button</gds-button> </gds-flex> </gds-card> </gds-div> </gds-grid>`, }',description:'\nUsing `gds-card` with `gds-grid`\nThe `gds-card` can be used with the `gds-grid` to create a card layout with multiple cards.\nThe `gds-card` and `gds-div` accept properties like `column` and `row` where you can specify the number of columns specified on the grid to span or rows to span in vertical axis like on this example:\n\n```html\n<gds-div grid-column="2 / -1" grid-row="1 / -1"></gds-div>\n```'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/card/card.stories.ts"}},{kind:"js",name:"Card",declaration:{name:"Card",module:"src/components/card/card.stories.ts"}},{kind:"js",name:"Variants",declaration:{name:"Variants",module:"src/components/card/card.stories.ts"}},{kind:"js",name:"CardAdvancedExample",declaration:{name:"CardAdvancedExample",module:"src/components/card/card.stories.ts"}},{kind:"js",name:"Cardshadow",declaration:{name:"Cardshadow",module:"src/components/card/card.stories.ts"}},{kind:"js",name:"CardGrid",declaration:{name:"CardGrid",module:"src/components/card/card.stories.ts"}}]},{kind:"javascript-module",path:"src/components/card/card.ts",declarations:[],exports:[{kind:"js",name:"GdsCard",declaration:{name:"GdsCard",module:"src/components/card/card.ts"}}]},{kind:"javascript-module",path:"src/components/card/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./card"}}]},{kind:"javascript-module",path:"src/components/coachmark/coachmark.component.ts",declarations:[{kind:"class",description:"",name:"GdsCoachmark",slots:[{description:"placeholder for the content of the tooltip.",name:""}],members:[{kind:"field",name:"placement",type:{text:"Placement"},default:"'bottom'",description:`The placement of the popover relative to the trigger.
Accepts any of the placements supported by Floating UI.`,attribute:"placement"},{kind:"field",name:"overlappedBy",type:{text:"string[]"},default:"[]",description:"The coachmark will be hidden when overlapped by the list of provided elements (selectors)."},{kind:"field",name:"target",type:{text:"string[]"},default:"[]",description:'List of selectors pointing to the targeted element. Ex. for a target inside a ShadowDOM: ["some-component", "shadowRoot", "target-element"].'},{kind:"field",name:"label",type:{text:"string"},default:"'Coachmark'",description:"The accessible label of the coachmark.",attribute:"label"},{kind:"field",name:"computeVisibility",type:{text:`(
    self: GdsCoachmark,
    target: HTMLElement,
    computedVisibility: boolean,
  ) => boolean`},description:`A callback that can be used to set the visibility of the coachmark based on your criteria.

The default computed visibility, based on visibility and overlap of the target element, is supplied as the third argument.`},{kind:"field",name:"targetElement",type:{text:"HTMLElement | undefined"},default:"undefined",description:"The resolved targeted element (readonly)"},{kind:"field",name:"_isVisible",type:{text:"boolean"},default:"false"},{kind:"field",name:"_preventClose",type:{text:"boolean"},default:"false"},{kind:"method",name:"setPreventClose",parameters:[{name:"preventClose",type:{text:"boolean"}}]},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-ui-state",type:{text:"CustomEvent"},description:"dispatched when the tooltip is closed",reactName:"onGdsUiState",eventName:"GdsUiStateEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"placement",type:{text:"Placement"},default:"'bottom'",description:`The placement of the popover relative to the trigger.
Accepts any of the placements supported by Floating UI.`,fieldName:"placement"},{name:"label",type:{text:"string"},default:"'Coachmark'",description:"The accessible label of the coachmark.",fieldName:"label"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-coachmark",customElement:!0}],exports:[{kind:"js",name:"GdsCoachmark",declaration:{name:"GdsCoachmark",module:"src/components/coachmark/coachmark.component.ts"}}]},{kind:"javascript-module",path:"src/components/coachmark/coachmark.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Coachmark', component: 'gds-coachmark', parameters: { layout: 'centered', }, tags: ['autodocs'], }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/coachmark)

Coachmarks are contextual tips that focus on making the user
aware of a new feature, the benefits of an existing one or a moved feature within an interface.

The component is primarily a container that follows the targeted element.
The coachmark will be invisible and disabled if another element covered the targeted element or its simply out of view.
The coachmark will close and dispatch a CustomEvent of \`gds-ui-state\`

Note: the component can only view one coachmark at the time therefore the tooltip won't be
rendered in second storybook panel and testing the tooltip behaviour will be in the first panel only`},{kind:"variable",name:"Basic",type:{text:"Story"},default:'{ ...DefaultParams, render: () => html` <div style="height: 200px"> <p> The coachmark will target the first element that matches the selector. Clicking anywhere closes the coachmark. </p> <p id="targetElement" style="width: 200px; background: #ddd; padding: 1px" > Coachmark target element </p> <gds-coachmark .target=${[\'#targetElement\']} placement="bottom"> This is the coachmark content. </gds-coachmark> </div> `, }',description:"Because this is the default story that also renders at the top of the page, the\ncoachmark will be shown in the first panel only, since the `#targetElement` selector\nwill match the first element in the DOM."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/coachmark/coachmark.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/coachmark/coachmark.stories.ts"}}]},{kind:"javascript-module",path:"src/components/coachmark/coachmark.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` #body { visibility: hidden; position: absolute; z-index: 1060; box-sizing: border-box; padding: 1rem; width: 20rem; border-radius: 0.25rem; background-color: #222; color: #fff; opacity: 0; transition: opacity 0.3s; } #arrow { box-sizing: border-box; z-index: -1; position: absolute; height: 1rem; width: 1rem; background-color: #222; transform: rotate(45deg); } .arrow-top, .arrow-top-start, .arrow-top-end { bottom: -0.5rem; } .arrow-bottom, .arrow-bottom-start, .arrow-bottom-end { top: -0.5rem; } .arrow-left, .arrow-left-start, .arrow-left-end { right: -0.5rem; } .arrow-right, .arrow-right-start, .arrow-right-end { left: -0.5rem; } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/coachmark/coachmark.styles.ts"}}]},{kind:"javascript-module",path:"src/components/coachmark/coachmark.ts",declarations:[],exports:[{kind:"js",name:"GdsCoachmark",declaration:{name:"GdsCoachmark",module:"src/components/coachmark/coachmark.ts"}}]},{kind:"javascript-module",path:"src/components/coachmark/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./coachmark"}}]},{kind:"javascript-module",path:"src/components/container/container.component.ts",declarations:[{kind:"class",description:"",name:"GdsContainer",superclass:{name:"GdsDiv",module:"/src/components/div/div.component"},tagName:"gds-container",customElement:!0,deprecated:"`gds-container` is an alias for `gds-div`. Prefer using `gds-div` directly instead.",members:[{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsContainer",declaration:{name:"GdsContainer",module:"src/components/container/container.component.ts"}}]},{kind:"javascript-module",path:"src/components/container/container.ts",declarations:[],exports:[{kind:"js",name:"GdsContainer",declaration:{name:"GdsContainer",module:"src/components/container/container.ts"}}]},{kind:"javascript-module",path:"src/components/container/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./container"}}]},{kind:"javascript-module",path:"src/components/context-menu/context-menu.component.ts",declarations:[{kind:"class",description:"",name:"GdsContextMenu",slots:[{description:"The default slot. Only `gds-menu-item` elements are accepted here.",name:""}],members:[{kind:"field",name:"shadowRootOptions",type:{text:"ShadowRootInit"},static:!0,default:"{ mode: 'open', delegatesFocus: true, }"},{kind:"field",name:"open",type:{text:"boolean"},default:"false",description:"Whether the context menu popover is open.",attribute:"open",reflects:!0},{kind:"field",name:"buttonLabel",type:{text:"string"},description:"The label for the trigger button.",attribute:"button-label"},{kind:"field",name:"showLabel",type:{text:"boolean"},default:"false",description:"Whether to show the label on the trigger button.",attribute:"show-label"},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label for the popover and menu. Should describe the context of the menu.",attribute:"label"},{kind:"field",name:"placement",type:{text:"Placement"},default:"'bottom-start'",description:"The placement of the popover relative to the trigger.",attribute:"placement"},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Fired when a menu item is clicked.",name:"gds-menu-item-click",reactName:"onGdsMenuItemClick",eventName:"GdsMenuItemClickEvent"},{description:"Fired when the menu is opened or closed.",name:"gds-ui-state",reactName:"onGdsUiState",eventName:"GdsUiStateEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"open",type:{text:"boolean"},default:"false",description:"Whether the context menu popover is open.",fieldName:"open"},{name:"button-label",type:{text:"string"},description:"The label for the trigger button.",fieldName:"buttonLabel"},{name:"show-label",type:{text:"boolean"},default:"false",description:"Whether to show the label on the trigger button.",fieldName:"showLabel"},{name:"label",type:{text:"string"},default:"''",description:"The label for the popover and menu. Should describe the context of the menu.",fieldName:"label"},{name:"placement",type:{text:"Placement"},default:"'bottom-start'",description:"The placement of the popover relative to the trigger.",fieldName:"placement"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-context-menu",customElement:!0}],exports:[{kind:"js",name:"GdsMenuItem",declaration:{name:"GdsMenuItem",module:"src/components/context-menu/context-menu.component.ts"}},{kind:"js",name:"GdsMenuHeading",declaration:{name:"GdsMenuHeading",module:"../../primitives/menu/menu-heading.component"}},{kind:"js",name:"GdsContextMenu",declaration:{name:"GdsContextMenu",module:"src/components/context-menu/context-menu.component.ts"}}]},{kind:"javascript-module",path:"src/components/context-menu/context-menu.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Context Menu', component: 'gds-context-menu', subcomponents: { MenuItem: 'gds-menu-item' }, parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-context-menu'), }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/context-menu)
&nbsp;|&nbsp;
[Usage guidelines](https://designlibrary.sebgroup.com/components/component-moremenu)

The context menu is presented in-context to the related data, so users don’t lose
their place in the app. It appears upon interaction with the 3 dot button and
displays a list of choices, one choice per line.`},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"Usage",type:{text:"Story"},default:`{ ...DefaultParams, render: (args) => html\` Activated action: <span id="display-action"></span> <br /> <gds-context-menu popover-label="Select an action" button-label="Menu"> <gds-menu-item onclick="document.getElementById('display-action').innerText = this.innerText" > Action 1 </gds-menu-item> <gds-menu-item onclick="document.getElementById('display-action').innerText = this.innerText" > Action 2 </gds-menu-item> <gds-menu-item onclick="document.getElementById('display-action').innerText = this.innerText" > Action 3 </gds-menu-item> </gds-context-menu> \`, }`,description:'Menu items are defined by adding `gds-menu-item` elements as children of the `gds-context-menu` element.\nYou should always provide a `button-label` so the button is accessibible. Consider to show the label as\nwell with `show-label` set to `true`;\n\nTo handle the user\'s interaction, you can listen to `click` events on individual menu items, or to the\n`gds-menu-item-click` event on the parent `gds-context-menu` element.\n\nNote that you should always supply a label for the context menu. The label should describe the context\nof the menu, such as "Select an action for XYZ".'},{kind:"variable",name:"ShowLabel",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-context-menu label="Select an action" button-label="Menu" show-label .showLabel=${true} > <gds-menu-item>Action 1</gds-menu-item> <gds-menu-item>Action 2</gds-menu-item> <gds-menu-item>Action 3</gds-menu-item> </gds-context-menu> `, }',description:"You can show the label by setting the `show-label` attribute on the `<gds-context-menu>` element."},{kind:"variable",name:"Slots",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-context-menu> <div slot="trigger" style="display: flex; align-items: center; gap: .5rem;" > <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg" > <path d="M13.375 17.5H14.125C14.2245 17.5 14.3198 17.4605 14.3902 17.3902C14.4605 17.3198 14.5 17.2245 14.5 17.125V10.375C14.5 10.2755 14.4605 10.1802 14.3902 10.1098C14.3198 10.0395 14.2245 10 14.125 10H13.375C13.2755 10 13.1802 10.0395 13.1098 10.1098C13.0395 10.1802 13 10.2755 13 10.375V17.125C13 17.2245 13.0395 17.3198 13.1098 17.3902C13.1802 17.4605 13.2755 17.5 13.375 17.5ZM18.5 7H15.9247L14.8622 5.22813C14.7288 5.00594 14.5402 4.82209 14.3147 4.69449C14.0892 4.56688 13.8344 4.49988 13.5753 4.5H10.4247C10.1657 4.49998 9.91106 4.56704 9.68566 4.69464C9.46025 4.82224 9.27172 5.00603 9.13844 5.22813L8.07531 7H5.5C5.36739 7 5.24021 7.05268 5.14645 7.14645C5.05268 7.24022 5 7.36739 5 7.5V8C5 8.13261 5.05268 8.25979 5.14645 8.35355C5.24021 8.44732 5.36739 8.5 5.5 8.5H6V19C6 19.3978 6.15804 19.7794 6.43934 20.0607C6.72064 20.342 7.10218 20.5 7.5 20.5H16.5C16.8978 20.5 17.2794 20.342 17.5607 20.0607C17.842 19.7794 18 19.3978 18 19V8.5H18.5C18.6326 8.5 18.7598 8.44732 18.8536 8.35355C18.9473 8.25979 19 8.13261 19 8V7.5C19 7.36739 18.9473 7.24022 18.8536 7.14645C18.7598 7.05268 18.6326 7 18.5 7ZM10.37 6.09094C10.3867 6.06312 10.4104 6.04012 10.4386 6.02418C10.4669 6.00824 10.4988 5.99991 10.5312 6H13.4688C13.5011 5.99996 13.533 6.00832 13.5612 6.02426C13.5894 6.04019 13.613 6.06317 13.6297 6.09094L14.1753 7H9.82469L10.37 6.09094ZM16.5 19H7.5V8.5H16.5V19ZM9.875 17.5H10.625C10.7245 17.5 10.8198 17.4605 10.8902 17.3902C10.9605 17.3198 11 17.2245 11 17.125V10.375C11 10.2755 10.9605 10.1802 10.8902 10.1098C10.8198 10.0395 10.7245 10 10.625 10H9.875C9.77554 10 9.68016 10.0395 9.60984 10.1098C9.53951 10.1802 9.5 10.2755 9.5 10.375V17.125C9.5 17.2245 9.53951 17.3198 9.60984 17.3902C9.68016 17.4605 9.77554 17.5 9.875 17.5Z" fill="currentColor" /> </svg> Custom trigger </div> <gds-menu-item> <div> <strong>Custom</strong> <em>markup</em> can go here if so is needed! </div> </gds-menu-item> <gds-menu-item>Action 2</gds-menu-item> <gds-menu-item> <div style=" display: flex; justify-content: space-between; width: 100%; align-items: center; color: var(--color); --color: var(--intent-danger-background); " > Delete&nbsp; <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg" > <path d="M13.375 17.5H14.125C14.2245 17.5 14.3198 17.4605 14.3902 17.3902C14.4605 17.3198 14.5 17.2245 14.5 17.125V10.375C14.5 10.2755 14.4605 10.1802 14.3902 10.1098C14.3198 10.0395 14.2245 10 14.125 10H13.375C13.2755 10 13.1802 10.0395 13.1098 10.1098C13.0395 10.1802 13 10.2755 13 10.375V17.125C13 17.2245 13.0395 17.3198 13.1098 17.3902C13.1802 17.4605 13.2755 17.5 13.375 17.5ZM18.5 7H15.9247L14.8622 5.22813C14.7288 5.00594 14.5402 4.82209 14.3147 4.69449C14.0892 4.56688 13.8344 4.49988 13.5753 4.5H10.4247C10.1657 4.49998 9.91106 4.56704 9.68566 4.69464C9.46025 4.82224 9.27172 5.00603 9.13844 5.22813L8.07531 7H5.5C5.36739 7 5.24021 7.05268 5.14645 7.14645C5.05268 7.24022 5 7.36739 5 7.5V8C5 8.13261 5.05268 8.25979 5.14645 8.35355C5.24021 8.44732 5.36739 8.5 5.5 8.5H6V19C6 19.3978 6.15804 19.7794 6.43934 20.0607C6.72064 20.342 7.10218 20.5 7.5 20.5H16.5C16.8978 20.5 17.2794 20.342 17.5607 20.0607C17.842 19.7794 18 19.3978 18 19V8.5H18.5C18.6326 8.5 18.7598 8.44732 18.8536 8.35355C18.9473 8.25979 19 8.13261 19 8V7.5C19 7.36739 18.9473 7.24022 18.8536 7.14645C18.7598 7.05268 18.6326 7 18.5 7ZM10.37 6.09094C10.3867 6.06312 10.4104 6.04012 10.4386 6.02418C10.4669 6.00824 10.4988 5.99991 10.5312 6H13.4688C13.5011 5.99996 13.533 6.00832 13.5612 6.02426C13.5894 6.04019 13.613 6.06317 13.6297 6.09094L14.1753 7H9.82469L10.37 6.09094ZM16.5 19H7.5V8.5H16.5V19ZM9.875 17.5H10.625C10.7245 17.5 10.8198 17.4605 10.8902 17.3902C10.9605 17.3198 11 17.2245 11 17.125V10.375C11 10.2755 10.9605 10.1802 10.8902 10.1098C10.8198 10.0395 10.7245 10 10.625 10H9.875C9.77554 10 9.68016 10.0395 9.60984 10.1098C9.53951 10.1802 9.5 10.2755 9.5 10.375V17.125C9.5 17.2245 9.53951 17.3198 9.60984 17.3902C9.68016 17.4605 9.77554 17.5 9.875 17.5Z" fill="currentColor" /> </svg> </div> </gds-menu-item> </gds-context-menu> `, }',description:"You can show the label by setting the `show-label` attribute on the `<gds-context-menu>` element."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/context-menu/context-menu.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/context-menu/context-menu.stories.ts"}},{kind:"js",name:"Usage",declaration:{name:"Usage",module:"src/components/context-menu/context-menu.stories.ts"}},{kind:"js",name:"ShowLabel",declaration:{name:"ShowLabel",module:"src/components/context-menu/context-menu.stories.ts"}},{kind:"js",name:"Slots",declaration:{name:"Slots",module:"src/components/context-menu/context-menu.stories.ts"}}]},{kind:"javascript-module",path:"src/components/context-menu/context-menu.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer base, reset, transitional-styles; @layer base { :host { display: inline-block; } button { display: flex; border-width: 0; background-color: #ededed; border-radius: calc(1px * infinity); padding: 0.4rem 0.8rem; font-family: inherit; cursor: pointer; align-items: center; gap: 0.5rem; } button:hover { background-color: #dcdcdc; } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/context-menu/context-menu.styles.ts"}}]},{kind:"javascript-module",path:"src/components/context-menu/context-menu.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/context-menu/context-menu.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/context-menu/context-menu.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/context-menu/context-menu.ts",declarations:[],exports:[{kind:"js",name:"GdsContextMenu",declaration:{name:"GdsContextMenu",module:"src/components/context-menu/context-menu.ts"}}]},{kind:"javascript-module",path:"src/components/context-menu/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./context-menu"}},{kind:"js",name:"*",declaration:{name:"*",package:"../../primitives/menu/menu-item"}},{kind:"js",name:"*",declaration:{name:"*",package:"../../primitives/menu/menu-heading"}}]},{kind:"javascript-module",path:"src/components/datepicker/date-part-spinner.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/components/datepicker/datepicker.component.ts",declarations:[{kind:"class",description:"",name:"GdsDatepicker",slots:[{description:"A longer supporting text can be placed here. It will be displayed in a panel when the user clicks the info button.",name:"extended-supporting-text"},{description:"***(deprecated - use `errorMessage` property instead)*** Error message to show below the input field whem there is a validation error.",name:"message"},{description:"***(deprecated - use `supporting-text` property instead)*** Renders between the label and the trigger button.",name:"sub-label"}],events:[{name:"change",type:{text:"CustomEvent"},reactName:"onChange",eventName:"ChangeEvent",description:"Fired when the value of the dropdown is changed through user interaction (not when value prop is set programatically).",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{description:"Fired when the dropdown is opened or closed.",name:"gds-ui-state",reactName:"onGdsUiState",eventName:"GdsUiStateEvent"},{name:"input",type:{text:"CustomEvent"},reactName:"onInput",eventName:"InputEvent",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"},tagName:"gds-datepicker",customElement:!0,members:[{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"type",readonly:!0,inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"value",description:`The Date value of the datepicker. This can be set to undefined to clear the datepicker.
This can be a string if set via the value attribute in markup, or via the setAttribute DOM API.`,attribute:"value",type:{text:"Date | undefined"},inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"min",default:"new Date(new Date().getFullYear() - 10, 0, 1)",description:"The minimum date that can be selected.",attribute:"min",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"max",default:"new Date(new Date().getFullYear() + 10, 0, 1)",description:"The maximum date that can be selected.",attribute:"max",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"open",type:{text:"boolean"},default:"false",description:"Controls wheter the datepicker popover is open.",attribute:"open",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"supportingText",type:{text:"string"},default:"''",description:"The supporting text displayed between the label and the field itself",attribute:"supporting-text",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Whether to use the small variant of the datepicker field.",attribute:"size",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",attribute:"plain",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"showWeekNumbers",type:{text:"boolean"},default:"false",description:"Whether to show a column of week numbers in the calendar.",attribute:"show-week-numbers",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"hideLabel",type:{text:"boolean"},default:"false",description:"Whether to hide the label above the input field.",attribute:"hide-label",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"dateformat",description:"The date format to use. Accepts a string with the characters `y`, `m` and `d` in any order, separated by a delimiter.\nFor example, `y-m-d` or `d/m/y`. All three characters must be present.\n\nThis will determine the structure of the input field.\n\nDefaults to `y-m-d`.",attribute:"dateformat",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"disabledWeekends",type:{text:"boolean"},default:"false",description:"Whether to disable weekends in the calendar.",attribute:"disabled-weekends",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"disabledDates",type:{text:"Date[] | undefined"},description:"An array of dates that should be disabled in the calendar.",attribute:"disabled-dates",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"method",name:"getFocusedDate",return:{type:{text:"Promise<Date | undefined>"}},description:`Get the currently focused date in the calendar popover. If no date is focused, or the calendar popover
is closed, the value will be undefined.`,inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"displayValue",description:"Get a string representation of the currently displayed value in the input field. The formatting will match the dateformat attribute.",readonly:!0,inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"test_calendarButton",type:{text:"Promise<HTMLButtonElement>"},description:`A reference to the calendar button element inside the shadow root.
Inteded for use in integration tests.`,inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"method",name:"test_getDateCell",parameters:[{name:"dayNumber",type:{text:"number"}}],description:`A reference to a date cell element (<td>) inside the shadow root of the calendar primitive.
Intended for use in integration tests.`,inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{kind:"field",name:"formAssociated",type:{text:"boolean"},static:!0,default:"true",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validator",type:{text:"GdsValidator | undefined"},description:"A validator that can be used to validate the form control and set an error message.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",attribute:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"errorMessage",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,attribute:"error-message",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",attribute:"aria-invalid",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"name",type:{text:"string"},default:"''",attribute:"name",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",attribute:"disabled",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"form",description:"The form element that the form control is associated with.",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validity",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validationMessage",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"willValidate",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"checkValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"reportValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formResetCallback",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formAssociatedCallback",parameters:[{name:"form",optional:!0,type:{text:"HTMLFormElement"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"value",description:`The Date value of the datepicker. This can be set to undefined to clear the datepicker.
This can be a string if set via the value attribute in markup, or via the setAttribute DOM API.`,fieldName:"value",type:{text:"Date | undefined"},inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"min",default:"new Date(new Date().getFullYear() - 10, 0, 1)",description:"The minimum date that can be selected.",fieldName:"min",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"max",default:"new Date(new Date().getFullYear() + 10, 0, 1)",description:"The maximum date that can be selected.",fieldName:"max",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"open",type:{text:"boolean"},default:"false",description:"Controls wheter the datepicker popover is open.",fieldName:"open",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"supporting-text",type:{text:"string"},default:"''",description:"The supporting text displayed between the label and the field itself",fieldName:"supportingText",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Whether to use the small variant of the datepicker field.",fieldName:"size",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",fieldName:"plain",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"show-week-numbers",type:{text:"boolean"},default:"false",description:"Whether to show a column of week numbers in the calendar.",fieldName:"showWeekNumbers",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"hide-label",type:{text:"boolean"},default:"false",description:"Whether to hide the label above the input field.",fieldName:"hideLabel",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"dateformat",description:"The date format to use. Accepts a string with the characters `y`, `m` and `d` in any order, separated by a delimiter.\nFor example, `y-m-d` or `d/m/y`. All three characters must be present.\n\nThis will determine the structure of the input field.\n\nDefaults to `y-m-d`.",fieldName:"dateformat",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"disabled-weekends",type:{text:"boolean"},default:"false",description:"Whether to disable weekends in the calendar.",fieldName:"disabledWeekends",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"disabled-dates",type:{text:"Date[] | undefined"},description:"An array of dates that should be disabled in the calendar.",fieldName:"disabledDates",inheritedFrom:{name:"Datepicker",module:"src/components/datepicker/datepicker.component.ts"}},{name:"aria-invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",fieldName:"invalid",attribute:"aria-invalid",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",fieldName:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"error-message",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,fieldName:"errorMessage",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",fieldName:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"name",type:{text:"string"},default:"''",fieldName:"name",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",fieldName:"disabled",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsDatepicker",declaration:{name:"GdsDatepicker",module:"src/components/datepicker/datepicker.component.ts"}}]},{kind:"javascript-module",path:"src/components/datepicker/datepicker.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Datepicker', component: 'gds-datepicker', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-datepicker'), }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/datepicker)
&nbsp;|&nbsp;
[Usage guidelines](https://designlibrary.sebgroup.com/components/datepicker)

Date pickers simplify the task of selecting a date in a visual representation of a calendar.
The date picker in Green Core mimics the behaviour of the native date input element as it is
implemented in Chromium browsers.

The input field shows three parts of the date: the day, the month and the year. The user can
navigate between these parts using the arrow keys. The user can also navigate between the parts
by clicking on them or tabbing. When a part has focus, it can be changed using the arrow keys or
by typing a number.

Clicking the calendar icon opens a popover with a calendar view where a date can be chosen.`},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"Usage",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-datepicker label="Supporting text" supporting-text="A supporting text can be added below the label" onchange="console.log(this.value)" > </gds-datepicker> `, }',description:"The date picker takes a `label` attribute for setting the label text, and\na `supporting-text` attribute for setting the supporting text below the label.\n\nWhen the value is changed by a user, a `change` event is fired."},{kind:"variable",name:"WeekNumbers",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-datepicker label="With week numbers" show-week-numbers ></gds-datepicker> `, }',description:"Use the `show-week-numbers` attribute to show a week numbers column in the calendar view."},{kind:"variable",name:"MinMaxDates",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Min and max dates\', render: (args) => html` <gds-datepicker label="Using min and max dates" min="2022-11-11" max="2024-02-20" ></gds-datepicker> `, }',description:"Use the `show-week-numbers` attribute to show a week numbers column in the calendar view."},{kind:"variable",name:"Disabled",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-datepicker label="Disabled weekends" disabled-weekends disabled-dates="2024-03-08, 2024-04-12, 2024-03-18, 2024-03-19" ></gds-datepicker> `, }',description:"Set the `disable-weekends` attribute to disable weekends (saturdays and sundays) in the calendar view.\n\nAdditionally, `disabled-dates` can be used to disable specific dates.\n\n- When set via the `disabled-dates` attribute, this should be a comma-separated list of date strings that can be parsed by the Javscript `Date()` constructor.\n- When set via the `disabledDates` property, it should be an array of Javascript `Date` objects."},{kind:"variable",name:"InputFieldSize",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-datepicker label="A small datepicker" hide-label size="small" ></gds-datepicker> `, }',description:"The date picker has two sizes: `small` and `medium`. The default size is `medium`.\n\nOptionally, the label can be hidden by using the `hide-label` attribute."},{kind:"variable",name:"Invalid",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-datepicker label="Invalid date" aria-invalid="true"></gds-datepicker> `, }'},{kind:"variable",name:"DisabledField",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Disabled\', render: (args) => html` <gds-datepicker label="Using min and max dates" min="2022-11-11" max="2024-02-20" disabled ></gds-datepicker> `, }',description:"Use the `show-week-numbers` attribute to show a week numbers column in the calendar view."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/datepicker/datepicker.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/datepicker/datepicker.stories.ts"}},{kind:"js",name:"Usage",declaration:{name:"Usage",module:"src/components/datepicker/datepicker.stories.ts"}},{kind:"js",name:"WeekNumbers",declaration:{name:"WeekNumbers",module:"src/components/datepicker/datepicker.stories.ts"}},{kind:"js",name:"MinMaxDates",declaration:{name:"MinMaxDates",module:"src/components/datepicker/datepicker.stories.ts"}},{kind:"js",name:"Disabled",declaration:{name:"Disabled",module:"src/components/datepicker/datepicker.stories.ts"}},{kind:"js",name:"InputFieldSize",declaration:{name:"InputFieldSize",module:"src/components/datepicker/datepicker.stories.ts"}},{kind:"js",name:"Invalid",declaration:{name:"Invalid",module:"src/components/datepicker/datepicker.stories.ts"}},{kind:"js",name:"DisabledField",declaration:{name:"DisabledField",module:"src/components/datepicker/datepicker.stories.ts"}}]},{kind:"javascript-module",path:"src/components/datepicker/datepicker.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, reset; @layer base { ::part(_button) { outline-offset: -1px; } .spinners { display: flex; align-items: center; justify-content: flex-start; inline-size: 11ch; gap: var(--gds-space-4xs); font-size: var(--gds-text-size-detail-s); font-weight: var(--gds-text-weight-regular); } :host([size='small']) .spinners { font-size: var(--gds-text-size-detail-s); line-height: var(--gds-text-line-height-detail-s); } .spinner { display: flex; align-items: center; justify-content: center; text-align: center; height: 100%; box-sizing: border-box; /* border-radius: var(--gds-space-2xs); */ outline: none; padding-block: var(--gds-space-3xs); text-transform: uppercase; line-height: 1; text-align: center; &:focus { background-color: var(--gds-color-l3-background-primary); color: var(--gds-color-l3-content-primary); } } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/datepicker/datepicker.styles.ts"}}]},{kind:"javascript-module",path:"src/components/datepicker/datepicker.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/datepicker/datepicker.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/datepicker/datepicker.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/datepicker/datepicker.ts",declarations:[],exports:[{kind:"js",name:"GdsDatepicker",declaration:{name:"GdsDatepicker",module:"src/components/datepicker/datepicker.ts"}}]},{kind:"javascript-module",path:"src/components/datepicker/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./datepicker"}}]},{kind:"javascript-module",path:"src/components/details/details.component.ts",declarations:[{kind:"class",description:"Details component that provides collapsible content sections.",name:"GdsDetails",slots:[{description:"Default slot for details content",name:""}],members:[{kind:"field",name:"summary",type:{text:"string"},default:"''",description:"The summary text displayed in the details header",attribute:"summary"},{kind:"field",name:"name",type:{text:"string"},default:"''",description:"Group identifier for details behavior synchronization",attribute:"name"},{kind:"field",name:"open",type:{text:"boolean"},default:"false",description:"Controls the expanded state of the details",attribute:"open",reflects:!0},{kind:"field",name:"size",type:{text:"DetailsSize"},default:"'large'",description:"Controls the size variant of the details",attribute:"size"},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Fired when details opens or closes",name:"gds-ui-state",reactName:"onGdsUiState",eventName:"GdsUiStateEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"summary",type:{text:"string"},default:"''",description:"The summary text displayed in the details header",fieldName:"summary"},{name:"name",type:{text:"string"},default:"''",description:"Group identifier for details behavior synchronization",fieldName:"name"},{name:"open",type:{text:"boolean"},default:"false",description:"Controls the expanded state of the details",fieldName:"open"},{name:"size",type:{text:"DetailsSize"},default:"'large'",description:"Controls the size variant of the details",fieldName:"size"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-details",customElement:!0}],exports:[{kind:"js",name:"GdsDetails",declaration:{name:"GdsDetails",module:"src/components/details/details.component.ts"}}]},{kind:"javascript-module",path:"src/components/details/details.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Details', component: 'gds-details', tags: ['autodocs'], argTypes: { summary: { description: 'The text displayed in the details header', control: 'text', table: { type: { summary: 'string' }, defaultValue: { summary: 'Summary' }, }, }, name: { description: 'Groups detailss together. Detailss with the same name will close each other when opened', control: 'text', table: { type: { summary: 'string' }, defaultValue: { summary: '' }, }, }, open: { description: 'Controls if the details is expanded', control: 'boolean', table: { type: { summary: 'boolean' }, }, }, size: { description: 'Controls the size of the details', control: { type: 'select', options: ['large', 'small'] }, table: { type: { summary: '\"large\" | \"small\"' }, defaultValue: { summary: 'large' }, }, }, }, parameters: { docs: { description: { component: ` ## Overview The \\`gds-details\\` component is a collapsible section that helps organize and hide content until needed. It provides smooth animations, grouping behavior. ## Features - Expandable/collapsible content sections with smooth animations - Group behavior: detailss with the same name will close each other automatically - Two size variants: large and small - Accessible by default - Keyboard navigation support \\`\\`\\`html <gds-details summary=\"Click to expand\"> Content here </gds-details> \\`\\`\\` `, }, }, }, }"},{kind:"variable",name:"Default",type:{text:"Story"},default:"{ ...DefaultParams, args: { summary: 'Click to expand', innerHTML: 'Details content goes here', }, }",description:"Basic example of an details component."},{kind:"variable",name:"Grouped",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Grouped\', parameters: { docs: { description: { story: ` Detailss with the same name attribute will close each other when one is opened. In this example, all detailss are grouped together with the name attribute set to "group-1". \\`\\`\\`html <gds-details name="group-1"> ... </gds-details> \\`\\`\\` `, }, }, }, render: () => html` <gds-flex flex-direction="column"> <gds-details name="group-1" summary="First Details"> Content of first details </gds-details> <gds-details name="group-1" summary="Second Details"> Content of second details </gds-details> <gds-details name="group-1" summary="Third Details"> Content of third details </gds-details> </gds-flex> `, }',description:"Example of grouped detailss."},{kind:"variable",name:"Sizes",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Sizes\', parameters: { docs: { description: { story: ` The details component supports two sizes: large(default) and small. \\`\\`\\`html <gds-details size="small"> ... </gds-details> \\`\\`\\` `, }, }, }, render: () => html` <gds-flex gap="xl"> <gds-flex flex-direction="column" flex="1"> <gds-text tag="small" color="secondary">Large Size (Default)</gds-text> <gds-details summary="Summary example"> <gds-text margin="xl">test</gds-text> </gds-details> <gds-details summary="Summary example"> Content goes here </gds-details> <gds-details summary="Summary example"> Content goes here </gds-details> </gds-flex> <gds-flex flex-direction="column" flex="1"> <gds-text tag="small" color="secondary">Small</gds-text> <gds-details size="small" summary="Summary example"> Content goes here </gds-details> <gds-details size="small" summary="Summary example"> Content goes here </gds-details> <gds-details size="small" summary="Summary example"> Content goes here </gds-details> </gds-flex> </gds-flex> `, }',description:"Example of different size variants."},{kind:"variable",name:"RichContent",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Rich Content', parameters: { docs: { description: { story: 'Detailss can contain any type of content, including other components.', }, }, }, render: () => html` <gds-details summary=\"Rich Content Example\"> <gds-rich-text> <h3>Heading Inside Details</h3> <p>This is a paragraph with <strong>rich</strong> formatting.</p> <ul> <li>List item 1</li> <li>List item 2</li> </ul> <h3>Heading Inside Details</h3> <p>This is a paragraph with <strong>rich</strong> formatting.</p> <ul> <li>List item 1</li> <li>List item 2</li> </ul> <h3>Heading Inside Details</h3> <p>This is a paragraph with <strong>rich</strong> formatting.</p> <ul> <li>List item 1</li> <li>List item 2</li> </ul> <h3>Heading Inside Details</h3> <p>This is a paragraph with <strong>rich</strong> formatting.</p> <ul> <li>List item 1</li> <li>List item 2</li> </ul> <h3>Heading Inside Details</h3> <p>This is a paragraph with <strong>rich</strong> formatting.</p> <ul> <li>List item 1</li> <li>List item 2</li> </ul> </gds-rich-text> </gds-details> `, }",description:"Example with rich content."},{kind:"variable",name:"InitiallyOpen",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Initially Open', parameters: { docs: { description: { story: ` Detailss can be initially opened using the open attribute. \\`\\`\\`html <gds-details open> ... </gds-details> \\`\\`\\` `, }, }, }, render: () => html` <gds-details open summary=\"Initially Open\"> This details starts in the open state. </gds-details> `, }",description:"Example of initially open details."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/details/details.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/details/details.stories.ts"}},{kind:"js",name:"Grouped",declaration:{name:"Grouped",module:"src/components/details/details.stories.ts"}},{kind:"js",name:"Sizes",declaration:{name:"Sizes",module:"src/components/details/details.stories.ts"}},{kind:"js",name:"RichContent",declaration:{name:"RichContent",module:"src/components/details/details.stories.ts"}},{kind:"js",name:"InitiallyOpen",declaration:{name:"InitiallyOpen",module:"src/components/details/details.stories.ts"}}]},{kind:"javascript-module",path:"src/components/details/details.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, reset; @layer base { .details { border-bottom: solid var(--gds-space-4xs) var(--gds-color-l2-border-primary); font-size: var(--gds-text-size-body-m); line-height: var(--gds-text-line-height-body-m); color: var(--gds-color-l2-content-secondary); transition: border-color 240ms linear; } .summary { display: flex; justify-content: space-between; align-items: center; list-style: none; user-select: none; outline-offset: var(--gds-space-2xs); outline-color: currentColor; transition: all 120ms; color: var(--gds-color-l2-content-primary); } .summary-icon { border-radius: var(--gds-space-max); background-color: transparent; transition: all 280ms; aspect-ratio: 1; width: max-content; height: max-content; line-height: 1; position: relative; } .summary-icon::after { content: ''; position: absolute; border-radius: var(--gds-space-max); transition: all 280ms; inset: 0; scale: 0.9; opacity: 0; pointer-events: none; background-color: color-mix( in srgb, transparent, var(--gds-color-l3-states-light-hover) ); } .summary:focus { outline-color: var(--gds-color-l3-content-tertiary); &:not(:focus-visible) { outline-color: transparent; } } @media (pointer: fine) { .summary:hover .summary-icon::after, .summary:focus-visible .summary-icon::after { opacity: 1; scale: 1; } .summary:active .summary-icon::after { opacity: 1; scale: 1; } .details:hover, .details:focus-within { border-color: var(--gds-color-l2-border-quaternary); } } .summary-label { font-size: var(--gds-text-size-heading-xs); line-height: var(--gds-text-line-height-heading-xs); font-weight: var(--gds-text-weight-regular); padding-block: var(--gds-space-m); cursor: pointer; flex: 1; outline: none; } .details.small .summary-label { font-size: var(--gds-text-size-heading-2xs); line-height: var(--gds-text-line-height-heading-2xs); padding-block: var(--gds-space-s); } .details.small .content { font-size: var(--gds-text-size-heading-2xs); line-height: var(--gds-text-line-height-heading-2xs); } .details:focus-visible { border-radius: var(--gds-space-2xs); } .details.open .content { padding-block-end: var(--gds-space-l); } .details.small.open .content { padding-block-end: var(--gds-space-s); } .content { interpolate-size: allow-keywords; height: 0; transition: height 0.35s ease, padding-block-end 0.35s ease; overflow: hidden; outline: none; scrollbar-width: none; } .content.open { overflow: auto; height: max-content; max-height: 100vh; } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/details/details.styles.ts"}}]},{kind:"javascript-module",path:"src/components/details/details.ts",declarations:[],exports:[{kind:"js",name:"GdsDetails",declaration:{name:"GdsDetails",module:"src/components/details/details.ts"}}]},{kind:"javascript-module",path:"src/components/details/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./details"}}]},{kind:"javascript-module",path:"src/components/dialog/dialog.component.ts",declarations:[{kind:"class",description:"",name:"GdsDialog",slots:[{description:"The content of the dialog",name:""},{description:"The trigger button for the dialog",name:"trigger"},{description:"The footer of the dialog",name:"footer"}],members:[{kind:"field",name:"open",type:{text:"boolean"},default:"false",description:"Whether the dialog is open. The state of the dialog can be controlled either\nby setting this property or by calling the `show()` and `close()` methods.",attribute:"open",reflects:!0},{kind:"field",name:"heading",type:{text:"string | undefined"},description:"The dialog's heading.",attribute:"heading"},{kind:"field",name:"variant",type:{text:"'default' | 'slide-out'"},default:"'default'",description:"The dialog's variant.",attribute:"variant"},{kind:"method",name:"show",parameters:[{name:"reason",optional:!0,type:{text:"string"}}],description:"Opens the dialog."},{kind:"method",name:"close",parameters:[{name:"reason",type:{text:"string"}},{description:"The value to return when the dialog is closed.",name:"returnValue"}],description:"Closes the dialog."},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Fired when the dialog is opened or closed",name:"gds-ui-state",reactName:"onGdsUiState",eventName:"GdsUiStateEvent"},{description:"Fired when the dialog is closed",name:"gds-close",reactName:"onGdsClose",eventName:"GdsCloseEvent"},{description:"Fired when the dialog is opened",name:"gds-show",reactName:"onGdsShow",eventName:"GdsShowEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"open",type:{text:"boolean"},default:"false",description:"Whether the dialog is open. The state of the dialog can be controlled either\nby setting this property or by calling the `show()` and `close()` methods.",fieldName:"open"},{name:"heading",type:{text:"string | undefined"},description:"The dialog's heading.",fieldName:"heading"},{name:"variant",type:{text:"'default' | 'slide-out'"},default:"'default'",description:"The dialog's variant.",fieldName:"variant"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-dialog",customElement:!0}],exports:[{kind:"js",name:"GdsDialog",declaration:{name:"GdsDialog",module:"src/components/dialog/dialog.component.ts"}}]},{kind:"javascript-module",path:"src/components/dialog/dialog.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Dialog', component: 'gds-dialog', tags: ['autodocs'], parameters: { layout: 'centered', }, }",description:`A dialog is a type of modal window that appears in front of app content
to provide critical information or ask for a decision. Dialogs disable
all app functionality when they appear, and remain on screen until confirmed,
dismissed, or a required action has been taken.`},{kind:"variable",name:"Default",type:{text:"Story"},default:"{ ...DefaultParams, }",description:`The easiest way to set up a dialog is to put a button in the trigger slot. This will
automatically open the dialog when the button is clicked.`},{kind:"variable",name:"SlideOut",type:{text:"Story"},default:"{ ...DefaultParams, args: { ...DefaultParams.args, variant: 'slide-out', }, }",description:"You can set the `variant` attribute to `slide-out` to make the dialog slide in from the right."},{kind:"variable",name:"CustomButtons",type:{text:"Story"},default:`{ ...DefaultParams, render: () => html\`<gds-button aria-haspopup="dialog" onclick="document.getElementById('my-dialog').show()" >Open dialog</gds-button > <gds-dialog heading="Dialog heading" id="my-dialog"> This is the content of the dialog. <gds-button slot="footer" onclick="document.getElementById('my-dialog') as GdsDialog)?.close('cusom close')" >Custom close button</gds-button > </gds-dialog>\`, }`,description:'You can also open and close the dialog programmatically by calling the `show()` and `close()` methods.\nIn this case you should add `aria-haspopup="dialog"` to the trigger element. Slotted triggers will get\nthis attribute automatically.\n\nInside the dialog, you can use the `slot="footer"` to add buttons to the footer of the dialog.'},{kind:"variable",name:"Events",type:{text:"Story"},default:'{ ...DefaultParams, render: () => html`<gds-dialog @gds-close=${console.log} @gds-show=${console.log} @gds-ui-state=${console.log} heading="Dialog heading" id="my-dialog" > <gds-button slot="trigger">Open dialog</gds-button> This is the content of the dialog. <gds-button rank="secondary" slot="footer">Custom btn</gds-button> <gds-button slot="footer" onclick="document.getElementById(\'my-dialog\').close(\'cusom close\')" >Custom btn 2</gds-button > </gds-dialog>`, }',description:"You can listen to the `gds-show`, `gds-close` and `gds-ui-state` events to know when the dialog is opened or closed.\n\nWhen `close()` or `show()` is called without a parameter, the event will not be emitted. If a parameter is passed, the\nevent will be emitted with the parameter as the event detail. Also when any of the built-in methods are used to open or\nclose the dialog, the event will be emitted with the parameter as the event detail."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/dialog/dialog.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/dialog/dialog.stories.ts"}},{kind:"js",name:"SlideOut",declaration:{name:"SlideOut",module:"src/components/dialog/dialog.stories.ts"}},{kind:"js",name:"CustomButtons",declaration:{name:"CustomButtons",module:"src/components/dialog/dialog.stories.ts"}},{kind:"js",name:"Events",declaration:{name:"Events",module:"src/components/dialog/dialog.stories.ts"}}]},{kind:"javascript-module",path:"src/components/dialog/dialog.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, reset, transitional-styles; @layer base { :host { display: contents; } dialog { transition: 0.3s; background: transparent; padding: 0; border-width: 0; overflow: visible; max-width: 100vw; max-height: 100vh; display: flex; @starting-style { opacity: 0; transform: translateY(-16px); &::backdrop { opacity: 0; backdrop-filter: blur(0); } } &::backdrop { transition: 0.3s; background: rgba(100, 100, 100, 0.3); backdrop-filter: blur(3px); } } dialog > * { flex-grow: 1; } dialog.default { width: 400px; max-height: 400px; } dialog.slide-out { width: 600px; height: 100vh; inset: 0 0 0 auto; @starting-style { transform: translateX(96px); } } .card { flex-direction: column; } slot[name='footer'] > *, slot[name='footer']::slotted(*) { flex: 1; } h2 { margin: 0; padding: 0; font-size: 1.5rem; font-weight: 450; } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/dialog/dialog.styles.ts"}}]},{kind:"javascript-module",path:"src/components/dialog/dialog.ts",declarations:[],exports:[{kind:"js",name:"GdsDialog",declaration:{name:"GdsDialog",module:"src/components/dialog/dialog.ts"}}]},{kind:"javascript-module",path:"src/components/dialog/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./dialog"}}]},{kind:"javascript-module",path:"src/components/dialog/scroll-lock.ts",declarations:[{kind:"function",name:"registerGlobalScrollLockStyles"},{kind:"function",name:"lockBodyScrolling",parameters:[{name:"lockingEl",type:{text:"HTMLElement"}}],description:`Prevents body scrolling. Keeps track of which elements requested a lock so multiple levels of locking are possible
without premature unlocking.`},{kind:"function",name:"unlockBodyScrolling",parameters:[{name:"lockingEl",type:{text:"HTMLElement"}}],description:"Unlocks body scrolling. Scrolling will only be unlocked once all elements that requested a lock call this method."}],exports:[{kind:"js",name:"registerGlobalScrollLockStyles",declaration:{name:"registerGlobalScrollLockStyles",module:"src/components/dialog/scroll-lock.ts"}},{kind:"js",name:"lockBodyScrolling",declaration:{name:"lockBodyScrolling",module:"src/components/dialog/scroll-lock.ts"}},{kind:"js",name:"unlockBodyScrolling",declaration:{name:"unlockBodyScrolling",module:"src/components/dialog/scroll-lock.ts"}}]},{kind:"javascript-module",path:"src/components/div/div.component.ts",declarations:[{kind:"class",description:"",name:"GdsDiv",members:[{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties"},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level"},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties"},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties"},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties"},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties"},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties"},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values."},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values."},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withSizeYProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withPaddingProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withPositioningProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-div",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsDiv",declaration:{name:"GdsDiv",module:"src/components/div/div.component.ts"}}]},{kind:"javascript-module",path:"src/components/div/div.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Div', component: 'gds-div', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-div'), }, }"},{kind:"variable",name:"Default",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"Example",type:{text:"Story"},default:`{ ...DefaultParams, render: (args) => html\` <!-- This is equivalent to 'gds-flex' --> <gds-div display="flex" gap="xl" justify-content="center" align-items="center" > <!-- Some properties, like 'width' and 'height', accepts either tokens or arbitrary values --> <gds-div width="4xl" height="4xl" background="primary"></gds-div> <!-- All style expressions properties accepts multi-viewport expressions --> <gds-div width="4xl; l{ 6xl }" height="4xl; l{ 6xl }" background="secondary" border="4xs" ></gds-div> <!-- Instead of adding 'background' and 'border-radius', take a look at 'gds-card', which provides pre-configured configurations of these properties --> <gds-div width="4xl" height="4xl" background="tertiary" border-radius="s" ></gds-div> </gds-div> \`, }`,description:"Here is an example of a simple layout structure using `gds-div`:"},{kind:"variable",name:"CardBorder",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Border Style\', render: (args) => html`<gds-grid columns="5" gap="l"> <gds-card variant="primary" border-radius="0 0 m m" border-width="4xs 0 0 0" border-color="secondary" > <gds-flex align-items="center" justify-content="center"> Top </gds-flex> </gds-card> <gds-card variant="primary" border-radius="m 0 0 m" border-width="0 4xs 0 0" border-color="secondary" > <gds-flex align-items="center" justify-content="center">Right</gds-flex> </gds-card> <gds-card variant="primary" border-radius="m m 0 0" border-width="0 0 4xs 0" border-color="secondary" > <gds-flex align-items="center" justify-content="center"> Bottom </gds-flex> </gds-card> <gds-card variant="primary" border-radius="0 m m 0" border-width="0 0 0 4xs" border-color="secondary" > <gds-flex align-items="center" justify-content="center"> Left </gds-flex> </gds-card> <gds-card variant="primary" border-radius="m" border="4xs" border-color="secondary" > <gds-flex align-items="center" justify-content="center"> All </gds-flex> </gds-card> </gds-grid>`, }',description:'Border styling follows the same patterns as CSS and can be controlled using the shorthand properties `border`, `border-width`, `border-style`, `border-color`\n\n- `border-color` defaults to level 2 primary\n- `border-width` defaults to 0\n- `border-style` defaults to solid\n\nTo add a 1px primary border around the element:\n\n```html\n<gds-div border="4xs"></gds-div>\n```\n\nTo only add border bottom:\n\n```html\n<gds-div border-width="0 0 4xs 0"></gds-div>\n```\n\nTo add a 1px secodary color border on the bottom:\n\n```html\n<gds-div border-width="0 0 4xs 0" border-color="secondary"></gds-div>\n```'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/div/div.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/div/div.stories.ts"}},{kind:"js",name:"Example",declaration:{name:"Example",module:"src/components/div/div.stories.ts"}},{kind:"js",name:"CardBorder",declaration:{name:"CardBorder",module:"src/components/div/div.stories.ts"}}]},{kind:"javascript-module",path:"src/components/div/div.style.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { display: block; box-sizing: border-box; border-style: solid; border-width: 0; border-color: var(--gds-color-l2-border-primary); } :host(:focus-visible) { outline-color: color-mix(in srgb, currentcolor, #000 100%); outline-offset: var(--gds-space-3xs); outline-style: solid; outline-width: var(--gds-space-3xs); } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/div/div.style.ts"}}]},{kind:"javascript-module",path:"src/components/div/div.ts",declarations:[],exports:[{kind:"js",name:"GdsDiv",declaration:{name:"GdsDiv",module:"src/components/div/div.ts"}}]},{kind:"javascript-module",path:"src/components/div/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./div"}}]},{kind:"javascript-module",path:"src/components/divider/divider.component.ts",declarations:[{kind:"class",description:"",name:"GdsDivider",members:[{kind:"field",name:"level",type:{text:"string"},default:"'2'",description:"The level of the divider is used to resolve the color tokens from the corresponding level.\nCheck the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.\n\nDefault value for `gds-divider` is set to `2`.",attribute:"level"},{kind:"field",name:"color",type:{text:"string | undefined"},description:`Controls the color property of the divider.
Supports all the color tokens from the design system.

You can apply color like this:

\`\`\`html
<gds-divider color="primary"></gds-divider>
\`\`\``,category:"Declarative layout / Style expression properties"},{kind:"field",name:"size",type:{text:"string | undefined"},description:`Controls the size property of the divider.
Supports all the space tokens from the design system.

You can apply size like this:

\`\`\`html
<gds-divider size="2xl"></gds-divider>
\`\`\`

The above example will apply the size style of 2xl.`},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:`Controls the opacity property of the divider.
Supports all the opacity tokens from the design system.

You can apply opacity like this:

\`\`\`html
<gds-divider opacity="0.2"></gds-divider>
\`\`\`
The above example will apply the opacity style of base400.`,category:"Declarative layout / Style expression properties"},{kind:"field",name:"role",type:{text:"string | null"},default:"null",description:'Use the role attribute primarily if you only want the divider to be a visual element.\n\n```html\n<!-- This divider will not be announced as a separator or thematic break -->\n<gds-divider role="presentation"></gds-divider>\n```',attribute:"role"},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"level",type:{text:"string"},default:"'2'",description:"The level of the divider is used to resolve the color tokens from the corresponding level.\nCheck the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.\n\nDefault value for `gds-divider` is set to `2`.",fieldName:"level"},{name:"role",type:{text:"string | null"},default:"null",description:'Use the role attribute primarily if you only want the divider to be a visual element.\n\n```html\n<!-- This divider will not be announced as a separator or thematic break -->\n<gds-divider role="presentation"></gds-divider>\n```',fieldName:"role"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-divider",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsDivider",declaration:{name:"GdsDivider",module:"src/components/divider/divider.component.ts"}}]},{kind:"javascript-module",path:"src/components/divider/divider.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Divider', component: 'gds-divider', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-divider'), }, }",description:'`gds-divider` is used to semantically separate content, and has the same meaning as the `<hr>` element in HTML. Add `role="presentation"` to the divider if you only want a visual separation.\n\nThe divider can be customized with different properties like color and size.'},{kind:"variable",name:"Divider",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Divider\', render: (args) => html` <gds-divider color="primary" size="2xl"></gds-divider>`, }'},{kind:"variable",name:"Color",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Color\', render: (args) => html` <gds-flex flex-direction="column" gap="xl"> <gds-card> <gds-flex flex-direction="column"> <gds-text>Primary</gds-text> <gds-divider color="primary" size="2xl"></gds-divider> </gds-flex> </gds-card> <gds-card> <gds-flex flex-direction="column"> <gds-text>Secondary</gds-text> <gds-divider color="secondary" size="2xl"></gds-divider> </gds-flex> </gds-card> <gds-card variant="tertiary"> <gds-flex flex-direction="column"> <gds-text>Tertiary</gds-text> <gds-divider color="tertiary" size="2xl"></gds-divider> </gds-flex> </gds-card> <gds-card> <gds-flex flex-direction="column"> <gds-text>Quarternary</gds-text> <gds-divider color="quarternary" size="2xl"></gds-divider> </gds-flex> </gds-card> <gds-card variant="tertiary"> <gds-flex flex-direction="column"> <gds-text>Inversed</gds-text> <gds-divider color="inversed" size="2xl"></gds-divider> </gds-flex> </gds-card> </gds-flex>`, }',description:`The \`gds-divider\` with different colors
The default level on the divider is 2 and based on the level it accepts all border colors of that level colors can be found here:[Color System documentation page](./?path=/docs/style-colors--docs)

Example:

\`\`\`html
<gds-divider color="primary"></gds-divider>
<gds-divider color="secondary"></gds-divider>
<gds-divider color="inversed"></gds-divider>
\`\`\`

The above example will apply the color style of 'primary'.`},{kind:"variable",name:"Custom",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Color Custom\', render: (args) => html` <gds-flex flex-direction="column" gap="xl"> <gds-card variant="tertiary"> <gds-flex flex-direction="column"> <gds-text>Custom Color: #fc0</gds-text> <gds-divider color="#fc0" size="2xl"></gds-divider> </gds-flex> </gds-card> <gds-card> <gds-flex flex-direction="column"> <gds-text>Custom Color: #2561ad</gds-text> <gds-divider color="#2561ad" size="2xl"></gds-divider> </gds-flex> </gds-card> </gds-flex>`, }',description:`Custom color
In addition to color tokens you can still use custom colors in cases when you need to use a color that is not part of the design system.

Example:

\`\`\`html
<gds-divider color="#fc0"></gds-divider>
\`\`\``},{kind:"variable",name:"Alpha",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Color Alpha\', render: (args) => html` <gds-flex flex-direction="column" gap="xl"> <gds-card variant="tertiary"> <gds-flex flex-direction="column"> <gds-text> Token with alpha: <br /> <code>primary/0.4</code> </gds-text> <gds-divider color="primary/0.4" size="2xl"></gds-divider> </gds-flex> </gds-card> <gds-card> <gds-flex flex-direction="column"> <gds-text> Custom color with alpha: <br /> <code>#2561ad/0.2</code> </gds-text> <gds-divider color="#2561ad/0.2" size="2xl"></gds-divider> </gds-flex> </gds-card> </gds-flex>`, }',description:`Color property acceps alpha values
It can be used with variable colors from the design system or custom colors.

Example:
\`\`\`html
<gds-divider color="#2561ad/0.2"></gds-divider>
<gds-divider color="primary/0.2"></gds-divider>
\`\`\`

The alpha value should be between 0 and 1.`},{kind:"variable",name:"Opacity",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Opacity\', render: (args) => html` <gds-flex flex-direction="column" gap="xl"> <gds-card> <gds-flex flex-direction="column"> <gds-text>Opacity: 0.6</gds-text> <gds-divider color="primary" size="2xl" opacity="0.6"></gds-divider> </gds-flex> </gds-card> <gds-card> <gds-flex flex-direction="column"> <gds-text>Opacity: 0.3</gds-text> <gds-divider color="secondary" size="4xl" opacity="0.4"></gds-divider> </gds-flex> </gds-card> <gds-card variant="tertiary"> <gds-flex flex-direction="column"> <gds-text>Opacity: 0.2</gds-text> <gds-divider color="tertiary" size="6xl" opacity="0.2"></gds-divider> </gds-flex> </gds-card> </gds-flex>`, }',description:`In addition to the color and size properties, the divider component also supports the opacity property.

Example:

\`\`\`html
<gds-divider opacity="0.2"></gds-divider>
<gds-divider opacity="0.4"></gds-divider>
<gds-divider opacity="0.6"></gds-divider>
<gds-divider opacity="0.8"></gds-divider>
\`\`\``},{kind:"variable",name:"Size",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Size\', render: (args) => html` <gds-flex flex-direction="column" gap="xl"> <gds-card> <gds-flex flex-direction="column"> <gds-text>Size: 2xl</gds-text> <gds-divider color="primary" size="2xl"></gds-divider> </gds-flex> </gds-card> <gds-card> <gds-flex flex-direction="column"> <gds-text>Size: 4xl</gds-text> <gds-divider color="secondary" size="4xl"></gds-divider> </gds-flex> </gds-card> <gds-card variant="tertiary"> <gds-flex flex-direction="column"> <gds-text>Size: 6xl</gds-text> <gds-divider color="tertiary" size="6xl"></gds-divider> </gds-flex> </gds-card> </gds-flex>`, }',description:`The \`gds-divider\` with different sizes

Example:

\`\`\`html
<gds-divider size="xl"></gds-divider>
<gds-divider size="2xl"></gds-divider>
<gds-divider size="4xl"></gds-divider>
<gds-divider size="6xl"></gds-divider>
\`\`\`

It accepts all the [size tokens from the design system](?path=/docs/style-size--docs).

> The size property doesn't affect the size of the border itself but the space around the divider.`}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/divider/divider.stories.ts"}},{kind:"js",name:"Divider",declaration:{name:"Divider",module:"src/components/divider/divider.stories.ts"}},{kind:"js",name:"Color",declaration:{name:"Color",module:"src/components/divider/divider.stories.ts"}},{kind:"js",name:"Custom",declaration:{name:"Custom",module:"src/components/divider/divider.stories.ts"}},{kind:"js",name:"Alpha",declaration:{name:"Alpha",module:"src/components/divider/divider.stories.ts"}},{kind:"js",name:"Opacity",declaration:{name:"Opacity",module:"src/components/divider/divider.stories.ts"}},{kind:"js",name:"Size",declaration:{name:"Size",module:"src/components/divider/divider.stories.ts"}}]},{kind:"javascript-module",path:"src/components/divider/divider.style.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { display: block; } hr { border-radius: 200px; background: currentColor; font-size: 0; border: 0; height: 1px; width: 100%; margin-top: calc((var(--_size, 0) / 2) - (1px / 2)); margin-bottom: calc((var(--_size, 0) / 2) - (1px / 2)); } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/divider/divider.style.ts"}}]},{kind:"javascript-module",path:"src/components/divider/divider.ts",declarations:[],exports:[{kind:"js",name:"GdsDivider",declaration:{name:"GdsDivider",module:"src/components/divider/divider.ts"}}]},{kind:"javascript-module",path:"src/components/divider/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./divider"}}]},{kind:"javascript-module",path:"src/components/dropdown/dropdown.component.ts",declarations:[{kind:"class",description:"",name:"GdsDropdown",slots:[{description:"Options for the dropdown. Accepts `gds-option` and `gds-menu-heading` elements.",name:""},{description:"Custom content for the trigger button can be assigned through this slot.",name:"trigger"},{description:"A longer supporting text can be placed here. It will be displayed in a panel when the user clicks the info button.",name:"extended-supporting-text"},{description:"***(deprecated - use `errorMessage` property instead)*** Error message to show below the input field whem there is a validation error.",name:"message"},{description:"***(deprecated - use `supporting-text` property instead)*** Renders between the label and the trigger button.",name:"sub-label"}],members:[{kind:"field",name:"type",readonly:!0},{kind:"field",name:"supportingText",type:{text:"string"},default:"''",description:"The supporting text displayed between the label and the field itself.",attribute:"supporting-text"},{kind:"field",name:"open",type:{text:"boolean"},default:"false",description:"Sets the open state of the dropdown.",attribute:"open",reflects:!0},{kind:"field",name:"searchable",type:{text:"boolean"},default:"false",description:"Whether the dropdown should be searchable.",attribute:"searchable",reflects:!0},{kind:"field",name:"multiple",type:{text:"boolean"},default:"false",description:`Wheter the dropdown should support multiple selections.
When set to true, the dropdown will render a checkbox next to each option.
The value of the dropdown will be an array of the selected values.`,attribute:"multiple",reflects:!0},{kind:"field",name:"combobox",type:{text:"boolean"},default:"false",description:`Whether the dropdown should be rendered as a combobox.
When set to true, the dropdown will render an input field instead of a button.
The value of the dropdown will be a string representing the selected value.`,attribute:"combobox",reflects:!0},{kind:"field",name:"compareWith",type:{text:"(a: ValueT, b: ValueT) => boolean"},description:`Delegate function for comparing option values.
By default the option values are compared using strict equality.
If you want to compare objects by field values, you can provide
a custom compare function here. The function should return true
if the values are considered equal.

Example:
\`\`\`ts
dropdown.compareWith = (a, b) => a.id === b.id
\`\`\``,attribute:"compareWith"},{kind:"field",name:"searchFilter",type:{text:"(q: string, o: GdsOption) => boolean"},description:`Delegate function for customizing the search filtering.
By default, the search filter will just check if the option label
contains the search string using [String.includes](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes).

This property allows you to provide a custom filter function to use instead.

For example, to filter on value instead of label:
\`\`\`ts
dropdown.searchFilter = (query, option) =>
   option.value.toLowerCase().includes(query.toLowerCase())
\`\`\``,attribute:"searchFilter"},{kind:"field",name:"syncPopoverWidth",type:{text:"boolean"},default:"false",description:`Whether the popover should sync its width to the trigger button. When this is
set to \`true\`, the popover will always have the same width as the trigger button.

By default, line-breaks will be applied to the option content if it is wider than
the popover width. If you use this option, make sure to verify that your options
are still readable and apply appropriate custom layout or truncation if neccecary.`,attribute:"sync-popover-width"},{kind:"field",name:"maxHeight",type:{text:"number"},default:"500",description:"Maximum height of the dropdown list.",attribute:"max-height"},{kind:"field",name:"size",type:{text:"'medium' | 'small'"},default:"'medium'",description:"Size of the dropdown. Supports `medium` and `small`. There is no `large` size for dropdowns.\n`medium` is the default size.",attribute:"size"},{kind:"field",name:"hideLabel",type:{text:"boolean"},default:"false",description:"Whether to hide the label.",deprecated:"- use `plain` instead",attribute:"hide-label"},{kind:"field",name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",attribute:"plain"},{kind:"field",name:"disableMobileStyles",type:{text:"boolean"},default:"false",description:"Whether to disable the mobile styles.",attribute:"disableMobileStyles"},{kind:"field",name:"options",description:"Get the options of the dropdown.",readonly:!0},{kind:"field",name:"placeholder",description:`Return the first option with a isPlaceholder attribute.
If no placeholder is found, this will be undefined.`,readonly:!0},{kind:"field",name:"displayValue",description:`Returns the display value as a string.
If the dropdown is in multiple mode, this will be a comma separated list of the selected values.`,readonly:!0},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],description:"Moves focus to this element.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"test_getFieldElement",description:`A reference to the field element. This does not refer to the trigger button element itself,
but the wrapper that makes up the visual field.
Intended for use in integration tests.`},{kind:"field",name:"formAssociated",type:{text:"boolean"},static:!0,default:"true",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validator",type:{text:"GdsValidator | undefined"},description:"A validator that can be used to validate the form control and set an error message.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",attribute:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"errorMessage",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,attribute:"error-message",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",attribute:"aria-invalid",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"value",description:"Get or set the value of the form control.",attribute:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"name",type:{text:"string"},default:"''",attribute:"name",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",attribute:"disabled",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"form",description:"The form element that the form control is associated with.",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validity",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validationMessage",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"willValidate",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"checkValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"reportValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formResetCallback",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formAssociatedCallback",parameters:[{name:"form",optional:!0,type:{text:"HTMLFormElement"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Fired when the value of the dropdown is changed through user interaction (not when value prop is set programatically).",name:"change",reactName:"onChange",eventName:"ChangeEvent"},{description:"Fired when the value of the dropdown is changed through user interaction.",name:"input",reactName:"onInput",eventName:"InputEvent"},{description:"Fired when the dropdown is opened or closed by the user. Can be cancelled to prevent the dropdown from opening or closing.",name:"gds-ui-state",reactName:"onGdsUiState",eventName:"GdsUiStateEvent"},{description:"Fired when the user types in the search field. The event is cancellable, and the consumer is expected to handle filtering and updating the options list if the event is cancelled.",name:"gds-filter-input",reactName:"onGdsFilterInput",eventName:"GdsFilterInputEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"supporting-text",type:{text:"string"},default:"''",description:"The supporting text displayed between the label and the field itself.",fieldName:"supportingText"},{name:"open",type:{text:"boolean"},default:"false",description:"Sets the open state of the dropdown.",fieldName:"open"},{name:"searchable",type:{text:"boolean"},default:"false",description:"Whether the dropdown should be searchable.",fieldName:"searchable"},{name:"multiple",type:{text:"boolean"},default:"false",description:`Wheter the dropdown should support multiple selections.
When set to true, the dropdown will render a checkbox next to each option.
The value of the dropdown will be an array of the selected values.`,fieldName:"multiple"},{name:"combobox",type:{text:"boolean"},default:"false",description:`Whether the dropdown should be rendered as a combobox.
When set to true, the dropdown will render an input field instead of a button.
The value of the dropdown will be a string representing the selected value.`,fieldName:"combobox"},{name:"compareWith",type:{text:"(a: ValueT, b: ValueT) => boolean"},description:`Delegate function for comparing option values.
By default the option values are compared using strict equality.
If you want to compare objects by field values, you can provide
a custom compare function here. The function should return true
if the values are considered equal.

Example:
\`\`\`ts
dropdown.compareWith = (a, b) => a.id === b.id
\`\`\``,fieldName:"compareWith"},{name:"searchFilter",type:{text:"(q: string, o: GdsOption) => boolean"},description:`Delegate function for customizing the search filtering.
By default, the search filter will just check if the option label
contains the search string using [String.includes](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes).

This property allows you to provide a custom filter function to use instead.

For example, to filter on value instead of label:
\`\`\`ts
dropdown.searchFilter = (query, option) =>
   option.value.toLowerCase().includes(query.toLowerCase())
\`\`\``,fieldName:"searchFilter"},{name:"sync-popover-width",type:{text:"boolean"},default:"false",description:`Whether the popover should sync its width to the trigger button. When this is
set to \`true\`, the popover will always have the same width as the trigger button.

By default, line-breaks will be applied to the option content if it is wider than
the popover width. If you use this option, make sure to verify that your options
are still readable and apply appropriate custom layout or truncation if neccecary.`,fieldName:"syncPopoverWidth"},{name:"max-height",type:{text:"number"},default:"500",description:"Maximum height of the dropdown list.",fieldName:"maxHeight"},{name:"size",type:{text:"'medium' | 'small'"},default:"'medium'",description:"Size of the dropdown. Supports `medium` and `small`. There is no `large` size for dropdowns.\n`medium` is the default size.",fieldName:"size"},{name:"hide-label",type:{text:"boolean"},default:"false",description:"Whether to hide the label.",deprecated:"- use `plain` instead",fieldName:"hideLabel"},{name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",fieldName:"plain"},{name:"disableMobileStyles",type:{text:"boolean"},default:"false",description:"Whether to disable the mobile styles.",fieldName:"disableMobileStyles"},{name:"aria-invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",fieldName:"invalid",attribute:"aria-invalid",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",fieldName:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"error-message",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,fieldName:"errorMessage",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",fieldName:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"value",description:"Get or set the value of the form control.",fieldName:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"name",type:{text:"string"},default:"''",fieldName:"name",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",fieldName:"disabled",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsFormControlElement",module:"/src/components/form/form-control"},tagName:"gds-dropdown",customElement:!0}],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"../../primitives/listbox/option.component"}},{kind:"js",name:"GdsDropdown",declaration:{name:"GdsDropdown",module:"src/components/dropdown/dropdown.component.ts"}}]},{kind:"javascript-module",path:"src/components/dropdown/dropdown.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Dropdown', component: 'gds-dropdown', subcomponents: { Option: 'gds-option' }, parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-dropdown'), }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/dropdown)
&nbsp;|&nbsp;
[Usage guidelines](https://designlibrary.sebgroup.com/components/component-dropdown)

A dropdown enables the user to choose one or multiple options from a list. It's ideal for
situations where there are numerous predetermined choices and space is limited.

The dropdown can be searchable, allowing users to filter the options by typing in the input
field, and it also suports both single and multiple selection.`},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"OptionHeadings",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-dropdown onchange="document.getElementById(\'selected-value\').innerText = event.target.value" label="Select a starship" supporting-text="Label support text" > <span slot="extended-supporting-text" >Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-menu-heading>Space vehicles</gds-menu-heading> <gds-option value="1701-D-1">Enterprise 1701-D</gds-option> <gds-option value="falcon-1">Millenium Falcon</gds-option> <gds-option value="defiant-1">Defiant</gds-option> <gds-option value="voyager-1">Voyager</gds-option> <gds-option value="prometheus-1">Prometheus</gds-option> <gds-option value="discovery-1">Discovery</gds-option> <gds-option value="columbia-1">Columbia</gds-option> <gds-option value="yamato-1">Yamato</gds-option> <gds-option value="equinox-1">Equinox</gds-option> <gds-option value="daedalus-1">Daedalus</gds-option> <gds-menu-heading>Ground vehicles</gds-menu-heading> <gds-option value="at-at">AT-AT</gds-option> <gds-option value="at-st">AT-ST</gds-option> <gds-option value="at-te">AT-TE</gds-option> <gds-option value="at-rt">AT-RT</gds-option> <gds-option value="at-ap">AT-AP</gds-option> </gds-dropdown> <br /> <div>Selected starship: <span id="selected-value"></span></div> `, }',description:"`<gds-menu-heading>` can be used to create group headings in the dropdown."},{kind:"variable",name:"CustomTrigger",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Custom trigger content', render: (args) => html\` <gds-dropdown onchange="document.getElementById('trigger-value').innerText = event.target.value" > <div slot="trigger"> <b>Selected: </b> <span id="trigger-value">v1</span> </div> <gds-option value="v1">Value 1</gds-option> <gds-option value="v2">Value 2</gds-option> <gds-option value="v3">Value 3</gds-option> </gds-dropdown> \`, }`,description:"Custom content for the trigger can be provided by assigning an element to the `trigger` slot. When this slot is occupied,\nthe default trigger content will be overridden, and you will have to manage the displayed value yourself."},{kind:"variable",name:"SyncedPopoverWidth",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Synced popover width\', render: (args) => html` <gds-dropdown label="Synced popover width" sync-popover-width style="width: 200px" > <gds-option value="1701-D-1"> Enterprise 1701-D is a starship from the TNG series </gds-option> <gds-option value="falcon-1">Millenium Falcon</gds-option> <gds-option value="defiant-1">Defiant</gds-option> <gds-option value="voyager-1">Voyager</gds-option> <gds-option value="prometheus-1">Prometheus</gds-option> <gds-option value="discovery-1">Discovery</gds-option> <gds-option value="columbia-1">Columbia</gds-option> </gds-dropdown> `, }',description:"Normally, the popover will never be narrower than the trigger, but may be wider if the option contents are wider.\nOptionally, the width of the popover can be locked to the width of the trigger by setting the `sync-popover-width` attribute."},{kind:"variable",name:"Size",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-dropdown size="small" label="Select tech"> <gds-option value="">Select tech</gds-option> <gds-option value="warp">Warp Drive</gds-option> <gds-option value="cybernetics">Cybernetics</gds-option> <gds-option value="nanotechnology">Nanotechnology</gds-option> <gds-option value="cloning">Cloning</gds-option> <gds-option value="cryonics">Cryonics</gds-option> <gds-option value="teleportation">Teleportation</gds-option> </gds-dropdown> `, }',description:"The Dropdown is available in two sizes: `small` and `medium`. `medium` is the default."},{kind:"variable",name:"HiddenLabel",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-dropdown size="small" label="Select tech" hide-label> <gds-option value="">Select tech</gds-option> <gds-option value="warp">Warp Drive</gds-option> <gds-option value="cybernetics">Cybernetics</gds-option> <gds-option value="nanotechnology">Nanotechnology</gds-option> <gds-option value="cloning">Cloning</gds-option> <gds-option value="cryonics">Cryonics</gds-option> <gds-option value="teleportation">Teleportation</gds-option> </gds-dropdown> `, }',description:`A common use case for the small version is in constrained areas, such as table cells. In those cases,
it is also often desirable to hide the label. This can be done with the \`hide-label\` attribute.

Omitting the label attribute itself is not recommended, as it would make the dropdown inaccessible to
screen readers.`},{kind:"variable",name:"PlaceholderOptions",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-dropdown label="Select tech"> <gds-option value="" isplaceholder>This is a placeholder</gds-option> <gds-option value="warp">Warp Drive</gds-option> <gds-option value="cybernetics">Cybernetics</gds-option> <gds-option value="nanotechnology">Nanotechnology</gds-option> <gds-option value="cloning">Cloning</gds-option> <gds-option value="cryonics">Cryonics</gds-option> <gds-option value="teleportation">Teleportation</gds-option> </gds-dropdown> `, }',description:"If you need to show a placeholder in the trigger before an option is selected, but you don't want\nit to show in the list of options, you can mark an option as a placeholder by setting its\n`isplaceholder` attribute."},{kind:"variable",name:"Searchable",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-dropdown label="Select tech" searchable> <gds-option value="" isplaceholder>This is a placeholder</gds-option> <gds-option value="warp">Warp Drive</gds-option> <gds-option value="cybernetics">Cybernetics</gds-option> <gds-option value="nanotechnology">Nanotechnology</gds-option> <gds-option value="cloning">Cloning</gds-option> <gds-option value="cryonics">Cryonics</gds-option> <gds-option value="teleportation">Teleportation</gds-option> <gds-option value="ai">Artificial Intelligence</gds-option> <gds-option value="robotics">Robotics</gds-option> <gds-option value="quantum-computing">Quantum Computing</gds-option> <gds-option value="biotechnology">Biotechnology</gds-option> <gds-option value="genetic-engineering">Genetic Engineering</gds-option> <gds-option value="holography">Holography</gds-option> <gds-option value="fusion-power">Fusion Power</gds-option> <gds-option value="antimatter">Antimatter</gds-option> <gds-option value="dark-matter">Dark Matter</gds-option> <gds-option value="neural-interfaces">Neural Interfaces</gds-option> <gds-option value="exoskeletons">Exoskeletons</gds-option> <gds-option value="space-elevators">Space Elevators</gds-option> <gds-option value="terraforming">Terraforming</gds-option> <gds-option value="nanobots">Nanobots</gds-option> <gds-option value="smart-materials">Smart Materials</gds-option> <gds-option value="augmented-reality">Augmented Reality</gds-option> <gds-option value="virtual-reality">Virtual Reality</gds-option> <gds-option value="brain-computer-interface" >Brain-Computer Interface</gds-option > <gds-option value="cybersecurity">Cybersecurity</gds-option> <gds-option value="biometrics">Biometrics</gds-option> </gds-dropdown> `, }',description:"In order to show a search field on the dropdown, set the `searchable` attribute."},{kind:"variable",name:"Multiple",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-dropdown label="Select tech" searchable multiple> <gds-option value="" isplaceholder>This is a placeholder</gds-option> <gds-option value="warp">Warp Drive</gds-option> <gds-option value="cybernetics">Cybernetics</gds-option> <gds-option value="nanotechnology">Nanotechnology</gds-option> <gds-option value="cloning">Cloning</gds-option> <gds-option value="cryonics">Cryonics</gds-option> <gds-option value="teleportation">Teleportation</gds-option> </gds-dropdown> `, }',description:"Use the `multiple` attribute to allow multiple selections. The selected values will be displayed"},{kind:"variable",name:"Combobox",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-dropdown label="Favorite sci-fi tech" combobox> <gds-option value="warp">Warp Drive</gds-option> <gds-option value="cybernetics">Cybernetics</gds-option> <gds-option value="nanotechnology">Nanotechnology</gds-option> <gds-option value="cloning">Cloning</gds-option> <gds-option value="cryonics">Cryonics</gds-option> <gds-option value="teleportation">Teleportation</gds-option> <gds-option value="ai">Artificial Intelligence</gds-option> <gds-option value="robotics">Robotics</gds-option> <gds-option value="quantum-computing">Quantum Computing</gds-option> <gds-option value="biotechnology">Biotechnology</gds-option> <gds-option value="genetic-engineering">Genetic Engineering</gds-option> <gds-option value="holography">Holography</gds-option> <gds-option value="fusion-power">Fusion Power</gds-option> <gds-option value="antimatter">Antimatter</gds-option> <gds-option value="dark-matter">Dark Matter</gds-option> <gds-option value="neural-interfaces">Neural Interfaces</gds-option> <gds-option value="exoskeletons">Exoskeletons</gds-option> <gds-option value="space-elevators">Space Elevators</gds-option> <gds-option value="terraforming">Terraforming</gds-option> <gds-option value="nanobots">Nanobots</gds-option> <gds-option value="smart-materials">Smart Materials</gds-option> <gds-option value="augmented-reality">Augmented Reality</gds-option> <gds-option value="virtual-reality">Virtual Reality</gds-option> <gds-option value="brain-computer-interface" >Brain-Computer Interface</gds-option > <gds-option value="cybersecurity">Cybersecurity</gds-option> <gds-option value="biometrics">Biometrics</gds-option> </gds-dropdown> `, }',description:"The dropdown supports the combobox pattern with the `combobox` attribute.\n\nUse combobox when the user needs to have the option of entering a custom value but is also helped by a list of predefined options.\n\nDon't use combobox if you only need a searchable dropdown but don't want to allow custom values. Use the `searchable` attribute instead in that case.\n\n***Note:***\n- The `combobox` attribute doesn't work with the `multiple` attribute. If both are used, the `combobox` attribute will be ignored.\n- Custom trigger content will not be rendered when the `combobox` attribute is used, since it will be replaced with an input element internally.\n- Never combine the `searchable` attribute with the `combobox` attribute, since the combobox input is already used for filtering.\n- For practical reasons, mobile styles are disabled when the `combobox` attribute is used."},{kind:"variable",name:"Invalid",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-dropdown label="Select tech" searchable aria-invalid="true" errorMessage="This field is required" > <gds-option value="" isplaceholder>This is a placeholder</gds-option> <gds-option value="warp">Warp Drive</gds-option> <gds-option value="cybernetics">Cybernetics</gds-option> <gds-option value="nanotechnology">Nanotechnology</gds-option> <gds-option value="cloning">Cloning</gds-option> <gds-option value="cryonics">Cryonics</gds-option> <gds-option value="teleportation">Teleportation</gds-option> </gds-dropdown> `, }'},{kind:"variable",name:"Disabled",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-dropdown label="Select tech" searchable disabled> <gds-option value="" isplaceholder>This is a placeholder</gds-option> <gds-option value="warp">Warp Drive</gds-option> <gds-option value="cybernetics">Cybernetics</gds-option> <gds-option value="nanotechnology">Nanotechnology</gds-option> <gds-option value="cloning">Cloning</gds-option> <gds-option value="cryonics">Cryonics</gds-option> <gds-option value="teleportation">Teleportation</gds-option> </gds-dropdown> `, }'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"OptionHeadings",declaration:{name:"OptionHeadings",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"CustomTrigger",declaration:{name:"CustomTrigger",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"SyncedPopoverWidth",declaration:{name:"SyncedPopoverWidth",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"Size",declaration:{name:"Size",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"HiddenLabel",declaration:{name:"HiddenLabel",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"PlaceholderOptions",declaration:{name:"PlaceholderOptions",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"Searchable",declaration:{name:"Searchable",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"Multiple",declaration:{name:"Multiple",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"Combobox",declaration:{name:"Combobox",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"Invalid",declaration:{name:"Invalid",module:"src/components/dropdown/dropdown.stories.ts"}},{kind:"js",name:"Disabled",declaration:{name:"Disabled",module:"src/components/dropdown/dropdown.stories.ts"}}]},{kind:"javascript-module",path:"src/components/dropdown/dropdown.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer base, reset; @layer base { :host { isolation: auto; contain: none; } #field::part(_base) { cursor: pointer; } button#trigger { flex: 0 1 100%; cursor: pointer; /* This prevents overflow when the text is too long */ display: grid; } #trigger:focus { outline: none; } slot[name='trigger'] > span { display: block; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; } input[type='text'] { border-radius: var(--gds-space-xs); border-bottom-left-radius: 0; border-bottom-right-radius: 0; font-size: inherit; line-height: inherit; border: none; outline: none; color: var(--gds-color-l3-content-disabled); border-color: var(--gds-color-l3-border-tertiary); border-width: 0 0 var(--gds-space-4xs) 0; border-style: solid; width: 100%; padding: var(--gds-space-m); font-weight: var(--gds-text-weight-regular); flex: 1; box-sizing: border-box; font-family: inherit; &:focus { border-color: var(--gds-color-l3-border-secondary); color: var(--gds-color-l3-content-tertiary); } &::placeholder { font-family: inherit; font-weight: var(--gds-text-weight-book); color: var(--gds-color-l3-content-disabled); } } [aria-expanded='true'] [slot='trail'] { transform: scaleY(-1); } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/dropdown/dropdown.styles.ts"}}]},{kind:"javascript-module",path:"src/components/dropdown/dropdown.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/dropdown/dropdown.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/dropdown/dropdown.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/dropdown/dropdown.ts",declarations:[],exports:[{kind:"js",name:"GdsDropdown",declaration:{name:"GdsDropdown",module:"src/components/dropdown/dropdown.ts"}}]},{kind:"javascript-module",path:"src/components/dropdown/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./dropdown"}},{kind:"js",name:"*",declaration:{name:"*",package:"../../primitives/listbox/option"}},{kind:"js",name:"*",declaration:{name:"*",package:"../../primitives/menu/menu-heading"}}]},{kind:"javascript-module",path:"src/components/fab/fab.component.ts",declarations:[{kind:"class",description:"",name:"GdsFab",slots:[{description:"Content of the FAB",name:"",inheritedFrom:{name:"GdsButton",module:"src/components/button/button.component.ts"}},{description:"An optional slot that allows a `gds-icon-[ICON_NAME]` element to be placed before the label.",name:"lead",inheritedFrom:{name:"GdsButton",module:"src/components/button/button.component.ts"}},{description:"An optional slot that allows a `gds-icon-[ICON_NAME]` element to be placed after the label.",name:"trail",inheritedFrom:{name:"GdsButton",module:"src/components/button/button.component.ts"}}],mixins:[{name:"withPositioningProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsButton",module:"/src/components/button"},tagName:"gds-fab",customElement:!0,members:[{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the button is disabled.",attribute:"disabled",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"type",type:{text:"HTMLButtonElement['type'] | undefined"},description:"The type of the button.",attribute:"type",reflects:!0,inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"rank",type:{text:"'primary' | 'secondary' | 'tertiary'"},default:"'primary'",description:'The rank of the button. Defaults to "primary".',attribute:"rank",reflects:!0,inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"variant",type:{text:"'neutral' | 'positive' | 'negative'"},default:"'neutral'",description:'Defines which variant the button belongs to. Defaults to "neutral".',attribute:"variant",reflects:!0,inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"size",type:{text:"'xs' | 'small' | 'medium' | 'large'"},default:"'medium'",description:'Sets the size of the button. Defaults to "small".',attribute:"size",reflects:!0,inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label of the button. Use this to add an accessible label to the button when no text is provided in the default slot.",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"href",type:{text:"string"},default:"''",description:"When set, the underlying button will be rendered as an anchor element.",attribute:"href",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"target",type:{text:"'_self' | '_blank' | '_parent' | '_top' | undefined"},description:"Where to display the linked URL. Only used when href is present.",attribute:"target",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"rel",type:{text:"string | undefined"},description:'The relationship of the linked URL as space-separated link types. Only used when href is present. Defaults to "noreferrer noopener" for security reasons when target is set.',attribute:"rel",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"download",type:{text:"string | undefined"},description:"Causes the browser to treat the linked URL as a download. Can be used with or without a filename value. Only used when href is present.",attribute:"download",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{kind:"field",name:"formAssociated",type:{text:"boolean"},static:!0,default:"true",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validator",type:{text:"GdsValidator | undefined"},description:"A validator that can be used to validate the form control and set an error message.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",attribute:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"errorMessage",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,attribute:"error-message",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",attribute:"aria-invalid",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"value",description:"Get or set the value of the form control.",attribute:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"name",type:{text:"string"},default:"''",attribute:"name",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"form",description:"The form element that the form control is associated with.",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validity",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validationMessage",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"willValidate",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"checkValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"reportValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formResetCallback",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formAssociatedCallback",parameters:[{name:"form",optional:!0,type:{text:"HTMLFormElement"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the button is disabled.",fieldName:"disabled",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"type",type:{text:"HTMLButtonElement['type'] | undefined"},description:"The type of the button.",fieldName:"type",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"rank",type:{text:"'primary' | 'secondary' | 'tertiary'"},default:"'primary'",description:'The rank of the button. Defaults to "primary".',fieldName:"rank",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"variant",type:{text:"'neutral' | 'positive' | 'negative'"},default:"'neutral'",description:'Defines which variant the button belongs to. Defaults to "neutral".',fieldName:"variant",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"size",type:{text:"'xs' | 'small' | 'medium' | 'large'"},default:"'medium'",description:'Sets the size of the button. Defaults to "small".',fieldName:"size",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:"The label of the button. Use this to add an accessible label to the button when no text is provided in the default slot.",fieldName:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"href",type:{text:"string"},default:"''",description:"When set, the underlying button will be rendered as an anchor element.",fieldName:"href",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"target",type:{text:"'_self' | '_blank' | '_parent' | '_top' | undefined"},description:"Where to display the linked URL. Only used when href is present.",fieldName:"target",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"rel",type:{text:"string | undefined"},description:'The relationship of the linked URL as space-separated link types. Only used when href is present. Defaults to "noreferrer noopener" for security reasons when target is set.',fieldName:"rel",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"download",type:{text:"string | undefined"},description:"Causes the browser to treat the linked URL as a download. Can be used with or without a filename value. Only used when href is present.",fieldName:"download",inheritedFrom:{name:"Button",module:"src/components/button/button.component.ts"}},{name:"aria-invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",fieldName:"invalid",attribute:"aria-invalid",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",fieldName:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"error-message",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,fieldName:"errorMessage",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"value",description:"Get or set the value of the form control.",fieldName:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"name",type:{text:"string"},default:"''",fieldName:"name",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Fired when the button is clicked.",name:"click",reactName:"onClick",eventName:"ClickEvent",inheritedFrom:{name:"GdsButton",module:"src/components/button/button.component.ts"}},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsFab",declaration:{name:"GdsFab",module:"src/components/fab/fab.component.ts"}}]},{kind:"javascript-module",path:"src/components/fab/fab.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/FAB', component: 'gds-fab', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-fab'), }, }",description:`The Floating Action Button is used for functions central to the user experience, such as
support and help features that needs to be accessible at all times.

The button is always floating visible in the users viewport, typically in the lower right
corner. This button can be used with an icon only.`},{kind:"variable",name:"Usage",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"RanksAndVariants",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Signal \', parameters: { ...DefaultParams.parameters, controls: { include: [] }, }, render: (args) => html` <gds-flex height="600px"> <gds-fab inset="auto 100px 300px auto"> Primary <gds-signal slot="trail"></gds-signal> </gds-fab> <gds-fab inset="auto 100px 200px auto" rank="secondary"> Secondary <gds-signal slot="trail"></gds-signal> </gds-fab> <gds-fab inset="auto 100px 100px auto" rank="tertiary"> Tertiary <gds-signal slot="trail"></gds-signal> </gds-fab> <gds-fab inset="auto 300px 300px auto" variant="positive"> Primary <gds-signal slot="trail"></gds-signal> </gds-fab> <gds-fab inset="auto 300px 200px auto" variant="positive" rank="secondary" > Secondary <gds-signal slot="trail"></gds-signal> </gds-fab> <gds-fab inset="auto 300px 100px auto" variant="positive" rank="tertiary"> Tertiary <gds-signal slot="trail"></gds-signal> </gds-fab> <gds-fab inset="auto 500px 300px auto" variant="negative"> Primary <gds-signal slot="trail"></gds-signal> </gds-fab> <gds-fab inset="auto 500px 200px auto" variant="negative" rank="secondary" > Secondary <gds-signal slot="trail"></gds-signal> </gds-fab> <gds-fab inset="auto 500px 100px auto" variant="negative" rank="tertiary"> Tertiary <gds-signal slot="trail"></gds-signal> </gds-fab> </gds-flex> `, }',description:`The FAB can be used with a signal to indicate that there is something new or updated.

Signal style matches the button rank and variant.`},{kind:"variable",name:"IconButton",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Icon Button\', parameters: { ...DefaultParams.parameters, controls: { include: [] }, }, render: (args) => html` <gds-flex height="600px"> <gds-fab inset="auto 100px 300px auto"> <gds-icon-bubbles></gds-icon-bubbles> </gds-fab> <gds-fab inset="auto 100px 200px auto" rank="secondary"> <gds-icon-bubbles></gds-icon-bubbles> </gds-fab> <gds-fab inset="auto 100px 100px auto" rank="tertiary"> <gds-icon-bubbles></gds-icon-bubbles> </gds-fab> <gds-fab inset="auto 300px 300px auto" size="medium" variant="positive"> <gds-icon-bubbles></gds-icon-bubbles> </gds-fab> <gds-fab inset="auto 300px 200px auto" size="medium" variant="positive" rank="secondary" > <gds-icon-bubbles></gds-icon-bubbles> </gds-fab> <gds-fab inset="auto 300px 100px auto" size="medium" variant="positive" rank="tertiary" > <gds-icon-bubbles></gds-icon-bubbles> </gds-fab> <gds-fab inset="auto 500px 300px auto" size="small" variant="negative"> <gds-icon-bubbles></gds-icon-bubbles> </gds-fab> <gds-fab inset="auto 500px 200px auto" size="small" variant="negative" rank="secondary" > <gds-icon-bubbles></gds-icon-bubbles> </gds-fab> <gds-fab inset="auto 500px 100px auto" size="small" variant="negative" rank="tertiary" > <gds-icon-bubbles></gds-icon-bubbles> </gds-fab> </gds-flex> `, }',description:"The FAB can be used with all the `gds-button` properties."},{kind:"variable",name:"Color",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Color\', parameters: { ...DefaultParams.parameters, controls: { include: [] }, }, render: (args) => html` <gds-flex height="300px"> <gds-fab inset="auto 48px 48px auto" rank="primary"> Secondary <gds-signal slot="trail" level="3" color="positive"></gds-signal> </gds-fab> </gds-flex> `, }',description:"Default color of the signal within the FAB is the same as the button color.\n\nIf you want to change the color of the signal, you can use the `color` property."},{kind:"variable",name:"Position",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Position', parameters: { ...DefaultParams.parameters, controls: { include: [] }, }, render: (args) => html\` <gds-flex height="300px"> <gds-fab inset="auto 48px 48px auto" position="absolute"> I'm a FAB </gds-fab> </gds-flex> \`, }`,description:`You can position the FAB using the \`inset\` property.
It takes all the default CSS inset values.

e.g

\`\`\`html
<gds-fab inset="auto 48px 48px auto">
   I'm a FAB
</gds-fab>
\`\`\`

And also the \`position\` property can be set to use any valid CSS position values.

e.g

\`\`\`html
<gds-fab position="absolute">
   Absolute Position
</gds-fab>
\`\`\``},{kind:"variable",name:"ZIndex",type:{text:"Story"},default:'{ ...DefaultParams, name: \'z-index\', parameters: { ...DefaultParams.parameters, controls: { include: [] }, }, render: (args) => html` <gds-flex height="400px" flex-direction="column" gap="4xl" padding="0" overflow="hidden scroll" border-radius="s" > <gds-fab inset="auto 40px 40px auto"> Show above other things </gds-fab> <gds-div border-radius="s" width="100%" height="max-content" background="notice" padding="4xl" > <gds-flex gap="xl"> <gds-flex flex-direction="column" gap="xl" flex="1" align-items="flex-start" padding="m 0 0 0" > <gds-text tag="h1"> Title example </gds-text> <gds-text> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> <gds-link href="#" variant="secondary"> <gds-icon-credit-card></gds-icon-credit-card> Click me! </gds-link> </gds-flex> <gds-card variant="secondary" flex="1" height="300px"> </gds-card> </gds-flex> </gds-div> <gds-div border-radius="s" width="100%" height="max-content" background="notice" padding="4xl" > <gds-flex gap="xl"> <gds-flex flex-direction="column" gap="xl" flex="1" align-items="flex-start" padding="m 0 0 0" > <gds-text tag="h1"> Title example </gds-text> <gds-text> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> <gds-link href="#" variant="secondary"> <gds-icon-credit-card></gds-icon-credit-card> Click me! </gds-link> </gds-flex> <gds-card variant="secondary" flex="1" height="300px"> </gds-card> </gds-flex> </gds-div> </gds-flex> `, }',description:`The z order of the FAB is set by default to \`1050\`.

This is recommended to keep the FAB above other elements.

If you want to change the z-index, that should be done in the CSS or wrap FAB in a container with a higher z-index value.`}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/fab/fab.stories.ts"}},{kind:"js",name:"Usage",declaration:{name:"Usage",module:"src/components/fab/fab.stories.ts"}},{kind:"js",name:"RanksAndVariants",declaration:{name:"RanksAndVariants",module:"src/components/fab/fab.stories.ts"}},{kind:"js",name:"IconButton",declaration:{name:"IconButton",module:"src/components/fab/fab.stories.ts"}},{kind:"js",name:"Color",declaration:{name:"Color",module:"src/components/fab/fab.stories.ts"}},{kind:"js",name:"Position",declaration:{name:"Position",module:"src/components/fab/fab.stories.ts"}},{kind:"js",name:"ZIndex",declaration:{name:"ZIndex",module:"src/components/fab/fab.stories.ts"}}]},{kind:"javascript-module",path:"src/components/fab/fab.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { display: flex; z-index: 1050; position: fixed; inset: auto var(--gds-space-3xl) var(--gds-space-3xl) auto; } .button { box-shadow: var(--gds-shadow-m); block-size: calc(var(--_block-size) + var(--gds-space-xs)); width: max-content; } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/fab/fab.styles.ts"}}]},{kind:"javascript-module",path:"src/components/fab/fab.ts",declarations:[],exports:[{kind:"js",name:"GdsFab",declaration:{name:"GdsFab",module:"src/components/fab/fab.ts"}}]},{kind:"javascript-module",path:"src/components/fab/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./fab"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chips.component.ts",declarations:[{kind:"class",description:"",name:"GdsFilterChips",slots:[{description:"The filter chips to display",name:""}],members:[{kind:"field",name:"value",description:`The value of the currently selected chip or chips. This will be an array
if multi-select is enabled.`,attribute:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"multiple",type:{text:"boolean"},default:"false",description:"Whether multiple chips can be selected at once.",attribute:"multiple"},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The accessible label for the control",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"chips",description:"Returns the chips in the control",readonly:!0},{kind:"field",name:"rowCollapse",type:{text:"boolean"},default:"false",description:"Whether the chips should collapse into a single row when space is limited",attribute:"row-collapse"},{kind:"field",name:"formAssociated",type:{text:"boolean"},static:!0,default:"true",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validator",type:{text:"GdsValidator | undefined"},description:"A validator that can be used to validate the form control and set an error message.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",attribute:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"errorMessage",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,attribute:"error-message",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",attribute:"aria-invalid",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"name",type:{text:"string"},default:"''",attribute:"name",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",attribute:"disabled",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"form",description:"The form element that the form control is associated with.",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validity",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validationMessage",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"willValidate",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"checkValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"reportValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formResetCallback",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formAssociatedCallback",parameters:[{name:"form",optional:!0,type:{text:"HTMLFormElement"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"When a chip is clicked",name:"change",reactName:"onChange",eventName:"ChangeEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"multiple",type:{text:"boolean"},default:"false",description:"Whether multiple chips can be selected at once.",fieldName:"multiple",attribute:"multiple"},{name:"label",type:{text:"string"},default:"''",description:"The accessible label for the control",fieldName:"label",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"row-collapse",type:{text:"boolean"},default:"false",description:"Whether the chips should collapse into a single row when space is limited",fieldName:"rowCollapse",attribute:"row-collapse"},{name:"value",description:`The value of the currently selected chip or chips. This will be an array
if multi-select is enabled.`,fieldName:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"aria-invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",fieldName:"invalid",attribute:"aria-invalid",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",fieldName:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"error-message",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,fieldName:"errorMessage",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"name",type:{text:"string"},default:"''",fieldName:"name",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",fieldName:"disabled",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsFormControlElement",module:"/src/components/form/form-control"},tagName:"gds-filter-chips",customElement:!0}],exports:[{kind:"js",name:"GdsFilterChip",declaration:{name:"GdsFilterChip",module:"src/components/filter-chips/filter-chips.component.ts"}},{kind:"js",name:"GdsFilterChips",declaration:{name:"GdsFilterChips",module:"src/components/filter-chips/filter-chips.component.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chips.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Filter Chips', component: 'gds-filter-chips', subcomponents: { FilterChip: 'gds-filter-chip' }, parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-filter-chips'), }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/filter-chips)
&nbsp;|&nbsp;
[Usage guidelines](https://designlibrary.sebgroup.com/components/component-filter-chip)

The filter chips component allows users to quickly refine the result of data they want to be presented on the page.`},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"Usage",type:{text:"Story"},default:`{ ...DefaultParams, render: (args) => html\` <gds-filter-chips value="top-news" label="Pick news channel" onchange="document.getElementById('sel').innerText = event.target.value" > <gds-filter-chip value="all">All</gds-filter-chip> <gds-filter-chip value="top-news">Top news</gds-filter-chip> <gds-filter-chip value="division">Division</gds-filter-chip> <gds-filter-chip value="global">Global</gds-filter-chip> <gds-filter-chip value="country">Country</gds-filter-chip> <gds-filter-chip value="lcfi"> Large Corporate & Financial Institutions </gds-filter-chip> </gds-filter-chips> <div style={{ marginTop: '1rem' }}> Selected: <span id="sel">top-news</span> </div> \`, }`,description:`This component works like many other types of input controls. A \`value\` property holds the currently
selcted value/values and a \`change\` event is emitted when the value changes.

## Single select

By default, the filter chips component is single select. Each filter-chip needs to have a unique value
attribute. This determines the value of the parent components, and which chip is selected.
Chips without value cannot be selected.

**Note:** It is important to remember to set the label attribute. Omitting it will cause poor
accessibility for screen reader useSharedState. Internally in the component, the label attribute
will be used to set \`aria-label\` for the appropriate element.`},{kind:"variable",name:"MultiSelect",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-filter-chips value="top-news,global" label="Pick news channels" multiple > <gds-filter-chip value="all">All</gds-filter-chip> <gds-filter-chip value="top-news">Top news</gds-filter-chip> <gds-filter-chip value="division">Division</gds-filter-chip> <gds-filter-chip value="global">Global</gds-filter-chip> <gds-filter-chip value="country">Country</gds-filter-chip> <gds-filter-chip value="lcfi"> Large Corporate & Financial Institutions </gds-filter-chip> </gds-filter-chips> `, }',description:"Setting the `multiple` attribute will allow users to select multiple filter chips. The value of the\ncomponent will be an array of the selected chip values."},{kind:"variable",name:"RowCollapse",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-filter-chips value="top-news" label="Pick news channel" row-collapse> <gds-filter-chip value="all">All</gds-filter-chip> <gds-filter-chip value="top-news">Top news</gds-filter-chip> <gds-filter-chip value="division">Division</gds-filter-chip> <gds-filter-chip value="global">Global</gds-filter-chip> <gds-filter-chip value="country">Country</gds-filter-chip> <gds-filter-chip value="lcfi"> Large Corporate & Financial Institutions </gds-filter-chip> </gds-filter-chips> `, }',description:"In some cases, layout constraints may require the filter chips to collapse into a single row.\n\nSetting the `row-collapse` attribute will enable this behavior when the chips require more than two rows. Instead, scrolling overflow will be used to accommodate the chips."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/filter-chips/filter-chips.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/filter-chips/filter-chips.stories.ts"}},{kind:"js",name:"Usage",declaration:{name:"Usage",module:"src/components/filter-chips/filter-chips.stories.ts"}},{kind:"js",name:"MultiSelect",declaration:{name:"MultiSelect",module:"src/components/filter-chips/filter-chips.stories.ts"}},{kind:"js",name:"RowCollapse",declaration:{name:"RowCollapse",module:"src/components/filter-chips/filter-chips.stories.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chips.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, reset, transitional-styles; @layer base { :host { display: inline-block; max-width: 100%; } .chips { display: flex; flex-wrap: wrap; gap: 0.5rem; } .collapse { overflow: auto; scroll-snap-type: both mandatory; overscroll-behavior-x: contain; flex-wrap: nowrap; padding-bottom: 0.5rem; scrollbar-color: rgba(0, 0, 0, 0.5) transparent; scrollbar-width: thin; } ::slotted(*) { scroll-snap-align: start; scroll-snap-stop: always; } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/filter-chips/filter-chips.styles.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chips.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/filter-chips/filter-chips.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/filter-chips/filter-chips.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chips.ts",declarations:[],exports:[{kind:"js",name:"GdsFilterChips",declaration:{name:"GdsFilterChips",module:"src/components/filter-chips/filter-chips.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./filter-chips"}},{kind:"js",name:"*",declaration:{name:"*",package:"./filter-chip"}}]},{kind:"javascript-module",path:"src/components/flex/flex.component.ts",declarations:[{kind:"class",description:"",name:"GdsFlex",members:[{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsDiv",module:"/src/components/div/div.component"},tagName:"gds-flex",customElement:!0,attributes:[{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsFlex",declaration:{name:"GdsFlex",module:"src/components/flex/flex.component.ts"}}]},{kind:"javascript-module",path:"src/components/flex/flex.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Flex', component: 'gds-flex', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-flex'), }, }",description:"The `gds-flex` component is a container element that can be used to wrap other components and control the layout of its children."},{kind:"variable",name:"Flex",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Flex\', render: (args) => html` <gds-flex align-items="space-between" justify-content="space-between"> <gds-text>Flex</gds-text> <gds-text>Example</gds-text> </gds-flex> `, }'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/flex/flex.stories.ts"}},{kind:"js",name:"Flex",declaration:{name:"Flex",module:"src/components/flex/flex.stories.ts"}}]},{kind:"javascript-module",path:"src/components/flex/flex.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { display: flex; box-sizing: border-box; border-style: solid; border-width: 0; border-color: var(--gds-color-l2-border-primary); } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/flex/flex.styles.ts"}}]},{kind:"javascript-module",path:"src/components/flex/flex.ts",declarations:[],exports:[{kind:"js",name:"GdsFlex",declaration:{name:"GdsFlex",module:"src/components/flex/flex.ts"}}]},{kind:"javascript-module",path:"src/components/flex/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./flex"}}]},{kind:"javascript-module",path:"src/components/form/form-control.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/components/form/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./summary"}}]},{kind:"javascript-module",path:"src/components/formatted-text/formatted-text.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/components/formatted-text/formatters.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./account/account-formatter"}},{kind:"js",name:"*",declaration:{name:"*",package:"./date/date-time-formatter"}},{kind:"js",name:"*",declaration:{name:"*",package:"./number/number-formatter"}}]},{kind:"javascript-module",path:"src/components/formatted-text/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./formatters"}},{kind:"js",name:"*",declaration:{name:"*",package:"./account"}},{kind:"js",name:"*",declaration:{name:"*",package:"./date"}},{kind:"js",name:"*",declaration:{name:"*",package:"./number"}}]},{kind:"javascript-module",path:"src/components/grid/grid.component.ts",declarations:[{kind:"class",description:"The `gds-grid` is a custom element that provides a flexible grid system. It uses CSS grid layout to arrange its child elements into columns. This component is highly customizable and responsive, allowing you to specify the number of `columns`, `gap`, `padding`, and fluidity for different devices with automated column size based on the content using the `auto-columns` attribute.",name:"GdsGrid",members:[{kind:"field",name:"columns",type:{text:"string | undefined"},description:'The number of columns for the grid. This can be a single value that applies to all breakpoints, or a string of three space-separated tokens in the format "l:desktop m:tablet s:mobile", each token specifying the number of columns for that device type respectively.'},{kind:"field",name:"gap",type:{text:"string | undefined"},description:`Defines the gap size between grid items. Accepts a single value for all breakpoints or a "l:desktop m:tablet s:mobile" format. Sizes can be 'none', 'xs', 's', 'm', 'l', 'xl', '2xl', '3xl'.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'auto-columns'",type:{text:"string | undefined"},description:"Defines the minimum column width. If set, the grid adjusts column size based on content and available width, even without other attributes."},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsDiv",module:"/src/components/div/div.component"},tagName:"gds-grid",customElement:!0,attributes:[{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsGrid",declaration:{name:"GdsGrid",module:"src/components/grid/grid.component.ts"}}]},{kind:"javascript-module",path:"src/components/grid/grid.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Grid', component: 'gds-grid', tags: ['autodocs'], }",description:"[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/grid)\n\nThe `gds-grid` is a custom element that provides a flexible grid system. It uses CSS grid layout to arrange its child elements into columns. This component is highly customizable and responsive, allowing you to specify the number of `columns`, `gap`, `padding`, and fluidity for different devices with automated column size based on the content using the `auto-columns` attribute."},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"Usage",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <!-- prettier-ignore --> <gds-grid columns="s{2} m{4} l{6}" gap="s{s} m{s} l{s}" > <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 01</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 02</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 03</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 04</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 05</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 06</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 07</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 08</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 09</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 10</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 11</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 12</gds-flex> </gds-card> </gds-grid> `, }',description:'To use the `gds-grid`, you add it to your HTML and specify the number of `columns` for `desktop`, `tablet`, and `mobile` devices using the `columns` attribute. The `columns`, `gap`, `row-gap` and `padding` attributes can take either a single value or a string of three tokens separated by spaces, each prefixed with `l` for `desktop`, `m` for `tablet`, and `s` for mobile.\n\nIf a single value is provided, it will be used for all screen sizes. If three tokens are provided, each screen size will use the value specified for it.\n\n```html\n<!-- Using a single value for all screen sizes -->\n<gds-grid columns="2" gap="xl" row-gap="2xl" padding="2xl">\n  <!-- Child elements here -->\n</gds-grid>\n\n<!-- Using different values for each screen size -->\n<gds-grid\n  columns="l{8} m{4} s{2}"\n  gap="l{xl} m{l} s{xs}"\n  row-gap="l{xl} m{l} s{xs}"\n  padding="l{2xl} m{l} s{xs}"\n>\n  <!-- Child elements here -->\n</gds-grid>\n```\n\n#### Example\n\nThis example shows a grid with 8 columns on desktop, 4 on tablet, and 2 on mobile. It also has a gap of `l` on desktop, `m` on tablet, and `s` on mobile. The padding is `2xl` on desktop, `l` on tablet, and `xs` on mobile.'},{kind:"variable",name:"AllBreakpoints",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Breakpoints + Auto Columns\', render: (args) => html` <!-- prettier-ignore --> <gds-grid columns="4" gap="m" auto-columns="100"> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 01</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 02</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 03</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 04</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 05</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 06</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 07</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 08</gds-flex> </gds-card> </gds-grid> `, }',description:"This example shows a grid with `4` columns on all breakpoints desktop, tablet, and on mobile. It also has a gap of `2xl` on all breakpoints. The padding is `l` on all breakpoints. As well as `auto-columns` attribute is set to `100` which will make the columns to be `~100px` wide."},{kind:"variable",name:"AutoColumns",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Auto Columns\', render: (args) => html` <!-- prettier-ignore --> <gds-grid gap="s" auto-columns="s{200} m{220} l{240}"> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 01</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 02</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 03</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 04</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 05</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 06</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 07</gds-flex> </gds-card> <gds-card border="4xs" border-radius="s"> <gds-flex height="100px" align-items="center" justify-content="center">COL: 08</gds-flex> </gds-card> </gds-grid> `, }',description:`#### Explanation of the Formula

1. **Variables**:
   - **W**: Total available width of the grid container (e.g., \`width: 100%;\`).
   - **C**: Number of columns (in this example, it will depend on how many items fit in the available width).
   - **G**: Width of a single gap (in this case, \`gap: 10px;\`).

2. **Formula**:


<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 499 122"><path fill="currentColor" d="M107.008 65h-1.14l-.264-7.104-1.488 3.36h-.54l-1.5-3.36-.264 7.104h-1.128l.408-8.4h1.404l1.344 3.024 1.344-3.024h1.416l.408 8.4Zm7.328 0h-1.068l-.24-1.308c-.448.952-1.212 1.428-2.292 1.428-.632 0-1.124-.156-1.476-.468-.352-.32-.528-.764-.528-1.332 0-.744.324-1.304.972-1.68.648-.384 1.708-.58 3.18-.588v-.564c0-.808-.452-1.212-1.356-1.212-.72 0-1.456.188-2.208.564v-1.032c.816-.352 1.596-.528 2.34-.528.728 0 1.292.188 1.692.564.408.368.612.88.612 1.536v2.592l.372 2.028Zm-3.348-.876c.56 0 1.016-.172 1.368-.516.352-.344.528-.78.528-1.308v-.528c-1.088.008-1.868.116-2.34.324-.464.2-.696.544-.696 1.032 0 .664.38.996 1.14.996Zm11.144.876h-1.308l-1.632-2.604L117.56 65h-1.308l2.268-3.312-2.172-3.288h1.308l1.536 2.556 1.536-2.556h1.308l-2.172 3.3 2.268 3.3Zm6.703-4.944c0-.88-.156-1.524-.468-1.932-.312-.408-.788-.612-1.428-.612-.712 0-1.224.26-1.536.78-.312.512-.468 1.352-.468 2.52s.156 2.004.468 2.508c.312.504.828.756 1.548.756.84 0 1.688-.272 2.544-.816v1.164c-.888.464-1.78.696-2.676.696-.968 0-1.72-.356-2.256-1.068-.528-.712-.792-1.716-.792-3.012 0-1.456.284-2.58.852-3.372.576-.792 1.388-1.188 2.436-1.188.912 0 1.628.316 2.148.948.528.624.792 1.5.792 2.628h-1.164Zm5.588 5.064c-.888 0-1.572-.28-2.052-.84-.48-.568-.72-1.368-.72-2.4 0-1.144.264-2.028.792-2.652.528-.632 1.268-.948 2.22-.948.888 0 1.572.28 2.052.84.488.56.732 1.356.732 2.388 0 1.152-.264 2.044-.792 2.676-.528.624-1.272.936-2.232.936Zm-1.26-1.536c.272.36.732.54 1.38.54.648 0 1.104-.184 1.368-.552.272-.376.408-1.008.408-1.896 0-.88-.136-1.5-.408-1.86-.264-.36-.72-.54-1.368-.54-.64 0-1.096.184-1.368.552-.272.368-.408.996-.408 1.884 0 .88.132 1.504.396 1.872Zm10.724.54c.528 0 1.036-.152 1.524-.456v1.008c-.552.296-1.124.444-1.716.444-.752 0-1.328-.228-1.728-.684-.4-.464-.6-1.152-.6-2.064V57.08h-2.34v-.96h3.42v6.156c0 1.232.48 1.848 1.44 1.848Zm7.592-5.724h1.08V65h-.816l-.204-1.548c-.688 1.112-1.54 1.668-2.556 1.668-.568 0-1.012-.168-1.332-.504-.312-.336-.468-.832-.468-1.488V58.4h1.08v4.584c0 .808.356 1.212 1.068 1.212.352 0 .684-.112.996-.336.32-.224.704-.616 1.152-1.176V58.4Zm7.975-.12c.88 0 1.32.676 1.32 2.028V65h-1.02v-4.56c0-.424-.052-.736-.156-.936-.104-.2-.288-.3-.552-.3-.384 0-.704.264-.96.792.008.064.012.168.012.312V65h-1.02v-4.56c0-.784-.216-1.176-.648-1.176-.384 0-.72.312-1.008.936V65h-1.02v-6.6h.768l.204 1.14c.384-.84.892-1.26 1.524-1.26.552 0 .912.332 1.08.996.352-.664.844-.996 1.476-.996Zm6.704 0c.568 0 1.008.168 1.32.504.32.336.48.832.48 1.488V65h-1.068v-4.584c0-.808-.36-1.212-1.08-1.212-.352 0-.688.112-1.008.336-.312.224-.692.62-1.14 1.188V65h-1.068v-6.6h.804l.204 1.548c.688-1.112 1.54-1.668 2.556-1.668Zm8.924-1.68h1.152c0 2.76-.344 5.56-1.032 8.4h-1.464l-.816-3.24-.816 3.24h-1.452c-.696-2.872-1.044-5.672-1.044-8.4h1.152c0 2.384.228 4.836.684 7.356l1.224-4.86h.516l1.224 4.884c.448-2.608.672-5.068.672-7.38Zm6.632-.972v1.608h-1.452v-1.608h1.452Zm-.192 8.412h1.824V65h-5.28v-.96h2.376v-4.68h-2.016v-.96h3.096v5.64Zm8.372-7.92h1.068V65h-.804l-.18-1.128c-.44.832-1.124 1.248-2.052 1.248-.8 0-1.42-.292-1.86-.876-.432-.584-.648-1.412-.648-2.484 0-1.104.216-1.96.648-2.568.44-.608 1.06-.912 1.86-.912.864 0 1.52.348 1.968 1.044V56.12Zm-1.68 8.04c.608 0 1.04-.18 1.296-.54.256-.368.384-.988.384-1.86 0-.904-.128-1.548-.384-1.932-.256-.392-.688-.588-1.296-.588-.608 0-1.04.184-1.296.552-.248.36-.372.976-.372 1.848 0 .904.128 1.552.384 1.944.256.384.684.576 1.284.576Zm10.303-4.8h-2.88v3.42c0 .456.108.796.324 1.02.216.216.58.324 1.092.324.512 0 1-.104 1.464-.312v1.032c-.528.184-1.052.276-1.572.276-.792 0-1.388-.196-1.788-.588-.4-.4-.6-.936-.6-1.608V59.36h-1.524v-.696l1.524-.264.252-1.476h.828V58.4h2.88v.96Zm6.008-1.08c.536 0 .948.168 1.236.504.296.336.444.832.444 1.488V65h-1.08v-4.584c0-.808-.316-1.212-.948-1.212-.336 0-.652.112-.948.336-.296.216-.656.604-1.08 1.164V65h-1.08v-8.88h1.08v3.708c.648-1.032 1.44-1.548 2.376-1.548Z"/><path fill="currentColor" d="M230.78 60.596v-.96h6.12v.96h-6.12Zm0 2.304v-.96h6.12v.96h-6.12Z"/><path fill="currentColor" d="M285.607 42.6h1.152c0 2.76-.344 5.56-1.032 8.4h-1.464l-.816-3.24-.816 3.24h-1.452c-.696-2.872-1.044-5.672-1.044-8.4h1.152c0 2.384.228 4.836.684 7.356l1.224-4.86h.516l1.224 4.884c.448-2.608.672-5.068.672-7.38Zm10.312 4.188h5.76v.96h-5.76v-.96Zm18.208.516c0 2.112.632 3.904 1.896 5.376h-1.14c-.672-.864-1.164-1.708-1.476-2.532-.304-.824-.456-1.708-.456-2.652 0-1.008.152-1.94.456-2.796.312-.856.804-1.716 1.476-2.58h1.14c-1.264 1.472-1.896 3.2-1.896 5.184Zm7.675 0c0 2.112.632 3.904 1.896 5.376h-1.14c-.672-.864-1.164-1.708-1.476-2.532-.304-.824-.456-1.708-.456-2.652 0-1.008.152-1.94.456-2.796.312-.856.804-1.716 1.476-2.58h1.14c-1.264 1.472-1.896 3.2-1.896 5.184Zm9.668-1.248c0-.88-.156-1.524-.468-1.932-.312-.408-.788-.612-1.428-.612-.712 0-1.224.26-1.536.78-.312.512-.468 1.352-.468 2.52s.156 2.004.468 2.508c.312.504.828.756 1.548.756.84 0 1.688-.272 2.544-.816v1.164c-.888.464-1.78.696-2.676.696-.968 0-1.72-.356-2.256-1.068-.528-.712-.792-1.716-.792-3.012 0-1.456.284-2.58.852-3.372.576-.792 1.388-1.188 2.436-1.188.912 0 1.628.316 2.148.948.528.624.792 1.5.792 2.628h-1.164Zm2.828.732h5.76v.96h-5.76v-.96Zm11.396 3.204h2.112V51h-5.58v-1.008h2.34V43.68l-2.34 1.68v-1.416l2.172-1.344h1.296v7.392Zm6.859-2.496c0-2.112-.632-3.904-1.896-5.376h1.14c.672.864 1.16 1.708 1.464 2.532.312.824.468 1.708.468 2.652 0 1.008-.156 1.94-.468 2.796-.304.856-.792 1.716-1.464 2.58h-1.14c1.264-1.472 1.896-3.2 1.896-5.184ZM363.145 51h-1.308l-1.632-2.604L358.573 51h-1.308l2.268-3.312-2.172-3.288h1.308l1.536 2.556 1.536-2.556h1.308l-2.172 3.3 2.268 3.3Zm4.796-4.248h3v3.24c-.384.328-.856.6-1.416.816-.552.208-1.132.312-1.74.312-.968 0-1.72-.356-2.256-1.068-.528-.712-.792-1.716-.792-3.012 0-1.456.316-2.58.948-3.372.632-.792 1.528-1.188 2.688-1.188.584 0 1.308.144 2.172.432v1.128c-.856-.352-1.62-.528-2.292-.528-.84 0-1.444.256-1.812.768-.36.504-.54 1.348-.54 2.532s.152 2.028.456 2.532c.312.504.824.748 1.536.732.688-.008 1.324-.172 1.908-.492V47.76h-1.86v-1.008Zm7.64.744c0-2.112-.632-3.904-1.896-5.376h1.14c.672.864 1.16 1.708 1.464 2.532.312.824.468 1.708.468 2.652 0 1.008-.156 1.94-.468 2.796-.304.856-.792 1.716-1.464 2.58h-1.14c1.264-1.472 1.896-3.2 1.896-5.184ZM261.378 60.788h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.675 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.675 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.675 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96Zm7.675 0h5.76v.96h-5.76v-.96Zm7.676 0h5.76v.96h-5.76v-.96ZM331.47 74.056c0-.88-.156-1.524-.468-1.932-.312-.408-.788-.612-1.428-.612-.712 0-1.224.26-1.536.78-.312.512-.468 1.352-.468 2.52s.156 2.004.468 2.508c.312.504.828.756 1.548.756.84 0 1.688-.272 2.544-.816v1.164c-.888.464-1.78.696-2.676.696-.968 0-1.72-.356-2.256-1.068-.528-.712-.792-1.716-.792-3.012 0-1.456.284-2.58.852-3.372.576-.792 1.388-1.188 2.436-1.188.912 0 1.628.316 2.148.948.528.624.792 1.5.792 2.628h-1.164Z"/></svg>


3. **How It Works**:
   - **Calculate Total Gap Width**: The total gap width is calculated as \`(C - 1) x G\`.
   - **Subtract from Total Width**: Subtract the total gap width from the total available width \`W\`.
   - **Divide by Number of Columns**: Divide the remaining width by the number of columns \`C\` to get the maximum column width.

### Example Calculation

Assuming:
-  Total available width \`W = 500px\`
-  Number of columns \`C = 3\`
-  Gap width \`G = 10px\`

**Calculation**:
1. Total gap width: \`(3 - 1) x 10 = 20px\`
2. Remaining width: \`500 - 20 = 480px\`
3. Max column width: \`480 / 3 = 160px\`

### Result

Each column would have a maximum width of **160px** while respecting the gaps between them. If the viewport is resized, the grid will automatically * adjust the number of columns and their widths based on the available space.

This example demonstrates how the \`auto-columns\` attribute and the formula work together in a CSS Grid Layout.

<hr />

This example has the fluid attribute and it will adapt the content automatically based on the available width and min inline size.
The \`auto-columns\` attribute is set to \`240\` which will make the columns to be \`240px\` no matter the screen/container size.`}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/grid/grid.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/grid/grid.stories.ts"}},{kind:"js",name:"Usage",declaration:{name:"Usage",module:"src/components/grid/grid.stories.ts"}},{kind:"js",name:"AllBreakpoints",declaration:{name:"AllBreakpoints",module:"src/components/grid/grid.stories.ts"}},{kind:"js",name:"AutoColumns",declaration:{name:"AutoColumns",module:"src/components/grid/grid.stories.ts"}}]},{kind:"javascript-module",path:"src/components/grid/grid.style.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { --_c: 12; --_grid-col: repeat(var(--_c), 1fr); width: 100%; display: grid; grid-template-columns: var(--_grid-col); grid-column-gap: var(--_gap-column, 0px); grid-row-gap: var(--_gap-row, 0px); } :host([auto-columns]) { --_col-count: var(--_c, 0); --_gap-count: calc(var(--_col-count) - 1); --_total-gap-width: calc(var(--_gap-count) * var(--_gap-column, 0px)); --_col-width-max: calc( (100% - var(--_total-gap-width)) / var(--_col-count) ); grid-template-columns: repeat( auto-fill, minmax(max(var(--_col-width), var(--_col-width-max)), 1fr) ); } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/grid/grid.style.ts"}}]},{kind:"javascript-module",path:"src/components/grid/grid.ts",declarations:[],exports:[{kind:"js",name:"GdsGrid",declaration:{name:"GdsGrid",module:"src/components/grid/grid.ts"}}]},{kind:"javascript-module",path:"src/components/grid/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./grid"}}]},{kind:"javascript-module",path:"src/components/grouped-list/grouped-list.component.ts",declarations:[{kind:"class",description:"",name:"GdsGroupedList",members:[{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label for the list that will render in the shadowDOM as the first <li> element in the list with the class `gds-list-heading`",attribute:"label"},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"label",type:{text:"string"},default:"''",description:"The label for the list that will render in the shadowDOM as the first <li> element in the list with the class `gds-list-heading`",fieldName:"label"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-grouped-list",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsListItem",declaration:{name:"GdsListItem",module:"src/components/grouped-list/grouped-list.component.ts"}},{kind:"js",name:"GdsGroupedList",declaration:{name:"GdsGroupedList",module:"src/components/grouped-list/grouped-list.component.ts"}}]},{kind:"javascript-module",path:"src/components/grouped-list/grouped-list.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Grouped List', component: 'gds-grouped-list', subcomponents: { ListItem: 'gds-list-item' }, parameters: { layout: 'centered', }, tags: ['autodocs'], }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/grouped-list)
&nbsp;|&nbsp;
[Usage guidelines](https://designlibrary.sebgroup.com/components/component-list)

ist are used to list many datapoints with labels in a structured way. They may be grouped under
heading and they may have a link or button added to act on the data being displayed.`},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"WithValues",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Grouped list with values', render: (args) => html` <gds-grouped-list label=\"Example with values\"> <gds-list-item> <div>Key 1</div> <strong>Value 1</strong> </gds-list-item> <gds-list-item> <div>Key 2</div> <strong>Value 2</strong> </gds-list-item> <gds-list-item> <div>Key 3</div> <strong>Value 3</strong> </gds-list-item> <gds-list-item> <div>Key 4</div> <strong>Value 4</strong> </gds-list-item> <gds-list-item> <div>Key 5</div> <strong>Value 5</strong> </gds-list-item> </gds-grouped-list> `, }",description:"By default, the list items are displayed as `flex` containers with `space-between` alignment."},{kind:"variable",name:"WithValuesAndAction",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Grouped list with values and action\', render: (args) => html` <gds-grouped-list label="Example with links"> <gds-list-item> <div>Key 1</div> <strong>Value 1</strong> <div> <a href="#">Link</a> </div> </gds-list-item> <gds-list-item> <div>Key 2</div> <strong>Value 2</strong> <div> <a href="#">Link</a> </div> </gds-list-item> <gds-list-item> <div>Key 3</div> <strong>Value 3</strong> <div> <a href="#">Link</a> </div> </gds-list-item> <gds-list-item> <div>Key 4</div> <strong>Value 4</strong> <div> <a href="#">Link</a> </div> </gds-list-item> <gds-list-item> <div>Key 5</div> <strong>Value 5</strong> <div> <a href="#">Link</a> </div> </gds-list-item> </gds-grouped-list> `, }',description:"Elements such as links or buttons can be slotted into the list items."},{kind:"variable",name:"AdjustingAppearance",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-grouped-list label="Example of left aligned list"> <gds-list-item style="justify-content: left"> <div>Key 1</div> <strong>Value 1</strong> <div> <a href="#">Link</a> </div> </gds-list-item> <gds-list-item style="justify-content: left"> <div>Key 2</div> <strong>Value 2</strong> <div> <a href="#">Link</a> </div> </gds-list-item> <gds-list-item style="justify-content: left"> <div>Key 3</div> <strong>Value 3</strong> <div> <a href="#">Link</a> </div> </gds-list-item> </gds-grouped-list> <gds-grouped-list label="Example of vertical list"> <gds-list-item style="flex-direction: column; border-width: 0"> <div>Key 1</div> <strong>Value 1</strong> </gds-list-item> <gds-list-item style="flex-direction: column; border-width: 0"> <div>Key 2</div> <strong>Value 2</strong> </gds-list-item> <gds-list-item style="flex-direction: column; border-width: 0"> <div>Key 3</div> <strong>Value 3</strong> </gds-list-item> </gds-grouped-list> `, }',description:"The slotted elements can be styled using inline styles or CSS classes."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/grouped-list/grouped-list.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/grouped-list/grouped-list.stories.ts"}},{kind:"js",name:"WithValues",declaration:{name:"WithValues",module:"src/components/grouped-list/grouped-list.stories.ts"}},{kind:"js",name:"WithValuesAndAction",declaration:{name:"WithValuesAndAction",module:"src/components/grouped-list/grouped-list.stories.ts"}},{kind:"js",name:"AdjustingAppearance",declaration:{name:"AdjustingAppearance",module:"src/components/grouped-list/grouped-list.stories.ts"}}]},{kind:"javascript-module",path:"src/components/grouped-list/grouped-list.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/grouped-list/grouped-list.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/grouped-list/grouped-list.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/grouped-list/grouped-list.ts",declarations:[],exports:[{kind:"js",name:"GdsGroupedList",declaration:{name:"GdsGroupedList",module:"src/components/grouped-list/grouped-list.ts"}}]},{kind:"javascript-module",path:"src/components/grouped-list/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./grouped-list"}},{kind:"js",name:"*",declaration:{name:"*",package:"./list-item"}}]},{kind:"javascript-module",path:"src/components/grouped-list/list-item.component.ts",declarations:[{kind:"class",description:"",name:"GdsListItem",members:[{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-list-item",customElement:!0,attributes:[{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsListItem",declaration:{name:"GdsListItem",module:"src/components/grouped-list/list-item.component.ts"}}]},{kind:"javascript-module",path:"src/components/grouped-list/list-item.ts",declarations:[],exports:[{kind:"js",name:"GdsListItem",declaration:{name:"GdsListItem",module:"src/components/grouped-list/list-item.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icon.component.ts",declarations:[{kind:"class",description:"",name:"GdsIcon",cssParts:[{description:"The icon SVG element.",name:"icon"}],members:[{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid"},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke"},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label"},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid"},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke"},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-icon",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsIcon",declaration:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icon.deprecated.ts",declarations:[{kind:"variable",name:"deprecatedIcons",type:{text:"Record<string, DeprecationInfo>"}}],exports:[{kind:"js",name:"deprecatedIcons",declaration:{name:"deprecatedIcons",module:"src/components/icon/icon.deprecated.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icon.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Icon', component: 'gds-icon-bank', tags: ['autodocs'], }",description:"The `gds-icon-*` component is a flexible set of icon components. These allows you to use a variety of pre-defined icons in your application.\n\n### Usage\n\nJust like other components, the icons can be imported indivually, so that you don't end up with unused icons in your bundle:\n\n```js\nimport '@sebgroup/green-core/components/icon/icons/bank.js'\n```"},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, args: { solid: false, size: 'xl', }, }"},{kind:"variable",name:"IconsRegular",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Regular icons\', render: (args) => { const iconElements = Object.keys(Icons) .map((iconName) => { const IconComponent = Icons[iconName] const tagName = IconComponent._name ? `gds-icon-${IconComponent._name}` : `gds-icon-${iconName}` // Skip deprecated icons if (deprecatedIcons[tagName]?.hide) { return null } return staticHTML`<${literal`${unsafeStatic(tagName)}`}></${literal`${unsafeStatic(tagName)}`}>` }) .filter(Boolean) return html` <gds-flex flex-direction="column" gap="xl" id="solids"> <input type="text" id="icon-search" placeholder="Search Icons" /> <gds-grid columns="s{2} m{4} l{4}" gap="s{xl} m{xl} l{xl}" class="icon-preview" > ${iconElements} </gds-grid> </gds-flex> ` }, }',description:"Click to copy icon HTML code"},{kind:"variable",name:"IconsSolid",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Solid icons\', render: (args) => html` <gds-grid columns="s{2} m{4} l{4}" gap="s{xl} m{xl} l{xl}" class="icon-preview" > <gds-icon-airplane-up solid></gds-icon-airplane-up> <gds-icon-robot solid></gds-icon-robot> <gds-icon-rocket solid></gds-icon-rocket> <gds-icon-school solid></gds-icon-school> </gds-grid> `, }',description:"Icons are available in solid versions. You can use the `solid` attribute to display the solid version of the icon.\n\nHere is an example of some solid icons:"},{kind:"variable",name:"Brands",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Brands\', render: (args) => { const BRANDS = Object.keys(Icons) .map((iconName) => { const IconComponent = Icons[iconName] if (!IconComponent._name.includes(\'brand\')) { return null } const tagName = literal`gds-icon-${unsafeStatic(IconComponent._name)}` return staticHTML`<${tagName}></${tagName}>` }) .filter(Boolean) // Filter out null values return html` <gds-grid columns="s{2} m{4} l{4}" gap="s{xl} m{xl} l{xl}" class="icon-preview" > ${BRANDS} </gds-grid> ` }, }',description:"The icon package has the following brand icons available:"},{kind:"variable",name:"IconsSize",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Sizing', render: (args) => { // Token sizes const TOKEN_SIZES = ['xs', 's', 'm', 'l', 'xl', '2xl', '3xl', '4xl'] const tokenExamples = TOKEN_SIZES.map((size) => createSizeExample(size, { isToken: true }), ) // Pixel sizes const PIXEL_SIZES = [16, 24, 32, 48] const pixelExamples = PIXEL_SIZES.map((size) => createSizeExample(size, { unit: 'px', icon: 'rocket' }), ) // Line-height sizes const LH_SIZES = [1, 1.5, 2, 2.5] const lhExamples = LH_SIZES.map((size) => createSizeExample(size, { unit: 'lh', icon: 'ai' }), ) return html` <gds-flex gap=\"4xl\" flex-direction=\"column\"> ${createSection('Tokens', tokenExamples)} ${createSection('Using: Custom values(px)', pixelExamples)} ${createSection('Using: Custom values(lh)', lhExamples)} </gds-flex> ` }, }",description:`The default icon size is equal to 1lh (1 line height).
You can change the icon size by setting the \`size\` attribute.
The size property accepts all the size tokens and also custom value like px or lh.

\`\`\`html
<gds-icon-robot size="l"></gds-icon-robot>
<gds-icon-robot size="2xl"></gds-icon-robot>
<gds-icon-robot size="48px"></gds-icon-robot>
<gds-icon-robot size="2lh"></gds-icon-robot>
\`\`\``},{kind:"variable",name:"IconsStroke",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Stroke\', render: (args) => html` <gds-icon-robot stroke="2" size="xl"></gds-icon-robot> <gds-icon-rocket stroke="2" size="xl"></gds-icon-rocket> <gds-icon-school stroke="2" size="xl"></gds-icon-school> `, }',description:"You can change the icon stroke by setting the `stroke` attribute."},{kind:"variable",name:"IconsLabel",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Accessible Label', render: (args) => html`<gds-icon-rocket label=\"Rocket\" />`, }",description:"Icons have the role of `presentation`, when there is no label provided. This means that the icon will be ignored by screen readers."},{kind:"variable",name:"Deprecated",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Deprecated Icons\', render: () => { const deprecatedElements = Object.entries(deprecatedIcons).map( ([tagName, info]: [string, DeprecationInfo]) => { const tag = literal`gds-icon-${unsafeStatic(info.name)}` return html` <gds-flex gap="s" align-items="center"> <gds-card variant="primary" width="100px" height="80px" align-items="center" justify-content="center" > ${staticHTML`<${tag}></${tag}>`} </gds-card> <gds-flex flex-direction="column" align-items="flex-start" gap="xs"> <gds-text font-size="s" class="deprecated-label"> ${tagName} </gds-text> ${info.useInstead ? html` <gds-text size="xs" color="disabled" opacity="0.8"> Use <code>${info.useInstead}</code> instead </gds-text> ` : \'\'} <gds-badge size="small" variant="warning">DEPRECATED</gds-badge> </gds-flex> </gds-flex> ` }, ) return html` <gds-flex flex-direction="column" gap="s">${deprecatedElements}</gds-flex> ` }, }',description:`The following icons are deprecated and should not be used in new code.

They are kept for backwards compatibility but will be removed in the next major release.`}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/icon/icon.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/icon/icon.stories.ts"}},{kind:"js",name:"IconsRegular",declaration:{name:"IconsRegular",module:"src/components/icon/icon.stories.ts"}},{kind:"js",name:"IconsSolid",declaration:{name:"IconsSolid",module:"src/components/icon/icon.stories.ts"}},{kind:"js",name:"Brands",declaration:{name:"Brands",module:"src/components/icon/icon.stories.ts"}},{kind:"js",name:"IconsSize",declaration:{name:"IconsSize",module:"src/components/icon/icon.stories.ts"}},{kind:"js",name:"IconsStroke",declaration:{name:"IconsStroke",module:"src/components/icon/icon.stories.ts"}},{kind:"js",name:"IconsLabel",declaration:{name:"IconsLabel",module:"src/components/icon/icon.stories.ts"}},{kind:"js",name:"Deprecated",declaration:{name:"Deprecated",module:"src/components/icon/icon.stories.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icon.style.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer icon; @layer icon { :host { display: inline-block; } svg { display: block; } :host(:not([width]):not([height])) svg { height: 1lh; width: auto; } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/icon/icon.style.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icon.ts",declarations:[],exports:[{kind:"js",name:"GdsIcon",declaration:{name:"GdsIcon",module:"src/components/icon/icon.ts"}}]},{kind:"javascript-module",path:"src/components/icon/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./icon"}}]},{kind:"javascript-module",path:"src/components/img/img.component.ts",declarations:[{kind:"class",description:"",name:"GdsImg",members:[{kind:"field",name:"'aspect-ratio'",type:{text:"string | undefined"},description:`Controls the aspect ratio of the image.
Supports all common aspect ratios like 16/9, 4/3, 1/1, etc.

You can apply the aspect ratio like this:
\`\`\`html
<gds-img aspect-ratio="16/9"></gds-img>
\`\`\`
The above example will apply the aspect ratio of 16/9.

You can also apply different aspect ratios for different screen sizes like this:
\`\`\`html
<gds-img aspect-ratio="l{16/9} m{4/3} s{1/1}"></gds-img>
\`\`\`

The above example will apply the aspect ratio of 16/9 for large screens, 4/3 for medium screens, and 1/1 for small screens.`},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:'Controls the border-radius property of the image.\nSupports all the size tokens from the design system.\n\nYou can apply radius in each corner like this:\n```html\n<gds-img border-radius="none none m m" ></gds-img>\n```\n\nAlso for different breakpoints like this:\n```html\n<gds-img border-radius="s{xs} m{xs} l{s}"></gds-img>\n```',category:"Declarative layout / Style expression properties"},{kind:"field",name:"'object-fit'",type:{text:"string | undefined"},description:`Controls the object-fit property of the image.

You can apply fit like this:
\`\`\`html
<gds-img object-fit="cover"></gds-img>
\`\`\`

 The above example will apply the object-fit style of cover.`},{kind:"field",name:"'object-position'",type:{text:"string | undefined"},description:"Controls the `object-position` of the img.\nSupports all common CSS values."},{kind:"field",name:"src",type:{text:"string | undefined"},description:"The image source URL.",attribute:"src"},{kind:"field",name:"alt",type:{text:"string | undefined"},description:"The image alt text.",attribute:"alt"},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"src",type:{text:"string | undefined"},description:"The image source URL.",fieldName:"src"},{name:"alt",type:{text:"string | undefined"},description:"The image alt text.",fieldName:"alt"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withPositioningProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withSizeYProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-img",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsImg",declaration:{name:"GdsImg",module:"src/components/img/img.component.ts"}}]},{kind:"javascript-module",path:"src/components/img/img.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Image', component: 'gds-img', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-img'), }, }",description:"The `gds-img`"},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/img/img.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/img/img.stories.ts"}}]},{kind:"javascript-module",path:"src/components/img/img.style.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { display: block; margin: 0; padding: 0; box-sizing: border-box; font-size: 0; width: 100%; height: auto; overflow: hidden; } img { display: flex; width: 100%; height: 100%; } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/img/img.style.ts"}}]},{kind:"javascript-module",path:"src/components/img/img.ts",declarations:[],exports:[{kind:"js",name:"GdsImg",declaration:{name:"GdsImg",module:"src/components/img/img.ts"}}]},{kind:"javascript-module",path:"src/components/img/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./img"}}]},{kind:"javascript-module",path:"src/components/input/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./input"}}]},{kind:"javascript-module",path:"src/components/input/input.component.ts",declarations:[{kind:"class",description:"",name:"GdsInput",slots:[{description:"Accepts `gds-icon-[ICON_NAME]`. Use this to place an icon in the start of the field.",name:"lead"},{description:"Accepts `gds-badge`. Use this to place a badge in the field, for displaying currency for example.",name:"trail"},{description:"A longer supporting text can be placed here. It will be displayed in a panel when the user clicks the info button.",name:"extended-supporting-text"}],events:[{description:"Fired when the clear button is clicked.",name:"gds-input-cleared",reactName:"onGdsInputCleared",eventName:"GdsInputClearedEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"Input",module:"src/components/input/input.component.ts"},tagName:"gds-input",customElement:!0,summary:"A custom input element that can be used in forms.",members:[{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"supportingText",type:{text:"string"},default:"''",description:`The supporting text displayed between the label and the field.
This text provides additional context or information to the user.`,attribute:"supporting-text",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{kind:"field",name:"showExtendedSupportingText",type:{text:"boolean"},default:"false",description:"Whether the supporting text should be displayed or not.",attribute:"show-extended-supporting-text",reflects:!0,inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{kind:"field",name:"clearable",type:{text:"boolean"},default:"false",description:`Whether the field should be clearable or not. Clearable fields will display a clear button when
the field has a value.`,attribute:"clearable",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{kind:"field",name:"maxlength",type:{text:"number"},description:"The maximum number of characters allowed in the field.",attribute:"maxlength",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{kind:"field",name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Controls the font-size of texts and height of the field.",attribute:"size",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{kind:"field",name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",attribute:"plain",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{kind:"method",name:"test_getClearButton",description:`A reference to the clear button element. Returns null if there is no clear button.
Intended for use in integration tests.`,inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{kind:"method",name:"test_getFieldElement",description:`A reference to the field element. This does not refer to the input element itself,
but the wrapper that makes up the visual field.
Intended for use in integration tests.`,inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{kind:"method",name:"_getValidityAnchor",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{kind:"field",name:"value",description:"Get or set the value of the form control.",attribute:"value",type:{text:"string"},default:"''",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"formAssociated",type:{text:"boolean"},static:!0,default:"true",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validator",type:{text:"GdsValidator | undefined"},description:"A validator that can be used to validate the form control and set an error message.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",attribute:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"errorMessage",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,attribute:"error-message",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",attribute:"aria-invalid",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"name",type:{text:"string"},default:"''",attribute:"name",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",attribute:"disabled",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"form",description:"The form element that the form control is associated with.",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validity",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validationMessage",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"willValidate",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"checkValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"reportValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formResetCallback",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formAssociatedCallback",parameters:[{name:"form",optional:!0,type:{text:"HTMLFormElement"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"supporting-text",type:{text:"string"},default:"''",description:`The supporting text displayed between the label and the field.
This text provides additional context or information to the user.`,fieldName:"supportingText",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{name:"show-extended-supporting-text",type:{text:"boolean"},default:"false",description:"Whether the supporting text should be displayed or not.",fieldName:"showExtendedSupportingText",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{name:"clearable",type:{text:"boolean"},default:"false",description:`Whether the field should be clearable or not. Clearable fields will display a clear button when
the field has a value.`,fieldName:"clearable",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{name:"maxlength",type:{text:"number"},description:"The maximum number of characters allowed in the field.",fieldName:"maxlength",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Controls the font-size of texts and height of the field.",fieldName:"size",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",fieldName:"plain",inheritedFrom:{name:"Input",module:"src/components/input/input.component.ts"}},{name:"aria-invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",fieldName:"invalid",attribute:"aria-invalid",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",fieldName:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"error-message",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,fieldName:"errorMessage",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",fieldName:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"value",description:"Get or set the value of the form control.",fieldName:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"name",type:{text:"string"},default:"''",fieldName:"name",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",fieldName:"disabled",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsInput",declaration:{name:"GdsInput",module:"src/components/input/input.component.ts"}}]},{kind:"javascript-module",path:"src/components/input/input.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Input', component: 'gds-input', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-input'), value: { control: 'text', }, variant: { options: ['default'], control: { type: 'select' }, }, size: { options: ['large', 'small'], control: { type: 'select' }, }, invalid: { control: 'boolean', }, }, }",description:`
Input are used to let the user enter text or numbers in a form.`},{kind:"variable",name:"Default",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Default', }"},{kind:"variable",name:"Size",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Size', render: () => html\` <gds-flex width="800px" gap="4xl" align-items="flex-start"> <gds-input label="Lead Icon" size="small"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> </gds-input> <gds-input label="Lead Icon" supporting-text="Example support text" size="small" clearable .validator=\${{ validate: (el: any) => { if (el.value === '') return [ { ...el.validity, valid: false, customError: true, }, 'Required field.', ] else if (el.value.length !== 12 || isNaN(el.value)) return [ { ...el.validity, valid: false, customError: true, }, 'The value must be 12 characters long.', ] }, }} > <gds-icon-credit-card slot="lead"></gds-icon-credit-card> <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> </gds-input> </gds-flex> \`, }`,description:"The `size` property can be set to 'small' to reduce the size of the input field.<br>\n**@property size** - The size of the input field.\n\n```html\n <gds-input size=\"small\"></gds-input>\n```"},{kind:"variable",name:"Lead",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Slot: Lead\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-input label="Lead Icon"> <gds-icon-magnifying-glass slot="lead"></gds-icon-magnifying-glass> </gds-input> </gds-flex> `, }',description:`

**@slot lead** - Slot for an icon or other content to be placed at the beginning of the input field.

\`\`\`html
 <gds-input label="Lead Icon">
   <gds-icon-magnifying-glass slot="lead"></gds-icon-magnifying-glass>
</gds-input>\`\`\``},{kind:"variable",name:"Trail",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Slot: Trail\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-input label="Label" supporting-text="Label support text" value="10,000.00" clearable > <gds-badge variant="information" slot="trail">USD</gds-badge> </gds-input> </gds-flex> `, }',description:'\n**@slot trail** - Slot for an icon or other content to be placed at the end of the input field.\n\n```html\n <gds-input label="Trail Icon">\n   <gds-badge variant="information" slot="trail">USD</gds-badge>\n</gds-input>```'},{kind:"variable",name:"Length",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Length\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-input label="Label" supporting-text="Label support text" value="Example value" maxLength="20" clearable > </gds-input> </gds-flex> `, }',description:'The `length` property can be set to a number to limit the number of characters that can be entered into the input field.<br> A badge will be displayed, updating as the input approaches the character limit.\n\n**@property maxLength** - The maximum number of characters that can be entered into the input field.\n\n```html\n <gds-input maxLength="20"></gds-input>\n```'},{kind:"variable",name:"Clearable",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Clearable\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-input label="Label text" value="Clear this text" clearable ></gds-input> </gds-flex> `, }',description:"When the `clearable` property is set, a clear button is added, allowing users to quickly clear the text."},{kind:"variable",name:"SupportingText",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Supporting Text\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-input label="Label" supporting-text="Supporting text"></gds-input> </gds-flex> `, }',description:'The `supporting-text` property can be set to a string to provide additional information about the input field.\n\n**@property supporting-text** - Additional information about the input field.\n\n```html\n  <gds-input label="Label text" supporting-text="Supporting text"></gds-input>\n```'},{kind:"variable",name:"ExtendedSupportingText",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Extended Supporting Text\', render: () => html` <gds-flex gap="xl" width="800px"> <gds-input label="Label text" supporting-text="Supporting text"> <span slot="extended-supporting-text" >Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> </gds-input> <gds-input label="Label text" supporting-text="Supporting text" show-extended-supporting-text > <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> </gds-input> </gds-flex> `, }',description:'The `extended-supporting-text` slot can be used to provide extended information about the input field.<br>\nThe slot will show by default when the `show-extended-supporting-text` property is set.<br>\nIf not specified, the slot will be hidden and a companion icon will be displayed to indicate that more information is available.\n\n**@slot extended-supporting-text** - Extended information about the input field.\n\n```html\n<gds-input label="Label text" supporting-text="Supporting text">\n  <span slot="extended-supporting-text">Extended supporting text</span>\n</gds-input>\n```\n\n**@property show-extended-supporting-text** - Shows the extended supporting text.\n\n```html\n<gds-input show-extended-supporting-text></gds-input>\n```'},{kind:"variable",name:"Validation",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Validation', render: () => html\` <gds-flex flex-direction="column" width="800px"> <gds-flex gap="xl"> <gds-input label="Label" supporting-text="Label support text" value=" " .validator=\${{ validate: (el: any) => { if (el.value === '') return [ { ...el.validity, valid: false, customError: true, }, 'Error message.', ] else if (el.value.length !== 12 || isNaN(el.value)) return [ { ...el.validity, valid: false, customError: true, }, 'The value must be 12 characters long.', ] }, }} > <gds-icon-credit-card slot="lead"></gds-icon-credit-card> <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> </gds-input> <gds-input label="Label" supporting-text="Label support text" value="Incorrect value" clearable .invalid=\${true} .validator=\${{ validate: (el: any) => { if (el.value === '') return [ { ...el.validity, valid: false, customError: true, }, 'Error message.', ] else if (el.value.length !== 12 || isNaN(el.value)) return [ { ...el.validity, valid: false, customError: true, }, 'The value must be 12 characters long. ', ] }, }} clearable > <gds-icon-credit-card slot="lead"></gds-icon-credit-card> </gds-input> </gds-flex> </gds-flex> \`, }`,description:`Input has built-in support for form validation.<br>The validation feature is built on top of the browsers native validation features, using \`ElementInternals\` and \`Constraint Validation API\`.

Validation is configured by adding a validator to a form element.<br> A validator is an object that implements the \`GdsValidator\` interface:

\`\`\`html
<gds-input
 label="Label"
 value=" "
 .validator=\${{
   validate: (el: any) => {
     if (el.value === '')
       return [
         {
           ...el.validity,
           valid: false,
           customError: true,
         },
         'Error message.',
       ]
   },
 }}></gds-input>
\`\`\`
**@property invalid** - Indicates that the input field contains an error.

\`\`\`html
<gds-input invalid></gds-input>
\`\`\``},{kind:"variable",name:"Disabled",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Disabled\', render: () => html` <gds-flex gap="xl"> <gds-input label="Label" disabled supporting-text="Support text"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> </gds-input> <gds-input label="Label" disabled supporting-text="Support text" value="Disabled with value" clearable > <gds-icon-credit-card slot="lead"></gds-icon-credit-card> </gds-input> </gds-flex> `, }',description:"The `disabled` property can be set to disable the input field.\n\n**@property disabled** - Disables the input field.\n\n```html\n <gds-input disabled></gds-input>\n```"}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"Size",declaration:{name:"Size",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"Lead",declaration:{name:"Lead",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"Trail",declaration:{name:"Trail",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"Length",declaration:{name:"Length",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"Clearable",declaration:{name:"Clearable",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"SupportingText",declaration:{name:"SupportingText",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"ExtendedSupportingText",declaration:{name:"ExtendedSupportingText",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"Validation",declaration:{name:"Validation",module:"src/components/input/input.stories.ts"}},{kind:"js",name:"Disabled",declaration:{name:"Disabled",module:"src/components/input/input.stories.ts"}}]},{kind:"javascript-module",path:"src/components/input/input.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css``"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/input/input.styles.ts"}}]},{kind:"javascript-module",path:"src/components/input/input.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/input/input.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/input/input.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/input/input.ts",declarations:[],exports:[{kind:"js",name:"GdsInput",declaration:{name:"GdsInput",module:"src/components/input/input.ts"}}]},{kind:"javascript-module",path:"src/components/link/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./link"}}]},{kind:"javascript-module",path:"src/components/link/link.component.ts",declarations:[{kind:"class",description:"",name:"GdsLink",slots:[{description:"Content to be displayed as the link string.",name:"main"},{description:"An optional slot that allows a `gds-icon` element to be placed before the label.",name:"lead"},{description:"An optional slot that allows a `gds-icon` element to be placed after the label.",name:"trail"}],members:[{kind:"field",name:"shadowRootOptions",type:{text:"ShadowRootInit"},static:!0,default:"{ mode: 'open', delegatesFocus: true, }"},{kind:"field",name:"href",type:{text:"string"},default:"''",description:"When set, the underlying button will be rendered as an anchor element.",attribute:"href"},{kind:"field",name:"target",type:{text:"'_self' | '_blank' | '_parent' | '_top' | undefined"},description:"Where to display the linked URL. Only used when href is present.",attribute:"target"},{kind:"field",name:"rel",type:{text:"string | undefined"},description:'The relationship of the linked URL as space-separated link types. Only used when href is present. Defaults to "noreferrer noopener" for security reasons when target is set.',attribute:"rel"},{kind:"field",name:"download",type:{text:"string | undefined"},description:"Causes the browser to treat the linked URL as a download. Can be used with or without a filename value. Only used when href is present.",attribute:"download"},{kind:"field",name:"'text-decoration'",type:{text:"string | undefined"},description:'Controls the text-decoration property of the link.\nSupports all valid CSS text-decoration values.\n\nSetting `text-decoration` on hover you can do it like this:\n```html\n<gds-link text-decoration="hover:underline">Underline on Hover</gds-link>\n```'},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Fired when the link is clicked.",name:"click",reactName:"onClick",eventName:"ClickEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"href",type:{text:"string"},default:"''",description:"When set, the underlying button will be rendered as an anchor element.",fieldName:"href"},{name:"target",type:{text:"'_self' | '_blank' | '_parent' | '_top' | undefined"},description:"Where to display the linked URL. Only used when href is present.",fieldName:"target"},{name:"rel",type:{text:"string | undefined"},description:'The relationship of the linked URL as space-separated link types. Only used when href is present. Defaults to "noreferrer noopener" for security reasons when target is set.',fieldName:"rel"},{name:"download",type:{text:"string | undefined"},description:"Causes the browser to treat the linked URL as a download. Can be used with or without a filename value. Only used when href is present.",fieldName:"download"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-link",customElement:!0}],exports:[{kind:"js",name:"GdsLink",declaration:{name:"GdsLink",module:"src/components/link/link.component.ts"}}]},{kind:"javascript-module",path:"src/components/link/link.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Link', component: 'gds-link', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-link'), }, }"},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"Lead",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Icon: Lead', render: () => html` <gds-link> <gds-icon-cain-link slot=\"lead\"></gds-icon-cain-link> Link text </gds-link>`, }",description:"A link component with a leading icon."},{kind:"variable",name:"Trail",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Icon: Trail', render: () => html` <gds-link> Link text <gds-icon-arrow-right slot=\"trail\"></gds-icon-arrow-right> </gds-link>`, }",description:"A link component with a trailing icon."},{kind:"variable",name:"TextDecoration",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Text Decoration\', render: () => html` <gds-flex gap="4xl" width="600px" flex-direction="column"> <gds-flex gap="xl"> <gds-flex flex-direction="column" gap="m" flex="1"> <gds-text tag="small">Link with Underline</gds-text> <gds-divider opacity="0.2"></gds-divider> <gds-link text-decoration="underline"> Link text </gds-link> </gds-flex> <gds-flex flex-direction="column" gap="m" flex="1"> <gds-text tag="small">Link without Underline</gds-text> <gds-divider opacity="0.2"></gds-divider> <gds-link text-decoration="none"> Link text </gds-link> </gds-flex> </gds-flex> <gds-flex gap="xl"> <gds-flex flex-direction="column" gap="m" flex="1"> <gds-text tag="small">Link with Underline on Hover and Icon</gds-text> <gds-divider opacity="0.2"></gds-divider> <gds-link> Link text <gds-icon-arrow-right slot="trail"></gds-icon-arrow-right> </gds-link> </gds-flex> <gds-flex flex-direction="column" gap="m" flex="1"> <gds-text tag="small">Link with No Underline on Hover</gds-text> <gds-divider opacity="0.2"></gds-divider> <gds-link text-decoration="underline; hover:none"> Link text </gds-link> </gds-flex> </gds-flex> </gds-flex> `, }',description:'A link component has a `text-decoration` property that accepts all valid CSS `text-decoration` values.\n\nIt also supports setting `text-decoration` or disable on hover by using the `hover:` prefix.\n\n```html\n<gds-link text-decoration="hover:none">\n   Underline on Hover\n</gds-link>\n```'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/link/link.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/link/link.stories.ts"}},{kind:"js",name:"Lead",declaration:{name:"Lead",module:"src/components/link/link.stories.ts"}},{kind:"js",name:"Trail",declaration:{name:"Trail",module:"src/components/link/link.stories.ts"}},{kind:"js",name:"TextDecoration",declaration:{name:"TextDecoration",module:"src/components/link/link.stories.ts"}}]},{kind:"javascript-module",path:"src/components/link/link.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer core, link; @layer core { :host { display: inline-block; white-space: normal; } } @layer link { a { display: flex; align-items: center; gap: 1ch; text-decoration: none; text-underline-offset: 0.2lh; color: currentColor; outline-offset: 4px; outline-color: currentColor; font-weight: var(--gds-text-weight-book); transition: all 0.2s ease-in-out; &:hover { text-decoration: underline; text-underline-offset: 0.16lh; &:active { text-underline-offset: 0.08lh; } } } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/link/link.styles.ts"}}]},{kind:"javascript-module",path:"src/components/link/link.ts",declarations:[],exports:[{kind:"js",name:"GdsLink",declaration:{name:"GdsLink",module:"src/components/link/link.ts"}}]},{kind:"javascript-module",path:"src/components/mask/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./mask"}}]},{kind:"javascript-module",path:"src/components/mask/mask.component.ts",declarations:[{kind:"class",description:"",name:"GdsMask",members:[{kind:"field",name:"'mask-image'",type:{text:"string | undefined"}},{kind:"field",name:"'mask-size'",type:{text:"string"},default:"'cover'"},{kind:"field",name:"'mask-repeat'",type:{text:"string"},default:"'no-repeat'"},{kind:"field",name:"'mask-position'",type:{text:"string"},default:"'center'"},{kind:"field",name:"'background-color'",type:{text:"string | undefined"},category:"Declarative layout / Style expression properties"},{kind:"field",name:"'backdrop-filter'",type:{text:"string | undefined"},description:'Controls the backdrop-filter property of the container.\nWhen you want to apply a backdrop blur filter to the container you can use this property.\n\n```html\n<gds-mask backdrop-filter="20px"></gds-mask>\n```\n\nThe above example will apply a backdrop blur filter of `20px`.\n\n The filter also support breakpoint syntax like this:\n\n```html\n<gds-mask backdrop-filter="s{20px} m{40px} l{60px}"></gds-mask>\n```\n\nThe above example will apply the filter style of `20px` for `small` devices, `40px` for `medium` devices, and `60px` for large devices.'},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"},default:"'relative'"},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"},default:"'0'"},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsFlex",module:"/src/components/flex/flex.component"},tagName:"gds-mask",customElement:!0,attributes:[{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsMask",declaration:{name:"GdsMask",module:"src/components/mask/mask.component.ts"}}]},{kind:"javascript-module",path:"src/components/mask/mask.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Mask', component: 'gds-mask', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-mask'), }, }"},{kind:"variable",name:"Card",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-grid columns="xs{1} m{2} l{2}" gap="l"> <gds-card overflow="hidden"> <gds-flex display="flex" gap="0" flex-direction="column" align-items="stretch" > <gds-div position="relative" border-radius="s" overflow="hidden"> <gds-img src="https://github.com/user-attachments/assets/fdbfca17-c5b7-43cc-b846-6e1ab68e5d69" aspect-ratio="1/1" object-fit="cover" ></gds-img> <gds-mask mask-image="top" background-color="tertiary/0.9" z-index="2" position="absolute" inset="50% 0 0 0" > <gds-div position="absolute" inset="auto 20px 20px auto"> <gds-button rank="secondary"> <gds-icon-arrow-down></gds-icon-arrow-down> </gds-button> </gds-div> </gds-mask> </gds-div> <gds-flex flex-direction="column" padding="s{xs} m{l} l{l}" align-items="flex-start" gap="l" > <gds-flex gap="s" flex-direction="column"> <gds-text font-size="body-l"> Sector by sector. Industry by industry. </gds-text> <gds-text tag="p"> Together with our clients, we\'re accelerating the sustainable transition. </gds-text> </gds-flex> <gds-divider opacity="0.2"></gds-divider> <gds-button>Client stories</gds-button> </gds-flex> </gds-flex> </gds-card> <gds-card border-radius="s" overflow="hidden"> <gds-flex position="relative" height="100%"> <gds-video src="https://github.com/user-attachments/assets/f556d859-466a-416c-95fb-ee908ffccfdd" object-fit="cover" aspect-ratio="1/1" pointer-events="none" autoplay muted loop ></gds-video> <gds-mask mask-image="top" background-color="tertiary/0.6" position="absolute" > <gds-flex flex-direction="column" justify-content="flex-end" padding="4xl 2xl 2xl 2xl" gap="l" height="100%" width="100%" color="tertiary" > <gds-div> <gds-text tag="h3"> Sustainable Practices </gds-text> <gds-text font-size="body-m"> Promoting Eco-Friendly Solutions </gds-text> </gds-div> <gds-flex gap="s"> <gds-button rank="secondary">Get Involved</gds-button> <gds-theme color-scheme="dark"> <gds-button rank="tertiary">Learn more</gds-button> </gds-theme> </gds-flex> </gds-flex> </gds-mask> </gds-flex> </gds-card> </gds-grid> `, }'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/mask/mask.stories.ts"}},{kind:"js",name:"Card",declaration:{name:"Card",module:"src/components/mask/mask.stories.ts"}}]},{kind:"javascript-module",path:"src/components/mask/mask.style.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { isolation: isolate; } [part='mask'] { position: absolute; inset: 0; z-index: -1; pointer-events: none; } [part='content'] { z-index: 1; position: absolute; inset: 0; } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/mask/mask.style.ts"}}]},{kind:"javascript-module",path:"src/components/mask/mask.ts",declarations:[],exports:[{kind:"js",name:"GdsMask",declaration:{name:"GdsMask",module:"src/components/mask/mask.ts"}}]},{kind:"javascript-module",path:"src/components/menu-button/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./menu-button"}}]},{kind:"javascript-module",path:"src/components/menu-button/menu-button.component.ts",declarations:[{kind:"class",description:"",name:"GdsMenuButton",cssParts:[{description:"The main slot of the button, between the lead and trail slots.",name:"main-slot"}],slots:[{description:"Content to be displayed as the button label.",name:""},{description:"An optional slot that allows a `gds-icon` element to be placed before the label.",name:"lead"},{description:"An optional slot that allows a `gds-icon` element to be placed after the label.",name:"trail"}],members:[{kind:"field",name:"shadowRootOptions",type:{text:"ShadowRootInit"},static:!0,default:"{ mode: 'open', delegatesFocus: true, }"},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the menu-button is disabled.",attribute:"disabled",reflects:!0},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label of the menu-button. Use this to add an accessible label to the button when no text is provided in the default slot.",attribute:"label"},{kind:"field",name:"href",type:{text:"string"},default:"''",description:"When set, the underlying button will be rendered as an anchor element.",attribute:"href"},{kind:"field",name:"target",type:{text:"'_self' | '_blank' | '_parent' | '_top' | undefined"},description:"Where to display the linked URL. Only used when href is present.",attribute:"target"},{kind:"field",name:"rel",type:{text:"string | undefined"},description:'The relationship of the linked URL as space-separated link types. Only used when href is present. Defaults to "noreferrer noopener" for security reasons when target is set.',attribute:"rel"},{kind:"field",name:"download",type:{text:"string | undefined"},description:"Causes the browser to treat the linked URL as a download. Can be used with or without a filename value. Only used when href is present.",attribute:"download"},{kind:"field",name:"compact",type:{text:"boolean"},default:"false",description:"The label of the menu-button. Use this to add an accessible label to the button when no text is provided in the default slot.",attribute:"compact",reflects:!0},{kind:"field",name:"selected",type:{text:"boolean"},default:"false",description:"Whether the menu button is selected",attribute:"selected",reflects:!0},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Fired when the button is clicked.",name:"click",reactName:"onClick",eventName:"ClickEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the menu-button is disabled.",fieldName:"disabled"},{name:"label",type:{text:"string"},default:"''",description:"The label of the menu-button. Use this to add an accessible label to the button when no text is provided in the default slot.",fieldName:"label"},{name:"href",type:{text:"string"},default:"''",description:"When set, the underlying button will be rendered as an anchor element.",fieldName:"href"},{name:"target",type:{text:"'_self' | '_blank' | '_parent' | '_top' | undefined"},description:"Where to display the linked URL. Only used when href is present.",fieldName:"target"},{name:"rel",type:{text:"string | undefined"},description:'The relationship of the linked URL as space-separated link types. Only used when href is present. Defaults to "noreferrer noopener" for security reasons when target is set.',fieldName:"rel"},{name:"download",type:{text:"string | undefined"},description:"Causes the browser to treat the linked URL as a download. Can be used with or without a filename value. Only used when href is present.",fieldName:"download"},{name:"compact",type:{text:"boolean"},default:"false",description:"The label of the menu-button. Use this to add an accessible label to the button when no text is provided in the default slot.",fieldName:"compact"},{name:"selected",type:{text:"boolean"},default:"false",description:"Whether the menu button is selected",fieldName:"selected"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-menu-button",customElement:!0}],exports:[{kind:"js",name:"GdsMenuButton",declaration:{name:"GdsMenuButton",module:"src/components/menu-button/menu-button.component.ts"}}]},{kind:"javascript-module",path:"src/components/menu-button/menu-button.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Menu button', component: 'gds-menu-button', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-datepicker'), }, }"},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"Selected_state",type:{text:"Story"},default:'{ ...DefaultParams, render: () => html`<gds-menu-button selected> <gds-icon-people solid slot="trail"></gds-icon-people> Profile </gds-menu-button>`, }',description:"Selected state is used to indicate that the button is currently selected, for example to indicate the current page."},{kind:"variable",name:"Only_text",type:{text:"Story"},default:"{ ...DefaultParams, render: () => html`<gds-menu-button>Search</gds-menu-button>`, }",description:"The menu button can be used without an icon as well."},{kind:"variable",name:"Example_menu_bar",type:{text:"Story"},default:'{ ...DefaultParams, render: () => html`<gds-div display="flex" height="70px" width="700px" border-color="secondary" border-width="0 0 4xs 0" > <div style="flex-basis:50%;"> <gds-menu-button> <gds-icon-magnifying-glass slot="lead"></gds-icon-magnifying-glass> Search </gds-menu-button> </div> <gds-flex style="flex-basis:50%;" justify-content="flex-end"> <gds-menu-button> <gds-icon-bell slot="trail"></gds-icon-bell> Notification </gds-menu-button> <gds-popover> <gds-menu-button slot="trigger"> <gds-icon-people slot="trail"></gds-icon-people> Profile </gds-menu-button> <div style="padding: 1rem;">Profile stuff</div> </gds-popover> <gds-menu-button href="https://github.com/seb-oss/green" target="_blank" > <gds-icon-square-arrow-top-right slot="trail" ></gds-icon-square-arrow-top-right> External link </gds-menu-button> </gds-flex> </gds-card>`, }',description:`An example of a menu bar with a search button, a notification button, a profile button, and an external link button.

The profile buitton shows an example of using a popover together with a menu button.

External link is an example of using a menu button as a link to a URL.`},{kind:"variable",name:"Compact_menu_bar",type:{text:"Story"},default:'{ ...DefaultParams, render: () => html`<gds-flex width="700px" background="primary" border="0 0 3xs/secondary 0" align-items="center" > <gds-flex flex="1"> <gds-menu-button compact> <gds-icon-magnifying-glass slot="lead"></gds-icon-magnifying-glass> Search </gds-menu-button> </gds-flex> <gds-flex justify-content="flex-end"> <gds-menu-button compact> <gds-icon-bell slot="trail"></gds-icon-bell> Notification </gds-menu-button> <gds-popover> <gds-menu-button slot="trigger" compact> <gds-icon-people slot="trail"></gds-icon-people> Profile </gds-menu-button> <div style="padding: 1rem;">Profile stuff</div> </gds-popover> <gds-menu-button compact selected href="https://github.com/seb-oss/green" target="_blank" > <gds-icon-square-arrow-top-right slot="trail" ></gds-icon-square-arrow-top-right> External link </gds-menu-button> </gds-flex> </gds-flex>`, }',description:"Same as above, but using the compact style. This is mainly intended for use in a mobile viewport."},{kind:"variable",name:"Dark",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Dark Mode\', render: () => html` <gds-flex flex-direction="column" gap="l"> <gds-theme color-scheme="dark"> <gds-flex width="700px" background="primary" height="80px" border="0 0 3xs/secondary 0" > <gds-flex flex="1"> <gds-menu-button> <gds-icon-magnifying-glass slot="lead" ></gds-icon-magnifying-glass> Search </gds-menu-button> </gds-flex> <gds-flex> <gds-menu-button> <gds-icon-bell slot="trail"></gds-icon-bell> Notification </gds-menu-button> <gds-popover> <gds-menu-button slot="trigger"> <gds-icon-people slot="trail"></gds-icon-people> Profile </gds-menu-button> <div style="padding: 1rem;">Profile stuff</div> </gds-popover> <gds-menu-button selected href="https://github.com/seb-oss/green" target="_blank" > <gds-icon-square-arrow-top-right slot="trail" ></gds-icon-square-arrow-top-right> External link </gds-menu-button> </gds-flex> </gds-flex> </gds-theme> <gds-theme color-scheme="light"> <gds-flex width="700px" background="primary" height="80px" border="0 0 3xs/secondary 0" > <gds-flex flex="1"> <gds-menu-button> <gds-icon-magnifying-glass slot="lead" ></gds-icon-magnifying-glass> Search </gds-menu-button> </gds-flex> <gds-flex style="flex-basis:50%;" justify-content="flex-end"> <gds-menu-button> <gds-icon-bell slot="trail"></gds-icon-bell> Notification </gds-menu-button> <gds-popover> <gds-menu-button slot="trigger"> <gds-icon-people slot="trail"></gds-icon-people> Profile </gds-menu-button> <div style="padding: 1rem;">Profile stuff</div> </gds-popover> <gds-menu-button selected href="https://github.com/seb-oss/green" target="_blank" > <gds-icon-square-arrow-top-right slot="trail" ></gds-icon-square-arrow-top-right> External link </gds-menu-button> </gds-flex> </gds-flex> </gds-theme> </gds-flex> `, }',description:"Same as above, but using the compact style. This is mainly intended for use in a mobile viewport."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/menu-button/menu-button.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/menu-button/menu-button.stories.ts"}},{kind:"js",name:"Selected_state",declaration:{name:"Selected_state",module:"src/components/menu-button/menu-button.stories.ts"}},{kind:"js",name:"Only_text",declaration:{name:"Only_text",module:"src/components/menu-button/menu-button.stories.ts"}},{kind:"js",name:"Example_menu_bar",declaration:{name:"Example_menu_bar",module:"src/components/menu-button/menu-button.stories.ts"}},{kind:"js",name:"Compact_menu_bar",declaration:{name:"Compact_menu_bar",module:"src/components/menu-button/menu-button.stories.ts"}},{kind:"js",name:"Dark",declaration:{name:"Dark",module:"src/components/menu-button/menu-button.stories.ts"}}]},{kind:"javascript-module",path:"src/components/menu-button/menu-button.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer tokens, core, a11y, disabled, variants, sizes, sets; @layer tokens { :host { --_gap: var(--gds-space-xs); --_padding-inline: var(--gds-space-m); --_padding-block: var(--gds-space-xs); --_color-bg: transparent; --_color-text: var(--gds-color-l3-content-tertiary); --_color-border: transparent; --_font-size: 1rem; --_font-weight: 400; --_line-height: 1.25; display: inline-block; isolation: isolate; max-width: 100%; height: 100%; } } @layer core { .button { align-items: center; background-color: var(--_color-bg); border-color: var(--_color-border); border-style: none; border-bottom-style: solid; border-bottom-width: 2px; box-sizing: border-box; color: var(--_color-text); color-scheme: dark light; cursor: pointer; display: inline-flex; gap: var(--_gap); height: 100%; inline-size: 100%; justify-content: space-between; justify-items: center; outline-color: transparent; outline-offset: -2px; outline-style: solid; outline-width: 2px; padding-block: var(--_padding-block); padding-inline: var(--_padding-inline); position: relative; font-family: inherit; font-size: var(--_font-size); font-weight: var(--_font-weight); line-height: var(--_line-height); transition-property: color, border-color; transition: all 0.4s; &:focus-visible { outline-color: currentColor; border-radius: 6px; overflow: visible; border-color: transparent; } &:hover, &.selected:hover, &:active { background-color: color-mix( in srgb, transparent, var(--gds-color-l3-states-light-hover) ); --_color-border: var(--gds-color-l3-border-secondary); } &.selected { background-color: color-mix( in srgb, transparent, var(--gds-color-l3-states-light-hover) ); --_color-border: var(--gds-color-l3-border-primary); } slot:not([name]) { display: inline-block; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; } } .compact { display: flex; flex-direction: column; --_padding-inline: var(--gds-space-s); --_gap: 1px; font-size: 0.875rem; height: 56px; justify-content: center; & > slot[name] { order: 0; } & > slot:not([name]) { order: 1; } } a { text-decoration: none; } } :disabled { border-color: var(--_color-bg); color: var(--gds-color-l3-content-disabled); pointer-events: none; } @layer a11y { @media (prefers-reduced-motion: reduce) { .button { transition: none; } } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/menu-button/menu-button.styles.ts"}}]},{kind:"javascript-module",path:"src/components/menu-button/menu-button.ts",declarations:[],exports:[{kind:"js",name:"GdsMenuButton",declaration:{name:"GdsMenuButton",module:"src/components/menu-button/menu-button.ts"}}]},{kind:"javascript-module",path:"src/components/popover/backdrop.component.ts",declarations:[{kind:"class",description:"",name:"GdsBackdrop",members:[{kind:"field",name:"show",type:{text:"boolean"},default:"false",attribute:"show",reflects:!0},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"show",type:{text:"boolean"},default:"false",fieldName:"show"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-backdrop",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsBackdrop",declaration:{name:"GdsBackdrop",module:"src/components/popover/backdrop.component.ts"}}]},{kind:"javascript-module",path:"src/components/popover/backdrop.ts",declarations:[],exports:[{kind:"js",name:"GdsBackdrop",declaration:{name:"GdsBackdrop",module:"src/components/popover/backdrop.ts"}}]},{kind:"javascript-module",path:"src/components/popover/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./popover"}},{kind:"js",name:"*",declaration:{name:"*",package:"./backdrop"}}]},{kind:"javascript-module",path:"src/components/popover/popover.component.ts",declarations:[{kind:"class",description:"",name:"GdsPopover",slots:[{description:"Content of the popover",name:""},{description:"Trigger element for the popover. If this slot is occupied, the popover will listen to keydown and click events on the trigger and automtaiclly open when clicked or when the trigger is focused and `ArrowDown` is pressed.",name:"trigger"}],members:[{kind:"field",name:"DefaultMiddleware",type:{text:"Middleware[]"},static:!0,default:"[ offset(8), shift({ crossAxis: true, padding: 8, }), ]",description:"The default set of middleware for Floating UI positioning used by GdsPopover."},{kind:"field",name:"open",type:{text:"boolean"},default:"false",description:"Whether the popover is open.",attribute:"open",reflects:!0},{kind:"field",name:"popupRole",type:{text:"'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'"},default:"'dialog'",description:"This is used to indicate the semantic role of the popover. This will set the `aria-haspopup` attribute on the trigger element.\nRead here for more information: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup",attribute:"popup-role"},{kind:"field",name:"triggerRef",type:{text:"Promise<HTMLElement> | undefined"},description:"Optional way to assign a trigger element for the popover. When using Lit, this can take a value from a `@queryAsync` decorator in order to set the trigger element programatically."},{kind:"field",name:"anchorRef",type:{text:"Promise<HTMLElement> | undefined"},description:"Optional way to assign an anchor element for the popover. When using Lit, this can take a value from a `@queryAsync` decorator in order to set the anchor element programatically."},{kind:"field",name:"label",type:{text:"string | undefined"},default:"undefined",description:"Optional trigger element for the popover.",attribute:"label"},{kind:"field",name:"placement",type:{text:"Placement"},default:"'bottom-start'",description:`The placement of the popover relative to the trigger.
Accepts any of the placements supported by Floating UI.`,attribute:"placement"},{kind:"field",name:"disableMobileStyles",type:{text:"boolean"},default:"false",description:"Whether to use a modal dialog in mobile viewport.",attribute:"disableMobileStyles"},{kind:"field",name:"autofocus",type:{text:"boolean"},default:"false",description:"Whether the popover should autofocus the first slotted child when opened.",attribute:"autofocus"},{kind:"field",name:"calcMinWidth",description:`A callback that returns the minimum width of the popover.
By default, the popover minWidth will be as wide as the trigger element.`},{kind:"field",name:"calcMaxWidth",description:"A callback that returns the maximum width of the popover.\nBy default, the popover maxWidth will be set to `auto` and will grow as needed."},{kind:"field",name:"calcMinHeight",description:"A callback that returns the minimum height of the popover.\nBy default, the popover minHeight will be set to `auto`"},{kind:"field",name:"calcMaxHeight",description:`A callback that returns the maximum height of the popover.
By default, the popover maxHeight will be set to a hard coded pixel value (check source code).`},{kind:"field",name:"nonmodal",type:{text:"boolean"},default:"false",description:`Whether the popover is nonmodal. When true, the popover will not trap focus and other elements
on the page will still be interactable while the popover is open.`,attribute:"nonmodal",reflects:!0},{kind:"field",name:"backdrop",type:{text:"string | undefined"},description:'When this is set to `true`, the `:backdrop` pseudo-element will be visible if the popover is\nin modal mode. When not in modal mode (using the `nonmodal` attribute), this can instead be\nset to a selector matching a `<gds-backdrop>` element, in wich case the popover will take\ncontrol of that backdrop.\n\nExample:\n```html\n<gds-popover backdrop=".my-backdrop">\n  <gds-button slot="trigger">Open</gds-button>\n  <p>Popover content</p>\n</gds-popover>\n<gds-backdrop class="my-backdrop"></gds-backdrop>\n```',attribute:"backdrop"},{kind:"field",name:"floatingUIMiddleware",type:{text:"Middleware[]"},description:`An array of middleware for the Floating UI positioning algorithm. Here you can pass in an array
of middleware to customize positioning to your needs. This array is passed directly to Floting UI,
so you can just follow the documentation here: https://floating-ui.com/docs/middleware

This property does not have a corresponding attribute, so it can only be set in JavaScript.

Defaults to \`[offset(8), flip()]\``},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Fired when the popover is opened or closed. Can be cancelled to prevent the popover from opening or closing. The `detail` object contains the `open` boolean to indicate the result of the state change, and the `reason` string which can be one of `show`, `close`, or `cancel`.",name:"gds-ui-state",reactName:"onGdsUiState",eventName:"GdsUiStateEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"open",type:{text:"boolean"},default:"false",description:"Whether the popover is open.",fieldName:"open"},{name:"popup-role",type:{text:"'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'"},default:"'dialog'",description:"This is used to indicate the semantic role of the popover. This will set the `aria-haspopup` attribute on the trigger element.\nRead here for more information: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup",fieldName:"popupRole"},{name:"label",type:{text:"string | undefined"},default:"undefined",description:"Optional trigger element for the popover.",fieldName:"label"},{name:"placement",type:{text:"Placement"},default:"'bottom-start'",description:`The placement of the popover relative to the trigger.
Accepts any of the placements supported by Floating UI.`,fieldName:"placement"},{name:"disableMobileStyles",type:{text:"boolean"},default:"false",description:"Whether to use a modal dialog in mobile viewport.",fieldName:"disableMobileStyles"},{name:"autofocus",type:{text:"boolean"},default:"false",description:"Whether the popover should autofocus the first slotted child when opened.",fieldName:"autofocus"},{name:"nonmodal",type:{text:"boolean"},default:"false",description:`Whether the popover is nonmodal. When true, the popover will not trap focus and other elements
on the page will still be interactable while the popover is open.`,fieldName:"nonmodal"},{name:"backdrop",type:{text:"string | undefined"},description:'When this is set to `true`, the `:backdrop` pseudo-element will be visible if the popover is\nin modal mode. When not in modal mode (using the `nonmodal` attribute), this can instead be\nset to a selector matching a `<gds-backdrop>` element, in wich case the popover will take\ncontrol of that backdrop.\n\nExample:\n```html\n<gds-popover backdrop=".my-backdrop">\n  <gds-button slot="trigger">Open</gds-button>\n  <p>Popover content</p>\n</gds-popover>\n<gds-backdrop class="my-backdrop"></gds-backdrop>\n```',fieldName:"backdrop"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-popover",customElement:!0}],exports:[{kind:"js",name:"GdsPopover",declaration:{name:"GdsPopover",module:"src/components/popover/popover.component.ts"}}]},{kind:"javascript-module",path:"src/components/popover/popover.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Popover', component: 'gds-popover', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-popover'), }, }",description:"A popover is a transient view that appears above other content. It is used by components such as dropdowns."},{kind:"variable",name:"Usage",type:{text:"Story"},default:"{ ...DefaultParams, }",description:"The popover can be used declaratively by adding a trigger button and content inside the popover element, like in the example below.\n\nIt is also possible to set the trigger and anchor by supplying DOM references (wrapped in promises) to the `triggerRef` and `anchorRef`\nproperties. This is useful when the trigger and anchor needs to be different elements."},{kind:"variable",name:"CancelEvent",type:{text:"Story"},default:'{ ...DefaultParams, render: () => html` <gds-popover id="cancellable" @gds-ui-state=${(e: CustomEvent) => e.detail.reason === \'close\' && e.preventDefault()} > <gds-button rank="secondary" slot="trigger"> Show popover <gds-icon-chevron-bottom slot="trail"></gds-icon-chevron-bottom> </gds-button> <div style="padding: 1rem; padding-top: 0"> <h3>Customized closing behavior</h3> <p> This popover can only be closed by click the button below or hitting escape. </p> <gds-button rank="primary" @click=${() => { ;(document.getElementById(\'cancellable\') as GdsPopover).open = false }} >Close me!</gds-button > </div> </gds-popover>`, }',description:"By default, the popover will close when clicking outside or hitting the escape key. This behavior can be customized by listening to the `gds-ui-state` event and calling `preventDefault()` on the event object when the popover should not close.\n\nFor example:\n\n```html\n<gds-popover"},{kind:"variable",name:"Customization",type:{text:"Story"},default:'{ ...DefaultParams, render: () => html`<gds-div width="700px" height="250px"> <gds-card variant="secondary" width="720px" border="4xs" border-width="0 0 4xs" border-radius="0" padding="0" position="fixed" flex-direction="row" inset="0 auto auto 0" z-index="1000" > <gds-popover> <gds-menu-button slot="trigger"> <gds-icon-chevron-bottom slot="trail"></gds-icon-chevron-bottom> Basic popover </gds-menu-button compact> <div style="padding: 1rem;">Basic popover</div> </gds-popover> <gds-popover nonmodal backdrop="#my-backdrop" .floatingUIMiddleware=${[{ fn: ({ y }) => ({ x: 25, y: y + 8 }) }]} .calcMaxWidth=${() => \'670px\'}> <gds-menu-button slot="trigger"> <gds-icon-chevron-bottom slot="trail"></gds-icon-chevron-bottom> With custom backdrop and positioning middleware </gds-menu-button> <div style="padding: 0 1rem;"> <h3>Customized popover</h3> <p>In this popover, we\'re using custom Floating UI middleware to control the positioning, and <i>calcMaxWidth</i> to set the size.</p> <p>We\'re also using a backdrop element, referenced by the <i>backdrop</i> attribute, to dim the background below the menu bar.</p> </div> </gds-popover> </gds-card> <gds-backdrop id="my-backdrop"></gds-backdrop> </gds-div>`, }',description:"Here is an example of how the popover can be customized with sizing, placement and backdrop."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/popover/popover.stories.ts"}},{kind:"js",name:"Usage",declaration:{name:"Usage",module:"src/components/popover/popover.stories.ts"}},{kind:"js",name:"CancelEvent",declaration:{name:"CancelEvent",module:"src/components/popover/popover.stories.ts"}},{kind:"js",name:"Customization",declaration:{name:"Customization",module:"src/components/popover/popover.stories.ts"}}]},{kind:"javascript-module",path:"src/components/popover/popover.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer base, reset, transitional-styles; @layer base { :host { display: contents; } :host > div:not([hidden]) { display: contents; } :host([open]) dialog { opacity: 1; box-sizing: border-box; /*transform: translate3d(0, 0, 0);*/ visibility: visible; } dialog { display: flex; flex-direction: column; inset: auto; position: fixed; overflow: hidden; padding: 0px; box-sizing: border-box; right: 0; margin: 0; box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.2), 0 1rem 28px rgba(0, 0, 0, 0.15); border-width: 0; border-radius: 0.5rem; } :host([nonmodal]) dialog { z-index: 1; } @media (max-width: 767px) { dialog.use-modal-in-mobile { border-radius: 1rem 1rem 0 0; transition: all 200ms ease; min-width: 100vw; position: fixed; bottom: 0; left: 0; max-height: 50svh; padding-bottom: 0; transform: translateY(0); @starting-style { transform: translateY(100%); } &::backdrop { background-color: rgba(0, 0, 0, 0.3); display: block; position: fixed; opacity: 1; transition: opacity 200ms ease; @starting-style { opacity: 0; } } } } @media (min-width: 768px) { header { display: none; } } header { display: none; } @media (min-width: 768px) { dialog:not(.has-backdrop)::backdrop { background-color: transparent; display: block; position: fixed; } } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/popover/popover.styles.ts"}}]},{kind:"javascript-module",path:"src/components/popover/popover.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/popover/popover.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/popover/popover.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/popover/popover.ts",declarations:[],exports:[{kind:"js",name:"GdsPopover",declaration:{name:"GdsPopover",module:"src/components/popover/popover.ts"}}]},{kind:"javascript-module",path:"src/components/radio/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./radio"}},{kind:"js",name:"*",declaration:{name:"*",package:"./radio-group/radio-group"}}]},{kind:"javascript-module",path:"src/components/radio/radio.component.ts",declarations:[{kind:"class",description:"",name:"GdsRadio",members:[{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label displayed next to the radio button.",attribute:"label"},{kind:"field",name:"supportingText",type:{text:"string"},default:"''",description:`The supporting text displayed below the label.
This text provides additional context or information to the user.`,attribute:"supporting-text"},{kind:"field",name:"value",type:{text:"string"},default:"''",description:"The value of the radio button.",attribute:"value"},{kind:"field",name:"checked",type:{text:"boolean"},default:"false",description:"Whether the radio button is checked or not.",attribute:"checked",reflects:!0},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the radio button is disabled or not.",attribute:"disabled",reflects:!0},{kind:"field",name:"invalid",type:{text:"boolean"},default:"false",description:"Whether the radio button is invalid or not.",attribute:"invalid"},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Dispatched when the radio button is checked.",name:"gds-radio-change",reactName:"onGdsRadioChange",eventName:"GdsRadioChangeEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"label",type:{text:"string"},default:"''",description:"The label displayed next to the radio button.",fieldName:"label"},{name:"supporting-text",type:{text:"string"},default:"''",description:`The supporting text displayed below the label.
This text provides additional context or information to the user.`,fieldName:"supportingText"},{name:"value",type:{text:"string"},default:"''",description:"The value of the radio button.",fieldName:"value"},{name:"checked",type:{text:"boolean"},default:"false",description:"Whether the radio button is checked or not.",fieldName:"checked"},{name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the radio button is disabled or not.",fieldName:"disabled"},{name:"invalid",type:{text:"boolean"},default:"false",description:"Whether the radio button is invalid or not.",fieldName:"invalid"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-radio",customElement:!0}],exports:[{kind:"js",name:"GdsRadio",declaration:{name:"GdsRadio",module:"src/components/radio/radio.component.ts"}}]},{kind:"javascript-module",path:"src/components/radio/radio.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Radio', component: 'gds-radio-group', subcomponents: { GdsRadio: 'gds-radio' }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-radio-group'), }, }",description:`Radio buttons are form controls that allow users to select a single option from a set of mutually exclusive choices.<br/>
They are grouped using a radio group component which manages selection, keyboard navigation, and validation.

Radio groups provide validation and selection management and implements the ElementInternals \`formAssociated\` API.

Groups support vertical and horizontal layouts, and can be sized to fit different space requirements.`},{kind:"variable",name:"RadioButton",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Radio', args: { label: 'Pick an option', supportingText: 'Label support text.', innerHTML: \` <gds-radio label="Radio Option 1" supporting-text="Supporting text" value="1"></gds-radio> <gds-radio label="Radio Option 2" supporting-text="Supporting text" value="2"></gds-radio> <gds-radio label="Radio Option 3" supporting-text="Supporting text" value="3"></gds-radio>\`, }, }`,description:`Radio buttons allow users to select a single option from a list of two or more mutually exclusive options.<br />
Each radio button must have both a label and a value.

Usage:

\`\`\`html
<gds-radio-group label="Select an option">
  <gds-radio label="Option 1" value="1"></gds-radio>
  <gds-radio label="Option 2" value="2"></gds-radio>
</gds-radio-group>
\`\`\`

Interactive example with supporting texts:`},{kind:"variable",name:"Validation",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Validation\', render: () => html` <form method="dialog"> <gds-flex flex-direction="column" align-items="flex-start" gap="m"> <gds-radio-group label="Group Label" supporting-text="Support text for the group" show-extended-supporting-text .validator=${{ validate: (el: GdsRadioGroup) => { if (!el.value) return [ { ...el.validity, valid: false, customError: true }, \'This is required\', ] }, }} > <span slot="extended-supporting-text"> Extended supporting text for the group </span> <gds-radio label="Radio Label" value="1" .invalid=${true} supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="2" supporting-text="Example support text" ></gds-radio> </gds-radio-group> <gds-button type="submit">Submit</gds-button> </gds-flex> </form> `, }',description:`Radio groups support validation using Green Core's [form validation API](/docs/components-form-validation-documentation--docs).

The error message appears below the radio group, and can be set either trough a validator, or explicctly using the using the \`error-message\` attribute.

If you click on 'submit' first on the example below it will validate the radio group and show the error message.`},{kind:"variable",name:"DosAndDonts",type:{text:"Story"},default:'{ ...DefaultParams, name: "Do\'s and dont\'s", render: () => html` <gds-flex gap="xl"> <gds-flex gap="l" flex-direction="column" flex="1"> <gds-card align-items="center" flex-direction="row" gap="2xs" padding="s" variant="positive" > <gds-icon-circle-check></gds-icon-circle-check> <gds-text tag="small">Do provide both Label and Value</gds-text> </gds-card> <gds-card align-items="flex-start" gap="m"> <gds-radio-group label="Group Label" supporting-text="Support text"> <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-radio label="Radio Label" value="1"></gds-radio> <gds-radio label="Radio Label" value="2"></gds-radio> </gds-radio-group> </gds-card> </gds-flex> <gds-flex gap="l" flex-direction="column" flex="1"> <gds-card align-items="center" flex-direction="row" gap="2xs" padding="s" variant="negative" > <gds-icon-cross-small></gds-icon-cross-small> <gds-text tag="small">Never exclude the label</gds-text> </gds-card> <form method="dialog"> <gds-card align-items="flex-start" gap="m"> <gds-radio-group label="Group Label" supporting-text="Support text"> <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-radio value="1"></gds-radio> <gds-radio value="2"></gds-radio> </gds-radio-group> </gds-card> </form> </gds-flex> <gds-flex gap="l" flex-direction="column" flex="1"> <gds-card align-items="center" flex-direction="row" gap="2xs" padding="s" variant="negative" > <gds-icon-cross-small></gds-icon-cross-small> <gds-text tag="small">Never exclude the value </gds-text> </gds-card> <form method="dialog"> <gds-card align-items="flex-start" gap="m"> <gds-radio-group label="Group Label" supporting-text="Support text"> <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-radio label="Radio Label"></gds-radio> <gds-radio label="Radio Label"></gds-radio> </gds-radio-group> </gds-card> </form> </gds-flex> </gds-flex> `, }'},{kind:"variable",name:"Disabled",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Disabled\', render: () => html` <div class="radio-group"> <gds-radio-group label="Group Label" supporting-text="Support text for the group" show-extended-supporting-text value="4" > <span slot="extended-supporting-text"> Extended supporting text for the group </span> <gds-radio label="Radio Label" value="1" disabled supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="2" disabled supporting-text="Example support text" ></gds-radio> </gds-radio-group> </div> `, }',description:`Disabled radio buttons cannot be interacted with and appear visually muted.

In general, this state should never be used. Instead, aim to explain to the user why the choice is wrong in an error message and make sure they understand how to correct it.`},{kind:"variable",name:"Size",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Size\', render: () => html` <div class="radio-group"> <gds-flex gap="xl" margin="0 auto"> <gds-flex gap="s" flex-direction="column" flex="1"> <gds-text tag="small">Size: Large(default)</gds-text> <gds-divider opacity="0.1"></gds-divider> <gds-radio-group label="Group Label" supporting-text="Support text for the group" value="4" show-extended-supporting-text > <span slot="extended-supporting-text"> Extended supporting text for the group </span> <gds-radio label="Radio Label" value="1" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="2" supporting-text="Example support text" ></gds-radio> </gds-radio-group> </gds-flex> <gds-flex gap="s" flex-direction="column" flex="1"> <gds-text tag="small">Size: small</gds-text> <gds-divider opacity="0.1"></gds-divider> <gds-radio-group label="Group Label" supporting-text="Support text for the group" value="4" size="small" show-extended-supporting-text > <span slot="extended-supporting-text"> Extended supporting text for the group </span> <gds-radio label="Radio Label" value="1" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="2" supporting-text="Example support text" ></gds-radio> </gds-radio-group> </gds-flex> </gds-flex> </div> `, }',description:`Radio buttons support two sizes:
- Large (default): Standard size for most use cases
- Small: Compact size for space-constrained layouts

The size can be set on the radio group and applies to all radio buttons within.`},{kind:"variable",name:"Direction",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Direction\', render: () => html` <div class="radio-group"> <gds-flex gap="xl" margin="0 auto"> <gds-flex gap="s" flex-direction="column"> <gds-text tag="small">Column (default)</gds-text> <gds-divider opacity="0.1"></gds-divider> <gds-radio-group label="Group Label" supporting-text="Support text for the group" value="4" show-extended-supporting-text > <span slot="extended-supporting-text"> Extended supporting text for the group </span> <gds-radio label="Radio Label" value="1" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="2" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="3" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="4" supporting-text="Example support text" ></gds-radio> </gds-radio-group> </gds-flex> <gds-flex gap="s" flex="1" flex-direction="column"> <gds-text tag="small">Row</gds-text> <gds-divider opacity="0.1"></gds-divider> <gds-radio-group label="Group Label" supporting-text="Support text for the group" value="4" size="small" direction="row" show-extended-supporting-text > <span slot="extended-supporting-text"> Extended supporting text for the group </span> <gds-radio label="Radio Label" value="1" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="2" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="3" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="4" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="5" supporting-text="Example support text" ></gds-radio> <gds-radio label="Radio Label" value="6" supporting-text="Example support text" ></gds-radio> </gds-radio-group> </gds-flex> </gds-flex> </div> `, }',description:`Radio buttons can be arranged in two directions:
- Column (default): Vertical stacking for clear separation
- Row: Horizontal alignment for compact layouts that will break to new line when not enough space is available

Choose the direction based on available space and number of options.`},{kind:"variable",name:"GroupLabel",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Radio group label\', render: () => html` <div class="radio-group"> <gds-radio-group> <gds-radio label="Radio Label" value="1"></gds-radio> <gds-radio label="Radio Label" value="2"></gds-radio> </gds-radio-group> </div> `, }',description:`While radio groups can be created without a label, it's recommended to always provide one for clarity and accessibility.
The label helps users understand what the options are for.

In certain cases when space is limited, the group label can be omitted.`}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/radio/radio.stories.ts"}},{kind:"js",name:"RadioButton",declaration:{name:"RadioButton",module:"src/components/radio/radio.stories.ts"}},{kind:"js",name:"Validation",declaration:{name:"Validation",module:"src/components/radio/radio.stories.ts"}},{kind:"js",name:"DosAndDonts",declaration:{name:"DosAndDonts",module:"src/components/radio/radio.stories.ts"}},{kind:"js",name:"Disabled",declaration:{name:"Disabled",module:"src/components/radio/radio.stories.ts"}},{kind:"js",name:"Size",declaration:{name:"Size",module:"src/components/radio/radio.stories.ts"}},{kind:"js",name:"Direction",declaration:{name:"Direction",module:"src/components/radio/radio.stories.ts"}},{kind:"js",name:"GroupLabel",declaration:{name:"GroupLabel",module:"src/components/radio/radio.stories.ts"}}]},{kind:"javascript-module",path:"src/components/radio/radio.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, a11y, reset, transitional-styles; @layer a11y { @media (prefers-reduced-motion: reduce) { .radio { transition: none; } } } @layer base { :host([disabled]) { --_radio-label-color: var(--gds-color-l3-content-disabled); } .radio { display: flex; align-items: center; justify-content: center; position: relative; width: var(--radio-disc-size); height: var(--radio-disc-size); margin-block-start: calc(var(--radio-border-width) * 2); cursor: pointer; } .state { display: flex; box-sizing: border-box; backface-visibility: hidden; transition-property: background-color, scale, outline; transition-duration: 248ms; outline-style: solid; outline-offset: calc(-1 * var(--radio-outline-width)); outline-width: var(--radio-outline-width); outline-color: transparent; border-radius: var(--radio-radius); min-width: var(--radio-size); min-height: var(--radio-size); position: absolute; left: calc(* 1 - calc((var(--radio-size) - var(--radio-disc-size)) / 2)); top: calc(* 1 - calc((var(--radio-size) - var(--radio-disc-size)) / 2)); scale: 0.8; } @media (hover: hover) { .radio:hover, :host(:hover) .radio .state { background-color: var(--radio-bg-mix); scale: 1; } } .radio:active .state, :host(:active) .radio .state { background-color: var(--radio-bg-mix-active); } :host(:active:not(:focus-visible)) .radio:active .state, :host(:active:not(:focus-visible)) .radio .state { scale: 0.96; } :host(:focus) { outline: none; } :host(:focus) .radio .state { outline-color: var(--_radio-outline-color); scale: 1; } :host(:not(:focus-visible)) .radio .state { outline-color: transparent; } .disc { width: var(--radio-disc-size); height: var(--radio-disc-size); border-radius: var(--radio-radius); box-shadow: inset 0 0 0 var(--radio-border-width) var(--radio-border-color); background-color: var(--radio-disc-background-color); box-sizing: border-box; transition-property: box-shadow; transition-duration: 248ms; will-change: box-shadow; position: absolute; inset: 0; } :host([checked]) .disc, :host(:active) .disc { box-shadow: inset 0 0 0 var(--radio-border-width-selected) var(--radio-border-color-selected); } :host([disabled]) { pointer-events: none; } :host([disabled]) .radio .disc { box-shadow: none; background-color: var(--gds-color-l3-content-disabled); } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/radio/radio.styles.ts"}}]},{kind:"javascript-module",path:"src/components/radio/radio.ts",declarations:[],exports:[{kind:"js",name:"GdsRadio",declaration:{name:"GdsRadio",module:"src/components/radio/radio.ts"}}]},{kind:"javascript-module",path:"src/components/rich-text/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./rich-text"}}]},{kind:"javascript-module",path:"src/components/rich-text/rich-text.component.ts",declarations:[{kind:"class",description:"`gds-rich-text` can be used to wrap generic HTML content and apply typography styles.\n\nThe wrapped content will render inside the shadowRoot of the `gds-rich-text` element, thereby applying the\ndefault typography styles and standard element styles defined in the Green Design System.",name:"GdsRichText",members:[{kind:"field",name:"captureMode",type:{text:"'clone' | 'move'"},default:"'clone'",description:`Capture mode for the content.

- \`clone\` (default): Clones the content to the shadowRoot.\\
  This is the default and most compatible behaviour, since it leaves the original DOM untouched.
  the downside is that events added through \`addEventListener\` will not be retained in the cloned DOM.

- \`move\`: Moves the content to the inner shadowRoot.\\
  This mode moves the full original sub-tree into the shadowRoot, leaving everything, including event
  listeners, intact.
  This mode is less compatible with some libraries that rely on the original DOM structure, for example React`,attribute:"captureMode"},{kind:"method",name:"querySelectorAll",return:{type:{text:"NodeList"}},parameters:[{name:"selector",type:{text:"string"}}],description:"Forwards the selector to the corresponding function on the inner shadowRoot."},{kind:"method",name:"querySelector",return:{type:{text:"Element | null"}},parameters:[{name:"selector",type:{text:"string"}}],description:"Forwards the selector to the corresponding function on the inner shadowRoot."},{kind:"field",name:"innerHTML",type:{text:"string"},description:"Forwards innerHTML from the inner shadowRoot."},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"captureMode",type:{text:"'clone' | 'move'"},default:"'clone'",description:`Capture mode for the content.

- \`clone\` (default): Clones the content to the shadowRoot.\\
  This is the default and most compatible behaviour, since it leaves the original DOM untouched.
  the downside is that events added through \`addEventListener\` will not be retained in the cloned DOM.

- \`move\`: Moves the content to the inner shadowRoot.\\
  This mode moves the full original sub-tree into the shadowRoot, leaving everything, including event
  listeners, intact.
  This mode is less compatible with some libraries that rely on the original DOM structure, for example React`,fieldName:"captureMode"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-rich-text",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsRichText",declaration:{name:"GdsRichText",module:"src/components/rich-text/rich-text.component.ts"}}]},{kind:"javascript-module",path:"src/components/rich-text/rich-text.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Rich Text', component: 'gds-rich-text', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-rich-text'), }, }",description:`\`gds-rich-text\` can be used to wrap generic HTML content and apply typography styles.

The wrapped content will get captured and transferred to the inner shadowRoot of the \`gds-rich-text\` element.

A typical use case for this component is to wrap a block of HTML content output from a CMS or other source
that you want to apply the design system typography to.

It supports out of the box all heading styles, paragraphs, lists, blockquotes, figures, tables, and more.`},{kind:"variable",name:"Card",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Card', render: (args) => html\` <gds-card> <gds-rich-text> <h1> The Starship <small>SS Endeavor</small> <mark>Exploration Class</mark> </h1> <h2>Heading one</h2> <h3>Heading test</h3> <p> The <strong>SS Endeavor</strong> is a state-of-the-art exploration class starship designed for deep space missions. Equipped with advanced technology and robust systems, it aims to expand our understanding of the universe. With a focus on <em>interstellar travel</em>, the SS Endeavor features a unique propulsion system that allows for faster-than-light travel. Its mission is to explore uncharted territories and gather data on distant celestial bodies. <a href="#">Link</a> </p> <figure> <img src="https://placehold.co/600x400" alt="SS Endeavor Starship" /> <figcaption> Artist's rendition of the SS Endeavor in flight. </figcaption> </figure> <blockquote> <p> "The SS Endeavor represents the pinnacle of human engineering and ambition. It is not just a vessel; it is our gateway to the stars." <cite>— Dr. Amelia Carter, Chief Engineer</cite> </p> </blockquote> <p> For detailed specifications, please refer to the <a href="javascript:;" onclick="console.log('Accessing starship specifications')" >technical documentation</a >. The SS Endeavor is equipped with cutting-edge systems that ensure the safety and efficiency of its crew during long-duration missions. </p> <p> Furthermore, <mark>SS Endeavor</mark> is designed with a modular approach, allowing for easy upgrades and maintenance. </p> <h2>Specifications</h2> <ul> <li> Length: 150 meters Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </li> <li>Width: 50 meters</li> <li>Height: 30 meters</li> <li>Crew Capacity: 100 personnel</li> <li>Propulsion: Quantum Slipstream Drive</li> <li>Maximum Speed: 10 light-years per hour</li> </ul> <hr /> <h2>One digit list</h2> <ol> <li> Conduct scientific research on exoplanets, focusing on atmospheric composition <a href="#">Inline link</a> and potential habitability. </li> <li> Establish contact with potential extraterrestrial civilizations through advanced signal detection and transmission protocols. </li> <li> Collect comprehensive data on diverse cosmic phenomena, including black hole dynamics, supernova remnants, and dark matter distribution. </li> <li> Test new technologies in real-world scenarios, specifically advanced propulsion systems for interstellar travel. </li> <li> Test new technologies in real-world scenarios, implementing closed-loop life support systems for long-duration space missions. </li> </ol> <h2>Two digit list</h2> <ol> <li> Conduct scientific research on exoplanets, focusing on atmospheric composition <a href="#">Inline link</a> and potential habitability. </li> <li> Establish contact with potential extraterrestrial civilizations through advanced signal detection and transmission protocols. </li> <li> Collect comprehensive data on diverse cosmic phenomena, including black hole dynamics, supernova remnants, and dark matter distribution. </li> <li> Test new technologies in real-world scenarios, specifically advanced propulsion systems for interstellar travel. </li> <li> Test new technologies in real-world scenarios, implementing closed-loop life support systems for long-duration space missions. </li> <li> Test new technologies in real-world scenarios, evaluating the effectiveness of advanced radiation shielding materials. </li> <li> Test new technologies in real-world scenarios, deploying autonomous robotic systems for deep-space exploration and resource extraction. </li> <li> Test new technologies in real-world scenarios, analyzing the performance of quantum communication networks in space. </li> <li> Test new technologies in real-world scenarios, using advanced AI for real time data analysis and decision making. </li> <li> Investigate the origins and evolution of the universe through high-resolution astronomical observations. </li> <li> Develop and deploy advanced sensor arrays for detecting gravitational waves and other subtle cosmic signals. </li> <li> Analyze asteroid compositions to understand the early solar system and potential resources. </li> <li> Map the galactic structure with unprecedented accuracy, revealing hidden star systems and nebula. </li> <li> Study the effects of prolonged space travel on human physiology and psychology, preparing for future interstellar journeys. </li> <li> Create detailed models of planetary formation and evolution, improving our understanding of planet diversity. </li> <li> Explore the possibility of utilizing advanced energy sources, like fusion reactors, for deep space exploration. </li> </ol> <h3>Research Areas</h3> <details name="named-details"> <summary>Focus Areas</summary> <p>The SS Endeavor will focus on the following research areas:</p> <ul> <li>Astrobiology</li> <li>Exoplanetary geology</li> <li>Astrophysics and cosmology</li> <li>Space weather and its effects on technology</li> </ul> </details> <details name="named-details"> <summary>Exploration Objectives</summary> <p> The SS Endeavor aims to achieve significant breakthroughs in the following exploration objectives: </p> <ul> <li> Mapping the surface of Mars for potential human colonization </li> <li>Studying the atmospheres of gas giants</li> <li>Investigating the potential for life on Europa</li> <li>Understanding the dynamics of asteroid belts</li> </ul> </details> <details name="named-details"> <summary>Technological Innovations</summary> <p> The SS Endeavor will develop and implement cutting-edge technologies in these areas: </p> <ul> <li>Advanced propulsion systems for deep space travel</li> <li>Autonomous robotic systems for planetary exploration</li> <li> Next-generation communication systems for interstellar data transmission </li> <li>Innovative life support systems for long-duration missions</li> </ul> </details> <p> In summary, the <strong>SS Endeavor</strong> is poised to lead humanity's next great leap into the cosmos. <s>With the right investments and support,</s> its missions will pave the way for future exploration and discovery. <mark>Join us</mark> as we embark on this exciting journey into the unknown. </p> <table> <thead> <tr> <th>Component</th> <th>Details</th> <th>Function</th> </tr> </thead> <tbody> <tr> <td>Life Support System</td> <td>Advanced recycling and oxygen generation</td> <td>Ensures crew survival during long missions</td> </tr> <tr> <td>Navigation System</td> <td>AI-assisted star mapping</td> <td>Guides the ship through uncharted space</td> </tr> <tr> <td>Defensive Systems</td> <td>Energy shields and hull plating</td> <td>Protects against cosmic threats</td> </tr> <tr> <td>Scientific Labs</td> <td>Equipped for various research disciplines</td> <td>Facilitates on-board experiments</td> </tr> <tr> <td>Propulsion System</td> <td>Quantum Slipstream Drive</td> <td>Enables faster-than-light travel</td> </tr> </tbody> </table> <h2>Iframe</h2> <iframe src="https://example.com/" height="400"></iframe> </gds-rich-text> </gds-card> \`, }`},{kind:"variable",name:"Headings",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Headings', render: (args) => html` <gds-rich-text> <!-- <h1>The Starship SS Endeavor Exploration Class</h1> <h2>Mission Alpha Centauri Deep Space Exploration</h2> <h3>Rocket Falcon Heavy Launch Vehicle</h3> <h4>Engine Raptor Next-Gen Propulsion</h4> <h5>Module Dragon Crew Transport</h5> <h6>Satellite Starlink Global Internet</h6> --> <h1>Heading 1</h1> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <h2>Heading 2</h2> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <h3>Heading 3</h3> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <h4>Heading 4</h4> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <h5>Heading 5</h5> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <h6>Heading 6</h6> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> </gds-rich-text> `, }",description:"`gds-rich-text` can be used to wrap generic HTML content and apply typography styles.\nIt supports out of the box all heading styles from h1 to h6 based on the green design system typography styles."},{kind:"variable",name:"Lists",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Lists', render: (args) => html` <gds-rich-text> <h2>Key Technologies in Space Exploration</h2> <ul> <li>Rocket propulsion systems</li> <li>Life support systems</li> <li>Communication satellites</li> <li>Space habitats and modules</li> <li>Robotic exploration rovers</li> <li>Advanced materials for spacecraft</li> </ul> <h2>Major Milestones in Space Exploration</h2> <ol> <li>Launch of Sputnik 1 (1957) - The first artificial satellite.</li> <li> First human in space (Yuri Gagarin, 1961) - Historic manned spaceflight. </li> <li> Apollo 11 Moon landing (1969) - First humans to walk on the Moon. </li> <li> Launch of the Space Shuttle (1981) - Introduction of reusable spacecraft. </li> <li> Mars Rover Curiosity landing (2012) - Advanced exploration of the Martian surface. </li> <li> Launch of the James Webb Space Telescope (2021) - Next-generation space observatory. </li> </ol> </gds-rich-text> `, }",description:"`gds-rich-text` has built-in support for ordered and unordered lists.\nIt applies consistent spacing and typography styles to list items."},{kind:"variable",name:"Details",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Details\', render: (args) => html` <gds-rich-text> <h3>Research Areas</h3> <details name="named-details"> <summary>Focus Areas</summary> <p>The SS Endeavor will focus on the following research areas:</p> <ul> <li>Astrobiology</li> <li>Exoplanetary geology</li> <li>Astrophysics and cosmology</li> <li>Space weather and its effects on technology</li> </ul> </details> <details name="named-details"> <summary>Exploration Objectives</summary> <p> The SS Endeavor aims to achieve significant breakthroughs in the following exploration objectives: </p> <ul> <li>Mapping the surface of Mars for potential human colonization</li> <li>Studying the atmospheres of gas giants</li> <li>Investigating the potential for life on Europa</li> <li>Understanding the dynamics of asteroid belts</li> </ul> </details> <details name="named-details"> <summary>Technological Innovations</summary> <p> The SS Endeavor will develop and implement cutting-edge technologies in these areas: </p> <ul> <li>Advanced propulsion systems for deep space travel</li> <li>Autonomous robotic systems for planetary exploration</li> <li> Next-generation communication systems for interstellar data transmission </li> <li>Innovative life support systems for long-duration missions</li> </ul> </details> </gds-rich-text> `, }',description:"`gds-rich-text` has built-in support for details html element.\n\nThe details element is a disclosure widget from HTML5 that can be used to hide or show additional content."},{kind:"variable",name:"Blockquote",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Blockquote', render: (args) => html\` <gds-rich-text> <h2>Inspirational Quotes from Space Exploration Pioneers</h2> <blockquote> <p> "That's one small step for [a] man, one giant leap for mankind." <cite>— Neil Armstrong, Apollo 11 Astronaut</cite> </p> </blockquote> <blockquote> <p> "The important achievement of Apollo was demonstrating that humanity is not forever chained to this planet and our visions go rather further than that and our opportunities are unlimited." <cite>— Neil Armstrong</cite> </p> </blockquote> <blockquote> <p> "To confine our attention to terrestrial matters would be to limit the human spirit." <cite>— Stephen Hawking, Theoretical Physicist</cite> </p> </blockquote> <blockquote> <p> "The Earth is the cradle of humanity, but mankind cannot stay in the cradle forever." <cite>— Konstantin Tsiolkovsky, Rocket Scientist</cite> </p> </blockquote> <blockquote> <p> "I don't want to be an astronaut. I want to be a space explorer." <cite>— Chris Hadfield, Astronaut</cite> </p> </blockquote> </gds-rich-text> \`, }`,description:"`gds-rich-text` has built-in support blockquote element."},{kind:"variable",name:"Formatting",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Formatting', render: (args) => html` <gds-rich-text> <h3>Key Concepts in Space Exploration</h3> <p> The field of space exploration is constantly evolving. It is essential to understand the <strong>fundamental principles</strong> that guide our missions. For example, <mark>propulsion technology</mark> is crucial for <em>successful space travel</em>. Moreover, the study of <s>black holes</s> has revealed significant insights into the <small>nature of the universe</small>. </p> <p> As we continue to explore the cosmos, <strong>collaboration</strong> among international space agencies is vital. Together, we can achieve <mark>greater advancements</mark> in our understanding of the universe. </p> </gds-rich-text> `, }",description:"`gds-rich-text` has built-in support for inline formatting tags such as `s`, `mark`, `strong`,`small` and `em`."},{kind:"variable",name:"Table",type:{text:"Story"},default:"{ ...DefaultParams, name: 'Table', render: (args) => html` <gds-rich-text> <h2>Significant Space Missions</h2> <table> <thead> <tr> <th>Mission Name</th> <th>Launch</th> <th>Objectives</th> <th>Outcomes</th> </tr> </thead> <tbody> <tr> <td>Apollo 11</td> <td>1969</td> <td>First manned Moon landing</td> <td> Successful lunar landing; Neil Armstrong and Buzz Aldrin walked on the Moon. </td> </tr> <tr> <td>Voyager 1</td> <td>1977</td> <td>Explore outer planets and interstellar space</td> <td> Provided detailed images of Jupiter and Saturn; currently in interstellar space. </td> </tr> <tr> <td>Hubble Space Telescope</td> <td>1990</td> <td>Observe distant galaxies and cosmic phenomena</td> <td> Revolutionized astronomy; provided stunning images and data. </td> </tr> <tr> <td>Curiosity Rover</td> <td>2011</td> <td>Explore Mars' surface and assess habitability</td> <td> Confirmed the presence of water; conducted extensive geological analysis. </td> </tr> <tr> <td>James Webb Space Telescope</td> <td>2021</td> <td>Observe the early universe and exoplanets</td> <td>Expected to provide unprecedented insights into the cosmos.</td> </tr> </tbody> </table> </gds-rich-text> `, }",description:"`gds-rich-text` has built-in support for tables."},{kind:"variable",name:"Basic",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Theme', render: (args) => html\` <gds-card variant="tertiary"> <gds-rich-text> <h1> The Starship <small>SS Endeavor</small> <mark>Exploration Class</mark> </h1> <h2>Heading one</h2> <h3>Heading test</h3> <p> The <strong>SS Endeavor</strong> is a state-of-the-art exploration class starship designed for deep space missions. Equipped with advanced technology and robust systems, it aims to expand our understanding of the universe. With a focus on <em>interstellar travel</em>, the SS Endeavor features a unique propulsion system that allows for faster-than-light travel. Its mission is to explore uncharted territories and gather data on distant celestial bodies. <a href="#">Link</a> </p> <figure> <img src="https://placehold.co/600x400" alt="SS Endeavor Starship" /> <figcaption> Artist's rendition of the SS Endeavor in flight. </figcaption> </figure> <blockquote> <p> "The SS Endeavor represents the pinnacle of human engineering and ambition. It is not just a vessel; it is our gateway to the stars." <cite>— Dr. Amelia Carter, Chief Engineer</cite> </p> </blockquote> <p> For detailed specifications, please refer to the <a href="javascript:;" onclick="console.log('Accessing starship specifications')" >technical documentation</a >. The SS Endeavor is equipped with cutting-edge systems that ensure the safety and efficiency of its crew during long-duration missions. </p> <p> Furthermore, <mark>SS Endeavor</mark> is designed with a modular approach, allowing for easy upgrades and maintenance. </p> <h2>Specifications</h2> <ul> <li> Length: 150 meters Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </li> <li>Width: 50 meters</li> <li>Height: 30 meters</li> <li>Crew Capacity: 100 personnel</li> <li>Propulsion: Quantum Slipstream Drive</li> <li>Maximum Speed: 10 light-years per hour</li> </ul> <hr /> <h2>Mission Objectives</h2> <ol> <li>Conduct scientific research on exoplanets.</li> <li> Establish contact with potential extraterrestrial civilizations. </li> <li>Collect data on cosmic phenomena.</li> <li>Test new technologies in real-world scenarios.</li> </ol> <h3>Research Areas</h3> <details name="named-details"> <summary>Focus Areas</summary> <p>The SS Endeavor will focus on the following research areas:</p> <ul> <li>Astrobiology</li> <li>Exoplanetary geology</li> <li>Astrophysics and cosmology</li> <li>Space weather and its effects on technology</li> </ul> </details> <details name="named-details"> <summary>Exploration Objectives</summary> <p> The SS Endeavor aims to achieve significant breakthroughs in the following exploration objectives: </p> <ul> <li> Mapping the surface of Mars for potential human colonization </li> <li>Studying the atmospheres of gas giants</li> <li>Investigating the potential for life on Europa</li> <li>Understanding the dynamics of asteroid belts</li> </ul> </details> <details name="named-details"> <summary>Technological Innovations</summary> <p> The SS Endeavor will develop and implement cutting-edge technologies in these areas: </p> <ul> <li>Advanced propulsion systems for deep space travel</li> <li>Autonomous robotic systems for planetary exploration</li> <li> Next-generation communication systems for interstellar data transmission </li> <li>Innovative life support systems for long-duration missions</li> </ul> </details> <p> In summary, the <strong>SS Endeavor</strong> is poised to lead humanity's next great leap into the cosmos. <s>With the right investments and support,</s> its missions will pave the way for future exploration and discovery. <mark>Join us</mark> as we embark on this exciting journey into the unknown. </p> <table> <thead> <tr> <th>Component</th> <th>Details</th> <th>Function</th> </tr> </thead> <tbody> <tr> <td>Life Support System</td> <td>Advanced recycling and oxygen generation</td> <td>Ensures crew survival during long missions</td> </tr> <tr> <td>Navigation System</td> <td>AI-assisted star mapping</td> <td>Guides the ship through uncharted space</td> </tr> <tr> <td>Defensive Systems</td> <td>Energy shields and hull plating</td> <td>Protects against cosmic threats</td> </tr> <tr> <td>Scientific Labs</td> <td>Equipped for various research disciplines</td> <td>Facilitates on-board experiments</td> </tr> <tr> <td>Propulsion System</td> <td>Quantum Slipstream Drive</td> <td>Enables faster-than-light travel</td> </tr> </tbody> </table> <h2>Iframe</h2> <iframe src="https://example.com/" height="400"></iframe> </gds-rich-text> </gds-card> \`, }`,description:`Rich text can be used with other components to create engaging content.
In this example, we combine rich text with a card component to showcase how colors will be applied.

Example:

\`\`\`html
<gds-card variant="tertiary">
 <gds-rich-text>
   ...
  </gds-rich-text>
</gds-card>
\`\`\``}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/rich-text/rich-text.stories.ts"}},{kind:"js",name:"Card",declaration:{name:"Card",module:"src/components/rich-text/rich-text.stories.ts"}},{kind:"js",name:"Headings",declaration:{name:"Headings",module:"src/components/rich-text/rich-text.stories.ts"}},{kind:"js",name:"Lists",declaration:{name:"Lists",module:"src/components/rich-text/rich-text.stories.ts"}},{kind:"js",name:"Details",declaration:{name:"Details",module:"src/components/rich-text/rich-text.stories.ts"}},{kind:"js",name:"Blockquote",declaration:{name:"Blockquote",module:"src/components/rich-text/rich-text.stories.ts"}},{kind:"js",name:"Formatting",declaration:{name:"Formatting",module:"src/components/rich-text/rich-text.stories.ts"}},{kind:"js",name:"Table",declaration:{name:"Table",module:"src/components/rich-text/rich-text.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/rich-text/rich-text.stories.ts"}}]},{kind:"javascript-module",path:"src/components/rich-text/rich-text.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` :host { font-size: var(--gds-text-size-body-m); line-height: var(--gds-text-line-height-body-m); --default-border: 1px solid color-mix(in srgb, currentColor, transparent 80%); letter-spacing: 0.0125rem; display: block; } h1, h2, h3, h4, h5, h6 { margin-top: var(--gds-space-2xl); margin-bottom: var(--gds-space-xs); } :is(h1, h2, h3, h4, h5, h6):first-child { margin-top: unset; } h1 + h2 { margin-top: 0; } h2 + h3 { margin-top: 0; } h3 + h4 { margin-top: 0; } h4 + h5 { margin-top: 0; } h4 + h5 { margin-top: 0; } h5 + h6 { margin-top: 0; } p { margin: 0; margin-bottom: var(--gds-space-xs); max-width: 80ch; } blockquote { margin: unset; margin-block: 2lh; border-left: 0.2rem solid currentColor; padding-left: 2ch; max-width: 40ch; } hr { border: none; border-top: var(--default-border); margin: var(--gds-space-xl) 0; } s { text-decoration: underline; text-decoration-skip-ink: none; text-underline-offset: -0.22lh; } mark { color: currentColor; background-color: color-mix(in srgb, currentColor, transparent 80%); } /* * lists * ----------------------------------------------------------- */ ul, ol { padding-inline-start: 2ch; margin: unset; margin-bottom: 1lh; max-width: 80ch; } ol { list-style-type: none; counter-reset: ordered-list; margin: unset; padding: unset; } ol li { padding-left: 3.6ch; position: relative; } ol li:before { counter-increment: ordered-list; content: counter(ordered-list) '.'; left: 0.2rem; position: absolute; } ol:not(:has(li:nth-child(10))) li { padding-left: 2.4ch; } ol:has(li:nth-child(10)) li:nth-child(-n + 9):before { left: 1.4ch; } li { padding: 0 0 0.3lh 0; } ul li:last-child { padding: 0; } ul li::marker { content: '– '; } /* * figure and image * ----------------------------------------------------------- */ img { display: block; border-radius: var(--gds-space-xs); } figure { margin: 0; padding: 0; margin-top: var(--gds-space-xl); } figcaption { font-size: smaller; margin-block-start: var(--gds-space-xs); } /* * table * ----------------------------------------------------------- */ table { border-collapse: separate; border-spacing: 0; width: 100%; border: var(--default-border); border-radius: var(--gds-space-s); margin-top: var(--gds-space-xl); } th { font-weight: var(--gds-text-weight-book); text-align: left; border-bottom: var(--default-border); border-left: transparent; border-right: transparent; color: currentColor; } th:not(:last-child) { border-right: var(--default-border); } th, td { padding: 0.3lh 2ch; } td:not(:last-child) { border-right: var(--default-border); } tr:nth-child(even) td { background: color-mix(in srgb, currentColor, transparent 95%); } /* * Details * ----------------------------------------------------------- */ details { border-top: solid var(--gds-space-4xs) color-mix(in srgb, currentColor, transparent 90%); font-size: var(--gds-text-size-body-m); line-height: var(--gds-text-line-height-body-m); } summary { font-weight: var(--gds-text-weight-regular); list-style: none; padding: 0.4lh 0.2ch; font-size: var(--gds-text-size-body-l); line-height: var(--gds-text-line-height-body-l); color: currentColor; display: flex; justify-content: space-between; align-items: center; cursor: pointer; user-select: none; outline-offset: var(--gds-space-2xs); outline-color: currentColor; padding-inline: var(--gds-space-m); } details summary::-webkit-details-marker { display: none; } summary:focus-visible { border-radius: var(--gds-space-2xs); } details:hover summary { background: color-mix(in srgb, currentColor, transparent 95%); } summary::after { content: '+'; display: flex; align-items: center; justify-content: center; width: 24px; height: 24px; font-weight: var(--gds-text-weight-regular); font-size: var(--gds-text-size-body-l); } details[open] summary::after { content: '-'; } details[open] { border-bottom: var(--gds-space-4xs) solid color-mix(in srgb, currentColor, transparent 95%); padding-bottom: 0.4lh; background: color-mix(in srgb, currentColor, transparent 95%); } details[open] > *:not(summary) { margin-left: var(--gds-space-m); } details[open] summary { margin-bottom: 0.4lh; } details[open] + details { border: none; } details:last-of-type { border-bottom: var(--gds-space-4xs) solid color-mix(in srgb, currentColor, transparent 90%); margin-bottom: var(--gds-space-xl); } a { color: currentColor; text-decoration-color: currentColor; } /* * Iframe */ iframe { border: var(--gds-space-4xs) solid var(--gds-color-l2-border-primary); border-radius: var(--gds-space-xs); min-width: 100%; margin-bottom: var(--gds-space-l); } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/rich-text/rich-text.styles.ts"}}]},{kind:"javascript-module",path:"src/components/rich-text/rich-text.ts",declarations:[],exports:[{kind:"js",name:"GdsRichText",declaration:{name:"GdsRichText",module:"src/components/rich-text/rich-text.ts"}}]},{kind:"javascript-module",path:"src/components/segmented-control/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./segmented-control"}}]},{kind:"javascript-module",path:"src/components/segmented-control/segmented-control.component.ts",declarations:[{kind:"class",description:"",name:"GdsSegmentedControl",slots:[{description:"Segments to display in the control",name:""}],members:[{kind:"field",name:"size",type:{text:"'small' | 'medium'"},default:"'medium'",description:"Size of the segmented control",attribute:"size",reflects:!0},{kind:"field",name:"value",description:`The value of the currently selected segment. Setting this property will
select the segment with the matching value.`,attribute:"value"},{kind:"field",name:"segments",description:"Returns the segments in the control",readonly:!0},{kind:"field",name:"intersectionObserver",type:{text:"IntersectionObserver | null"},default:"null"},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{description:"Fires when the selected segment is changed",name:"change",reactName:"onChange",eventName:"ChangeEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"size",type:{text:"'small' | 'medium'"},default:"'medium'",description:"Size of the segmented control",fieldName:"size",attribute:"size"},{name:"value",description:`The value of the currently selected segment. Setting this property will
select the segment with the matching value.`,fieldName:"value",attribute:"value"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-segmented-control",customElement:!0}],exports:[{kind:"js",name:"GdsSegmentedControl",declaration:{name:"GdsSegmentedControl",module:"src/components/segmented-control/segmented-control.component.ts"}}]},{kind:"javascript-module",path:"src/components/segmented-control/segmented-control.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Segmented Control', component: 'gds-segmented-control', subcomponents: { GdsSegment: 'gds-segment' }, parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-segmented-control'), }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/segmented-control)
&nbsp;|&nbsp;
[Usage guidelines](https://designlibrary.sebgroup.com/components/component-segmented-control)

A segmented control is a group of 2-5 buttons that lets the user switch views or sort elements.`},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"},{kind:"variable",name:"Usage",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-segmented-control value="2" onchange="document.getElementById(\'sel\').innerText = event.target.value" > <gds-segment value="1">First</gds-segment> <gds-segment value="2">Second</gds-segment> <gds-segment value="3">Third</gds-segment> <gds-segment value="4">Fourth</gds-segment> <gds-segment value="5">Fifth</gds-segment> </gds-segmented-control> <div style="margin-top: 1rem">Selected: <span id="sel">2</span></div> `, }',description:"The `gds-segmented-control` element has a value-property that corresponds to the value of the selected segment.\nEach segment also needs to have a unique value-property set so thateach can be distinguished."},{kind:"variable",name:"Small",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <gds-segmented-control size="small" value="2"> <gds-segment value="1">First</gds-segment> <gds-segment value="2">Second</gds-segment> <gds-segment value="3">Third</gds-segment> </gds-segmented-control> `, }',description:"There is a small and a medium version which can be configured using the `size` attribute."},{kind:"variable",name:"SegmentSize",type:{text:"Story"},default:'{ ...DefaultParams, render: (args) => html` <div style="width:90vw; max-width: 556px;"> <gds-segmented-control value="1"> <gds-segment value="1" min-width="200px">Min-width</gds-segment> <gds-segment value="flaschenabfüllmaschine" max-width="150px" >Flaschenabfüllmaschine</gds-segment > <gds-segment value="longlonglong">Long long label</gds-segment> <gds-segment value="longlabel">An even longer long label</gds-segment> <gds-segment value="pinetrees">Pinetrees</gds-segment> </gds-segmented-control> </div> `, }',description:"Segments can have different widths depending on the content, and if there are too many\nsegments to fit in the container, scroll buttons will appear to the left and/or right.\n\nSegment with can also be controlled individually on the segments using the `width`,\n`min-width` and `max-width` Style Expression properties."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/segmented-control/segmented-control.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/segmented-control/segmented-control.stories.ts"}},{kind:"js",name:"Usage",declaration:{name:"Usage",module:"src/components/segmented-control/segmented-control.stories.ts"}},{kind:"js",name:"Small",declaration:{name:"Small",module:"src/components/segmented-control/segmented-control.stories.ts"}},{kind:"js",name:"SegmentSize",declaration:{name:"SegmentSize",module:"src/components/segmented-control/segmented-control.stories.ts"}}]},{kind:"javascript-module",path:"src/components/segmented-control/segmented-control.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/segmented-control/segmented-control.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/segmented-control/segmented-control.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/segmented-control/segmented-control.ts",declarations:[],exports:[{kind:"js",name:"GdsSegmentedControl",declaration:{name:"GdsSegmentedControl",module:"src/components/segmented-control/segmented-control.ts"}}]},{kind:"javascript-module",path:"src/components/select/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./select"}}]},{kind:"javascript-module",path:"src/components/select/select.component.ts",declarations:[{kind:"class",description:"",name:"GdsSelect",slots:[{description:"Default slot for the native select element",name:""},{description:"Slot for leading content (e.g., icons)",name:"lead"}],events:[{type:{text:"CustomEvent"},description:"Fired when the selection changes with detail: { value: string }",name:"change",reactName:"onChange",eventName:"ChangeEvent"},{type:{text:"CustomEvent"},description:"Fired on input with detail: { value: string }",name:"input",reactName:"onInput",eventName:"InputEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"Select",module:"src/components/select/select.component.ts"},tagName:"gds-select",customElement:!0,members:[{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"supportingText",type:{text:"string"},default:"''",description:`The supporting text displayed between the label and the field.
This text provides additional context or information to the user.`,attribute:"supporting-text",inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{kind:"field",name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Controls the font-size of texts and height of the field.",attribute:"size",inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{kind:"field",name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",attribute:"plain",inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{kind:"field",name:"selectElement",type:{text:"HTMLSelectElement | undefined"},description:"Reference to the native select element.",inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{kind:"field",name:"value",description:`The value of the select element.
This property can be either a single value or an array of values, depending on the multiple attribute of the select element.

Only use this property, and not the value property of the wrapped select element.`,attribute:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"displayValue",description:`Returns the display value for the select component.
For single-select mode, this is the selected option text.
For multi-select mode, this is a comma-separated list of selected option texts.`,readonly:!0,inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{kind:"field",name:"multiple",description:"Wheter the select element is in multiple selection mode.",readonly:!0,inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{kind:"method",name:"formResetCallback",return:{type:{text:"void"}},description:"Handles form reset events by selecting the first option.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"_getValidityAnchor",inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{kind:"field",name:"formAssociated",type:{text:"boolean"},static:!0,default:"true",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validator",type:{text:"GdsValidator | undefined"},description:"A validator that can be used to validate the form control and set an error message.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",attribute:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"errorMessage",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,attribute:"error-message",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",attribute:"aria-invalid",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"name",type:{text:"string"},default:"''",attribute:"name",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",attribute:"disabled",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"form",description:"The form element that the form control is associated with.",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validity",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validationMessage",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"willValidate",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"checkValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"reportValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formAssociatedCallback",parameters:[{name:"form",optional:!0,type:{text:"HTMLFormElement"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"supporting-text",type:{text:"string"},default:"''",description:`The supporting text displayed between the label and the field.
This text provides additional context or information to the user.`,fieldName:"supportingText",inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Controls the font-size of texts and height of the field.",fieldName:"size",inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",fieldName:"plain",inheritedFrom:{name:"Select",module:"src/components/select/select.component.ts"}},{name:"value",description:`The value of the select element.
This property can be either a single value or an array of values, depending on the multiple attribute of the select element.

Only use this property, and not the value property of the wrapped select element.`,fieldName:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"aria-invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",fieldName:"invalid",attribute:"aria-invalid",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",fieldName:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"error-message",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,fieldName:"errorMessage",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",fieldName:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"name",type:{text:"string"},default:"''",fieldName:"name",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",fieldName:"disabled",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsSelect",declaration:{name:"GdsSelect",module:"src/components/select/select.component.ts"}}]},{kind:"javascript-module",path:"src/components/select/select.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Select', component: 'gds-select', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-select'), }, }",description:`\`gds-select\` is a wrapper component for the native select element.

Use this component instead of \`<gds-dropdown>\` when you need to leverage the inherent behavior of the native select element, for example when native accessibility features, some of which are not currently replicable in custom dropdowns, are required. Usability on mobile devices is also sometimes better with native select elements.

Don't use this component when you need to customize the dropdown behavior or appearance, or when you need to display complex content in the dropdown, or require multi-select functionality. While the native select element does support multi-select, it is not recommended for use in most cases.

The wrapped select element will be cloned into the component's shadow DOM. Therefore, event listeners should only be added on the host
element, and not on the enclosed select element. Also, state should also be handled only through the host.
Setting value or selected props on the select element will not work as expected.`},{kind:"variable",name:"Default",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Select', args: { label: 'Label text', supportingText: 'Supporting text', value: '', innerHTML: \` <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-icon-books slot="lead"></gds-icon-books> <select> <option value="">Select a value</option> <optgroup label="Physics"> <option value="quantum-mechanics">Quantum Mechanics</option> <option value="relativity">Relativity</option> </optgroup> <optgroup label="Chemistry"> <option value="organic-chemistry">Organic Chemistry</option> <option value="inorganic-chemistry">Inorganic Chemistry</option> </optgroup> <optgroup label="Biology"> <option value="genetics">Genetics</option> <option value="microbiology">Microbiology</option> <option value="ecology">Ecology</option> </optgroup> </select> \`, }, }`,description:"Basic example showing the select component with a label, supporting text and a lead icon.\nThe wrapped `<select>` element is making use of `<optgroup>` elements to group the options."},{kind:"variable",name:"Option",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Options\', render: () => html` <gds-flex> <gds-select label="Label text" supporting-text="Supporting text"> <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-icon-square-grid-circle slot="lead"></gds-icon-square-grid-circle> <select> <optgroup label="Astronomy"> <option value="cosmology">Cosmology</option> <option value="astrophysics">Astrophysics</option> </optgroup> <optgroup label="Geology"> <option value="volcanology">Volcanology</option> <option value="seismology">Seismology</option> </optgroup> </select> </gds-select> </gds-flex> `, }',description:"> In web components using Shadow DOM, elements cannot be associated with each other across Shadow DOM boundaries. This is why you need to wrap a full native `select` element and it's options, rather than just putting options directly under `<gds-select>`. If placed in a slot, options would not be picked up due to the Shadow DOM encapsulation."},{kind:"variable",name:"Lead",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Lead Icon\', render: () => html` <gds-flex> <gds-select label="Label text" supporting-text="Supporting text"> <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-icon-brand-green slot="lead"></gds-icon-brand-green> <select> <option value="green">Green Design System</option> <option value="carbon">Carbon Design System</option> </select> </gds-select> </gds-flex> `, }',description:`The lead icon is displayed to the left of the select field.
<br>It can be used to provide additional context or to visually represent the select field's purpose.
<br>It is set by adding an icon component to the 'lead' slot.`},{kind:"variable",name:"Disabled",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Disabled\', render: () => html` <gds-flex> <gds-select disabled label="Label text" supporting-text="Supporting text"> <span slot="extended-supporting-text" >Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-icon-lightning slot="lead"></gds-icon-lightning> <select> <option value="thunder">Thunder</option> <option value="lightning">Lightning</option> </select> </gds-select> </gds-flex> `, }',description:"The `disabled` property can be set to disable the `gds-select` field.\n<br> e.g\n\n```html\n<gds-select disabled> ... </gds-select>\n```"},{kind:"variable",name:"Validation",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Validation', render: () => html\` <gds-flex> <gds-select .invalid=\${true} label="Label text" supporting-text="Supporting text" .required=\${true} .validator=\${{ validate: (el: any) => { if (el.value === '') return [ { ...el.validity, valid: false, customError: true, }, 'Error message.', ] }, }} > <span slot="extended-supporting-text" >Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-icon-rocket slot="lead"></gds-icon-rocket> <select> <option value="">Incorrect Value</option> <optgroup label="Propulsion"> <option value="ion-thrusters">Ion Thrusters</option> <option value="chemical-rockets">Chemical Rockets</option> </optgroup> <optgroup label="Communication"> <option value="satellite-communication"> Satellite Communication </option> <option value="deep-space-network">Deep Space Network</option> </optgroup> </select> </gds-select> </gds-flex> \`, }`,description:"Select has built-in support for form validation.<br>The validation feature is built on top of the browsers native validation features, using `ElementInternals` and `Constraint Validation API`.\n\nValidation is configured by adding a validator to a form element.<br> A validator is an object that implements the `GdsValidator` interface:\n\n```html\n<gds-select invalid></gds-select>\n```\n**@property invalid** - Indicates that the select field contains an error."},{kind:"variable",name:"Size",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Size\', render: () => html` <gds-flex> <gds-select size="small" label="Label text" supporting-text="Supporting text" > <span slot="extended-supporting-text" >Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-icon-bank slot="lead"></gds-icon-bank> <select> <optgroup label="International"> <option value="nasa">NASA</option> <option value="esa">ESA</option> </optgroup> <optgroup label="National"> <option value="isro">ISRO</option> <option value="cnsa">CNSA</option> </optgroup> </select> </gds-select> </gds-flex> `, }',description:"The `size` property can be set to 'small' to reduce the size of the select field.<br>\n**@property size** - The size of the select field.\n\n```html\n <gds-select size=\"small\"></gds-select>\n```"},{kind:"variable",name:"Multiple",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Multiple\', render: () => html` <gds-flex> <gds-select label="Label text" supporting-text="Supporting text"> <span slot="extended-supporting-text" >Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-icon-sun slot="lead"></gds-icon-sun> <select multiple> <option value="black-holes">Black Holes</option> <option value="neutron-stars">Neutron Stars</option> <option value="supernovae">Supernovae</option> <option value="galaxies">Galaxies</option> <option value="exoplanets">Exoplanets</option> <option value="dark-matter">Dark Matter</option> </select> </gds-select> </gds-flex> `, }',description:"The `multiple` attribute can be set to allow multiple options to be selected on the native `<select>` element.\n\nHowever, it is not recommended to use the native select element in multi-select mode. The native select element does not provide a good user experience for multi-select, especially when there are many options. Prefer to use checkbox groups or the `<gds-dropdown>` component for multi-select functionality instead."},{kind:"variable",name:"SelectSize",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Select Size', render: () => html\` <gds-flex> <gds-select label="Label text" supporting-text="Supporting text"> <span slot="extended-supporting-text" >Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> <gds-icon-compass-round slot="lead"></gds-icon-compass-round> <select multiple size="14"> <optgroup label="Mars Missions"> <option value="curiosity">Curiosity</option> <option value="perseverance">Perseverance</option> <option value="spirit">Spirit</option> <option value="opportunity">Opportunity</option> </optgroup> <optgroup label="Moon Missions"> <option value="apollo-11">Apollo 11</option> <option value="luna-2">Luna 2</option> <option value="chang-e-4">Chang'e 4</option> <option value="artemis-1">Artemis 1</option> </optgroup> <optgroup label="Jupiter Missions"> <option value="galileo">Galileo</option> <option value="juno">Juno</option> </optgroup> <optgroup label="Saturn Missions"> <option value="cassini">Cassini</option> <option value="huygens">Huygens</option> </optgroup> <optgroup label="Asteroid Missions"> <option value="hayabusa">Hayabusa</option> <option value="osiris-rex">OSIRIS-REx</option> </optgroup> <optgroup label="Comet Missions"> <option value="rosetta">Rosetta</option> <option value="deep-impact">Deep Impact</option> </optgroup> <optgroup label="Venus Missions"> <option value="magellan">Magellan</option> <option value="akatsuki">Akatsuki</option> </optgroup> <optgroup label="Mercury Missions"> <option value="messenger">MESSENGER</option> <option value="bepi-colombo">BepiColombo</option> </optgroup> </select> </gds-select> </gds-flex> \`, }`,description:'The native `<select size="...">` to not be confused with property `size` <br> it is the native attribute that sets the number of visible options in a select element.\n\n```html\n <gds-select>\n <select multiple size="14">\n   ...\n </select>\n</gds-select>\n```'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/select/select.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/select/select.stories.ts"}},{kind:"js",name:"Option",declaration:{name:"Option",module:"src/components/select/select.stories.ts"}},{kind:"js",name:"Lead",declaration:{name:"Lead",module:"src/components/select/select.stories.ts"}},{kind:"js",name:"Disabled",declaration:{name:"Disabled",module:"src/components/select/select.stories.ts"}},{kind:"js",name:"Validation",declaration:{name:"Validation",module:"src/components/select/select.stories.ts"}},{kind:"js",name:"Size",declaration:{name:"Size",module:"src/components/select/select.stories.ts"}},{kind:"js",name:"Multiple",declaration:{name:"Multiple",module:"src/components/select/select.stories.ts"}},{kind:"js",name:"SelectSize",declaration:{name:"SelectSize",module:"src/components/select/select.stories.ts"}}]},{kind:"javascript-module",path:"src/components/select/select.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, reset, transitional-styles; @layer base { .select-container { display: contents; } select { flex: 1; height: 100%; opacity: 0; position: absolute; z-index: 1; inset: 0; &::-ms-expand { display: none; } } select[multiple] { opacity: 1; position: relative; width: 100%; } label { flex: 1; } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/select/select.styles.ts"}}]},{kind:"javascript-module",path:"src/components/select/select.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/select/select.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/select/select.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/select/select.ts",declarations:[],exports:[{kind:"js",name:"GdsSelect",declaration:{name:"GdsSelect",module:"src/components/select/select.ts"}}]},{kind:"javascript-module",path:"src/components/sensitive/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./number"}}]},{kind:"javascript-module",path:"src/components/signal/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./signal"}}]},{kind:"javascript-module",path:"src/components/signal/signal.component.ts",declarations:[{kind:"class",description:"",name:"GdsSignal",members:[{kind:"field",name:"color",type:{text:"string | undefined"},description:"Change signal color based on variant.\nThe color can be customized using the `color` property.",category:"Declarative layout / Style expression properties"},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-signal",customElement:!0,attributes:[{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsSignal",declaration:{name:"GdsSignal",module:"src/components/signal/signal.component.ts"}}]},{kind:"javascript-module",path:"src/components/signal/signal.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Signal', component: 'gds-signal', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-signal'), }, }"},{kind:"variable",name:"Signal",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Signal\', render: (args) => html` <gds-flex height="200px"> <gds-fab inset="auto 40px 40px auto"> Primary <gds-signal slot="trail"></gds-signal> </gds-fab> </gds-flex> `, }',description:"The `gds-signal` component is used to indicate that there is something new or updated.\nIt is used in conjunction with the `gds-fab` component to draw attention to important actions or notifications.\n\nThe signal's style matches the button's rank and variant by default."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/signal/signal.stories.ts"}},{kind:"js",name:"Signal",declaration:{name:"Signal",module:"src/components/signal/signal.stories.ts"}}]},{kind:"javascript-module",path:"src/components/signal/signal.style.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { display: inline-block; } [part='signal'] { display: flex; align-items: center; justify-content: center; position: relative; width: 6px; height: 6px; border-radius: var(--gds-space-max); background-color: currentColor; transition: all 0.4s; &::before { display: flex; position: absolute; content: ''; inset: -4px; border-radius: inherit; background-color: color-mix(in srgb, currentColor, transparent 80%); animation: signal 3s ease-in-out infinite; } } @keyframes signal { 0% { transform: scale(2); opacity: 0; } 60% { transform: scale(1); opacity: 1; } 100% { transform: scale(3); opacity: 0; } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/signal/signal.style.ts"}}]},{kind:"javascript-module",path:"src/components/signal/signal.ts",declarations:[],exports:[{kind:"js",name:"GdsSignal",declaration:{name:"GdsSignal",module:"src/components/signal/signal.ts"}}]},{kind:"javascript-module",path:"src/components/spacer/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./spacer"}}]},{kind:"javascript-module",path:"src/components/spacer/spacer.component.ts",declarations:[{kind:"class",description:"",name:"GdsSpacer",members:[{kind:"field",name:"size",type:{text:"string | undefined"},description:`Controls the size property of the spacer.
Supports all the space tokens from the design system.

You can apply size like this:

\`\`\`html
<gds-spacer size="2xl"></gds-spacer>
\`\`\`

You can apply size in different breakpoints like this:

\`\`\`html
<gds-spacer size="s{2xl} m{xl} l{2xl}"></gds-spacer>
\`\`\``},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-spacer",customElement:!0,deprecated:"Use `gds-div` with the `height` property instead.",attributes:[{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsSpacer",declaration:{name:"GdsSpacer",module:"src/components/spacer/spacer.component.ts"}}]},{kind:"javascript-module",path:"src/components/spacer/spacer.ts",declarations:[],exports:[{kind:"js",name:"GdsSpacer",declaration:{name:"GdsSpacer",module:"src/components/spacer/spacer.ts"}}]},{kind:"javascript-module",path:"src/components/spinner/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./spinner"}}]},{kind:"javascript-module",path:"src/components/spinner/spinner.component.ts",declarations:[{kind:"class",description:"",name:"GdsSpinner",members:[{kind:"field",name:"label",description:"The text to display as a label for the spinner",attribute:"label"},{kind:"field",name:"showLabel",type:{text:"boolean"},default:"false",description:`Whether to display the label text visually
If false, the label is still available for screen readers`,attribute:"showLabel",reflects:!0},{kind:"field",name:"cover",type:{text:"boolean"},default:"false",description:`When true, covers the parent container with a semi-transparent backdrop
Parent must have position: relative`,attribute:"cover",reflects:!0},{kind:"field",name:"fullscreen",type:{text:"boolean"},default:"false",description:"When true, covers the entire viewport with a fixed position backdrop",attribute:"fullscreen",reflects:!0},{kind:"field",name:"size",type:{text:"'sm' | 'md' | 'lg'"},default:"'md'",description:"Size variant of the spinner",attribute:"size",reflects:!0},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-spinner-connected",type:{text:"CustomEvent"},description:"When the spinner is connected and visible",reactName:"onGdsSpinnerConnected",eventName:"GdsSpinnerConnectedEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"label",description:"The text to display as a label for the spinner",fieldName:"label"},{name:"showLabel",type:{text:"boolean"},default:"false",description:`Whether to display the label text visually
If false, the label is still available for screen readers`,fieldName:"showLabel"},{name:"cover",type:{text:"boolean"},default:"false",description:`When true, covers the parent container with a semi-transparent backdrop
Parent must have position: relative`,fieldName:"cover"},{name:"fullscreen",type:{text:"boolean"},default:"false",description:"When true, covers the entire viewport with a fixed position backdrop",fieldName:"fullscreen"},{name:"size",type:{text:"'sm' | 'md' | 'lg'"},default:"'md'",description:"Size variant of the spinner",fieldName:"size"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withPositioningProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-spinner",customElement:!0}],exports:[{kind:"js",name:"GdsSpinner",declaration:{name:"GdsSpinner",module:"src/components/spinner/spinner.component.ts"}}]},{kind:"javascript-module",path:"src/components/spinner/spinner.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta<GdsSpinner>"},default:"{ title: 'Components/Spinner', component: 'gds-spinner', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-textarea'), }, }",description:"A loading indicator component that supports various sizes and display modes."},{kind:"variable",name:"Playground",type:{text:"Story"},default:'{ args: { size: \'md\', showLabel: true, cover: false, fullscreen: false, }, render: (args) => html` <gds-card position="relative" width="400px" height="300px" border-radius="xs" overflow="hidden" > <gds-div padding="m"> <gds-text tag="h3" margin-top="0">Container Content</gds-text> <gds-text tag="p" >This is some sample content in the container.</gds-text > <gds-text tag="p">More content here...</gds-text> </gds-div> <gds-spinner size=${args.size} label=${ifDefined(args.label)} ?showLabel=${args.showLabel} ?cover=${args.cover} ?fullscreen=${args.fullscreen} ></gds-spinner> </gds-card> `, }'},{kind:"variable",name:"Sizes",type:{text:"Story"},default:'{ name: \'Size Variants\', render: () => html` <gds-flex gap="2xl" align-items="center"> <gds-div text-align="center"> <gds-spinner size="sm" label="small" showLabel></gds-spinner> </gds-div> <gds-div text-align="center"> <gds-spinner size="md" label="Medium (default)" showLabel></gds-spinner> </gds-div> <gds-div text-align="center"> <gds-spinner size="lg" label="Large" showLabel></gds-spinner> </gds-div> </gds-flex> `, }'},{kind:"variable",name:"LabelOptions",type:{text:"Story"},default:'{ name: \'Label Options\', render: () => html` <gds-flex gap="4xl" align-items="stretch"> <gds-flex text-align="center" flex-direction="column" gap="m" flex="1"> <gds-text tag="h4">Visible Label</gds-text> <gds-card> <gds-spinner size="md" label="With visible label" showLabel ></gds-spinner> </gds-card> </gds-flex> <gds-flex text-align="center" flex-direction="column" gap="m" flex="1"> <gds-text tag="h4">Hidden Label</gds-text> <gds-card> <gds-spinner size="md" label="With hidden label (for screen readers)" ></gds-spinner> </gds-card> </gds-flex> </gds-flex> `, }',description:`The label is hidden by default, but can also be shown visually.

A label should always be provided for accessibility reasons.`},{kind:"variable",name:"Cover",type:{text:"Story"},default:'{ name: \'Container Cover\', render: () => html` <gds-card position="relative" width="400px" height="300px" border-radius="xs" overflow="hidden" > <gds-div padding="m"> <gds-text tag="h3" margin-top="0">Container Content</gds-text> <gds-text tag="p" >This is some sample content in the container.</gds-text > <gds-text tag="p">More content here...</gds-text> </gds-div> <gds-spinner cover showLabel size="md"></gds-spinner> </gds-card> `, }',description:"By setting the container position to relative, the spinner can cover the entire container by using the `cover` attribute."},{kind:"variable",name:"Fullscreen",type:{text:"Story"},default:"{ name: 'Fullscreen Mode', render: () => { return html` <gds-div height=\"400px\"> <gds-spinner fullscreen showLabel></gds-spinner> </gds-div> ` }, }",description:`The fullscreen spinner covers the entire viewport and prevents scrolling.

Check this example in story view by clicking on it in the menu on the left.`},{kind:"variable",name:"ThemeModes",type:{text:"Story"},default:`{ name: 'Light & Dark Theme', render: (args, { context }) => { // Function to handle the theme toggle const handleThemeToggle = (e: Event) => { const demo = document.getElementById('theme-demo-container') if (demo) { const isDark = demo.getAttribute('color-scheme') === 'dark' if (isDark) { demo.setAttribute('color-scheme', 'light') ;(e.target as HTMLButtonElement).textContent = 'Switch to Dark Theme' } else { demo.setAttribute('color-scheme', 'dark') ;(e.target as HTMLButtonElement).textContent = 'Switch to Light Theme' } } } return html\` <gds-theme id="theme-demo-container" color-scheme="light" .designVersion=\${context.globals.style} > <gds-card variant="secondary" padding="2xl"> <gds-text tag="h3">Theme Mode Demonstration</gds-text> <gds-text tag="p" >The spinner automatically adapts to light and dark themes:</gds-text > <div> <gds-button id="theme-toggle" padding="s m" background-color="primary" color="white" border="none" border-radius="xs" cursor="pointer" @click=\${handleThemeToggle} > Switch to Dark Theme </gds-button> </div> <gds-flex gap="2xl" margin-top="l" justify-content="center"> <gds-card padding="l" width="180px"> <gds-flex flex-direction="column" align-items="center" gap="m"> <gds-text margin-top="m" font-weight="medium" >Standard Spinner</gds-text > <gds-spinner size="md"></gds-spinner> </gds-flex> </gds-card> <gds-card padding="l" width="180px"> <gds-flex flex-direction="column" align-items="center" gap="m"> <gds-text margin-top="m" font-weight="medium" >With Label</gds-text > <gds-spinner size="md" showLabel ></gds-spinner> </gds-flex> </gds-card> <gds-card padding="l" width="180px"> <gds-text text-align="center" font-weight="medium" >With Cover</gds-text > <gds-div position="relative" height="100px" display="flex" align-items="center" justify-content="center" background="surface" margin-bottom="m" > <gds-text margin="0" color="primary">Content</gds-text> <gds-spinner size="md" cover></gds-spinner> </gds-div> </gds-card> </gds-flex> </gds-div> </gds-theme> \` }, }`,description:`The spinner colors adaps to the current user settings, and the label uses currentColor
to inherit the text color.`}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/spinner/spinner.stories.ts"}},{kind:"js",name:"Playground",declaration:{name:"Playground",module:"src/components/spinner/spinner.stories.ts"}},{kind:"js",name:"Sizes",declaration:{name:"Sizes",module:"src/components/spinner/spinner.stories.ts"}},{kind:"js",name:"LabelOptions",declaration:{name:"LabelOptions",module:"src/components/spinner/spinner.stories.ts"}},{kind:"js",name:"Cover",declaration:{name:"Cover",module:"src/components/spinner/spinner.stories.ts"}},{kind:"js",name:"Fullscreen",declaration:{name:"Fullscreen",module:"src/components/spinner/spinner.stories.ts"}},{kind:"js",name:"ThemeModes",declaration:{name:"ThemeModes",module:"src/components/spinner/spinner.stories.ts"}}]},{kind:"javascript-module",path:"src/components/spinner/spinner.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` /* Host configuration with core variables */ :host { /* Size variables with indexed access using CSS custom properties */ --spinner-sizes: 2rem 3.75rem 6rem; --spinner-size-sm: 2rem; --spinner-size-md: 3.75rem; --spinner-size-lg: 6rem; --track-widths: 0.1rem 0.2rem 0.3rem; --track-width-sm: 0.275rem; --track-width-md: 0.375rem; --track-width-lg: 0.375rem; /* Default to light mode as fallback */ --spinner-track-color: var(--gds-color-l3-background-secondary); --spinner-active-color: var(--gds-color-l3-content-secondary); --spinner-label-color: currentColor; --spinner-backdrop-color: rgba(0, 0, 0, 0.8); --spinner-backdrop-blur: 2px; /* Base sizing, will be overridden by size-specific variables */ --size: var(--spinner-size-md); --track-width: var(--track-width-md); /* Use CSS variable for color-scheme to avoid minification issues */ --spinner-color-scheme: light dark; color-scheme: var(--spinner-color-scheme); display: block; } /* Size-specific host settings */ :host([size='sm']) { --size: var(--spinner-size-sm); --track-width: var(--track-width-sm); } :host([size='md']), :host([size='default']) { --size: var(--spinner-size-md); --track-width: var(--track-width-md); } :host([size='lg']) { --size: var(--spinner-size-lg); --track-width: var(--track-width-lg); } /* Fullscreen positioning */ :host([fullscreen]) { position: fixed; inset: 0; width: 100vw; height: 100vh; z-index: 9999; } /* Focus styles */ :host(:focus-visible) { outline: 2px solid var(--spinner-active-color); outline-offset: 2px; } /* Spinner component */ .spinner { border-radius: 50%; border: var(--track-width, 0.375rem) solid var(--spinner-track-color); border-top-color: var(--spinner-active-color); height: var(--size, 3.75rem); width: var(--size, 3.75rem); animation: gdsSpinnerRotation 1s linear infinite; } /* Motion preference adjustments */ @media (prefers-reduced-motion: reduce) { .spinner { /* Slower rotation for reduced motion preference */ animation-duration: 2s; /* Smaller rotation to reduce visual intensity */ animation-name: gdsSpinnerReducedRotation; } @keyframes gdsSpinnerReducedRotation { to { transform: rotate(180deg); } } } /* Layout components */ .spinner-wrapper { display: flex; justify-content: center; align-items: center; flex-direction: column; } .spinner-wrapper.spinner-cover { position: absolute; inset: 0; z-index: 999; } .spinner-wrapper.spinner-fullscreen { position: fixed; inset: 0; z-index: 9999; } .spinner-wrapper.spinner-backdrop { background-color: var(--spinner-backdrop-color); backdrop-filter: blur(var(--spinner-backdrop-blur)); --spinner-label-color: #fff; --spinner-track-color: var(--gds-color-l3-content-secondary); --spinner-active-color: var(--gds-color-l3-background-secondary); } /* Label styling */ .spinner-label { margin-top: 1rem; color: var(--spinner-label-color); text-align: center; } /* Animation keyframes */ @keyframes gdsSpinnerRotation { to { transform: rotate(360deg); } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/spinner/spinner.styles.ts"}}]},{kind:"javascript-module",path:"src/components/spinner/spinner.ts",declarations:[],exports:[{kind:"js",name:"GdsSpinner",declaration:{name:"GdsSpinner",module:"src/components/spinner/spinner.ts"}}]},{kind:"javascript-module",path:"src/components/text/default-typography.styles.ts",declarations:[{kind:"variable",name:"defaultStyles",default:"css` @layer defaults { a:link { color: currentColor; text-underline-offset: 0.1lh; font-weight: var(--gds-text-weight-book); } a:visited { color: currentColor; } h1 { font-size: var(--gds-text-size-heading-xl); line-height: var(--gds-text-line-height-heading-xl); font-weight: var(--gds-text-weight-regular); } h2 { font-size: var(--gds-text-size-heading-l); line-height: var(--gds-text-line-height-heading-l); font-weight: var(--gds-text-weight-regular); } h3 { font-size: var(--gds-text-size-heading-m); line-height: var(--gds-text-line-height-heading-m); font-weight: var(--gds-text-weight-regular); } h4 { font-size: var(--gds-text-size-heading-s); line-height: var(--gds-text-line-height-heading-s); font-weight: var(--gds-text-weight-regular); } h5 { font-size: var(--gds-text-size-heading-xs); line-height: var(--gds-text-line-height-heading-xs); font-weight: var(--gds-text-weight-regular); } h6 { font-size: var(--gds-text-size-heading-2xs); line-height: var(--gds-text-line-height-heading-2xs); font-weight: var(--gds-text-weight-regular); } p, li { font-size: var(--gds-text-size-body-m); line-height: var(--gds-text-line-height-body-m); } strong { font-weight: var(--gds-text-weight-medium); } } `"}],exports:[{kind:"js",name:"defaultStyles",declaration:{name:"defaultStyles",module:"src/components/text/default-typography.styles.ts"}}]},{kind:"javascript-module",path:"src/components/text/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./text"}}]},{kind:"javascript-module",path:"src/components/text/text.component.ts",declarations:[{kind:"class",description:"",name:"GdsText",members:[{kind:"field",name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,attribute:"tag"},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-transform'",type:{text:"string | undefined"},description:`Controls the text-transform property of the text.
Supports all valid CSS text-transform values.`},{kind:"field",name:"'text-decoration'",type:{text:"string | undefined"},description:`Controls the text-decoration property of the inner element.
Supports all valid CSS text-decoration values.`},{kind:"field",name:"lines",type:{text:"number | undefined"},description:"Controls the number of lines it should show."},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,fieldName:"tag"},{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsDiv",module:"/src/components/div/div.component"},tagName:"gds-text",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsText",declaration:{name:"GdsText",module:"src/components/text/text.component.ts"}}]},{kind:"javascript-module",path:"src/components/text/text.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Text', component: 'gds-text', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-text'), }, }",description:"`gds-text` extends `gds-div` and adds the ability to set an internal tag name, such as `h1`, `h2`, etc. It also adds line clamping and text decoration properties.\n\nStyle expression properties apply to the outer element unless otherwise specified."},{kind:"variable",name:"Tags",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Tags\', render: (args) => html`<gds-flex flex-direction="column" gap="2xl"> <gds-flex flex-direction="column" gap="m"> <gds-text>Span ( Default )</gds-text> <gds-text tag="p">Paragraph </gds-text> <gds-text tag="em">Em</gds-text> <gds-text tag="mark">Mark</gds-text> <gds-text tag="strong">strong</gds-text> <gds-text tag="small">small</gds-text> </gds-flex> <gds-flex flex-direction="column" gap="m"> <gds-text tag="h1">H1</gds-text> <gds-text tag="h2">H2</gds-text> <gds-text tag="h3">H3</gds-text> <gds-text tag="h4">H4</gds-text> <gds-text tag="h5">H5</gds-text> <gds-text tag="h6">H6</gds-text> </gds-flex> </gds-flex>`, }',description:"The `tag` property controls the inner element tag name.\n\nExample: `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `p`, `span`, `em`, `mark`, `strong`, `small` etc.\n\nDepending on which tag you use, different default styles will be applied. Style can be overridden using the `font-size`, `font-weight` and other style expression properties.\n\nThe default tag is `span` and the default size is `body-m`"},{kind:"variable",name:"Weight",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Weight\', render: (args) => html`<gds-flex flex-direction="column" gap="m"> <gds-text font-weight="bold">Bold (700)</gds-text> <gds-text font-weight="medium">Medium (500)</gds-text> <gds-text font-weight="book">Book (450)</gds-text> <gds-text font-weight="regular">Regular (400)</gds-text> <gds-text font-weight="light">Light (300)</gds-text> </gds-flex>`, }'},{kind:"variable",name:"Heading",type:{text:"Story"},default:'{ name: \'Heading\', render: (args) => html` <gds-flex flex-direction="column" gap="m"> <gds-text tag="h6">H6: heading-2xs</gds-text> <gds-text tag="h5">H5: heading-xs</gds-text> <gds-text tag="h4">H4: heading-s</gds-text> <gds-text tag="h3">H3: heading-m</gds-text> <gds-text tag="h2">H2: heading-l</gds-text> <gds-text tag="h1">H1: heading-xl</gds-text> </gds-flex> `, }',description:'> Headings in the `gds-text` component come with predefined sizes based on design tokens, and the `tag` property is used to define the heading level.\n> For example, using `tag="h1"` will automatically apply the `heading-xl` size, so specifying the `size` property is not necessary.\n> However, the `size` property can still be used to override the default size if needed.\n> This provides flexibility in using the `gds-text` component across different contexts while ensuring consistent typography.'},{kind:"variable",name:"Detail",type:{text:"Story"},default:'{ name: \'Detail\', render: (args) => html` <gds-flex flex-direction="column" gap="m"> <gds-text font-size="detail-xs">detail-xs</gds-text> <gds-text font-size="detail-s">detail-s</gds-text> <gds-text font-size="detail-m">detail-m"</gds-text> </gds-flex> `, }'},{kind:"variable",name:"Body",type:{text:"Story"},default:'{ name: \'Body\', render: (args) => html` <gds-flex flex-direction="column" gap="m"> <gds-text font-size="body-s">body-s</gds-text> <gds-text font-size="body-m">body-m</gds-text> <gds-text font-size="body-l">body-l</gds-text> </gds-flex> `, }'},{kind:"variable",name:"Display",type:{text:"Story"},default:'{ name: \'Display\', render: (args) => html` <gds-flex flex-direction="column" gap="m"> <gds-text font-size="display-s">display-s</gds-text> <gds-text font-size="display-m">display-m</gds-text> <gds-text font-size="display-l">display-l</gds-text> <gds-text font-size="display-xl">display-xl</gds-text> <gds-text font-size="display-2xl">display-2xl</gds-text> </gds-flex> `, }'},{kind:"variable",name:"Preamble",type:{text:"Story"},default:'{ name: \'Preamble\', render: (args) => html` <gds-flex flex-direction="column" gap="m"> <gds-text font-size="preamble-xs">preamble-xs</gds-text> <gds-text font-size="preamble-s">preamble-s</gds-text> <gds-text font-size="preamble-m">preamble-m</gds-text> <gds-text font-size="preamble-l">preamble-l</gds-text> <gds-text font-size="preamble-xl">preamble-xl</gds-text> <gds-text font-size="preamble-2xl">preamble-2xl</gds-text> </gds-flex> `, }'},{kind:"variable",name:"Color",type:{text:"Story"},default:'{ name: \'Color\', render: (args) => html` <gds-flex flex-direction="column" gap="m"> <gds-theme color-scheme="dark"> <gds-flex level="1" background="primary" border-radius="xs" padding="xl" display="flex" flex-direction="column" > <gds-text level="1" color="primary" font-size="body-s"> Color: Content Primary </gds-text> </gds-flex> <gds-flex level="1" background="secondary" border-radius="xs" padding="xl" display="flex" flex-direction="column" > <gds-text level="1" color="secondary" font-size="body-m"> Color: Content Secondary </gds-text> </gds-flex> <gds-flex level="1" background="tertiary" border-radius="xs" padding="xl" display="flex" flex-direction="column" > <gds-text level="1" color="tertiary" font-size="body-l"> Color: Content Tertiary </gds-text> </gds-flex> </gds-theme> </gds-flex> `, }',description:'\nThe `color` property that will change the text color based on the specified color token.\n\ne.g. `<gds-text level="1" color="primary"></gds-text>`'},{kind:"variable",name:"Decoration",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Decoration\', render: (args) => html`<gds-flex flex-direction="column" gap="m"> <gds-text text-decoration="underline"> Underline </gds-text> <gds-text text-decoration="overline"> Overline </gds-text> <gds-text text-decoration="line-through"> Line Through </gds-text> <gds-text text-decoration="underline dotted"> Dotted </gds-text> <gds-text text-decoration="currentcolor wavy underline"> Wavy Underline </gds-text> </gds-flex>`, }',description:'The `text-decoration` property will change the text decoration based on the css values such as `underline`, `overline`, `line-through`, `underline dotted`, `{COLOR} wavy underline` etc.\n\n\ne.g.\n\n```html\n<gds-text\n   text-decoration="currentcolor wavy underline"\n >\n   Wavy Underline\n </gds-text>\n```'},{kind:"variable",name:"Lines",type:{text:"Story"},default:'{ name: \'Line Clamp\', render: (args) => html` <gds-flex flex-direction="column" gap="2xl"> <gds-flex flex-direction="column" gap="m"> <gds-divider></gds-divider> <gds-text font-size="body-s">Lines:2</gds-text> <gds-text font-size="display-s" lines="2"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> </gds-flex> <gds-flex flex-direction="column" gap="m"> <gds-divider></gds-divider> <gds-text font-size="body-s">Lines:3</gds-text> <gds-text font-size="display-m" lines="3"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> </gds-flex> <gds-flex flex-direction="column" gap="m"> <gds-divider></gds-divider> <gds-text font-size="body-s">Lines:4</gds-text> <gds-text font-size="display-l" lines="4"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> </gds-flex> </gds-flex> `, }',description:"The `gds-text` component has a `lines` property that will clamp the text to the specified number of lines. It can be any number value."},{kind:"variable",name:"TextWrap",type:{text:"Story"},default:'{ name: \'text-wrap\', render: (args) => html` <gds-flex flex-direction="column" gap="m" width="250px"> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary"><code>wrap</code></gds-text> <gds-text text-wrap="wrap"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="code" color="secondary">nowrap</gds-text> <gds-text text-wrap="nowrap"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="code" color="secondary">pretty</gds-text> <gds-text text-wrap="pretty"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="code" color="secondary">balance</gds-text> <gds-text text-wrap="balance"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="code" color="secondary">stable</gds-text> <gds-text text-wrap="stable"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </gds-text> </gds-flex> </gds-flex> `, }',description:'\nCheck the documentation on `text-wrap` property [here](https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap)\n\nThe `text-wrap` property will change the text wrapping behavior based on the css values such as `wrap`, `nowrap`, `pretty`, `balance`, `stable`.\n\ne.g.\n\n```html\n<gds-text text-wrap="pretty">\n   ...\n</gds-text>\n```'},{kind:"variable",name:"OverflowWrap",type:{text:"Story"},default:`{ name: 'overflow-wrap', render: (args) => html\` <gds-flex flex-direction="column" gap="m"> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary">Normal</gds-text> <gds-text overflow-wrap="normal" font-size="heading-xl"> Most words are short & don't need to break. But Antidisestablishmentarianism is long. The width is set to min-content, with a max-width of 11em. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary">Anywhere</gds-text> <gds-text overflow-wrap="anywhere" font-size="heading-xl"> Most words are short & don't need to break. But Antidisestablishmentarianism is long. The width is set to min-content, with a max-width of 11em. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary">Break Word</gds-text> <gds-text overflow-wrap="break-word" font-size="heading-xl"> Most words are short & don't need to break. But Antidisestablishmentarianism is long. The width is set to min-content, with a max-width of 11em. </gds-text> </gds-flex> </gds-flex> \`, }`,description:'\nCheck the documentation on `text-overflow` property [here](https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow)\n\nThe `text-overflow` property will change the text overflow behavior based on the css values such as `clip`, `ellipsis`, `string`.\n\ne.g.\n\n```html\n<gds-text overflow-wrap="break-word">\n   ...\n</gds-text>\n```'},{kind:"variable",name:"WhiteSpace",type:{text:"Story"},default:`{ name: 'white-space', render: (args) => html\` <gds-flex flex-direction="column" gap="m"> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary">normal</gds-text> <gds-text white-space="normal" font-size="heading-xl"> Most words are short & don't need to break. But Antidisestablishmentarianism is long. The width is set to min-content, with a max-width of 11em. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary">pre</gds-text> <gds-text white-space="pre" font-size="heading-xl"> Most words are short & don't need to break. But Antidisestablishmentarianism is long. The width is set to min-content, with a max-width of 11em. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary">pre-wrap</gds-text> <gds-text white-space="pre" font-size="heading-xl"> Most words are short & don't need to break. But Antidisestablishmentarianism is long. The width is set to min-content, with a max-width of 11em. </gds-text> </gds-flex> <gds-divider></gds-divider> <gds-text>Shorthand</gds-text> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary">wrap</gds-text> <gds-text white-space="wrap" font-size="heading-xl"> Most words are short & don't need to break. But Antidisestablishmentarianism is long. The width is set to min-content, with a max-width of 11em. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary">collapse</gds-text> <gds-text white-space="collapse" font-size="heading-xl"> Most words are short & don't need to break. But Antidisestablishmentarianism is long. The width is set to min-content, with a max-width of 11em. </gds-text> </gds-flex> <gds-flex flex-direction="column"> <gds-text tag="small" color="secondary">preserve nowrap</gds-text> <gds-text white-space="preserve nowrap" font-size="heading-xl"> Most words are short & don't need to break. But Antidisestablishmentarianism is long. The width is set to min-content, with a max-width of 11em. </gds-text> </gds-flex> </gds-flex> \`, }`,description:'\nCheck the documentation on `white-space` property [here](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n\nThe `white-space` supports all valid CSS `white-space` values such as `wrap` `collapse` or combined `preserve nowrap` etc.\n\ne.g.\n\n```html\n<gds-text white-space="pre-wrap">\n   ...\n</gds-text>\n```'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Tags",declaration:{name:"Tags",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Weight",declaration:{name:"Weight",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Heading",declaration:{name:"Heading",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Detail",declaration:{name:"Detail",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Body",declaration:{name:"Body",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Display",declaration:{name:"Display",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Preamble",declaration:{name:"Preamble",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Color",declaration:{name:"Color",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Decoration",declaration:{name:"Decoration",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"Lines",declaration:{name:"Lines",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"TextWrap",declaration:{name:"TextWrap",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"OverflowWrap",declaration:{name:"OverflowWrap",module:"src/components/text/text.stories.ts"}},{kind:"js",name:"WhiteSpace",declaration:{name:"WhiteSpace",module:"src/components/text/text.stories.ts"}}]},{kind:"javascript-module",path:"src/components/text/text.style.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { display: block; } [tag] { margin: 0; padding: 0; text-underline-offset: 0.2lh; } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/text/text.style.ts"}}]},{kind:"javascript-module",path:"src/components/text/text.ts",declarations:[],exports:[{kind:"js",name:"GdsText",declaration:{name:"GdsText",module:"src/components/text/text.ts"}}]},{kind:"javascript-module",path:"src/components/textarea/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./textarea"}}]},{kind:"javascript-module",path:"src/components/textarea/textarea.component.ts",declarations:[{kind:"class",description:"",name:"GdsTextarea",slots:[{description:"Accepts `gds-icon-[ICON_NAME]`. Use this to place an icon in the start of the field.",name:"lead"},{description:"Accepts `gds-badge`. Use this to place a badge in the field, for displaying currency for example.",name:"trail"},{description:"A longer supporting text can be placed here. It will be displayed in a panel when the user clicks the info button.",name:"extended-supporting-text"}],events:[{description:"Fired when the clear button is clicked.",name:"gds-input-cleared",reactName:"onGdsInputCleared",eventName:"GdsInputClearedEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"},tagName:"gds-textarea",customElement:!0,summary:"A custom input element that can be used in forms.",members:[{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"rows",type:{text:"number"},default:"4",description:"Rows of the textarea",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{kind:"field",name:"supportingText",type:{text:"string"},default:"''",description:"The supporting text displayed between the label and the field itself",attribute:"supporting-text",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{kind:"field",name:"clearable",type:{text:"boolean"},default:"false",description:`Whether the field should be clearable or not. Clearable fields will display a clear button when
the field has a value.`,attribute:"clearable",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{kind:"field",name:"resizable",type:{text:"'auto' | 'manual' | 'false'"},default:"'auto'",description:`The resizable attribute of the textarea. It can be set to 'auto', 'manual' or 'false'.
When set to 'auto', the textarea will be resizable in the vertical direction based on content.
When set to 'manual', the textarea will be resizable in both the vertical and horizontal directions.
When set to 'false', the textarea will not be resizable.`,attribute:"resizable",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{kind:"field",name:"maxlength",description:"The maximum number of characters allowed in the field.",attribute:"maxlength",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{kind:"field",name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Controls the font-size of texts.",attribute:"size",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{kind:"field",name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",attribute:"plain",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{kind:"method",name:"test_getClearButton",description:`A reference to the clear button element. Returns null if there is no clear button.
Intended for use in integration tests.`,inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{kind:"method",name:"test_getFieldElement",description:`A reference to the field element. This does not refer to the input element itself,
but the wrapper that makes up the visual field.
Intended for use in integration tests.`,inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{kind:"field",name:"value",description:"Get or set the value of the form control.",attribute:"value",type:{text:"string"},default:"''",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"formAssociated",type:{text:"boolean"},static:!0,default:"true",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validator",type:{text:"GdsValidator | undefined"},description:"A validator that can be used to validate the form control and set an error message.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",attribute:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"errorMessage",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,attribute:"error-message",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",attribute:"aria-invalid",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"name",type:{text:"string"},default:"''",attribute:"name",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",attribute:"disabled",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"form",description:"The form element that the form control is associated with.",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validity",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validationMessage",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"willValidate",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"checkValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"reportValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formResetCallback",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formAssociatedCallback",parameters:[{name:"form",optional:!0,type:{text:"HTMLFormElement"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"supporting-text",type:{text:"string"},default:"''",description:"The supporting text displayed between the label and the field itself",fieldName:"supportingText",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{name:"clearable",type:{text:"boolean"},default:"false",description:`Whether the field should be clearable or not. Clearable fields will display a clear button when
the field has a value.`,fieldName:"clearable",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{name:"resizable",type:{text:"'auto' | 'manual' | 'false'"},default:"'auto'",description:`The resizable attribute of the textarea. It can be set to 'auto', 'manual' or 'false'.
When set to 'auto', the textarea will be resizable in the vertical direction based on content.
When set to 'manual', the textarea will be resizable in both the vertical and horizontal directions.
When set to 'false', the textarea will not be resizable.`,fieldName:"resizable",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{name:"maxlength",description:"The maximum number of characters allowed in the field.",fieldName:"maxlength",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Controls the font-size of texts.",fieldName:"size",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{name:"plain",type:{text:"boolean"},default:"false",description:"Hides the header and the footer, while still keeping the accessible label\n\nAlways set the `label` attribute, and if you need to hide it, add this attribute and keep `label` set.",fieldName:"plain",inheritedFrom:{name:"Textarea",module:"src/components/textarea/textarea.component.ts"}},{name:"aria-invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",fieldName:"invalid",attribute:"aria-invalid",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",fieldName:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"error-message",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,fieldName:"errorMessage",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",fieldName:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"value",description:"Get or set the value of the form control.",fieldName:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"name",type:{text:"string"},default:"''",fieldName:"name",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",fieldName:"disabled",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsTextarea",declaration:{name:"GdsTextarea",module:"src/components/textarea/textarea.component.ts"}}]},{kind:"javascript-module",path:"src/components/textarea/textarea.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Textarea', component: 'gds-textarea', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-textarea'), }, }",description:"\nTextareas are used for longer multiline text inputs, such as comments or descriptions.<br>\nThey can be used in forms, dialogs, and data tables.\nThe `gds-textarea` component is a wrapper around the native textarea element and provides a consistent look and feel across browsers. It has 4 rows by default and it resizes vertically to fit the content as the user types.\n\nSome features of the Textarea include:\n- Built-in support for form validation\n- Slots for `lead` and `trail` icons\n- `Supporting` and `Extended` text\n- `Clearable` input fields\n- `Length` validation\n- `Disabled` state\n- Custom number of `Rows`"},{kind:"variable",name:"Default",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Default\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-textarea label="Label" supporting-text="Supporting text." ></gds-textarea> </gds-flex> `, }'},{kind:"variable",name:"Lead",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Slot: Lead\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-textarea label="Lead Icon"> <gds-icon-magnifying-glass slot="lead"></gds-icon-magnifying-glass> </gds-textarea> </gds-flex> `, }',description:'\n\n**@slot lead** - Slot for an icon or other content to be placed at the beginning of the `gds-textarea` field.\n\n```html\n <gds-textarea label="Lead Icon">\n   <gds-icon-magnifying-glass slot="lead"></gds-icon-magnifying-glass>\n</gds-textarea>```'},{kind:"variable",name:"Trail",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Slot: Trail\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-textarea label="Label" supporting-text="Label support text" value="Example value" clearable > <gds-badge variant="information" slot="trail">SEK</gds-badge> </gds-textarea> </gds-flex> `, }',description:'\n**@slot trail** - Slot for an icon or other content to be placed at the end of the textarea field.\n\n```html\n <gds-textarea label="Trail Icon">\n   <gds-badge variant="information" slot="trail">USD</gds-badge>\n</gds-textarea>```'},{kind:"variable",name:"Length",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Length\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-textarea label="Label" supporting-text="Label support text" value="Example value" maxLength="20" clearable > </gds-textarea> </gds-flex> `, }',description:'The `length` property can be set to a number to limit the number of characters that can be entered into the textarea field.<br> A badge will be displayed, updating as the textarea approaches the character limit.\n\n**@property maxLength** - The maximum number of characters that can be entered into the textarea field.\n\n```html\n <gds-textarea maxLength="20"></gds-textarea>\n```'},{kind:"variable",name:"Rows",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Rows\', render: () => html` <gds-flex gap="xl" width="680px"> <gds-flex flex-direction="column" gap="s" flex="1"> <gds-flex flex-direction="column"> <gds-text>Rows:8</gds-text> <gds-text tag="small" color="secondary"> Clearable and auto resize </gds-text> </gds-flex> <gds-divider opacity="0.2"></gds-divider> <gds-textarea label="Label" supporting-text="Label support text" value="Example value with 8 rows" clearable rows="8" > </gds-textarea> </gds-flex> <gds-flex flex-direction="column" gap="s" flex="1"> <gds-flex flex-direction="column"> <gds-text>Rows:8</gds-text> <gds-text tag="small" color="secondary"> Clearable and no resize </gds-text> </gds-flex> <gds-divider opacity="0.2"></gds-divider> <gds-textarea label="Label" supporting-text="Label support text" value="Example value with 8 rows" clearable resizable="false" rows="8" > </gds-textarea> </gds-flex> </gds-flex> `, }',description:"Minimum number of rows to display in the textarea is `4` by default. <br>\nYou can specify the number of rows to display in the textarea using the `rows` attribute."},{kind:"variable",name:"Resize",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Resize\', render: () => html` <gds-flex gap="xl" width="800px"> <gds-flex flex-direction="column" flex="1" gap="l"> <gds-flex flex-direction="column" gap="2xs"> <gds-text>Resize: Auto</gds-text> <gds-text tag="small" color="secondary"> Based on the content </gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-textarea label="Label" supporting-text="Label support text" resizable="auto" > </gds-textarea> </gds-flex> <gds-flex flex-direction="column" flex="1" gap="l"> <gds-flex flex-direction="column" gap="2xs"> <gds-text>Resize: Manual</gds-text> <gds-text tag="small" color="secondary"> Draging the pull tab to resize </gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-textarea label="Label" supporting-text="Label support text" resizable="manual" > </gds-textarea> </gds-flex> <gds-flex flex-direction="column" flex="1" gap="l"> <gds-flex flex-direction="column" gap="2xs"> <gds-text>Resize: False</gds-text> <gds-text tag="small" color="secondary"> Will not resize at all </gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-textarea label="Label" supporting-text="Label support text" resizable="false" > </gds-textarea> </gds-flex> </gds-flex> `, }',description:"The `resize` property is set to `auto` by default, allowing the user to resize the textarea.\n\nTo disable the resize functionality, set the `resize` property to `false`.\n\nWhen the `resize` property is set to `auto`, a resize handle will appear at the bottom center of the textarea when the user hovers over it. Dragging this handle will resize the textarea.\n\nThe textarea's size is adjustable based on the `rows` attribute and the content within the textarea."},{kind:"variable",name:"Size",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Size\', render: () => html` <gds-flex gap="xl" width="800px"> <gds-flex flex-direction="column" flex="1" gap="l"> <gds-flex flex-direction="column" gap="s"> <gds-text>Size: Small</gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-textarea label="Label" supporting-text="Label support text" resizable="false" size="small" > <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> </gds-textarea> </gds-flex> <gds-flex flex-direction="column" flex="1" gap="l"> <gds-flex flex-direction="column" gap="s"> <gds-text>Size: Large(default)</gds-text> <gds-divider opacity="0.2"></gds-divider> </gds-flex> <gds-textarea label="Label" supporting-text="Label support text"> <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> </gds-textarea> </gds-flex> </gds-flex> `, }',description:'The `size` property controls the font-size of the text in form control header and footer.\n\nThe `size` property can be set to `small` or `large`.<br>\nThe default size is `large`.\n\n```html\n <gds-textarea size="small"></gds-textarea>\n```'},{kind:"variable",name:"Clearable",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Clearable\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-textarea label="Label text" value="Clear this text" clearable ></gds-textarea> </gds-flex> `, }',description:"When the `clearable` property is set, a clear button is added, allowing users to quickly clear the text."},{kind:"variable",name:"SupportingText",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Supporting Text\', render: () => html` <gds-flex flex-direction="column" gap="xl" width="320px"> <gds-textarea label="Label" supporting-text="Supporting text" ></gds-textarea> </gds-flex> `, }',description:'The `supporting-text` property can be set to a string to provide additional information about the textarea field.\n\n**@property supporting-text** - Additional information about the textarea field.\n\n```html\n  <gds-textarea label="Label text" supporting-text="Supporting text"></gds-textarea>\n```'},{kind:"variable",name:"ExtendedSupportingText",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Extended Supporting Text\', render: () => html` <gds-flex gap="xl" width="800px"> <gds-textarea label="Label text" supporting-text="Supporting text"> <span slot="extended-supporting-text" >Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> </gds-textarea> <gds-textarea label="Label text" supporting-text="Supporting text" show-extended-supporting-text > <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> </gds-textarea> </gds-flex> `, }',description:'The `extended-supporting-text` slot can be used to provide extended information about the textarea field.<br>\nThe slot will show by default when the `show-extended-supporting-text` property is set.<br>\nIf not specified, the slot will be hidden and a companion icon will be displayed to indicate that more information is available.\n\n**@slot extended-supporting-text** - Extended information about the textarea field.\n\n```html\n<gds-textarea label="Label text" supporting-text="Supporting text">\n  <span slot="extended-supporting-text">Extended supporting text</span>\n</gds-textarea>\n```\n\n**@property show-extended-supporting-text** - Shows the extended supporting text.\n\n```html\n<gds-textarea show-extended-supporting-text></gds-textarea>\n```'},{kind:"variable",name:"Validation",type:{text:"Story"},default:`{ ...DefaultParams, name: 'Validation', render: () => html\` <gds-flex flex-direction="column" width="800px"> <gds-flex gap="xl"> <gds-textarea label="Label" supporting-text="Label support text" value=" " .validator=\${{ validate: (el: any) => { if (el.value === '') return [ { ...el.validity, valid: false, customError: true, }, 'Error message.', ] else if (el.value.length !== 12 || isNaN(el.value)) return [ { ...el.validity, valid: false, customError: true, }, 'The value must be 12 characters long.', ] }, }} > <gds-icon-credit-card slot="lead"></gds-icon-credit-card> <span slot="extended-supporting-text"> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </span> </gds-textarea> <gds-textarea label="Label" supporting-text="Label support text" value="Incorrect value" maxLength="12" clearable .validator=\${{ validate: (el: any) => { if (el.value === '') return [ { ...el.validity, valid: false, customError: true, }, 'Error message.', ] else if (el.value.length !== 12 || isNaN(el.value)) return [ { ...el.validity, valid: false, customError: true, }, 'The value must be a 12 characters long numeric value. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ', ] }, }} clearable > <gds-icon-credit-card slot="lead"></gds-icon-credit-card> </gds-textarea> </gds-flex> </gds-flex> \`, }`,description:`Textarea has built-in support for form validation.<br>The validation feature is built on top of the browsers native validation features, using \`ElementInternals\` and \`Constraint Validation API\`.

Validation is configured by adding a validator to a form element.<br> A validator is an object that implements the \`GdsValidator\` interface:

\`\`\`html
<gds-textarea
 label="Label"
 value=" "
 .validator=\${{
   validate: (el: any) => {
     if (el.value === '')
       return [
         {
           ...el.validity,
           valid: false,
           customError: true,
         },
         'Error message.',
       ]
   },
 }}></gds-textarea>
\`\`\`
**@property invalid** - Indicates that the textarea field contains an error.

\`\`\`html
<gds-textarea invalid></gds-textarea>
\`\`\``},{kind:"variable",name:"Disabled",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Disabled\', render: () => html` <gds-flex gap="xl" width="800px"> <gds-textarea label="Label" disabled supporting-text="Support text"> <gds-icon-credit-card slot="lead"></gds-icon-credit-card> </gds-textarea> <gds-textarea label="Label" disabled supporting-text="Support text" value="Disabled with value" clearable > <gds-icon-credit-card slot="lead"></gds-icon-credit-card> </gds-textarea> </gds-flex> `, }',description:"The `disabled` property can be set to disable the textarea field.\n\n**@property disabled** - Disables the textarea field.\n\n```html\n <gds-textarea disabled></gds-textarea>\n```"}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Lead",declaration:{name:"Lead",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Trail",declaration:{name:"Trail",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Length",declaration:{name:"Length",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Rows",declaration:{name:"Rows",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Resize",declaration:{name:"Resize",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Size",declaration:{name:"Size",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Clearable",declaration:{name:"Clearable",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"SupportingText",declaration:{name:"SupportingText",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"ExtendedSupportingText",declaration:{name:"ExtendedSupportingText",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Validation",declaration:{name:"Validation",module:"src/components/textarea/textarea.stories.ts"}},{kind:"js",name:"Disabled",declaration:{name:"Disabled",module:"src/components/textarea/textarea.stories.ts"}}]},{kind:"javascript-module",path:"src/components/textarea/textarea.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` textarea { height: calc(1lh * var(--_lines)); min-height: calc(1lh * 4); max-height: calc(1lh * 20); overflow: auto; min-width: 20ch; padding-inline-end: calc(var(--gds-space-xs) + var(--padding-inline-end)); &.resize-manual { resize: vertical; } &.resize-auto { resize: none; } &.resize-false { resize: none; } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/textarea/textarea.styles.ts"}}]},{kind:"javascript-module",path:"src/components/textarea/textarea.ts",declarations:[],exports:[{kind:"js",name:"GdsTextarea",declaration:{name:"GdsTextarea",module:"src/components/textarea/textarea.ts"}}]},{kind:"javascript-module",path:"src/components/theme/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./theme"}}]},{kind:"javascript-module",path:"src/components/theme/theme.component.ts",declarations:[{kind:"class",description:"",name:"GdsTheme",slots:[{description:"The content to apply the theme to.",name:""}],members:[{kind:"field",name:"colorScheme",type:{text:"'light' | 'dark' | 'auto'"},default:"'light'",description:"The theme mode. Can be `light`, `dark`, or `auto`.",attribute:"color-scheme",reflects:!0},{kind:"field",name:"designVersion",type:{text:"'2016' | '2023'"},default:"'2016'",description:"The design version to use. Can be `16` or `23`.",attribute:"design-version",reflects:!0},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-color-scheme-changed",type:{text:"CustomEvent"},description:"Fired when the color scheme changes.",reactName:"onGdsColorSchemeChanged",eventName:"GdsColorSchemeChangedEvent"},{name:"gds-design-version-changed",type:{text:"CustomEvent"},description:"Fired when the design version changes.",reactName:"onGdsDesignVersionChanged",eventName:"GdsDesignVersionChangedEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"color-scheme",type:{text:"'light' | 'dark' | 'auto'"},default:"'light'",description:"The theme mode. Can be `light`, `dark`, or `auto`.",fieldName:"colorScheme"},{name:"design-version",type:{text:"'2016' | '2023'"},default:"'2016'",description:"The design version to use. Can be `16` or `23`.",fieldName:"designVersion"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-theme",customElement:!0}],exports:[{kind:"js",name:"GdsTheme",declaration:{name:"GdsTheme",module:"src/components/theme/theme.component.ts"}}]},{kind:"javascript-module",path:"src/components/theme/theme.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Theme', component: 'gds-theme', tags: ['autodocs'], }",description:`\`gds-theme\` is a utility component that can be used to control which CSS variables and styles
are applied to its children. It can be used to control light and dark mode, as well as which
design version the children should use (2016 or 2023)

For the 2016 styles to work, [Transitioanl Styles](http://localhost:4400/?path=/docs/concepts-transitional-styles--docs)
must be imported and and registered for the used components.`},{kind:"variable",name:"Theme",type:{text:"Story"},default:'{ ...DefaultParams, parameters: { ...DefaultParams.parameters, globals: { disableTheme: true, }, }, render: () => html` <gds-grid gap="m" columns="2"> <gds-theme color-scheme="light" design-version="2023"> <gds-card variant="primary" align="center"> <gds-button>Light mode button in a card</gds-button> </gds-card> </gds-theme> <gds-theme color-scheme="dark" design-version="2023"> <gds-card variant="primary" align="center"> <gds-button>Dark mode button in a card</gds-button> </gds-card> </gds-theme> <gds-theme color-scheme="light" design-version="2016"> <gds-card variant="primary" align="center"> <gds-button>Light mode button in a card (2016)</gds-button> </gds-card> </gds-theme> <gds-theme color-scheme="dark" design-version="2016"> <gds-card variant="primary" align="center"> <gds-button>Dark mode button in a card (2016)</gds-button> </gds-card> </gds-theme> </gds-flex> </gds-grid> `, }',description:"Inspect this example and try changing the properties of `gds-theme`."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/theme/theme.stories.ts"}},{kind:"js",name:"Theme",declaration:{name:"Theme",module:"src/components/theme/theme.stories.ts"}}]},{kind:"javascript-module",path:"src/components/theme/theme.style.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/components/theme/theme.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/theme/theme.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/theme/theme.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/theme/theme.ts",declarations:[],exports:[{kind:"js",name:"GdsTheme",declaration:{name:"GdsTheme",module:"src/components/theme/theme.ts"}}]},{kind:"javascript-module",path:"src/components/video/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./video"}}]},{kind:"javascript-module",path:"src/components/video/video.component.ts",declarations:[{kind:"class",description:"`gds-video` is a custom video element that provides configurable .mp4 video playback that can be used as background or hero video without controls.\nThe video can be customized with different properties like ratio, position, inset, width, height, opacity, fit, and radius.",name:"GdsVideo",members:[{kind:"field",name:"'aspect-ratio'",type:{text:"string | undefined"},description:`Controls the aspect ratio of the image.
Supports all common aspect ratios like 16/9, 4/3, 1/1, etc.

You can apply the aspect ratio like this:

\`\`\`html
<gds-video aspect-ratio="16/9"></gds-video>
\`\`\`

The above example will apply the aspect ratio of 16/9.

You can also apply different aspect ratios for different screen sizes like this:

\`\`\`html
<gds-video aspect-ratio="l{16/9} m{4/3} s{1/1}"></gds-video>
\`\`\`

 The above example will apply the aspect ratio of 16/9 for large screens, 4/3 for medium screens, and 1/1 for small screens.`},{kind:"field",name:"'object-position'",type:{text:"string | undefined"},description:"Controls the `object-position` of the video.\nSupports all common CSS values."},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:`Controls the opacity property of the image.

You can apply opacity like this:

\`\`\`html
<gds-img opacity="0.2"></gds-img>
\`\`\`

The above example will apply the opacity style of 0.2.
This is useful when you want to apply a transparent effect to the image when having a darkened background to increase the readability of the text.`,category:"Declarative layout / Style expression properties"},{kind:"field",name:"'object-fit'",type:{text:"string | undefined"},description:`Controls the object-fit property of the image.

You can apply fit like this:

\`\`\`html
<gds-img object-fit="cover"></gds-img>
\`\`\`

 The above example will apply the object-fit style of cover.`},{kind:"field",name:"'pointer-events'",type:{text:"string | undefined"},description:`Controls the pointer-events property of the video.
Supports all valid CSS pointer-events values.`},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:`Controls the border-radius property of the video.
Supports all the size tokens from the design system.`,category:"Declarative layout / Style expression properties"},{kind:"field",name:"src",type:{text:"string | undefined"},attribute:"src"},{kind:"field",name:"poster",type:{text:"string | undefined"},attribute:"poster"},{kind:"field",name:"muted",type:{text:"boolean | undefined"},attribute:"muted"},{kind:"field",name:"playsinline",type:{text:"boolean | undefined"},attribute:"playsinline"},{kind:"field",name:"autoplay",type:{text:"boolean | undefined"},attribute:"autoplay"},{kind:"field",name:"loop",type:{text:"boolean | undefined"},attribute:"loop"},{kind:"field",name:"videoElement",type:{text:"HTMLVideoElement"}},{kind:"method",name:"applyVideoSettings"},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"src",type:{text:"string | undefined"},fieldName:"src"},{name:"poster",type:{text:"string | undefined"},fieldName:"poster"},{name:"muted",type:{text:"boolean | undefined"},fieldName:"muted"},{name:"playsinline",type:{text:"boolean | undefined"},fieldName:"playsinline"},{name:"autoplay",type:{text:"boolean | undefined"},fieldName:"autoplay"},{name:"loop",type:{text:"boolean | undefined"},fieldName:"loop"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withSizeYProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withPositioningProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-video",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsVideo",declaration:{name:"GdsVideo",module:"src/components/video/video.component.ts"}}]},{kind:"javascript-module",path:"src/components/video/video.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Video', component: 'gds-video', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-video'), }, }",description:"The `gds-video`"},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/video/video.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/video/video.stories.ts"}}]},{kind:"javascript-module",path:"src/components/video/video.style.ts",declarations:[{kind:"variable",name:"style",default:"css` :host { display: block; margin: 0; padding: 0; box-sizing: border-box; font-size: 0; width: 100%; height: auto; overflow: hidden; } video { display: flex; width: 100%; height: 100%; } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/components/video/video.style.ts"}}]},{kind:"javascript-module",path:"src/components/video/video.ts",declarations:[],exports:[{kind:"js",name:"GdsVideo",declaration:{name:"GdsVideo",module:"src/components/video/video.ts"}}]},{kind:"javascript-module",path:"src/generated/locales/da.ts",declarations:[{kind:"variable",name:"templates",type:{text:"object"},default:"{ 's15a16ae9f99f19bf': `Juli`, 's15a852e9f9a50fa5': `Juni`, 's17e3edbe032f79ec': `Åbn kalender-popup`, 's1a2dda8f763a68bd': `Januar`, 's1e118319b5202c41': `Man`, 's1e187019b5262aa6': `Maj`, 's281846ef0421c71f': `November`, 's2ceb11be2290bb1b': `Annuller`, 's39938ecdae568740': `September`, 's3b151ca64eb26ec1': `Udvide`, 's407a88a592a0987c': `August`, 's46d6587089bd0356': `Næste måned`, 's49730f3d5751a433': `Indlæser...`, 's5052d10b539eabf0': `Marts`, 's58bfb494feb8eb02': str`${0} valgt`, 's5d929ff1619ac0c9': `Søg`, 's5e8250fb85d64c23': `Luk`, 's5febcd9b311c16fe': `Rul til højre`, 's62931b2a50168976': `Forrige måned`, 's63d040e37887f17e': `I dag`, 's6cfed919e21ac6ac': `Tor`, 's6d24cd19e23b8185': `Ti`, 's74aa0319e62b2eb7': `Ons`, 's7793b811d20184fe': `December`, 's7fd3469f78111589': `Åbn kontekstmenu`, 's83c436ed1bc16dfb': `Vis flere oplysninger`, 's8ade4e9d5e804d6a': `Første tilgængelige dato`, 's9836b719fa8ef857': `Lør`, 's987ac119fac8d621': `Søn`, 's9af3c72c33088826': str`Der er ${0} fejl, der skal rettes, før du kan fortsætte:`, 'sa6f2645578b2d2bc': `År`, 'sa7cd5c2ff6d266e7': `Oktober`, 'sb47daaf9e1c4a905': `Måned`, 'sb4f1dffbb6be6302': `Ryd`, 'sb77f4dce69a005ac': `Fejlmeddelelse.`, 'sbc083a1dbee9af73': `Februar`, 'scb6b9cb49cf93277': `April`, 'sd898d99fd9c13de6': `Filtrer tilgængelige muligheder`, 'sdc42f1da42d6411a': `Ryd inputfelt`, 'se0955919920ee87d': `Dag`, 'se4129fd6b9d7b4c2': `Sidste tilgængelige dato`, 'sf295af199c723ec8': `Fre`, }"}],exports:[{kind:"js",name:"templates",declaration:{name:"templates",module:"src/generated/locales/da.ts"}}]},{kind:"javascript-module",path:"src/generated/locales/de.ts",declarations:[{kind:"variable",name:"templates",type:{text:"object"},default:"{ 's15a16ae9f99f19bf': `Juli`, 's15a852e9f9a50fa5': `Juni`, 's17e3edbe032f79ec': `Kalender-Modal öffnen`, 's1a2dda8f763a68bd': `Januar`, 's1e118319b5202c41': `Mo`, 's1e187019b5262aa6': `Mai`, 's281846ef0421c71f': `November`, 's2ceb11be2290bb1b': `Abbrechen`, 's39938ecdae568740': `September`, 's3b151ca64eb26ec1': `Expandieren`, 's407a88a592a0987c': `August`, 's46d6587089bd0356': `Nächster Monat`, 's49730f3d5751a433': `Laden...`, 's5052d10b539eabf0': `März`, 's58bfb494feb8eb02': str`${0} ausgewählt`, 's5d929ff1619ac0c9': `Suche`, 's5e8250fb85d64c23': `Schließen`, 's5febcd9b311c16fe': `Nach rechts scrollen`, 's62931b2a50168976': `Vorheriger Monat`, 's63d040e37887f17e': `Heute`, 's6cfed919e21ac6ac': `Do`, 's6d24cd19e23b8185': `Di`, 's74aa0319e62b2eb7': `Mi`, 's7793b811d20184fe': `Dezember`, 's7fd3469f78111589': `Kontextmenü öffnen`, 's83c436ed1bc16dfb': `Weitere Informationen anzeigen`, 's8ade4e9d5e804d6a': `Erstes verfügbares Datum`, 's9836b719fa8ef857': `Sa`, 's987ac119fac8d621': `So`, 's9af3c72c33088826': str`Es gibt ${0} Fehler zu beheben, bevor du fortfahren kannst:`, 'sa6f2645578b2d2bc': `Jahr`, 'sa7cd5c2ff6d266e7': `Oktober`, 'sb47daaf9e1c4a905': `Monat`, 'sb4f1dffbb6be6302': `Löschen`, 'sb77f4dce69a005ac': `Fehlermeldung.`, 'sbc083a1dbee9af73': `Februar`, 'scb6b9cb49cf93277': `April`, 'sd898d99fd9c13de6': `Verfügbare Optionen filtern`, 'sdc42f1da42d6411a': `Feld löschen`, 'se0955919920ee87d': `Tag`, 'se4129fd6b9d7b4c2': `Letztes verfügbares Datum`, 'sf295af199c723ec8': `Fr`, }"}],exports:[{kind:"js",name:"templates",declaration:{name:"templates",module:"src/generated/locales/de.ts"}}]},{kind:"javascript-module",path:"src/generated/locales/fi.ts",declarations:[{kind:"variable",name:"templates",type:{text:"object"},default:"{ 's15a16ae9f99f19bf': `Heinä`, 's15a852e9f9a50fa5': `Kesä`, 's17e3edbe032f79ec': `Avaa kalenteri-modal`, 's1a2dda8f763a68bd': `Tammikuu`, 's1e118319b5202c41': `Ma`, 's1e187019b5262aa6': `Touko`, 's281846ef0421c71f': `Marraskuu`, 's2ceb11be2290bb1b': `Peruuta`, 's39938ecdae568740': `Syys`, 's3b151ca64eb26ec1': `Laajentaa`, 's407a88a592a0987c': `Elokuu`, 's46d6587089bd0356': `Seuraava kuukausi`, 's49730f3d5751a433': `Ladataan...`, 's5052d10b539eabf0': `Maalis`, 's58bfb494feb8eb02': str`${0} valittua`, 's5d929ff1619ac0c9': `Hae`, 's5e8250fb85d64c23': `Sulje`, 's5febcd9b311c16fe': `Vieritä oikealle`, 's62931b2a50168976': `Edellinen kuukausi`, 's63d040e37887f17e': `Tänään`, 's6cfed919e21ac6ac': `To`, 's6d24cd19e23b8185': `Ti`, 's74aa0319e62b2eb7': `Ke`, 's7793b811d20184fe': `Joulukuu`, 's7fd3469f78111589': `Avaa pikavalikko`, 's83c436ed1bc16dfb': `Näytä lisää tietoja`, 's8ade4e9d5e804d6a': `Ensimmäinen saatavilla oleva päivämäärä`, 's9836b719fa8ef857': `La`, 's987ac119fac8d621': `Su`, 's9af3c72c33088826': str`On ${0} virhettä, jotka täytyy korjata ennen kuin voit jatkaa:`, 'sa6f2645578b2d2bc': `Vuosi`, 'sa7cd5c2ff6d266e7': `Lokakuu`, 'sb47daaf9e1c4a905': `Kuukausi`, 'sb4f1dffbb6be6302': `Tyhjennä`, 'sb77f4dce69a005ac': `Virheilmoitus.`, 'sbc083a1dbee9af73': `Helmikuu`, 'scb6b9cb49cf93277': `Huhti`, 'sd898d99fd9c13de6': `Suodata saatavilla olevia vaihtoehtoja`, 'sdc42f1da42d6411a': `Tyhjennä syöte`, 'se0955919920ee87d': `Päivä`, 'se4129fd6b9d7b4c2': `Viimeinen saatavilla oleva päivämäärä`, 'sf295af199c723ec8': `Pe`, }"}],exports:[{kind:"js",name:"templates",declaration:{name:"templates",module:"src/generated/locales/fi.ts"}}]},{kind:"javascript-module",path:"src/generated/locales/fr.ts",declarations:[{kind:"variable",name:"templates",type:{text:"object"},default:"{ 's15a16ae9f99f19bf': `Juillet`, 's15a852e9f9a50fa5': `Juin`, 's17e3edbe032f79ec': `Ouvrir le calendrier modal`, 's1a2dda8f763a68bd': `Janvier`, 's1e118319b5202c41': `Lun`, 's1e187019b5262aa6': `Mai`, 's281846ef0421c71f': `Novembre`, 's2ceb11be2290bb1b': `Annuler`, 's39938ecdae568740': `Septembre`, 's3b151ca64eb26ec1': `Développer`, 's407a88a592a0987c': `Août`, 's46d6587089bd0356': `Mois suivant`, 's49730f3d5751a433': `Chargement...`, 's5052d10b539eabf0': `Mars`, 's58bfb494feb8eb02': str`${0} sélectionné(s)`, 's5d929ff1619ac0c9': `Rechercher`, 's5e8250fb85d64c23': `Fermer`, 's5febcd9b311c16fe': `Faire défiler à droite`, 's62931b2a50168976': `Mois précédent`, 's63d040e37887f17e': `Aujourd'hui`, 's6cfed919e21ac6ac': `Jeu`, 's6d24cd19e23b8185': `Mar`, 's74aa0319e62b2eb7': `Mer`, 's7793b811d20184fe': `Décembre`, 's7fd3469f78111589': `Ouvrir le menu contextuel`, 's83c436ed1bc16dfb': `Afficher plus d'informations`, 's8ade4e9d5e804d6a': `Première date disponible`, 's9836b719fa8ef857': `Sam`, 's987ac119fac8d621': `Dim`, 's9af3c72c33088826': str`Il y a ${0} erreur(s) à corriger avant de pouvoir continuer :`, 'sa6f2645578b2d2bc': `Année`, 'sa7cd5c2ff6d266e7': `Octobre`, 'sb47daaf9e1c4a905': `Mois`, 'sb4f1dffbb6be6302': `Effacer`, 'sb77f4dce69a005ac': `Message d'erreur.`, 'sbc083a1dbee9af73': `Février`, 'scb6b9cb49cf93277': `Avril`, 'sd898d99fd9c13de6': `Filtrer les options disponibles`, 'sdc42f1da42d6411a': `Effacer la saisie`, 'se0955919920ee87d': `Jour`, 'se4129fd6b9d7b4c2': `Dernière date disponible`, 'sf295af199c723ec8': `Ven`, }"}],exports:[{kind:"js",name:"templates",declaration:{name:"templates",module:"src/generated/locales/fr.ts"}}]},{kind:"javascript-module",path:"src/generated/locales/it.ts",declarations:[{kind:"variable",name:"templates",type:{text:"object"},default:"{ 's15a16ae9f99f19bf': `Luglio`, 's15a852e9f9a50fa5': `Giugno`, 's17e3edbe032f79ec': `Apri la finestra del calendario`, 's1a2dda8f763a68bd': `Gennaio`, 's1e118319b5202c41': `Lun`, 's1e187019b5262aa6': `Maggio`, 's281846ef0421c71f': `Novembre`, 's2ceb11be2290bb1b': `Annulla`, 's39938ecdae568740': `Settembre`, 's3b151ca64eb26ec1': `Espandere`, 's407a88a592a0987c': `Agosto`, 's46d6587089bd0356': `Mese successivo`, 's49730f3d5751a433': `Caricamento...`, 's5052d10b539eabf0': `Marzo`, 's58bfb494feb8eb02': str`${0} selezionato`, 's5d929ff1619ac0c9': `Cerca`, 's5e8250fb85d64c23': `Chiudi`, 's5febcd9b311c16fe': `Scorri a destra`, 's62931b2a50168976': `Mese precedente`, 's63d040e37887f17e': `Oggi`, 's6cfed919e21ac6ac': `Gio`, 's6d24cd19e23b8185': `Mar`, 's74aa0319e62b2eb7': `Mer`, 's7793b811d20184fe': `Dicembre`, 's7fd3469f78111589': `Apri il menu contestuale`, 's83c436ed1bc16dfb': `Mostra più informazioni`, 's8ade4e9d5e804d6a': `Prima data disponibile`, 's9836b719fa8ef857': `Sab`, 's987ac119fac8d621': `Dom`, 's9af3c72c33088826': str`Ci sono ${0} errori da correggere prima di poter continuare:`, 'sa6f2645578b2d2bc': `Anno`, 'sa7cd5c2ff6d266e7': `Ottobre`, 'sb47daaf9e1c4a905': `Mese`, 'sb4f1dffbb6be6302': `Pulisci`, 'sb77f4dce69a005ac': `Messaggio di errore.`, 'sbc083a1dbee9af73': `Febbraio`, 'scb6b9cb49cf93277': `Aprile`, 'sd898d99fd9c13de6': `Filtra le opzioni disponibili`, 'sdc42f1da42d6411a': `Pulisci il campo di input`, 'se0955919920ee87d': `Giorno`, 'se4129fd6b9d7b4c2': `Ultima data disponibile`, 'sf295af199c723ec8': `Ven`, }"}],exports:[{kind:"js",name:"templates",declaration:{name:"templates",module:"src/generated/locales/it.ts"}}]},{kind:"javascript-module",path:"src/generated/locales/nl.ts",declarations:[{kind:"variable",name:"templates",type:{text:"object"},default:"{ 's15a16ae9f99f19bf': `Juli`, 's15a852e9f9a50fa5': `Juni`, 's17e3edbe032f79ec': `Open kalenderpop-up`, 's1a2dda8f763a68bd': `Januari`, 's1e118319b5202c41': `Ma`, 's1e187019b5262aa6': `Mei`, 's281846ef0421c71f': `November`, 's2ceb11be2290bb1b': `Annuleren`, 's39938ecdae568740': `September`, 's3b151ca64eb26ec1': `Uitbreiden`, 's407a88a592a0987c': `Augustus`, 's46d6587089bd0356': `Volgende maand`, 's49730f3d5751a433': `Laden...`, 's5052d10b539eabf0': `Maart`, 's58bfb494feb8eb02': str`${0} geselecteerd`, 's5d929ff1619ac0c9': `Zoeken`, 's5e8250fb85d64c23': `Sluiten`, 's5febcd9b311c16fe': `Scroll rechts`, 's62931b2a50168976': `Vorige maand`, 's63d040e37887f17e': `Vandaag`, 's6cfed919e21ac6ac': `Do`, 's6d24cd19e23b8185': `Di`, 's74aa0319e62b2eb7': `Wo`, 's7793b811d20184fe': `December`, 's7fd3469f78111589': `Open contextmenu`, 's83c436ed1bc16dfb': `Toon meer informatie`, 's8ade4e9d5e804d6a': `Eerste beschikbare datum`, 's9836b719fa8ef857': `Za`, 's987ac119fac8d621': `Zo`, 's9af3c72c33088826': str`Er zijn ${0} fouten die gecorrigeerd moeten worden voordat je verder kunt gaan:`, 'sa6f2645578b2d2bc': `Jaar`, 'sa7cd5c2ff6d266e7': `Oktober`, 'sb47daaf9e1c4a905': `Maand`, 'sb4f1dffbb6be6302': `Wis`, 'sb77f4dce69a005ac': `Foutmelding.`, 'sbc083a1dbee9af73': `Februari`, 'scb6b9cb49cf93277': `April`, 'sd898d99fd9c13de6': `Filter beschikbare opties`, 'sdc42f1da42d6411a': `Wis invoer`, 'se0955919920ee87d': `Dag`, 'se4129fd6b9d7b4c2': `Laatste beschikbare datum`, 'sf295af199c723ec8': `Vr`, }"}],exports:[{kind:"js",name:"templates",declaration:{name:"templates",module:"src/generated/locales/nl.ts"}}]},{kind:"javascript-module",path:"src/generated/locales/no.ts",declarations:[{kind:"variable",name:"templates",type:{text:"object"},default:"{ 's15a16ae9f99f19bf': `Juli`, 's15a852e9f9a50fa5': `Juni`, 's17e3edbe032f79ec': `Åpne kalendermodal`, 's1a2dda8f763a68bd': `Januar`, 's1e118319b5202c41': `Man`, 's1e187019b5262aa6': `Mai`, 's281846ef0421c71f': `November`, 's2ceb11be2290bb1b': `Avbryt`, 's39938ecdae568740': `September`, 's3b151ca64eb26ec1': `Utvide`, 's407a88a592a0987c': `August`, 's46d6587089bd0356': `Neste måned`, 's49730f3d5751a433': `Laster...`, 's5052d10b539eabf0': `Mars`, 's58bfb494feb8eb02': str`${0} valgt`, 's5d929ff1619ac0c9': `Søk`, 's5e8250fb85d64c23': `Lukk`, 's5febcd9b311c16fe': `Rull til høyre`, 's62931b2a50168976': `Forrige måned`, 's63d040e37887f17e': `I dag`, 's6cfed919e21ac6ac': `Tor`, 's6d24cd19e23b8185': `Tir`, 's74aa0319e62b2eb7': `Ons`, 's7793b811d20184fe': `Desember`, 's7fd3469f78111589': `Åpne kontekstmeny`, 's83c436ed1bc16dfb': `Vis mer informasjon`, 's8ade4e9d5e804d6a': `Første tilgjengelige dato`, 's9836b719fa8ef857': `Lør`, 's987ac119fac8d621': `Søn`, 's9af3c72c33088826': str`Det er ${0} feil som må rettes før du kan fortsette:`, 'sa6f2645578b2d2bc': `År`, 'sa7cd5c2ff6d266e7': `Oktober`, 'sb47daaf9e1c4a905': `Måned`, 'sb4f1dffbb6be6302': `Rens`, 'sb77f4dce69a005ac': `Feilmelding.`, 'sbc083a1dbee9af73': `Februar`, 'scb6b9cb49cf93277': `April`, 'sd898d99fd9c13de6': `Filtrer tilgjengelige alternativer`, 'sdc42f1da42d6411a': `Rens inputfelt`, 'se0955919920ee87d': `Dag`, 'se4129fd6b9d7b4c2': `Siste tilgjengelige dato`, 'sf295af199c723ec8': `Fre`, }"}],exports:[{kind:"js",name:"templates",declaration:{name:"templates",module:"src/generated/locales/no.ts"}}]},{kind:"javascript-module",path:"src/generated/locales/sv.ts",declarations:[{kind:"variable",name:"templates",type:{text:"object"},default:"{ 's15a16ae9f99f19bf': `Juli`, 's15a852e9f9a50fa5': `Juni`, 's17e3edbe032f79ec': `Öppna kalender`, 's1a2dda8f763a68bd': `Januari`, 's1e118319b5202c41': `Mån`, 's1e187019b5262aa6': `Maj`, 's281846ef0421c71f': `November`, 's2ceb11be2290bb1b': `Avbryt`, 's39938ecdae568740': `September`, 's3b151ca64eb26ec1': `Expandera`, 's407a88a592a0987c': `Augusti`, 's46d6587089bd0356': `Nästa månad`, 's49730f3d5751a433': `Laddar...`, 's5052d10b539eabf0': `Mars`, 's58bfb494feb8eb02': str`${0} valda`, 's5d929ff1619ac0c9': `Sök`, 's5e8250fb85d64c23': `Stäng`, 's5febcd9b311c16fe': `Scrolla höger`, 's62931b2a50168976': `Föregående månad`, 's63d040e37887f17e': `Idag`, 's6cfed919e21ac6ac': `Tor`, 's6d24cd19e23b8185': `Tis`, 's74aa0319e62b2eb7': `Ons`, 's7793b811d20184fe': `December`, 's7fd3469f78111589': `Öppna meny`, 's83c436ed1bc16dfb': `Visa mer information`, 's8ade4e9d5e804d6a': `Första tillgängliga datum`, 's9836b719fa8ef857': `Lör`, 's987ac119fac8d621': `Sön`, 's9af3c72c33088826': str`Det finns ${0} fel att åtgärda innan du kan fortsätta:`, 'sa6f2645578b2d2bc': `År`, 'sa7cd5c2ff6d266e7': `Oktober`, 'sb47daaf9e1c4a905': `Månad`, 'sb4f1dffbb6be6302': `Rensa`, 'sb77f4dce69a005ac': `Felmeddelande.`, 'sbc083a1dbee9af73': `Februari`, 'scb6b9cb49cf93277': `April`, 'sd898d99fd9c13de6': `Sök i listan av val`, 'sdc42f1da42d6411a': `Rensa text`, 'se0955919920ee87d': `Dag`, 'se4129fd6b9d7b4c2': `Sista tillgängliga datum`, 'sf295af199c723ec8': `Fre`, }"}],exports:[{kind:"js",name:"templates",declaration:{name:"templates",module:"src/generated/locales/sv.ts"}}]},{kind:"javascript-module",path:"src/generated/react/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./badge/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./blur/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./button/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./calendar/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./card/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./coachmark/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./container/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./context-menu/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./datepicker/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./details/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dialog/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./div/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./divider/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dropdown/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./fab/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./filter-chips/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./flex/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./grid/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./grouped-list/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./list-item/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./img/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./input/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./link/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./mask/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./menu-button/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./backdrop/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./popover/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./radio/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./rich-text/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./segmented-control/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./select/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./signal/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./spacer/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./spinner/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./text/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./textarea/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./theme/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./video/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./form-control-footer/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./form-control-header/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./option/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./menu-item/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-details/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./filter-chip/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./formatted-account/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./formatted-date/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./formatted-number/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./radio-group/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./segment/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./sensitive-number/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-ai/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-airplane-up/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-archive/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-bottom-top/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-box-left/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-box-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-down/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-inbox/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-left-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-left/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-out-of-box/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-right-circle/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-right-down-circle/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-right-up-circle/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-rotate-clockwise/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-rotate-counter-clockwise/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-rotate-left-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-rotate-right-left/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-share-left/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-share-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-up/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-wall-down/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-wall-left/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-wall-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow-wall-up/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrow/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-arrows-repeat/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-at/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-back/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bag/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bank/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-banknote-2/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-banknote/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-barcode/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bars-three/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bars-two/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-battery-loading/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bell/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-block/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-book/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bookmark-check/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bookmark-delete/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bookmark-plus/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bookmark-remove/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bookmark/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-books/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-app-store/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-apple-music/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-bankid/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-chrome/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-facebook/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-figma/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-firefox/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-github/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-green/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-instagram/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-linkedin/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-play-store/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-rss-feed/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-seb/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-spotify/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-storybook/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brand-x/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-brush/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bubble-annotation/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bubble-dots/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bubble-question/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bubble-quotes/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bubble-text/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bubble-wide-annotation/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bubble/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-bubbles/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-buildings/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-cain-link/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-calculator/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-calendar-check/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-calendar/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-calender-add/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-call/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-car/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chain-link-broken/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chain-link/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-charging-station/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chart-one/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chart-presentation/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chart-two/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-checklist/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-checkmark/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chevron-bottom/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chevron-double-down/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chevron-double-left/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chevron-double-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chevron-double-up/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chevron-grabber-vertical/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chevron-left/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chevron-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-chevron-top/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-circle-check/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-circle-info/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-circle-minus/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-circle-placeholder-on/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-circle-plus/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-circle-questionmark/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-circle-x/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-circles-three/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-clock/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-cloud-download/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-cloud-upload/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-cloudy-sun/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-compass-round/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-cookies/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-copy/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-credit-card/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-cross-large/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-cross-small/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-cup-hot/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-devices/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-direction/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-dollar/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-dot-grid-one-horizontal/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-dot-grid-one-vertical/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-dot-grid-three/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-dot-grid-two/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-email/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-euro/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-eye-open/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-eye-slash/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-fashion/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-fast-forward/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-file-bend/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-file-chart/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-file-text/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-files/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-filter/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-flag/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-floppy-disk/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-focus-square/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-focus/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-folder-add-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-folder-paper/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-folder-upload/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-folder/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-fullscreen/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-globus/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-graduate-cap/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-green-power/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-group/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-growth/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-headphones/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-heart-beat/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-heart/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-history/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-home-energy-one/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-home-energy-two/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-home-open/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-home-roof/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-horizontal-alignment-bottom/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-images/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-industry/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-invite/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-knife-spoon/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-lab/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-law/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-leisure/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-light-bulb-simple/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-light-bulb/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-lightning/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-line-chart-four/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-line-chart-one/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-line-chart-three/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-line-chart-two/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-lock/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-macbook-air/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-magnifying-glass/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-maintenance/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-map-pin/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-megaphone/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-menu-sidebar/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-minus-large/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-minus-small/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-money-hand/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-moneybag/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-moon/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-mute/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-office/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-other/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-page-add/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-page-text/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-paperclip/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pause/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pencel-line/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pencil-sign/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pencil-sparkle/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pencil-wave/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pension/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-people-a11y/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-people-add/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-people-added/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-people-circle/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-people-copy/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-people-profile/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-people-remove/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-people/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-percent/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-phone-dynamic-island/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-phone/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pie-chart/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-piggy-bank/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pin/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pinch/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-play-circle/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-play/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-plus-large/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-plus-small/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-poop/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-pound/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-power-plant/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-printer/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-push/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-qr-code/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-rainy/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-raising-hand/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-reading-list/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-receipt-bill/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-receiption-bell/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-refund/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-robot/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-rocket/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-safari/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-school/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-scissors/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-search-menu/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-seb/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-settings-gear/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-settings-slider-hor/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-settings-slider-three/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-settings-slider-ver/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-share/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-shopping-bag/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-smartwatch/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-solar-panel/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-solar/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-sort/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-square-arrow-top-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-square-behind-square/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-square-check/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-square-grid-circle/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-square-info/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-square-minus/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-square-placeholder/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-square-plus/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-square-x/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-star/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-store/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-suitcase-work/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-sun/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-sunset-arrow-down/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-tag/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-television/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-tennis/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-text-edit/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-thermostat/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-thumbs-down/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-thumbs-up/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-todos/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-trading-view-candles/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-trash-can/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-tree/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-trending-four/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-trending-one/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-trending-three/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-trending-two/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-triangle-exclamation/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-truck/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-umbrella-security/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-unlocked/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-vertical-alignment-right/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-volume-full/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-volume-half/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-volume-off/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-wallet/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-warning-sign/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-youtube/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-zap/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-zoom-in/index.js"}},{kind:"js",name:"*",declaration:{name:"*",package:"./icons/icon-zoom-out/index.js"}}]},{kind:"javascript-module",path:"src/primitives/field-base/field-base.component.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/primitives/field-base/field-base.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, a11y; @layer a11y { @media (prefers-reduced-motion: reduce) { .field { transition: none; } } } @layer base { * { box-sizing: border-box; } .field { display: flex; position: relative; align-items: center; justify-content: space-between; gap: var(--gds-space-xs); padding-block: var(--gds-space-xs); padding-inline: var(--gds-space-m) var(--gds-space-s); min-block-size: var(--gds-space-3xl); block-size: var(--gds-space-3xl); outline-style: solid; outline-width: 0; border-radius: var(--gds-space-xs); background: var(--gds-color-l3-background-secondary); color: var(--gds-color-l3-content-tertiary); border: var(--gds-space-4xs) solid var(--gds-color-l3-border-secondary); cursor: text; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 368ms; transition-property: background-color; .right { display: flex; position: absolute; gap: var(--gds-space-xs); right: var(--gds-space-s); top: var(--gds-space-xs); block-size: max-content; } } .field.lead-slot-occupied { padding-inline-start: var(--gds-space-s); } .field.action-slot-occupied:not(.trail-slot-occupied) { padding-inline-end: var(--gds-space-s); &.small { padding-inline-end: var(--gds-space-xs); } } .field:focus-within { outline-width: var(--gds-space-3xs); outline-offset: var(--gds-space-3xs); outline-color: currentColor; border-color: currentColor; } .field.small { gap: var(--gds-space-2xs); padding: calc(var(--gds-space-xs) - 1px) var(--gds-space-xs); min-block-size: var(--gds-space-xl); block-size: var(--gds-space-xl); } .field.multiline { align-items: flex-start; padding: var(--gds-space-s); padding-inline-start: var(--gds-space-m); height: max-content; } .field.disabled { background: var(--gds-color-l3-background-disabled); color: var(--gds-color-l3-content-disabled); border-color: transparent; pointer-events: none; } .field.invalid { background: var(--gds-color-l3-background-negative-secondary); border-color: var(--gds-color-l3-border-negative); color: var(--gds-color-l3-content-negative); } slot:not([name])::slotted(*) { color: currentColor; } .main-slot-wrap { display: flex; gap: var(--gds-space-xs); flex: 1; } .main-slot-wrap.multiline { height: max-content; } @media (hover: hover) { .field:hover { background: color-mix( in srgb, var(--gds-color-l3-background-secondary), var(--gds-color-l3-states-light-hover) ); } .field.invalid:hover { background: color-mix( in srgb, var(--gds-color-l3-background-negative-secondary), var(--gds-color-l3-states-negative-hover) ); } } slot[name='lead']::slotted([gds-element^='gds-icon-']) { align-items: center; justify-content: center; display: flex; inline-size: var(--gds-space-l); block-size: var(--gds-space-l); } .multiline slot[name='action']::slotted([gds-element]) { margin-top: -4px; } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/primitives/field-base/field-base.styles.ts"}}]},{kind:"javascript-module",path:"src/primitives/field-base/field-base.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/primitives/field-base/field-base.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/primitives/field-base/field-base.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/primitives/field-base/field-base.ts",declarations:[],exports:[{kind:"js",name:"GdsFieldBase",declaration:{name:"GdsFieldBase",module:"src/primitives/field-base/field-base.ts"}}]},{kind:"javascript-module",path:"src/primitives/field-base/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./field-base"}}]},{kind:"javascript-module",path:"src/primitives/form-control-footer/form-control-footer.component.ts",declarations:[{kind:"class",description:"",name:"GdsFormControlFooter",members:[{kind:"field",name:"charCounter",type:{text:"number | undefined"},attribute:"charCounter"},{kind:"field",name:"validationMessage",type:{text:"string | undefined"},attribute:"validationMessage"},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"charCounter",type:{text:"number | undefined"},fieldName:"charCounter"},{name:"validationMessage",type:{text:"string | undefined"},fieldName:"validationMessage"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-form-control-footer",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsFormControlFooter",declaration:{name:"GdsFormControlFooter",module:"src/primitives/form-control-footer/form-control-footer.component.ts"}}]},{kind:"javascript-module",path:"src/primitives/form-control-footer/form-control-footer.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, reset, transitional-styles; @layer base { :host > *:not(style) { display: flex; justify-content: space-between; align-items: center; gap: var(--gds-space-xl); } .error-message { display: flex; align-items: flex-start; gap: var(--gds-space-xs); margin-top: var(--gds-space-2xs); font-weight: var(--gds-text-weight-book); font-size: var(--gds-text-size-detail-s); color: var(--gds-color-l3-content-negative); } [gds-element^='gds-icon'] { width: 18px; height: 18px; } :host(.size-small) { & .error-message { font-size: var(--gds-text-size-detail-xs); line-height: var(--gds-text-line-height-detail-s); gap: var(--gds-space-2xs); } & [gds-element^='gds-icon'] { width: 16px; height: 16px; line-height: 16px; margin-right: 2px; } } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/primitives/form-control-footer/form-control-footer.styles.ts"}}]},{kind:"javascript-module",path:"src/primitives/form-control-footer/form-control-footer.ts",declarations:[],exports:[{kind:"js",name:"GdsFormControlFooter",declaration:{name:"GdsFormControlFooter",module:"src/primitives/form-control-footer/form-control-footer.ts"}}]},{kind:"javascript-module",path:"src/primitives/form-control-footer/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./form-control-footer"}}]},{kind:"javascript-module",path:"src/primitives/form-control-header/form-control-header.component.ts",declarations:[{kind:"class",description:"",name:"GdsFormControlHeader",slots:[{description:"The label of the form control.",name:"label"},{description:"The supporting text of the form control.",name:"supporting-text"},{description:'The extended supporting text, or "Show more info" card, of the form control.',name:"extended-supporting-text"}],members:[{kind:"field",name:"showExtendedSupportingText",type:{text:"boolean"},default:"false",description:"Whether the supporting text should be displayed or not.",attribute:"showExtendedSupportingText",reflects:!0},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"showExtendedSupportingText",type:{text:"boolean"},default:"false",description:"Whether the supporting text should be displayed or not.",fieldName:"showExtendedSupportingText"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-form-control-header",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsFormControlHeader",declaration:{name:"GdsFormControlHeader",module:"src/primitives/form-control-header/form-control-header.component.ts"}}]},{kind:"javascript-module",path:"src/primitives/form-control-header/form-control-header.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, reset, transitional-styles; @layer base { #label-row { display: flex; justify-content: space-between; align-items: center; line-height: var(--gds-text-line-height-detail-m); & > div { display: flex; flex-direction: column; } } ::slotted(label) { font-weight: var(--gds-text-weight-book); } :host(.size-small) { & slot[name='supporting-text'], & ::slotted(label) { font-size: var(--gds-text-size-detail-s); line-height: var(--gds-text-line-height-detail-s); } } #extended-supporting-text { opacity: 1; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 368ms; transition-property: all; font-size: var(--gds-text-size-body-s); line-height: var(--gds-text-line-height-body-s); border-radius: var(--gds-space-xs); background-color: var(--gds-color-l3-background-secondary); color: var(--gds-color-l3-content-tertiary); max-height: var(--_max-height); &[aria-hidden='false'] { margin: var(--gds-space-2xs) 0 0 0; padding: var(--gds-space-s) var(--gds-space-m); } &[aria-hidden='true'] { max-height: 0; opacity: 0; translate: 0 2px; padding: 0 var(--gds-space-m); margin: 0; overflow: hidden; } } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/primitives/form-control-header/form-control-header.styles.ts"}}]},{kind:"javascript-module",path:"src/primitives/form-control-header/form-control-header.ts",declarations:[],exports:[{kind:"js",name:"GdsFormControlHeader",declaration:{name:"GdsFormControlHeader",module:"src/primitives/form-control-header/form-control-header.ts"}}]},{kind:"javascript-module",path:"src/primitives/form-control-header/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./form-control-header"}}]},{kind:"javascript-module",path:"src/primitives/listbox/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./listbox"}}]},{kind:"javascript-module",path:"src/primitives/listbox/listbox.component.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/primitives/listbox/listbox.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer base, reset, transitional-styles; @layer base { :host { display: flex; flex-direction: column; overflow: auto; } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/primitives/listbox/listbox.styles.ts"}}]},{kind:"javascript-module",path:"src/primitives/listbox/listbox.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/primitives/listbox/listbox.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/primitives/listbox/listbox.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/primitives/listbox/listbox.ts",declarations:[],exports:[{kind:"js",name:"GdsListbox",declaration:{name:"GdsListbox",module:"src/primitives/listbox/listbox.ts"}}]},{kind:"javascript-module",path:"src/primitives/listbox/option.component.ts",declarations:[{kind:"class",description:"",name:"GdsOption",slots:[{description:"The default slot. Custom content can be used to display the option.",name:""}],members:[{kind:"field",name:"value",type:{text:"any"},description:"The value of the option.",attribute:"value"},{kind:"field",name:"hidden",type:{text:"boolean"},description:"Controls whether the option is visible or not.",attribute:"hidden",reflects:!0},{kind:"field",name:"selected",type:{text:"boolean"},default:"false",description:`Returns true if the option is selected.
Setting this property will select or unselect the option.`,attribute:"aria-selected",reflects:!0},{kind:"field",name:"isPlaceholder",type:{text:"boolean"},default:"false",description:`Sets this option as a placeholder.
A placehodler option does not have a value and will act as the default option.

In a multiple select listbox, placeholder options will not be rendered in the list.`,attribute:"isPlaceholder",reflects:!0},{kind:"field",name:"parentElement",readonly:!0},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"Focusable",module:"src/utils/mixins/focusable.ts"}},{kind:"field",name:"onblur",inheritedFrom:{name:"Focusable",module:"src/utils/mixins/focusable.ts"}},{kind:"field",name:"onfocus",inheritedFrom:{name:"Focusable",module:"src/utils/mixins/focusable.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-select",type:{text:"CustomEvent"},description:"Fired when the option is selected.",reactName:"onGdsSelect",eventName:"GdsSelectEvent"},{description:"Fired when the option loses focus.",name:"gds-blur",reactName:"onGdsBlur",eventName:"GdsBlurEvent"},{description:"Fired when the option gains focus.",name:"gds-focus",reactName:"onGdsFocus",eventName:"GdsFocusEvent"},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"value",type:{text:"any"},description:"The value of the option.",fieldName:"value"},{name:"hidden",type:{text:"boolean"},description:"Controls whether the option is visible or not.",fieldName:"hidden"},{name:"aria-selected",type:{text:"boolean"},default:"false",description:`Returns true if the option is selected.
Setting this property will select or unselect the option.`,fieldName:"selected"},{name:"isPlaceholder",type:{text:"boolean"},default:"false",description:`Sets this option as a placeholder.
A placehodler option does not have a value and will act as the default option.

In a multiple select listbox, placeholder options will not be rendered in the list.`,fieldName:"isPlaceholder"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"Focusable",module:"/src/utils/mixins/focusable"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-option",customElement:!0}],exports:[{kind:"js",name:"GdsOption",declaration:{name:"GdsOption",module:"src/primitives/listbox/option.component.ts"}}]},{kind:"javascript-module",path:"src/primitives/listbox/option.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer base, reset; @layer base { :host(:not(:last-child)) { border-bottom: 1px solid var(--gds-color-l2-border-primary); } :host div { display: flex; align-items: center; user-select: none; padding-inline: var(--gds-space-m); padding-block: var(--gds-space-m); cursor: pointer; font-size: var(--gds-text-size-label-input-large); font-weight: var(--gds-text-weight-regular); line-height: var(--gds-text-line-height-label-input-large); gap: 1ch; max-width: 100%; box-sizing: border-box; position: relative; &::before { content: ' '; display: flex; inset: var(--gds-space-2xs); position: absolute; border: var(--gds-space-3xs) solid currentColor; border-radius: var(--gds-space-xs); opacity: 0; visitility: hidden; pointer-events: none; } } :host([highlighted]) { background-color: var(--gds-color-l2-background-tertiary); color: var(--gds-color-l2-content-tertiary); } :host(:hover:not([highlighted])) div { background-color: var(--gds-color-l3-background-secondary); } :host(:focus-visible) { outline: none; div::before { inset: var(--gds-space-2xs); opacity: 1; visivility: visible; } } :host([inert]) { display: none; } .checkbox { display: flex; align-items: center; justify-content: center; height: 1lh; width: 1lh; box-sizing: border-box; position: relative; aspect-ratio: 1/1; border-radius: var(--gds-space-2xs); border: var(--gds-space-3xs) solid currentColor; padding: var(--gds-space-3xs); &.checked { background-color: currentColor; gds-icon-checkmark { &::part(icon) { color: var(--gds-color-l2-content-tertiary); stroke-width: var(--gds-space-2xs); } } } } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/primitives/listbox/option.styles.ts"}}]},{kind:"javascript-module",path:"src/primitives/listbox/option.ts",declarations:[],exports:[{kind:"js",name:"GdsOption",declaration:{name:"GdsOption",module:"src/primitives/listbox/option.ts"}}]},{kind:"javascript-module",path:"src/primitives/menu/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./menu"}}]},{kind:"javascript-module",path:"src/primitives/menu/menu-heading.component.ts",declarations:[{kind:"class",description:"",name:"GdsMenuHeading",members:[{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},attributes:[{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsMenuHeading",declaration:{name:"GdsMenuHeading",module:"src/primitives/menu/menu-heading.component.ts"}}]},{kind:"javascript-module",path:"src/primitives/menu/menu-heading.styles.ts",declarations:[{kind:"variable",name:"style",default:"css` @layer base, reset, transitional-styles; @layer base { :host { cursor: pointer; color: var(--gds-color-l3-content-secondary); background-color: var(--gds-color-l3-background-secondary); font-size: var(--gds-text-size-label-input-medium); line-height: var(--gds-text-line-height-label-input-medium); padding-inline: var(--gds-space-m); padding-block: var(--gds-space-xs); } } `"}],exports:[{kind:"js",name:"default",declaration:{name:"style",module:"src/primitives/menu/menu-heading.styles.ts"}}]},{kind:"javascript-module",path:"src/primitives/menu/menu-heading.ts",declarations:[],exports:[{kind:"js",name:"GdsMenuHeading",declaration:{name:"GdsMenuHeading",module:"src/primitives/menu/menu-heading.ts"}}]},{kind:"javascript-module",path:"src/primitives/menu/menu-item.component.ts",declarations:[{kind:"class",description:"",name:"GdsMenuItem",members:[{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"Focusable",module:"src/utils/mixins/focusable.ts"}},{kind:"field",name:"onblur",inheritedFrom:{name:"Focusable",module:"src/utils/mixins/focusable.ts"}},{kind:"field",name:"onfocus",inheritedFrom:{name:"Focusable",module:"src/utils/mixins/focusable.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"Focusable",module:"/src/utils/mixins/focusable"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-menu-item",customElement:!0,attributes:[{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsMenuItem",declaration:{name:"GdsMenuItem",module:"src/primitives/menu/menu-item.component.ts"}}]},{kind:"javascript-module",path:"src/primitives/menu/menu-item.ts",declarations:[],exports:[{kind:"js",name:"GdsMenuItem",declaration:{name:"GdsMenuItem",module:"src/primitives/menu/menu-item.ts"}}]},{kind:"javascript-module",path:"src/primitives/menu/menu.component.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/primitives/menu/menu.ts",declarations:[],exports:[{kind:"js",name:"GdsMenu",declaration:{name:"GdsMenu",module:"src/primitives/menu/menu.ts"}}]},{kind:"javascript-module",path:"src/primitives/ripple/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./ripple"}}]},{kind:"javascript-module",path:"src/primitives/ripple/ripple.component.ts",declarations:[{kind:"class",description:"",name:"GdsRipple",members:[{kind:"field",name:"onmousedown"},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},attributes:[{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsRipple",declaration:{name:"GdsRipple",module:"src/primitives/ripple/ripple.component.ts"}}]},{kind:"javascript-module",path:"src/primitives/ripple/ripple.ts",declarations:[],exports:[{kind:"js",name:"GdsRipple",declaration:{name:"GdsRipple",module:"src/primitives/ripple/ripple.ts"}}]},{kind:"javascript-module",path:"src/primitives/selection-controls/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./selection-field-label"}}]},{kind:"javascript-module",path:"src/primitives/selection-controls/selection-field-label.component.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/primitives/selection-controls/selection-field-label.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, a11y; @layer a11y { @media (prefers-reduced-motion: reduce) { .field-label { transition: none; } } } @layer base { * { box-sizing: border-box; --_color: var(--_radio-label-color, inherit); } .selection-field-container { display: flex; gap: var(--gds-space-s); cursor: pointer; } .selection-field-label { display: flex; flex-direction: column; justify-content: center; color: var(--_color); } .primary-label { font-weight: var(--gds-text-weight-book); cursor: pointer; } .supporting-text { font-size: var(--_font-size-supporting-text); line-height: var(--_line-height-supporting-text); font-weight: var(--gds-text-weight-regular); } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/primitives/selection-controls/selection-field-label.styles.ts"}}]},{kind:"javascript-module",path:"src/primitives/selection-controls/selection-field-label.ts",declarations:[],exports:[{kind:"js",name:"GdsSelectionFieldLabel",declaration:{name:"GdsSelectionFieldLabel",module:"src/primitives/selection-controls/selection-field-label.ts"}}]},{kind:"javascript-module",path:"src/utils/controllers/dynamic-styles-controller.ts",declarations:[{kind:"class",description:"",name:"DynamicStylesController",members:[{kind:"field",name:"host",type:{text:"GdsElement"},default:"host"},{kind:"method",name:"hostConnected"},{kind:"method",name:"has",parameters:[{name:"key",type:{text:"string"},description:"The style key to check."}],description:"Checks if the controller has a particular key."},{kind:"method",name:"inject",parameters:[{name:"key",type:{text:"string"},description:"A unique key to identify the styles."},{name:"cssResult",type:{text:"CSSResult"},description:"The CSSResult to inject."}],description:"Injects CSS into the host element's shadow root. The key is used to\nidentify the styles and can be used to update the styles later. If\nyou need to clear style for a particular key, you can call `inject`\nwith an empty string as the `styles` parameter."},{kind:"method",name:"clear",parameters:[{name:"key",type:{text:"string"},description:"The key of the styles to clear."}],description:"Clears the styles for a particular key."},{kind:"method",name:"clearAll",description:"Clears all styles of the component, including any initial styles."},{kind:"method",name:"clearInitial",description:"Clears the initial styles of the component, but keeps any injected styles."},{kind:"method",name:"restoreInitial",description:"Restores the initial styles of the component, and keeps any injected styles."}]},{kind:"function",name:"supportsConstructedStylesheets"}],exports:[{kind:"js",name:"DynamicStylesController",declaration:{name:"DynamicStylesController",module:"src/utils/controllers/dynamic-styles-controller.ts"}},{kind:"js",name:"supportsConstructedStylesheets",declaration:{name:"supportsConstructedStylesheets",module:"src/utils/controllers/dynamic-styles-controller.ts"}}]},{kind:"javascript-module",path:"src/utils/controllers/listbox-kb-nav-controller.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/utils/decorators/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./watch"}},{kind:"js",name:"*",declaration:{name:"*",package:"./observe-light-dom"}},{kind:"js",name:"*",declaration:{name:"*",package:"./watch-media-query"}}]},{kind:"javascript-module",path:"src/utils/decorators/observe-light-dom.ts",declarations:[{kind:"function",name:"observeLightDOM",parameters:[{name:"observerConfig",default:`{
    attributes: true,
    childList: true,
    subtree: false,
    characterData: true,
  }`,type:{text:"MutationObserverInit"}}],description:"Runs when the light DOM children of the component changes."}],exports:[{kind:"js",name:"observeLightDOM",declaration:{name:"observeLightDOM",module:"src/utils/decorators/observe-light-dom.ts"}}]},{kind:"javascript-module",path:"src/utils/decorators/resize-observer.ts",declarations:[{kind:"function",name:"resizeObserver",description:`Runs when the size of the component changes.

Usage:
\`\`\`javascript
\\@resizeObserver()
handleResize() {
 // Do some layout calculation or something
}
\`\`\``}],exports:[{kind:"js",name:"resizeObserver",declaration:{name:"resizeObserver",module:"src/utils/decorators/resize-observer.ts"}}]},{kind:"javascript-module",path:"src/utils/decorators/style-expression-property.ts",declarations:[{kind:"function",name:"styleExpressionProperty",parameters:[{name:"options",optional:!0,type:{text:"StyleExpressionPropertyOptions"},description:"Options for the decorator."}],description:"A decorator that can be used to create a Style Expression Property."}],exports:[{kind:"js",name:"styleExpressionProperty",declaration:{name:"styleExpressionProperty",module:"src/utils/decorators/style-expression-property.ts"}}]},{kind:"javascript-module",path:"src/utils/decorators/watch-media-query.ts",declarations:[{kind:"variable",name:"standardBreakpoints",type:{text:"object"},default:"{ sm: '(min-width: 576px)', md: '(min-width: 768px)', lg: '(min-width: 1024px)', xl: '(min-width: 1280px)', }",description:`Media queries expressing standard breakpoints.
TODO: These should probably be imported from somehere, so that they are always in sync with CSS.`},{kind:"function",name:"watchMediaQuery",parameters:[{name:"q",type:{text:"string"},description:`The media query to watch.

Usage:
\`\`\`javascript
\\@watchMediaQuery('(max-width: 576px)')
handleMobileLayout(matches) {
if (matches) {
// Do something when the media query matches
} else
// Do something when the media query no longer matches
}
}
\`\`\``}],description:"Runs when the match state of the specified media query changes."}],exports:[{kind:"js",name:"standardBreakpoints",declaration:{name:"standardBreakpoints",module:"src/utils/decorators/watch-media-query.ts"}},{kind:"js",name:"watchMediaQuery",declaration:{name:"watchMediaQuery",module:"src/utils/decorators/watch-media-query.ts"}}]},{kind:"javascript-module",path:"src/utils/decorators/watch.ts",declarations:[{kind:"function",name:"watch",parameters:[{name:"propertyName",type:{text:"string | string[]"}},{name:"options",optional:!0,type:{text:"WatchOptions"}}],description:"Runs when observed properties change, e.g."}],exports:[{kind:"js",name:"watch",declaration:{name:"watch",module:"src/utils/decorators/watch.ts"}}]},{kind:"javascript-module",path:"src/utils/directives/forward-attributes.ts",declarations:[{kind:"variable",name:"forwardAttributes"}],exports:[{kind:"js",name:"forwardAttributes",declaration:{name:"forwardAttributes",module:"src/utils/directives/forward-attributes.ts"}}]},{kind:"javascript-module",path:"src/utils/directives/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./forward-attributes"}}]},{kind:"javascript-module",path:"src/utils/helpers/attribute-converters.ts",declarations:[{kind:"variable",name:"dateConverter",type:{text:"ComplexAttributeConverter<Date, string>"},default:"{ fromAttribute(value: string) { return new Date(value) }, toAttribute(value: Date) { return value.toISOString() }, }",description:"Converts between an ISO date string and a Date object."},{kind:"variable",name:"dateArrayConverter",type:{text:"ComplexAttributeConverter<Date[], string>"},default:"{ fromAttribute(value: string) { return value.split(',').map((d) => new Date(d.trim())) }, toAttribute(value: Date[]) { return JSON.stringify(value.map((d) => d.toISOString())) }, }",description:"Converts between a comma-separated list of ISO date strings and an array of Date objects."},{kind:"variable",name:"stringArrayConverter",type:{text:"ComplexAttributeConverter<string[], string>"},default:"{ fromAttribute(value: string) { return value.split(',') }, toAttribute(value: string[]) { return Array.isArray(value) ? value.join(',') : value }, }",description:"Converts between a comma-separated list of strings and an array of strings."}],exports:[{kind:"js",name:"dateConverter",declaration:{name:"dateConverter",module:"src/utils/helpers/attribute-converters.ts"}},{kind:"js",name:"dateArrayConverter",declaration:{name:"dateArrayConverter",module:"src/utils/helpers/attribute-converters.ts"}},{kind:"js",name:"stringArrayConverter",declaration:{name:"stringArrayConverter",module:"src/utils/helpers/attribute-converters.ts"}}]},{kind:"javascript-module",path:"src/utils/helpers/custom-element-scoping.ts",declarations:[{kind:"variable",name:"VER_SUFFIX",type:{text:"string"},default:"'-gdsvsuffix'"},{kind:"class",description:"",name:"ScopedElementRegistry",members:[{kind:"field",name:"instance",static:!0,readonly:!0}]},{kind:"function",name:"gdsCustomElement",parameters:[{name:"tagName",type:{text:"string"},description:"The tag name of the custom element to define."},{name:"options",optional:!0,type:{text:"GdsCustomElementOptions"}}],description:"Class decorator factory that defines the decorated class as a custom element, and registers\nit with the custom element registry under a versioned name.\n\n```js"},{kind:"variable",name:"nameToRegister"},{kind:"function",name:"htmlTemplateTagFactory",parameters:[{name:"extendedTag",type:{text:"(strings: TemplateStringsArray, ...values: any[]) => any"}}],description:`Template tag factory that creates a new template tag, which rewrites all custom element names from the
lookup table to include the version suffix, and then passes the template on to the provided template tag.`},{kind:"variable",name:"html",description:"Template tag that rewrites all custom element names from the lookup table to include the\nversion suffix, before passing the template on to the Lit `html` tag."},{kind:"function",name:"getScopedTagName",parameters:[{name:"tagName",type:{text:"string"},description:"The tag name to scope"}],description:"Returns the correctly scoped tag name for the given tag."},{kind:"function",name:"getUnscopedTagName",parameters:[{name:"tagName",type:{text:"string"},description:"The scoped tag name to unscope"}],description:"Returns the unscoped tag name for the given scoped tag."}],exports:[{kind:"js",name:"VER_SUFFIX",declaration:{name:"VER_SUFFIX",module:"src/utils/helpers/custom-element-scoping.ts"}},{kind:"js",name:"ScopedElementRegistry",declaration:{name:"ScopedElementRegistry",module:"src/utils/helpers/custom-element-scoping.ts"}},{kind:"js",name:"gdsCustomElement",declaration:{name:"gdsCustomElement",module:"src/utils/helpers/custom-element-scoping.ts"}},{kind:"custom-element-definition",name:"nameToRegister",declaration:{name:"Component",module:"src/utils/helpers/custom-element-scoping.ts"}},{kind:"js",name:"htmlTemplateTagFactory",declaration:{name:"htmlTemplateTagFactory",module:"src/utils/helpers/custom-element-scoping.ts"}},{kind:"js",name:"html",declaration:{name:"html",module:"src/utils/helpers/custom-element-scoping.ts"}},{kind:"js",name:"getScopedTagName",declaration:{name:"getScopedTagName",module:"src/utils/helpers/custom-element-scoping.ts"}},{kind:"js",name:"getUnscopedTagName",declaration:{name:"getUnscopedTagName",module:"src/utils/helpers/custom-element-scoping.ts"}},{kind:"js",name:"default",declaration:{module:"src/utils/helpers/custom-element-scoping.ts"}}]},{kind:"javascript-module",path:"src/utils/helpers/id.ts",declarations:[{kind:"function",name:"randomId",return:{type:{text:"string"}},description:"Generate a random id with `gds-` prefix"}],exports:[{kind:"js",name:"randomId",declaration:{name:"randomId",module:"src/utils/helpers/id.ts"}}]},{kind:"javascript-module",path:"src/utils/helpers/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./id"}},{kind:"js",name:"*",declaration:{name:"*",package:"./style-expression-helpers"}}]},{kind:"javascript-module",path:"src/utils/helpers/is-server.ts",declarations:[{kind:"variable",name:"isServer",description:"Check if the code is running on the server"}],exports:[{kind:"js",name:"isServer",declaration:{name:"isServer",module:"src/utils/helpers/is-server.ts"}}]},{kind:"javascript-module",path:"src/utils/helpers/strip-white-space.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/utils/helpers/style-expression-helpers.ts",declarations:[{kind:"function",name:"parseColorValue",return:{type:{text:"string"}},parameters:[{name:"value",type:{text:"string"},description:"The color token name"},{name:"context",type:{text:"string"},description:"The context, such as content, background, border, etc."},{name:"level",type:{text:"GdsColorLevel"},description:"The level of the color. Can be 1, 2 or 3"}],description:`Parse color token value to a css var expression. If slash is present,
the value after the slash vill be used for transparency.`},{kind:"function",name:"forColorTokens",return:{type:{text:"StyleExpressionPropertyOptions"}},parameters:[{name:"context",type:{text:"string"},description:"The context, such as content, background, border, etc."}],description:"Create options for style expression properties that expect color tokens."},{kind:"variable",name:"forSpaceTokens",type:{text:"StyleExpressionPropertyOptions"},default:"{ valueTemplate: (value: string) => `var(--gds-space-${value}, 0)`, }",description:"Create options for style expression properties that expect space tokens."},{kind:"variable",name:"forSpaceTokensAndCustomValues",type:{text:"StyleExpressionPropertyOptions"},default:"{ valueTemplate: (value: string) => `var(--gds-space-${sanitizeVariableName(value)}, ${value})`, }",description:"Create options for style expression properties that expect space tokens."},{kind:"variable",name:"forSpaceTokensSupportingNegative",type:{text:"StyleExpressionPropertyOptions"},default:"{ valueTemplate: (v) => { const sign = v.startsWith('-') ? 'neg' : 'pos' const val = sign == 'pos' ? `var(--gds-space-${v})` : `calc(var(--gds-space-${v.substring(1)}) * -1)` return v === 'auto' ? 'auto' : val }, styleTemplate: (prop, values) => { const transformValue = (v: string) => (v === 'auto' ? 'auto' : `${v}`) const top = transformValue(values[0]) const right = values.length > 1 ? transformValue(values[1]) : top const bottom = values.length > 2 ? transformValue(values[2]) : top const left = values.length > 3 ? transformValue(values[3]) : right return `${prop}: ${top} ${right} ${bottom} ${left};` }, }",description:`Create options for style expression properties that expect space tokens.
This version supports negative values.`}],exports:[{kind:"js",name:"parseColorValue",declaration:{name:"parseColorValue",module:"src/utils/helpers/style-expression-helpers.ts"}},{kind:"js",name:"forColorTokens",declaration:{name:"forColorTokens",module:"src/utils/helpers/style-expression-helpers.ts"}},{kind:"js",name:"forSpaceTokens",declaration:{name:"forSpaceTokens",module:"src/utils/helpers/style-expression-helpers.ts"}},{kind:"js",name:"forSpaceTokensAndCustomValues",declaration:{name:"forSpaceTokensAndCustomValues",module:"src/utils/helpers/style-expression-helpers.ts"}},{kind:"js",name:"forSpaceTokensSupportingNegative",declaration:{name:"forSpaceTokensSupportingNegative",module:"src/utils/helpers/style-expression-helpers.ts"}}]},{kind:"javascript-module",path:"src/utils/helpers/style-expression-parser-tester.ts",declarations:[],exports:[]},{kind:"javascript-module",path:"src/utils/helpers/style-expression-parser.ts",declarations:[{kind:"function",name:"tokenize",return:{type:{text:""}},parameters:[{name:"source",default:"''",description:"The source string to tokenize"}],description:"Takes a string and returns an array of tokens. Each token is a string or control character."},{kind:"function",name:"parse",return:{type:{text:""}},parameters:[{name:"tokens",type:{text:"Tokens"},description:"An array of tokens"}],description:"Takes an array of tokens and returns a basic AST structure."},{kind:"function",name:"toCss",parameters:[{name:"selector",type:{text:"string"}},{name:"property",type:{text:"string"}},{name:"tree",type:{text:"BreakpointTree"}},{name:"valueTemplate",default:"(v) => v",type:{text:"(value: string) => string"}},{name:"styleTemplate",default:"(p, vs) =>\n    `${p}: ${vs.join(' ')};`",type:{text:"(property: string, values: string[]) => string"}}],description:"Takes a selector, a rule, and a tree of breakpoints and returns a CSS string."}],exports:[{kind:"js",name:"tokenize",declaration:{name:"tokenize",module:"src/utils/helpers/style-expression-parser.ts"}},{kind:"js",name:"parse",declaration:{name:"parse",module:"src/utils/helpers/style-expression-parser.ts"}},{kind:"js",name:"toCss",declaration:{name:"toCss",module:"src/utils/helpers/style-expression-parser.ts"}}]},{kind:"javascript-module",path:"src/utils/helpers/unwrap-slots.ts",declarations:[{kind:"function",name:"unwrap",parameters:[{name:"slotRef",type:{text:"HTMLSlotElement"}}],description:"Unwraps nested slots and returns the first slot that has actual assigned elements as children."}],exports:[{kind:"js",name:"unwrap",declaration:{name:"unwrap",module:"src/utils/helpers/unwrap-slots.ts"}}]},{kind:"javascript-module",path:"src/utils/localization/localization.ts",declarations:[{kind:"function",name:"gdsInitLocalization",parameters:[{name:"{ extraLocales, extraTemplates }",default:`{
    extraLocales: [],
    extraTemplates: new Map(),
  }`,type:{text:"LocalizationConfig"}},{description:"Extra locales to add to the list of target locales",name:"extraLocales"},{description:"Extra templates to add to the list of localized templates",name:"extraTemplates"}],description:"Initializes localization for Green Core. This is a wrapper around Lit's `configureLocalization`,\nwhich adds the ability to add extra locales and templates."}],exports:[{kind:"js",name:"targetLocales",declaration:{name:"targetLocales",module:"src/utils/localization/localization.ts"}},{kind:"js",name:"gdsInitLocalization",declaration:{name:"gdsInitLocalization",module:"src/utils/localization/localization.ts"}}]},{kind:"javascript-module",path:"src/utils/mixins/declarative-layout-mixins.ts",declarations:[{kind:"mixin",description:"Mixin that adds horizontal and inline sizing properties to a component.",name:"withSizeXProps",members:[{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties"}],parameters:[{name:"base",type:{text:"T"}}]},{kind:"mixin",description:"Mixin that adds vertical and block sizing properties to a component.",name:"withSizeYProps",members:[{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties"}],parameters:[{name:"base",type:{text:"T"}}]},{kind:"mixin",description:"Mixin that adds margin properties to a component.",name:"withMarginProps",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties"}],parameters:[{name:"base",type:{text:"T"}}]},{kind:"mixin",description:"Mixin that adds padding properties to a component.",name:"withPaddingProps",members:[{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties"}],parameters:[{name:"base",type:{text:"T"}}]},{kind:"mixin",description:"Mixin that adds layout child properties to a component.\n\n'Layout child' properties are properties that are applies to the children of layout containers such as `gds-div`, `gds-flex` and `gds-grid`.",name:"withLayoutChildProps",members:[{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties"}],parameters:[{name:"base",type:{text:"T"}}]},{kind:"mixin",description:"Mixin that adds positioning properties to a component.",name:"withPositioningProps",members:[{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties"},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties"}],parameters:[{name:"base",type:{text:"T"}}]}],exports:[{kind:"js",name:"withSizeXProps",declaration:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"js",name:"withSizeYProps",declaration:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"js",name:"withMarginProps",declaration:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"js",name:"withPaddingProps",declaration:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"js",name:"withLayoutChildProps",declaration:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"js",name:"withPositioningProps",declaration:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}}]},{kind:"javascript-module",path:"src/utils/mixins/focusable.ts",declarations:[{kind:"mixin",description:"This mixin handles focusing of elements, and adds the `gds-focus` and `gds-blur` events.",name:"Focusable",members:[{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}]},{kind:"field",name:"onblur"},{kind:"field",name:"onfocus"}],parameters:[{name:"superClass",type:{text:"T"}}]}],exports:[{kind:"js",name:"Focusable",declaration:{name:"Focusable",module:"src/utils/mixins/focusable.ts"}}]},{kind:"javascript-module",path:"src/utils/mixins/mixin-builder.ts",declarations:[{kind:"function",name:"mix",return:{type:{text:"MixinBuilder<TBase>"}},parameters:[{name:"BaseClass",type:{text:"TBase"}}]}],exports:[{kind:"js",name:"mix",declaration:{name:"mix",module:"src/utils/mixins/mixin-builder.ts"}}]},{kind:"javascript-module",path:"src/utils/testing/index.ts",declarations:[{kind:"function",name:"clickOnElement",parameters:[{name:"el",type:{text:"Element"}},{name:"position",default:"'center'",type:{text:"'top' | 'right' | 'bottom' | 'left' | 'center'"}},{name:"offsetX",default:"0"},{name:"offsetY",default:"0"}],description:"A testing utility that measures an element's position and clicks on it."},{kind:"function",name:"moveMouseOnElement",parameters:[{name:"el",type:{text:"Element"}},{name:"position",default:"'center'",type:{text:"'top' | 'right' | 'bottom' | 'left' | 'center'"}},{name:"offsetX",default:"0"},{name:"offsetY",default:"0"}],description:"A testing utility that moves the mouse onto an element."},{kind:"function",name:"dragElement",return:{type:{text:"Promise<void>"}},parameters:[{name:"el",type:{text:"Element"}},{name:"deltaX",default:"0"},{name:"deltaY",default:"0"}],description:"A testing utility that drags an element with the mouse."},{kind:"function",name:"isWebKit"},{kind:"function",name:"isChromium"},{kind:"function",name:"isFirefox"},{kind:"function",name:"onlyDate",parameters:[{name:"date",type:{text:"Date | undefined"}}]}],exports:[{kind:"js",name:"clickOnElement",declaration:{name:"clickOnElement",module:"src/utils/testing/index.ts"}},{kind:"js",name:"moveMouseOnElement",declaration:{name:"moveMouseOnElement",module:"src/utils/testing/index.ts"}},{kind:"js",name:"dragElement",declaration:{name:"dragElement",module:"src/utils/testing/index.ts"}},{kind:"js",name:"isWebKit",declaration:{name:"isWebKit",module:"src/utils/testing/index.ts"}},{kind:"js",name:"isChromium",declaration:{name:"isChromium",module:"src/utils/testing/index.ts"}},{kind:"js",name:"isFirefox",declaration:{name:"isFirefox",module:"src/utils/testing/index.ts"}},{kind:"js",name:"onlyDate",declaration:{name:"onlyDate",module:"src/utils/testing/index.ts"}}]},{kind:"javascript-module",path:"src/utils/transitional-styles/transitional-styles.ts",declarations:[{kind:"function",name:"registerTransitionalStyles",description:`Registers transitional styles for all components.

**Note:** If you are only using a few components, consider registering those
separately instead. That way, any unused styles can get tree shaken away.`},{kind:"class",description:"",name:"TransitionalStyles",members:[{kind:"field",name:"instance",static:!0,readonly:!0},{kind:"method",name:"apply",parameters:[{name:"element",type:{text:"GdsElement"}},{name:"styleKey",type:{text:"string"}}]},{kind:"method",name:"applyToElement",parameters:[{name:"styleKey",type:{text:"string"}},{name:"sheet",type:{text:"string"}}]},{kind:"method",name:"register",parameters:[{name:"name",type:{text:"string"}},{name:"styles",type:{text:"string"}}]}]}],exports:[{kind:"js",name:"registerTransitionalStyles",declaration:{name:"registerTransitionalStyles",module:"src/utils/transitional-styles/transitional-styles.ts"}},{kind:"js",name:"TransitionalStyles",declaration:{name:"TransitionalStyles",module:"src/utils/transitional-styles/transitional-styles.ts"}}]},{kind:"javascript-module",path:"src/components/details/details-icon/details-icon.component.ts",declarations:[{kind:"class",description:"",name:"GdsIconDetails",members:[{kind:"field",name:"open",type:{text:"boolean"},default:"false",description:"Controls if the details is open",attribute:"open",reflects:!0},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"open",type:{text:"boolean"},default:"false",description:"Controls if the details is open",fieldName:"open"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-icon-details",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsIconDetails",declaration:{name:"GdsIconDetails",module:"src/components/details/details-icon/details-icon.component.ts"}}]},{kind:"javascript-module",path:"src/components/details/details-icon/details-icon.style.ts",declarations:[{kind:"variable",name:"styles",default:"css` :host { display: contents; } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/details/details-icon/details-icon.style.ts"}}]},{kind:"javascript-module",path:"src/components/details/details-icon/details-icon.ts",declarations:[],exports:[{kind:"js",name:"GdsIconDetails",declaration:{name:"GdsIconDetails",module:"src/components/details/details-icon/details-icon.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chip/filter-chip.component.ts",declarations:[{kind:"class",description:"",name:"GdsFilterChip",members:[{kind:"field",name:"selected",type:{text:"boolean"},default:"false",description:"Whether the chip is selected",attribute:"selected",reflects:!0},{kind:"field",name:"value",type:{text:"ValueT | undefined"},description:"The value of the chip",attribute:"value"},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"selected",type:{text:"boolean"},default:"false",description:"Whether the chip is selected",fieldName:"selected"},{name:"value",type:{text:"ValueT | undefined"},description:"The value of the chip",fieldName:"value"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-filter-chip",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsFilterChip",declaration:{name:"GdsFilterChip",module:"src/components/filter-chips/filter-chip/filter-chip.component.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chip/filter-chip.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Filter Chips/Filter Chip', component: 'gds-filter-chip', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-filter-chip'), }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/filter-chips)
&nbsp;|&nbsp;
[Usage guidelines](https://designlibrary.sebgroup.com/components/component-filter-chip)

The filter chip is a sub-component of the filter chips component, and should generally not be used on its own.`},{kind:"variable",name:"Basic",type:{text:"Story"},default:"{ ...DefaultParams, }"}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/filter-chips/filter-chip/filter-chip.stories.ts"}},{kind:"js",name:"Basic",declaration:{name:"Basic",module:"src/components/filter-chips/filter-chip/filter-chip.stories.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chip/filter-chip.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` @layer base, reset, transitional-styles; @layer base { .btn-p { padding: 0 0.75rem; } .icon { width: 1rem; } } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/filter-chips/filter-chip/filter-chip.styles.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chip/filter-chip.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/filter-chips/filter-chip/filter-chip.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/filter-chips/filter-chip/filter-chip.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chip/filter-chip.ts",declarations:[],exports:[{kind:"js",name:"GdsFilterChip",declaration:{name:"GdsFilterChip",module:"src/components/filter-chips/filter-chip/filter-chip.ts"}}]},{kind:"javascript-module",path:"src/components/filter-chips/filter-chip/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./filter-chip"}}]},{kind:"javascript-module",path:"src/components/form/summary/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./summary"}}]},{kind:"javascript-module",path:"src/components/form/summary/summary.component.ts",declarations:[{kind:"class",description:"",name:"GdsFormSummary",members:[{kind:"field",name:"form",type:{text:"HTMLFormElement | undefined"}},{kind:"field",name:"formObserver",type:{text:"MutationObserver | undefined"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsElement",module:"/src/gds-element"},attributes:[{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsFormSummary",declaration:{name:"GdsFormSummary",module:"src/components/form/summary/summary.component.ts"}}]},{kind:"javascript-module",path:"src/components/form/summary/summary.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Form/Validation/Summary', component: 'gds-form-summary', parameters: { layout: 'centered', }, tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-form-summary'), }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/form/summary)
&nbsp;|&nbsp;
[Usage guidelines](https://designlibrary.sebgroup.com/components/component-errorsummary)


When a user attempts to submit a form with errors, this component displays a summary of those errors.
Including an error summary greatly assists users in promptly identifying and addressing multiple errors
in a consolidated manner. It provides a clear indication of what went wrong and what needs to be corrected.

Each form component that contains an error is listed as a row, displaying the name of the field and
linking it to the corresponding form element.`},{kind:"variable",name:"Usage",type:{text:"Story"},default:`{ ...DefaultParams, render: (args) => html\`<form style="width: 450px"> <gds-flex flex-direction="column" gap="m"> <gds-dropdown label="Astronaut" .validator=\${{ validate: (el: any) => { if (el.value !== 'cat') return [ { ...el.validity, valid: false, customError: true }, el.value === undefined ? 'An astronaut is required' : 'Only cats can pilot rockets!', ] }, }} > <gds-option>Pick your astronaut</gds-option> <gds-option value="dog">Dog</gds-option> <gds-option value="cat">Cat</gds-option> <gds-option value="fish">Fish</gds-option> </gds-dropdown> <gds-datepicker label="Launch date" .validator=\${{ validate: (el: any) => { if (el.value === undefined) return [ { ...el.validity, valid: false, customError: true }, 'A date is required', ] }, }} ></gds-datepicker> <gds-input label="Designation" .validator=\${{ validate: (el: any) => { if (el.value === '') return [ { ...el.validity, valid: false, customError: true }, 'A designation is required', ] }, }} ></gds-input> <gds-div margin="s 0 s"> <gds-form-summary></gds-form-summary> </gds-div> <gds-flex gap="m"> <gds-button type="submit"> Launch <gds-icon-rocket slot="trail"></gds-icon-rocket> </gds-button> <gds-button type="reset">Reset</gds-button> </gds-flex> </gds-flex> </form>\`, }`,description:"To use the `gds-form-summary` component, simply place it inside a form element.\n\nThe suammry component will automatically detect any form elements with validation errors and display them."}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/form/summary/summary.stories.ts"}},{kind:"js",name:"Usage",declaration:{name:"Usage",module:"src/components/form/summary/summary.stories.ts"}}]},{kind:"javascript-module",path:"src/components/form/summary/summary.ts",declarations:[],exports:[{kind:"js",name:"GdsFormSummary",declaration:{name:"GdsFormSummary",module:"src/components/form/summary/summary.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/account/account-formatter.ts",declarations:[{kind:"variable",name:"accountsFormats",default:"{ 'seb-account': (value) => { const account = typeof value === 'string' ? value.replace(' ', '') : (value?.toString() ?? '') if (account.length !== 11) { return account } return `${account.slice(0, 4)} ${account.slice(4, 6)} ${account.slice(6, 9)} ${account.slice(9, 11)}` }, } satisfies Record<string, AccountFormatter>"}],exports:[{kind:"js",name:"accountsFormats",declaration:{name:"accountsFormats",module:"src/components/formatted-text/account/account-formatter.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/account/formatted-account.component.ts",declarations:[{kind:"class",description:"",name:"GdsFormattedAccount",members:[{kind:"field",name:"account",type:{text:"number | string | undefined"},description:`The account number or identifier to display.
For format 'seb-account', it needs to be 11 characters.`,attribute:"account"},{kind:"field",name:"formattedValue",type:{text:"string"},readonly:!0,inheritedFrom:{name:"GdsFormattedText",module:"src/components/formatted-text/formatted-text.ts"}},{kind:"field",name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,attribute:"tag",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-transform'",type:{text:"string | undefined"},description:`Controls the text-transform property of the text.
Supports all valid CSS text-transform values.`,inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"'text-decoration'",type:{text:"string | undefined"},description:`Controls the text-decoration property of the inner element.
Supports all valid CSS text-decoration values.`,inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"lines",type:{text:"number | undefined"},description:"Controls the number of lines it should show.",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"account",type:{text:"number | string | undefined"},description:`The account number or identifier to display.
For format 'seb-account', it needs to be 11 characters.`,fieldName:"account"},{name:"format",type:{text:"AccountFormats"},default:"'seb-account'",description:"Specifies the account format.",fieldName:"format"},{name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,fieldName:"tag",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsFormattedText",module:"/src/components/formatted-text/formatted-text"},tagName:"gds-formatted-account",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsFormattedAccount",declaration:{name:"GdsFormattedAccount",module:"src/components/formatted-text/account/formatted-account.component.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/account/formatted-account.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Formatted Text/Accounts', component: 'gds-formatted-account', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-formatted-account'), }, }",description:"[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/formatted-text/account)\n\n`gds-formatted-account` extends `gds-text` and formats the account to the desired format."},{kind:"variable",name:"Default",type:{text:"Story"},default:'{ ...DefaultParams, name: \'SEB Account\', render: (args) => html`<gds-flex gap="m" flex-direction="column"> <gds-formatted-account .account=${args.account}></gds-formatted-account> <gds-formatted-account>${args.account}</gds-formatted-account> </gds-flex>`, }'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/formatted-text/account/formatted-account.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/formatted-text/account/formatted-account.stories.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/account/formatted-account.ts",declarations:[],exports:[{kind:"js",name:"GdsFormattedAccount",declaration:{name:"GdsFormattedAccount",module:"src/components/formatted-text/account/formatted-account.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/account/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./formatted-account"}}]},{kind:"javascript-module",path:"src/components/formatted-text/date/date-time-formatter.ts",declarations:[{kind:"variable",name:"dateTimeFormats",default:"{ dateOnlyNumbers: (value, locale) => new Intl.DateTimeFormat(locale, { dateStyle: 'short' }).format( convertValueToDate(value), ), dateLong: (value, locale) => new Intl.DateTimeFormat(locale, { dateStyle: 'long' }).format( convertValueToDate(value), ), dateLongWithWeekday: (value, locale) => new Intl.DateTimeFormat(locale, { dateStyle: 'full' }).format( convertValueToDate(value), ), dateShort: (value, locale) => { const formatter = new Intl.DateTimeFormat(locale, { dateStyle: 'medium' }) if (locale?.toLowerCase() === 'sv-se') { return formatter.format(convertValueToDate(value)).replace('.', '') } return formatter.format(convertValueToDate(value)) }, dateShortWithWeekday: (value, locale) => { const formatted = new Intl.DateTimeFormat(locale, { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric', }).format(convertValueToDate(value)) if (locale?.toLowerCase() === 'sv-se') { return formatted.replace('.', '') } if (locale?.toLowerCase() === 'en-gb') { return formatted.replace(',', '') } return formatted }, timeShort: (value, locale) => new Intl.DateTimeFormat(locale, { timeStyle: 'short' }).format( convertValueToDate(value), ), timeLong: (value, locale) => new Intl.DateTimeFormat(locale, { timeStyle: 'medium' }).format( convertValueToDate(value), ), } satisfies Record<string, DateTimeFormatter>"}],exports:[{kind:"js",name:"dateTimeFormats",declaration:{name:"dateTimeFormats",module:"src/components/formatted-text/date/date-time-formatter.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/date/formatted-date.component.ts",declarations:[{kind:"class",description:"",name:"GdsFormattedDate",members:[{kind:"field",name:"value",type:{text:"Date | string | undefined"},description:"The date value to be formatted, either Date or ISO string."},{kind:"field",name:"format",type:{text:"DateTimeFormat"},default:"'dateOnlyNumbers'",description:"Specifies the date format.",attribute:"format"},{kind:"field",name:"locale",type:{text:"string | undefined"},description:"The locale used for date formatting.",attribute:"locale"},{kind:"field",name:"formattedValue",type:{text:"string"},readonly:!0,inheritedFrom:{name:"GdsFormattedText",module:"src/components/formatted-text/formatted-text.ts"}},{kind:"field",name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,attribute:"tag",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-transform'",type:{text:"string | undefined"},description:`Controls the text-transform property of the text.
Supports all valid CSS text-transform values.`,inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"'text-decoration'",type:{text:"string | undefined"},description:`Controls the text-decoration property of the inner element.
Supports all valid CSS text-decoration values.`,inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"lines",type:{text:"number | undefined"},description:"Controls the number of lines it should show.",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"format",type:{text:"DateTimeFormat"},default:"'dateOnlyNumbers'",description:"Specifies the date format.",fieldName:"format"},{name:"locale",type:{text:"string | undefined"},description:"The locale used for date formatting.",fieldName:"locale"},{name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,fieldName:"tag",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsFormattedText",module:"/src/components/formatted-text/formatted-text"},tagName:"gds-formatted-date",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsFormattedDate",declaration:{name:"GdsFormattedDate",module:"src/components/formatted-text/date/formatted-date.component.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/date/formatted-date.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Formatted Text/Date and time', component: 'gds-formatted-date', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-formatted-date'), }, }",description:"[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/formatted-text/date)\n\n`gds-formatted-date` extends `gds-text` and formats the date to the desired format."},{kind:"variable",name:"Formats",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Formats\', render: (args) => html`<gds-flex flex-direction="column" gap="m"> ${formats.map( (format) => html`<gds-flex gap="l" justify-content="space-between"> <gds-text>${format.name}:</gds-text> <gds-flex gap="m" flex-direction="column"> <gds-formatted-date .value=${args.value} .locale=${args.locale} .format=${format.value} ></gds-formatted-date> <gds-formatted-date .locale=${args.locale} .format=${format.value} > ${args.value} </gds-formatted-date> </gds-flex> </gds-flex> <gds-divider></gds-divider>`, )} </gds-flex>`, }'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/formatted-text/date/formatted-date.stories.ts"}},{kind:"js",name:"Formats",declaration:{name:"Formats",module:"src/components/formatted-text/date/formatted-date.stories.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/date/formatted-date.ts",declarations:[],exports:[{kind:"js",name:"GdsFormattedDate",declaration:{name:"GdsFormattedDate",module:"src/components/formatted-text/date/formatted-date.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/date/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./formatted-date"}}]},{kind:"javascript-module",path:"src/components/formatted-text/number/formatted-number.component.ts",declarations:[{kind:"class",description:"",name:"GdsFormattedNumber",members:[{kind:"field",name:"value",type:{text:"number | string | undefined"},description:"The numerical value to display."},{kind:"field",name:"locale",type:{text:"string | undefined"},description:"The locale used for number formatting.",attribute:"locale"},{kind:"field",name:"currency",type:{text:"string | undefined"},description:"The currency used when formatting numbers.",attribute:"currency"},{kind:"field",name:"formattedValue",type:{text:"string"},readonly:!0,inheritedFrom:{name:"GdsFormattedText",module:"src/components/formatted-text/formatted-text.ts"}},{kind:"field",name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,attribute:"tag",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-transform'",type:{text:"string | undefined"},description:`Controls the text-transform property of the text.
Supports all valid CSS text-transform values.`,inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"'text-decoration'",type:{text:"string | undefined"},description:`Controls the text-decoration property of the inner element.
Supports all valid CSS text-decoration values.`,inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"lines",type:{text:"number | undefined"},description:"Controls the number of lines it should show.",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"locale",type:{text:"string | undefined"},description:"The locale used for number formatting.",fieldName:"locale"},{name:"currency",type:{text:"string | undefined"},description:"The currency used when formatting numbers.",fieldName:"currency"},{name:"format",type:{text:"NumberFormats"},default:"'decimalsAndThousands'",description:"Specifies the number format.",fieldName:"format"},{name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,fieldName:"tag",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsFormattedText",module:"/src/components/formatted-text/formatted-text"},tagName:"gds-formatted-number",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsFormattedNumber",declaration:{name:"GdsFormattedNumber",module:"src/components/formatted-text/number/formatted-number.component.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/number/formatted-number.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Formatted Text/Number', component: 'gds-formatted-number', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-formatted-number'), currency: { type: 'string', }, }, }",description:"[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/formatted-text/number)\n\n`gds-formatted-number` extends `gds-text` and formats the number to the desired format."},{kind:"variable",name:"Default",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Default\', render: (args) => html`<gds-flex gap="m" flex-direction="column"> <gds-formatted-number .value=${args.value} .locale=${args.locale} .currency=${args.currency} ></gds-formatted-number ><gds-formatted-number .locale=${args.locale} .currency=${args.currency} >${args.value}</gds-formatted-number ></gds-flex >`, }'},{kind:"variable",name:"Currencies",type:{text:"Story"},default:'{ ...DefaultParams, name: \'Currencies\', render: (args) => html`<gds-flex flex-direction="column" gap="m"> ${currencies.map( (currency) => html`<gds-flex gap="l" justify-content="space-between"> <gds-text>${currency}:</gds-text> <gds-formatted-number .value=${args.value} .locale=${args.locale} .currency=${currency} ></gds-formatted-number> </gds-flex> <gds-divider></gds-divider>`, )} </gds-flex>`, }'}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/formatted-text/number/formatted-number.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/formatted-text/number/formatted-number.stories.ts"}},{kind:"js",name:"Currencies",declaration:{name:"Currencies",module:"src/components/formatted-text/number/formatted-number.stories.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/number/formatted-number.ts",declarations:[],exports:[{kind:"js",name:"GdsFormattedNumber",declaration:{name:"GdsFormattedNumber",module:"src/components/formatted-text/number/formatted-number.ts"}}]},{kind:"javascript-module",path:"src/components/formatted-text/number/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./formatted-number"}}]},{kind:"javascript-module",path:"src/components/formatted-text/number/number-formatter.ts",declarations:[{kind:"variable",name:"numberFormats",default:"{ decimalsAndThousands: (value, locale, currency) => { const options: Intl.NumberFormatOptions = { maximumFractionDigits: 2, minimumFractionDigits: 2, } if (currency) { return new Intl.NumberFormat(locale, { ...options, style: 'currency', currency: currency, }).format(Number(value)) } return new Intl.NumberFormat(locale, options).format(Number(value)) }, } satisfies Record<string, NumberFormatter>"}],exports:[{kind:"js",name:"numberFormats",declaration:{name:"numberFormats",module:"src/components/formatted-text/number/number-formatter.ts"}}]},{kind:"javascript-module",path:"src/components/radio/radio-group/radio-group.component.ts",declarations:[{kind:"class",description:"",name:"GdsRadioGroup",slots:[{description:"Default slot for radio buttons (accepts `gds-radio` elements)",name:""},{description:"A longer supporting text that will be displayed in a panel when the user clicks the info button",name:"extended-supporting-text"}],events:[{name:"change",type:{text:"CustomEvent"},reactName:"onChange",eventName:"ChangeEvent",description:"Fired when a radio button selection changes",inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{name:"input",type:{text:"Event"},reactName:"onInput",eventName:"InputEvent",description:"Fired when a radio button selection changes",inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withLayoutChildProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withMarginProps",module:"/src/utils/mixins/declarative-layout-mixins"},{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"},tagName:"gds-radio-group",customElement:!0,summary:"A form control component for grouping radio buttons.",members:[{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Controls the font-size of label and supporting text on group form control header and single radio buttons respectively.",attribute:"size",inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{kind:"field",name:"direction",type:{text:"'row' | 'column'"},default:"'column'",description:"The direction in which radio buttons are displayed.",attribute:"direction",inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{kind:"field",name:"supportingText",type:{text:"string"},default:"''",description:`The supporting text displayed between the label and the field.
This text provides additional context or information to the user.`,attribute:"supporting-text",inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{kind:"field",name:"showExtendedSupportingText",type:{text:"boolean"},default:"false",description:"Whether the supporting text should be displayed or not.",attribute:"show-extended-supporting-text",reflects:!0,inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{kind:"field",name:"radios",type:{text:"GdsRadio[]"},description:"Returns an array of `<gds-radio>` elements in the radio group.",readonly:!0,inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{kind:"field",name:"formAssociated",type:{text:"boolean"},static:!0,default:"true",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validator",type:{text:"GdsValidator | undefined"},description:"A validator that can be used to validate the form control and set an error message.",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",attribute:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"errorMessage",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,attribute:"error-message",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",attribute:"aria-invalid",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",attribute:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"value",description:"Get or set the value of the form control.",attribute:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"name",type:{text:"string"},default:"''",attribute:"name",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",attribute:"disabled",reflects:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"form",description:"The form element that the form control is associated with.",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validity",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"validationMessage",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"field",name:"willValidate",readonly:!0,inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"checkValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"reportValidity",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formResetCallback",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"formAssociatedCallback",parameters:[{name:"form",optional:!0,type:{text:"HTMLFormElement"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"focus",return:{type:{text:"void"}},parameters:[{name:"options",optional:!0,type:{text:"FocusOptions | undefined"}}],inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"size",type:{text:"'large' | 'small'"},default:"'large'",description:"Controls the font-size of label and supporting text on group form control header and single radio buttons respectively.",fieldName:"size",inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{name:"direction",type:{text:"'row' | 'column'"},default:"'column'",description:"The direction in which radio buttons are displayed.",fieldName:"direction",inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{name:"supporting-text",type:{text:"string"},default:"''",description:`The supporting text displayed between the label and the field.
This text provides additional context or information to the user.`,fieldName:"supportingText",inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{name:"show-extended-supporting-text",type:{text:"boolean"},default:"false",description:"Whether the supporting text should be displayed or not.",fieldName:"showExtendedSupportingText",inheritedFrom:{name:"RadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}},{name:"aria-invalid",description:"Validation state of the form control. Setting this to true triggers the invalid state of the control.",fieldName:"invalid",attribute:"aria-invalid",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"required",type:{text:"boolean"},default:"false",description:"The required attribute can be used to communicate to users of assistive technology that the control is required. Validation still needs to be done in a validator or equivalent.",fieldName:"required",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"error-message",type:{text:"string"},default:"''",description:`This can be used to manually control the error message that will be displayed
when the control is invalid.`,fieldName:"errorMessage",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"label",type:{text:"string"},default:"''",description:"The label of the form control.",fieldName:"label",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"value",description:"Get or set the value of the form control.",fieldName:"value",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"name",type:{text:"string"},default:"''",fieldName:"name",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"disabled",type:{text:"boolean"},default:"false",description:"If the input is Disabled",fieldName:"disabled",inheritedFrom:{name:"GdsFormControlElement",module:"src/components/form/form-control.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsRadioGroup",declaration:{name:"GdsRadioGroup",module:"src/components/radio/radio-group/radio-group.component.ts"}}]},{kind:"javascript-module",path:"src/components/radio/radio-group/radio-group.styles.ts",declarations:[{kind:"variable",name:"styles",default:"css` :host { --radio-bg-mix: color-mix( in srgb, var(--gds-color-l3-background-secondary), var(--gds-color-l3-states-light-hover) ); --radio-bg-mix-active: color-mix( in srgb, var(--gds-color-l3-background-secondary), var(--gds-color-l3-states-light-pressed) ); --radio-size: var(--gds-space-xl); --radio-disc-size: var(--gds-space-m); --radio-radius: var(--gds-space-max); --radio-border-color: var(--gds-color-l3-border-secondary); --radio-border-color-selected: var(--gds-color-l3-border-primary); --radio-border-width: var(--gds-space-4xs); --radio-border-width-selected: var(--gds-space-2xs); --radio-outline-width: var(--gds-space-3xs); --radio-disc-background-color: var(--gds-color-l3-content-primary); /* Font Sizes */ --_font-size-label: var(--gds-text-size-detail-m); --_line-height-label: var(--gds-text-line-height-detail-m); --_font-size-supporting-text: var(--gds-text-size-detail-s); --_line-height-supporting-text: var(--gds-text-line-height-detail-s); font-size: var(--_font-size-label); line-height: var(--_line-height-label); /* Color */ --_radio-label-color: var(--gds-color-l3-content-tertiary); --_radio-outline-color: var(--gds-color-l3-content-tertiary); } :host(:invalid) { --radio-border-color: var(--gds-color-l3-border-negative); --radio-disc-background-color: var( --gds-color-l3-background-negative-secondary ); --radio-border-color-selected: var(--gds-color-l3-border-negative); --radio-bg-mix: color-mix( in srgb, var(--gds-color-l3-background-negative-secondary), var(--gds-color-l3-states-negative-hover) ); --radio-bg-mix-active: color-mix( in srgb, var(--gds-color-l3-background-negative-secondary), var(--gds-color-l3-states-negative-pressed) ); --_radio-label-color: var(--gds-color-l3-content-negative); --_radio-outline-color: var(--gds-color-l3-content-negative); } :host([size='small']) { --_font-size-label: var(--gds-text-size-detail-s); --_line-height-label: var(--gds-text-line-height-detail-s); --_font-size-supporting-text: var(--gds-text-size-detail-s); --_line-height-supporting-text: var(--gds-text-line-height-detail-s); } .radio-group { display: flex; flex-direction: column; gap: var(--gds-space-m); } .content { display: flex; position: relative; max-width: max-content; color: var(--_radio-label-color); } .direction-row .content { flex-direction: row; flex-wrap: wrap; gap: var(--gds-space-l); } .direction-column .content { flex-direction: column; gap: var(--gds-space-xs); } `"}],exports:[{kind:"js",name:"styles",declaration:{name:"styles",module:"src/components/radio/radio-group/radio-group.styles.ts"}}]},{kind:"javascript-module",path:"src/components/radio/radio-group/radio-group.ts",declarations:[],exports:[{kind:"js",name:"GdsRadioGroup",declaration:{name:"GdsRadioGroup",module:"src/components/radio/radio-group/radio-group.ts"}}]},{kind:"javascript-module",path:"src/components/segmented-control/segment/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./segment"}}]},{kind:"javascript-module",path:"src/components/segmented-control/segment/segment.component.ts",declarations:[{kind:"class",description:"",name:"GdsSegment",members:[{kind:"field",name:"selected",type:{text:"boolean"},default:"false",description:"Whether the segment is selected",attribute:"selected",reflects:!0},{kind:"field",name:"value",type:{text:"ValueT | undefined"},description:"Value can be used to tie arbitrary data to the segment.",attribute:"value"},{kind:"field",name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the segment is disabled.",attribute:"disabled",reflects:!0},{kind:"field",name:"isVisible",description:"Whether the segment is currently visible.",readonly:!0},{kind:"field",name:"_isVisible",type:{text:"boolean"},default:"true"},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"selected",type:{text:"boolean"},default:"false",description:"Whether the segment is selected",fieldName:"selected",attribute:"selected"},{name:"value",type:{text:"ValueT | undefined"},description:"Value can be used to tie arbitrary data to the segment.",fieldName:"value",attribute:"value"},{name:"disabled",type:{text:"boolean"},default:"false",description:"Whether the segment is disabled.",fieldName:"disabled"},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],mixins:[{name:"withSizeXProps",module:"/src/utils/mixins/declarative-layout-mixins"}],superclass:{name:"GdsElement",module:"/src/gds-element"},tagName:"gds-segment",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsSegment",declaration:{name:"GdsSegment",module:"src/components/segmented-control/segment/segment.component.ts"}}]},{kind:"javascript-module",path:"src/components/segmented-control/segment/segment.trans.styles.ts",declarations:[{kind:"function",name:"register"}],exports:[{kind:"js",name:"register",declaration:{name:"register",module:"src/components/segmented-control/segment/segment.trans.styles.ts"}},{kind:"js",name:"default",declaration:{name:"register",module:"src/components/segmented-control/segment/segment.trans.styles.ts"}}]},{kind:"javascript-module",path:"src/components/segmented-control/segment/segment.ts",declarations:[],exports:[{kind:"js",name:"GdsSegment",declaration:{name:"GdsSegment",module:"src/components/segmented-control/segment/segment.ts"}}]},{kind:"javascript-module",path:"src/components/sensitive/number/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./sensitive-number"}}]},{kind:"javascript-module",path:"src/components/sensitive/number/sensitive-number.component.ts",declarations:[{kind:"class",description:"",name:"GdsSensitiveNumber",members:[{kind:"field",name:"hide",type:{text:"boolean"},default:"false",description:"When true, hides the sensitive number.",attribute:"hide"},{kind:"field",name:"formattedValue",type:{text:"string"},readonly:!0,inheritedFrom:{name:"GdsFormattedText",module:"src/components/formatted-text/formatted-text.ts"}},{kind:"field",name:"value",type:{text:"number | string | undefined"},description:"The numerical value to display.",inheritedFrom:{name:"GdsFormattedNumber",module:"src/components/formatted-text/number/formatted-number.component.ts"}},{kind:"field",name:"locale",type:{text:"string | undefined"},description:"The locale used for number formatting.",attribute:"locale",inheritedFrom:{name:"GdsFormattedNumber",module:"src/components/formatted-text/number/formatted-number.component.ts"}},{kind:"field",name:"currency",type:{text:"string | undefined"},description:"The currency used when formatting numbers.",attribute:"currency",inheritedFrom:{name:"GdsFormattedNumber",module:"src/components/formatted-text/number/formatted-number.component.ts"}},{kind:"field",name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,attribute:"tag",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"'font-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-size` property.\nSupports all typography size tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'font-weight'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `font-weight` property.\nSupports all typography weight tokens from the design system.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-transform'",type:{text:"string | undefined"},description:`Controls the text-transform property of the text.
Supports all valid CSS text-transform values.`,inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"'text-decoration'",type:{text:"string | undefined"},description:`Controls the text-decoration property of the inner element.
Supports all valid CSS text-decoration values.`,inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"lines",type:{text:"number | undefined"},description:"Controls the number of lines it should show.",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{kind:"field",name:"width",type:{text:"string | undefined"},description:"Style Expression Property that controls the `width` property.\nSupports space tokens and all valid CSS `width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-width` property.\nSupports space tokens and all valid CSS `min-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-width` property.\nSupports space tokens and all valid CSS `max-width` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inline-size` property.\nSupports space tokens and all valid CSS `inline-size` values",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-inline-size` property.\nSupports space tokens and all valid CSS `min-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-inline-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-inline-size` property.\nSupports space tokens and all valid CSS `max-inline-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeXProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"height",type:{text:"string | undefined"},description:"Style Expression Property that controls the `height` property.\nSupports space tokens and all valid CSS `height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-height` property.\nSupports space tokens and all valid CSS `min-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-height'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-height` property.\nSupports space tokens and all valid CSS `max-height` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `block-size` property.\nSupports space tokens and all valid CSS `block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'min-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `min-block-size` property.\nSupports space tokens and all valid CSS `min-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'max-block-size'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `max-block-size` property.\nSupports space tokens and all valid CSS `max-block-size` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withSizeYProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"padding",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'padding-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `padding-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPaddingProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"position",type:{text:"string | undefined"},description:"Style Expression Property that controls the `position` property.\nSupports all valid CSS `position` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"transform",type:{text:"string | undefined"},description:"Style Expression Property that controls the `transform` property.\nSupports all valid CSS `transform` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"inset",type:{text:"string | undefined"},description:"Style Expression Property that controls the `inset` property.\nSupports all valid CSS `inset` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withPositioningProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"display",type:{text:"string | undefined"},description:`Controls the display property.
Supports all valid CSS display values.`,category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,attribute:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"color",type:{text:"string | undefined"},description:'Style Expression Property that controls the `color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"background",type:{text:"string | undefined"},description:'Style Expression Property that controls the `background` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div background="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"border",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border` property.\nAccepts a string of the same format as the CSS border property.\n\n```html\n<gds-div border="4xs solid primary/0.2"></gds-div>\n```\n\nWhere the size value accepts space tokens and the color value accepts color tokens and an optional transparency value.',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-color'",type:{text:"string | undefined"},description:'Style Expression Property that controls the `border-color` property.\nOnly accepts color tokens and an optional transparency value, in the format tokenName/transparency.\n\n```html\n<gds-div border-color="primary/0.2"></gds-div>\n```',category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-width'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-width` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-style'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-style` property.\nSupports all valid CSS `border-style` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'border-radius'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `border-radius` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-shadow'",type:{text:"string | undefined"},description:"Style Expression Property for the `box-shadow` property.\n\nAccepts shadow tokens from the design system.\n\n`xs`, `s`, `m`, `l`, `xl`",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"opacity",type:{text:"string | undefined"},description:"Style Expression Property that controls the `opacity` property.\nSupports all valid CSS `opacity` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"overflow",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow` property.\nSupports all valid CSS `overflow` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'box-sizing'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `box-sizing` property.\nSupports all valid CSS `box-sizing` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'z-index'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `z-index` property.\nSupports all valid CSS `z-index` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-align'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-align` property.\nSupports all valid CSS `text-align` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'text-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `text-wrap` property.\nSupports all valid CSS `text-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'overflow-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `overflow-wrap` property.\nSupports all valid CSS `overflow-wrap` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'white-space'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `white-space` property.\nSupports all valid CSS `white-space` values.",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"gap",type:{text:"string | undefined"},description:"Style Expression Property that controls the `gap` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-items` property.\nSupports all valid CSS `align-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'align-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-content` property.\nSupports all valid CSS `align-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-content` property.\nSupports all valid CSS `justify-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'justify-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-items` property.\nSupports all valid CSS `justify-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-direction'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-direction` property.\nSupports all valid CSS `flex-direction` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'flex-wrap'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex-wrap` property.\nSupports all valid CSS `flex-wrap` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-items'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-items` property.\nSupports all valid CSS `place-items` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"field",name:"'place-content'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-content` property.\nSupports all valid CSS `place-content` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],attributes:[{name:"hide",type:{text:"boolean"},default:"false",description:"When true, hides the sensitive number.",fieldName:"hide"},{name:"locale",type:{text:"string | undefined"},description:"The locale used for number formatting.",fieldName:"locale",inheritedFrom:{name:"GdsFormattedNumber",module:"src/components/formatted-text/number/formatted-number.component.ts"}},{name:"currency",type:{text:"string | undefined"},description:"The currency used when formatting numbers.",fieldName:"currency",inheritedFrom:{name:"GdsFormattedNumber",module:"src/components/formatted-text/number/formatted-number.component.ts"}},{name:"format",type:{text:"NumberFormats"},default:"'decimalsAndThousands'",description:"Specifies the number format.",fieldName:"format",inheritedFrom:{name:"GdsFormattedNumber",module:"src/components/formatted-text/number/formatted-number.component.ts"}},{name:"tag",type:{text:"string"},default:"'span'",description:`Controls the tag of the text.
Supports all valid HTML tags like h1, h2, h3, h4, h5, h6, p, span, etc.`,fieldName:"tag",inheritedFrom:{name:"GdsText",module:"src/components/text/text.component.ts"}},{name:"level",type:{text:"GdsColorLevel"},default:"'2'",description:`The level of the container is used to resolve the color tokens from the corresponding level.
Check the [Color System documentation page](./?path=/docs/style-colors--docs) for more information.

Default for \`gds-div\` is level 2.`,fieldName:"level",inheritedFrom:{name:"GdsDiv",module:"src/components/div/div.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],superclass:{name:"GdsFormattedNumber",module:"/src/components/formatted-text/number/formatted-number.component"},tagName:"gds-sensitive-number",customElement:!0,events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"GdsSensitiveNumber",declaration:{name:"GdsSensitiveNumber",module:"src/components/sensitive/number/sensitive-number.component.ts"}}]},{kind:"javascript-module",path:"src/components/sensitive/number/sensitive-number.stories.ts",declarations:[{kind:"variable",name:"meta",type:{text:"Meta"},default:"{ title: 'Components/Sensitive/Number', component: 'gds-sensitive-number', tags: ['autodocs'], argTypes: { ...argTablePropsFor('gds-sensitive-number'), currency: { type: 'string', }, }, }",description:`[Source code](https://github.com/seb-oss/green/tree/main/libs/core/src/components/sensitiv/number)

Coachmarks are contextual tips that focus on making the user
aware of a new feature, the benefits of an existing one or a moved feature within an interface.

The component is primarily a container that follows the targeted element.
The coachmark will be invisible and disabled if another element covered the targeted element or its simply out of view.
The coachmark will close and dispatch a CustomEvent of \`gds-ui-state\`

Note: the component can only view one coachmark at the time therefore the tooltip won't be
rendered in second storybook panel and testing the tooltip behaviour will be in the first panel only`},{kind:"variable",name:"Default",type:{text:"Story"},default:"{ ...DefaultParams, render: (args) => html`<gds-sensitive-number .hide=${args.hide} .value=${args.value} .locale=${args.locale} .currency=${args.currency} ></gds-sensitive-number>`, }"}],exports:[{kind:"js",name:"default",declaration:{name:"meta",module:"src/components/sensitive/number/sensitive-number.stories.ts"}},{kind:"js",name:"Default",declaration:{name:"Default",module:"src/components/sensitive/number/sensitive-number.stories.ts"}}]},{kind:"javascript-module",path:"src/components/sensitive/number/sensitive-number.ts",declarations:[],exports:[{kind:"js",name:"GdsSensitiveNumber",declaration:{name:"GdsSensitiveNumber",module:"src/components/sensitive/number/sensitive-number.ts"}}]},{kind:"javascript-module",path:"src/generated/react/backdrop/index.ts",declarations:[{kind:"function",name:"GdsBackdrop",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsBackdropClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsBackdrop",declaration:{name:"GdsBackdrop",module:"src/generated/react/backdrop/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/badge/index.ts",declarations:[{kind:"function",name:"GdsBadge",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsBadgeClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsBadge",declaration:{name:"GdsBadge",module:"src/generated/react/badge/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/blur/index.ts",declarations:[{kind:"function",name:"GdsBlur",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsBlurClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsBlur",declaration:{name:"GdsBlur",module:"src/generated/react/blur/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/button/index.ts",declarations:[{kind:"function",name:"GdsButton",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsButtonClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsButton",declaration:{name:"GdsButton",module:"src/generated/react/button/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/calendar/index.ts",declarations:[{kind:"function",name:"GdsCalendar",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsCalendarClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsCalendar",declaration:{name:"GdsCalendar",module:"src/generated/react/calendar/index.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/ai.component.ts",declarations:[{kind:"class",description:"",name:"IconAi",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-ai",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconAi",declaration:{name:"IconAi",module:"src/components/icon/icons/ai.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/ai.ts",declarations:[],exports:[{kind:"js",name:"IconAi",declaration:{name:"IconAi",module:"src/components/icon/icons/ai.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/airplane-up.component.ts",declarations:[{kind:"class",description:"",name:"IconAirplaneUp",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-airplane-up",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconAirplaneUp",declaration:{name:"IconAirplaneUp",module:"src/components/icon/icons/airplane-up.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/airplane-up.ts",declarations:[],exports:[{kind:"js",name:"IconAirplaneUp",declaration:{name:"IconAirplaneUp",module:"src/components/icon/icons/airplane-up.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/archive.component.ts",declarations:[{kind:"class",description:"",name:"IconArchive",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-archive",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArchive",declaration:{name:"IconArchive",module:"src/components/icon/icons/archive.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/archive.ts",declarations:[],exports:[{kind:"js",name:"IconArchive",declaration:{name:"IconArchive",module:"src/components/icon/icons/archive.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-bottom-top.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowBottomTop",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-bottom-top",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowBottomTop",declaration:{name:"IconArrowBottomTop",module:"src/components/icon/icons/arrow-bottom-top.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-bottom-top.ts",declarations:[],exports:[{kind:"js",name:"IconArrowBottomTop",declaration:{name:"IconArrowBottomTop",module:"src/components/icon/icons/arrow-bottom-top.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-box-left.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowBoxLeft",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-box-left",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowBoxLeft",declaration:{name:"IconArrowBoxLeft",module:"src/components/icon/icons/arrow-box-left.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-box-left.ts",declarations:[],exports:[{kind:"js",name:"IconArrowBoxLeft",declaration:{name:"IconArrowBoxLeft",module:"src/components/icon/icons/arrow-box-left.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-box-right.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowBoxRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-box-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowBoxRight",declaration:{name:"IconArrowBoxRight",module:"src/components/icon/icons/arrow-box-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-box-right.ts",declarations:[],exports:[{kind:"js",name:"IconArrowBoxRight",declaration:{name:"IconArrowBoxRight",module:"src/components/icon/icons/arrow-box-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-down.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowDown",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-down",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowDown",declaration:{name:"IconArrowDown",module:"src/components/icon/icons/arrow-down.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-down.ts",declarations:[],exports:[{kind:"js",name:"IconArrowDown",declaration:{name:"IconArrowDown",module:"src/components/icon/icons/arrow-down.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-inbox.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowInbox",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-inbox",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowInbox",declaration:{name:"IconArrowInbox",module:"src/components/icon/icons/arrow-inbox.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-inbox.ts",declarations:[],exports:[{kind:"js",name:"IconArrowInbox",declaration:{name:"IconArrowInbox",module:"src/components/icon/icons/arrow-inbox.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-left-right.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowLeftRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-left-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowLeftRight",declaration:{name:"IconArrowLeftRight",module:"src/components/icon/icons/arrow-left-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-left-right.ts",declarations:[],exports:[{kind:"js",name:"IconArrowLeftRight",declaration:{name:"IconArrowLeftRight",module:"src/components/icon/icons/arrow-left-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-left.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowLeft",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-left",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowLeft",declaration:{name:"IconArrowLeft",module:"src/components/icon/icons/arrow-left.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-left.ts",declarations:[],exports:[{kind:"js",name:"IconArrowLeft",declaration:{name:"IconArrowLeft",module:"src/components/icon/icons/arrow-left.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-out-of-box.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowOutOfBox",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-out-of-box",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowOutOfBox",declaration:{name:"IconArrowOutOfBox",module:"src/components/icon/icons/arrow-out-of-box.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-out-of-box.ts",declarations:[],exports:[{kind:"js",name:"IconArrowOutOfBox",declaration:{name:"IconArrowOutOfBox",module:"src/components/icon/icons/arrow-out-of-box.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-right-circle.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowRightCircle",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-right-circle",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowRightCircle",declaration:{name:"IconArrowRightCircle",module:"src/components/icon/icons/arrow-right-circle.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-right-circle.ts",declarations:[],exports:[{kind:"js",name:"IconArrowRightCircle",declaration:{name:"IconArrowRightCircle",module:"src/components/icon/icons/arrow-right-circle.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-right-down-circle.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowRightDownCircle",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-right-down-circle",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowRightDownCircle",declaration:{name:"IconArrowRightDownCircle",module:"src/components/icon/icons/arrow-right-down-circle.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-right-down-circle.ts",declarations:[],exports:[{kind:"js",name:"IconArrowRightDownCircle",declaration:{name:"IconArrowRightDownCircle",module:"src/components/icon/icons/arrow-right-down-circle.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-right-up-circle.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowRightUpCircle",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-right-up-circle",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowRightUpCircle",declaration:{name:"IconArrowRightUpCircle",module:"src/components/icon/icons/arrow-right-up-circle.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-right-up-circle.ts",declarations:[],exports:[{kind:"js",name:"IconArrowRightUpCircle",declaration:{name:"IconArrowRightUpCircle",module:"src/components/icon/icons/arrow-right-up-circle.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-right.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowRight",declaration:{name:"IconArrowRight",module:"src/components/icon/icons/arrow-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-right.ts",declarations:[],exports:[{kind:"js",name:"IconArrowRight",declaration:{name:"IconArrowRight",module:"src/components/icon/icons/arrow-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-rotate-clockwise.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowRotateClockwise",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-rotate-clockwise",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowRotateClockwise",declaration:{name:"IconArrowRotateClockwise",module:"src/components/icon/icons/arrow-rotate-clockwise.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-rotate-clockwise.ts",declarations:[],exports:[{kind:"js",name:"IconArrowRotateClockwise",declaration:{name:"IconArrowRotateClockwise",module:"src/components/icon/icons/arrow-rotate-clockwise.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-rotate-counter-clockwise.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowRotateCounterClockwise",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-rotate-counter-clockwise",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowRotateCounterClockwise",declaration:{name:"IconArrowRotateCounterClockwise",module:"src/components/icon/icons/arrow-rotate-counter-clockwise.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-rotate-counter-clockwise.ts",declarations:[],exports:[{kind:"js",name:"IconArrowRotateCounterClockwise",declaration:{name:"IconArrowRotateCounterClockwise",module:"src/components/icon/icons/arrow-rotate-counter-clockwise.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-rotate-left-right.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowRotateLeftRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-rotate-left-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowRotateLeftRight",declaration:{name:"IconArrowRotateLeftRight",module:"src/components/icon/icons/arrow-rotate-left-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-rotate-left-right.ts",declarations:[],exports:[{kind:"js",name:"IconArrowRotateLeftRight",declaration:{name:"IconArrowRotateLeftRight",module:"src/components/icon/icons/arrow-rotate-left-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-rotate-right-left.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowRotateRightLeft",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-rotate-right-left",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowRotateRightLeft",declaration:{name:"IconArrowRotateRightLeft",module:"src/components/icon/icons/arrow-rotate-right-left.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-rotate-right-left.ts",declarations:[],exports:[{kind:"js",name:"IconArrowRotateRightLeft",declaration:{name:"IconArrowRotateRightLeft",module:"src/components/icon/icons/arrow-rotate-right-left.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-share-left.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowShareLeft",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-share-left",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowShareLeft",declaration:{name:"IconArrowShareLeft",module:"src/components/icon/icons/arrow-share-left.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-share-left.ts",declarations:[],exports:[{kind:"js",name:"IconArrowShareLeft",declaration:{name:"IconArrowShareLeft",module:"src/components/icon/icons/arrow-share-left.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-share-right.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowShareRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-share-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowShareRight",declaration:{name:"IconArrowShareRight",module:"src/components/icon/icons/arrow-share-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-share-right.ts",declarations:[],exports:[{kind:"js",name:"IconArrowShareRight",declaration:{name:"IconArrowShareRight",module:"src/components/icon/icons/arrow-share-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-up.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowUp",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-up",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowUp",declaration:{name:"IconArrowUp",module:"src/components/icon/icons/arrow-up.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-up.ts",declarations:[],exports:[{kind:"js",name:"IconArrowUp",declaration:{name:"IconArrowUp",module:"src/components/icon/icons/arrow-up.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-wall-down.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowWallDown",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-wall-down",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowWallDown",declaration:{name:"IconArrowWallDown",module:"src/components/icon/icons/arrow-wall-down.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-wall-down.ts",declarations:[],exports:[{kind:"js",name:"IconArrowWallDown",declaration:{name:"IconArrowWallDown",module:"src/components/icon/icons/arrow-wall-down.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-wall-left.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowWallLeft",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-wall-left",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowWallLeft",declaration:{name:"IconArrowWallLeft",module:"src/components/icon/icons/arrow-wall-left.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-wall-left.ts",declarations:[],exports:[{kind:"js",name:"IconArrowWallLeft",declaration:{name:"IconArrowWallLeft",module:"src/components/icon/icons/arrow-wall-left.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-wall-right.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowWallRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-wall-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowWallRight",declaration:{name:"IconArrowWallRight",module:"src/components/icon/icons/arrow-wall-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-wall-right.ts",declarations:[],exports:[{kind:"js",name:"IconArrowWallRight",declaration:{name:"IconArrowWallRight",module:"src/components/icon/icons/arrow-wall-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-wall-up.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowWallUp",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow-wall-up",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowWallUp",declaration:{name:"IconArrowWallUp",module:"src/components/icon/icons/arrow-wall-up.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow-wall-up.ts",declarations:[],exports:[{kind:"js",name:"IconArrowWallUp",declaration:{name:"IconArrowWallUp",module:"src/components/icon/icons/arrow-wall-up.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow.component.ts",declarations:[{kind:"class",description:"",name:"IconArrow",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrow",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrow",declaration:{name:"IconArrow",module:"src/components/icon/icons/arrow.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrow.ts",declarations:[],exports:[{kind:"js",name:"IconArrow",declaration:{name:"IconArrow",module:"src/components/icon/icons/arrow.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrows-repeat.component.ts",declarations:[{kind:"class",description:"",name:"IconArrowsRepeat",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-arrows-repeat",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconArrowsRepeat",declaration:{name:"IconArrowsRepeat",module:"src/components/icon/icons/arrows-repeat.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/arrows-repeat.ts",declarations:[],exports:[{kind:"js",name:"IconArrowsRepeat",declaration:{name:"IconArrowsRepeat",module:"src/components/icon/icons/arrows-repeat.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/at.component.ts",declarations:[{kind:"class",description:"",name:"IconAt",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-at",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconAt",declaration:{name:"IconAt",module:"src/components/icon/icons/at.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/at.ts",declarations:[],exports:[{kind:"js",name:"IconAt",declaration:{name:"IconAt",module:"src/components/icon/icons/at.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/back.component.ts",declarations:[{kind:"class",description:"",name:"IconBack",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-back",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBack",declaration:{name:"IconBack",module:"src/components/icon/icons/back.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/back.ts",declarations:[],exports:[{kind:"js",name:"IconBack",declaration:{name:"IconBack",module:"src/components/icon/icons/back.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bag.component.ts",declarations:[{kind:"class",description:"",name:"IconBag",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bag",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBag",declaration:{name:"IconBag",module:"src/components/icon/icons/bag.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bag.ts",declarations:[],exports:[{kind:"js",name:"IconBag",declaration:{name:"IconBag",module:"src/components/icon/icons/bag.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bank.component.ts",declarations:[{kind:"class",description:"",name:"IconBank",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bank",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBank",declaration:{name:"IconBank",module:"src/components/icon/icons/bank.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bank.ts",declarations:[],exports:[{kind:"js",name:"IconBank",declaration:{name:"IconBank",module:"src/components/icon/icons/bank.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/banknote-2.component.ts",declarations:[{kind:"class",description:"",name:"IconBanknote2",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-banknote-2",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBanknote2",declaration:{name:"IconBanknote2",module:"src/components/icon/icons/banknote-2.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/banknote-2.ts",declarations:[],exports:[{kind:"js",name:"IconBanknote2",declaration:{name:"IconBanknote2",module:"src/components/icon/icons/banknote-2.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/banknote.component.ts",declarations:[{kind:"class",description:"",name:"IconBanknote",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-banknote",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBanknote",declaration:{name:"IconBanknote",module:"src/components/icon/icons/banknote.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/banknote.ts",declarations:[],exports:[{kind:"js",name:"IconBanknote",declaration:{name:"IconBanknote",module:"src/components/icon/icons/banknote.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/barcode.component.ts",declarations:[{kind:"class",description:"",name:"IconBarcode",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-barcode",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBarcode",declaration:{name:"IconBarcode",module:"src/components/icon/icons/barcode.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/barcode.ts",declarations:[],exports:[{kind:"js",name:"IconBarcode",declaration:{name:"IconBarcode",module:"src/components/icon/icons/barcode.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bars-three.component.ts",declarations:[{kind:"class",description:"",name:"IconBarsThree",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bars-three",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBarsThree",declaration:{name:"IconBarsThree",module:"src/components/icon/icons/bars-three.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bars-three.ts",declarations:[],exports:[{kind:"js",name:"IconBarsThree",declaration:{name:"IconBarsThree",module:"src/components/icon/icons/bars-three.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bars-two.component.ts",declarations:[{kind:"class",description:"",name:"IconBarsTwo",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bars-two",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBarsTwo",declaration:{name:"IconBarsTwo",module:"src/components/icon/icons/bars-two.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bars-two.ts",declarations:[],exports:[{kind:"js",name:"IconBarsTwo",declaration:{name:"IconBarsTwo",module:"src/components/icon/icons/bars-two.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/battery-loading.component.ts",declarations:[{kind:"class",description:"",name:"IconBatteryLoading",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-battery-loading",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBatteryLoading",declaration:{name:"IconBatteryLoading",module:"src/components/icon/icons/battery-loading.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/battery-loading.ts",declarations:[],exports:[{kind:"js",name:"IconBatteryLoading",declaration:{name:"IconBatteryLoading",module:"src/components/icon/icons/battery-loading.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bell.component.ts",declarations:[{kind:"class",description:"",name:"IconBell",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bell",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBell",declaration:{name:"IconBell",module:"src/components/icon/icons/bell.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bell.ts",declarations:[],exports:[{kind:"js",name:"IconBell",declaration:{name:"IconBell",module:"src/components/icon/icons/bell.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/block.component.ts",declarations:[{kind:"class",description:"",name:"IconBlock",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-block",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBlock",declaration:{name:"IconBlock",module:"src/components/icon/icons/block.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/block.ts",declarations:[],exports:[{kind:"js",name:"IconBlock",declaration:{name:"IconBlock",module:"src/components/icon/icons/block.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/book.component.ts",declarations:[{kind:"class",description:"",name:"IconBook",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-book",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBook",declaration:{name:"IconBook",module:"src/components/icon/icons/book.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/book.ts",declarations:[],exports:[{kind:"js",name:"IconBook",declaration:{name:"IconBook",module:"src/components/icon/icons/book.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark-check.component.ts",declarations:[{kind:"class",description:"",name:"IconBookmarkCheck",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bookmark-check",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBookmarkCheck",declaration:{name:"IconBookmarkCheck",module:"src/components/icon/icons/bookmark-check.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark-check.ts",declarations:[],exports:[{kind:"js",name:"IconBookmarkCheck",declaration:{name:"IconBookmarkCheck",module:"src/components/icon/icons/bookmark-check.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark-delete.component.ts",declarations:[{kind:"class",description:"",name:"IconBookmarkDelete",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bookmark-delete",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBookmarkDelete",declaration:{name:"IconBookmarkDelete",module:"src/components/icon/icons/bookmark-delete.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark-delete.ts",declarations:[],exports:[{kind:"js",name:"IconBookmarkDelete",declaration:{name:"IconBookmarkDelete",module:"src/components/icon/icons/bookmark-delete.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark-plus.component.ts",declarations:[{kind:"class",description:"",name:"IconBookmarkPlus",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bookmark-plus",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBookmarkPlus",declaration:{name:"IconBookmarkPlus",module:"src/components/icon/icons/bookmark-plus.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark-plus.ts",declarations:[],exports:[{kind:"js",name:"IconBookmarkPlus",declaration:{name:"IconBookmarkPlus",module:"src/components/icon/icons/bookmark-plus.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark-remove.component.ts",declarations:[{kind:"class",description:"",name:"IconBookmarkRemove",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bookmark-remove",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBookmarkRemove",declaration:{name:"IconBookmarkRemove",module:"src/components/icon/icons/bookmark-remove.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark-remove.ts",declarations:[],exports:[{kind:"js",name:"IconBookmarkRemove",declaration:{name:"IconBookmarkRemove",module:"src/components/icon/icons/bookmark-remove.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark.component.ts",declarations:[{kind:"class",description:"",name:"IconBookmark",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bookmark",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBookmark",declaration:{name:"IconBookmark",module:"src/components/icon/icons/bookmark.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bookmark.ts",declarations:[],exports:[{kind:"js",name:"IconBookmark",declaration:{name:"IconBookmark",module:"src/components/icon/icons/bookmark.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/books.component.ts",declarations:[{kind:"class",description:"",name:"IconBooks",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-books",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBooks",declaration:{name:"IconBooks",module:"src/components/icon/icons/books.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/books.ts",declarations:[],exports:[{kind:"js",name:"IconBooks",declaration:{name:"IconBooks",module:"src/components/icon/icons/books.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-app-store.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandAppStore",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-app-store",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandAppStore",declaration:{name:"IconBrandAppStore",module:"src/components/icon/icons/brand-app-store.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-app-store.ts",declarations:[],exports:[{kind:"js",name:"IconBrandAppStore",declaration:{name:"IconBrandAppStore",module:"src/components/icon/icons/brand-app-store.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-apple-music.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandAppleMusic",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-apple-music",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandAppleMusic",declaration:{name:"IconBrandAppleMusic",module:"src/components/icon/icons/brand-apple-music.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-apple-music.ts",declarations:[],exports:[{kind:"js",name:"IconBrandAppleMusic",declaration:{name:"IconBrandAppleMusic",module:"src/components/icon/icons/brand-apple-music.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-bankid.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandBankid",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-bankid",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandBankid",declaration:{name:"IconBrandBankid",module:"src/components/icon/icons/brand-bankid.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-bankid.ts",declarations:[],exports:[{kind:"js",name:"IconBrandBankid",declaration:{name:"IconBrandBankid",module:"src/components/icon/icons/brand-bankid.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-chrome.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandChrome",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-chrome",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandChrome",declaration:{name:"IconBrandChrome",module:"src/components/icon/icons/brand-chrome.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-chrome.ts",declarations:[],exports:[{kind:"js",name:"IconBrandChrome",declaration:{name:"IconBrandChrome",module:"src/components/icon/icons/brand-chrome.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-facebook.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandFacebook",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-facebook",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandFacebook",declaration:{name:"IconBrandFacebook",module:"src/components/icon/icons/brand-facebook.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-facebook.ts",declarations:[],exports:[{kind:"js",name:"IconBrandFacebook",declaration:{name:"IconBrandFacebook",module:"src/components/icon/icons/brand-facebook.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-figma.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandFigma",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-figma",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandFigma",declaration:{name:"IconBrandFigma",module:"src/components/icon/icons/brand-figma.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-figma.ts",declarations:[],exports:[{kind:"js",name:"IconBrandFigma",declaration:{name:"IconBrandFigma",module:"src/components/icon/icons/brand-figma.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-firefox.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandFirefox",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-firefox",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandFirefox",declaration:{name:"IconBrandFirefox",module:"src/components/icon/icons/brand-firefox.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-firefox.ts",declarations:[],exports:[{kind:"js",name:"IconBrandFirefox",declaration:{name:"IconBrandFirefox",module:"src/components/icon/icons/brand-firefox.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-github.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandGithub",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-github",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandGithub",declaration:{name:"IconBrandGithub",module:"src/components/icon/icons/brand-github.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-github.ts",declarations:[],exports:[{kind:"js",name:"IconBrandGithub",declaration:{name:"IconBrandGithub",module:"src/components/icon/icons/brand-github.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-green.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandGreen",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-green",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandGreen",declaration:{name:"IconBrandGreen",module:"src/components/icon/icons/brand-green.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-green.ts",declarations:[],exports:[{kind:"js",name:"IconBrandGreen",declaration:{name:"IconBrandGreen",module:"src/components/icon/icons/brand-green.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-instagram.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandInstagram",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-instagram",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandInstagram",declaration:{name:"IconBrandInstagram",module:"src/components/icon/icons/brand-instagram.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-instagram.ts",declarations:[],exports:[{kind:"js",name:"IconBrandInstagram",declaration:{name:"IconBrandInstagram",module:"src/components/icon/icons/brand-instagram.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-linkedin.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandLinkedin",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-linkedin",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandLinkedin",declaration:{name:"IconBrandLinkedin",module:"src/components/icon/icons/brand-linkedin.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-linkedin.ts",declarations:[],exports:[{kind:"js",name:"IconBrandLinkedin",declaration:{name:"IconBrandLinkedin",module:"src/components/icon/icons/brand-linkedin.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-play-store.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandPlayStore",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-play-store",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandPlayStore",declaration:{name:"IconBrandPlayStore",module:"src/components/icon/icons/brand-play-store.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-play-store.ts",declarations:[],exports:[{kind:"js",name:"IconBrandPlayStore",declaration:{name:"IconBrandPlayStore",module:"src/components/icon/icons/brand-play-store.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-rss-feed.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandRssFeed",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-rss-feed",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandRssFeed",declaration:{name:"IconBrandRssFeed",module:"src/components/icon/icons/brand-rss-feed.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-rss-feed.ts",declarations:[],exports:[{kind:"js",name:"IconBrandRssFeed",declaration:{name:"IconBrandRssFeed",module:"src/components/icon/icons/brand-rss-feed.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-seb.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandSeb",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-seb",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandSeb",declaration:{name:"IconBrandSeb",module:"src/components/icon/icons/brand-seb.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-seb.ts",declarations:[],exports:[{kind:"js",name:"IconBrandSeb",declaration:{name:"IconBrandSeb",module:"src/components/icon/icons/brand-seb.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-spotify.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandSpotify",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-spotify",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandSpotify",declaration:{name:"IconBrandSpotify",module:"src/components/icon/icons/brand-spotify.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-spotify.ts",declarations:[],exports:[{kind:"js",name:"IconBrandSpotify",declaration:{name:"IconBrandSpotify",module:"src/components/icon/icons/brand-spotify.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-storybook.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandStorybook",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-storybook",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandStorybook",declaration:{name:"IconBrandStorybook",module:"src/components/icon/icons/brand-storybook.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-storybook.ts",declarations:[],exports:[{kind:"js",name:"IconBrandStorybook",declaration:{name:"IconBrandStorybook",module:"src/components/icon/icons/brand-storybook.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-x.component.ts",declarations:[{kind:"class",description:"",name:"IconBrandX",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brand-x",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrandX",declaration:{name:"IconBrandX",module:"src/components/icon/icons/brand-x.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brand-x.ts",declarations:[],exports:[{kind:"js",name:"IconBrandX",declaration:{name:"IconBrandX",module:"src/components/icon/icons/brand-x.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brush.component.ts",declarations:[{kind:"class",description:"",name:"IconBrush",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-brush",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBrush",declaration:{name:"IconBrush",module:"src/components/icon/icons/brush.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/brush.ts",declarations:[],exports:[{kind:"js",name:"IconBrush",declaration:{name:"IconBrush",module:"src/components/icon/icons/brush.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-annotation.component.ts",declarations:[{kind:"class",description:"",name:"IconBubbleAnnotation",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bubble-annotation",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBubbleAnnotation",declaration:{name:"IconBubbleAnnotation",module:"src/components/icon/icons/bubble-annotation.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-annotation.ts",declarations:[],exports:[{kind:"js",name:"IconBubbleAnnotation",declaration:{name:"IconBubbleAnnotation",module:"src/components/icon/icons/bubble-annotation.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-dots.component.ts",declarations:[{kind:"class",description:"",name:"IconBubbleDots",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bubble-dots",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBubbleDots",declaration:{name:"IconBubbleDots",module:"src/components/icon/icons/bubble-dots.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-dots.ts",declarations:[],exports:[{kind:"js",name:"IconBubbleDots",declaration:{name:"IconBubbleDots",module:"src/components/icon/icons/bubble-dots.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-question.component.ts",declarations:[{kind:"class",description:"",name:"IconBubbleQuestion",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bubble-question",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBubbleQuestion",declaration:{name:"IconBubbleQuestion",module:"src/components/icon/icons/bubble-question.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-question.ts",declarations:[],exports:[{kind:"js",name:"IconBubbleQuestion",declaration:{name:"IconBubbleQuestion",module:"src/components/icon/icons/bubble-question.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-quotes.component.ts",declarations:[{kind:"class",description:"",name:"IconBubbleQuotes",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bubble-quotes",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBubbleQuotes",declaration:{name:"IconBubbleQuotes",module:"src/components/icon/icons/bubble-quotes.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-quotes.ts",declarations:[],exports:[{kind:"js",name:"IconBubbleQuotes",declaration:{name:"IconBubbleQuotes",module:"src/components/icon/icons/bubble-quotes.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-text.component.ts",declarations:[{kind:"class",description:"",name:"IconBubbleText",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bubble-text",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBubbleText",declaration:{name:"IconBubbleText",module:"src/components/icon/icons/bubble-text.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-text.ts",declarations:[],exports:[{kind:"js",name:"IconBubbleText",declaration:{name:"IconBubbleText",module:"src/components/icon/icons/bubble-text.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-wide-annotation.component.ts",declarations:[{kind:"class",description:"",name:"IconBubbleWideAnnotation",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bubble-wide-annotation",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBubbleWideAnnotation",declaration:{name:"IconBubbleWideAnnotation",module:"src/components/icon/icons/bubble-wide-annotation.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble-wide-annotation.ts",declarations:[],exports:[{kind:"js",name:"IconBubbleWideAnnotation",declaration:{name:"IconBubbleWideAnnotation",module:"src/components/icon/icons/bubble-wide-annotation.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble.component.ts",declarations:[{kind:"class",description:"",name:"IconBubble",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bubble",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBubble",declaration:{name:"IconBubble",module:"src/components/icon/icons/bubble.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubble.ts",declarations:[],exports:[{kind:"js",name:"IconBubble",declaration:{name:"IconBubble",module:"src/components/icon/icons/bubble.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubbles.component.ts",declarations:[{kind:"class",description:"",name:"IconBubbles",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-bubbles",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBubbles",declaration:{name:"IconBubbles",module:"src/components/icon/icons/bubbles.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/bubbles.ts",declarations:[],exports:[{kind:"js",name:"IconBubbles",declaration:{name:"IconBubbles",module:"src/components/icon/icons/bubbles.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/buildings.component.ts",declarations:[{kind:"class",description:"",name:"IconBuildings",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-buildings",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconBuildings",declaration:{name:"IconBuildings",module:"src/components/icon/icons/buildings.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/buildings.ts",declarations:[],exports:[{kind:"js",name:"IconBuildings",declaration:{name:"IconBuildings",module:"src/components/icon/icons/buildings.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cain-link.component.ts",declarations:[{kind:"class",description:"",name:"IconCainLink",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-cain-link",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCainLink",declaration:{name:"IconCainLink",module:"src/components/icon/icons/cain-link.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cain-link.ts",declarations:[],exports:[{kind:"js",name:"IconCainLink",declaration:{name:"IconCainLink",module:"src/components/icon/icons/cain-link.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/calculator.component.ts",declarations:[{kind:"class",description:"",name:"IconCalculator",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-calculator",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCalculator",declaration:{name:"IconCalculator",module:"src/components/icon/icons/calculator.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/calculator.ts",declarations:[],exports:[{kind:"js",name:"IconCalculator",declaration:{name:"IconCalculator",module:"src/components/icon/icons/calculator.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/calendar-check.component.ts",declarations:[{kind:"class",description:"",name:"IconCalendarCheck",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-calendar-check",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCalendarCheck",declaration:{name:"IconCalendarCheck",module:"src/components/icon/icons/calendar-check.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/calendar-check.ts",declarations:[],exports:[{kind:"js",name:"IconCalendarCheck",declaration:{name:"IconCalendarCheck",module:"src/components/icon/icons/calendar-check.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/calendar.component.ts",declarations:[{kind:"class",description:"",name:"IconCalendar",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-calendar",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCalendar",declaration:{name:"IconCalendar",module:"src/components/icon/icons/calendar.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/calendar.ts",declarations:[],exports:[{kind:"js",name:"IconCalendar",declaration:{name:"IconCalendar",module:"src/components/icon/icons/calendar.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/calender-add.component.ts",declarations:[{kind:"class",description:"",name:"IconCalenderAdd",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-calender-add",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCalenderAdd",declaration:{name:"IconCalenderAdd",module:"src/components/icon/icons/calender-add.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/calender-add.ts",declarations:[],exports:[{kind:"js",name:"IconCalenderAdd",declaration:{name:"IconCalenderAdd",module:"src/components/icon/icons/calender-add.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/call.component.ts",declarations:[{kind:"class",description:"",name:"IconCall",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-call",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCall",declaration:{name:"IconCall",module:"src/components/icon/icons/call.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/call.ts",declarations:[],exports:[{kind:"js",name:"IconCall",declaration:{name:"IconCall",module:"src/components/icon/icons/call.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/car.component.ts",declarations:[{kind:"class",description:"",name:"IconCar",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-car",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCar",declaration:{name:"IconCar",module:"src/components/icon/icons/car.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/car.ts",declarations:[],exports:[{kind:"js",name:"IconCar",declaration:{name:"IconCar",module:"src/components/icon/icons/car.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chain-link-broken.component.ts",declarations:[{kind:"class",description:"",name:"IconChainLinkBroken",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chain-link-broken",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChainLinkBroken",declaration:{name:"IconChainLinkBroken",module:"src/components/icon/icons/chain-link-broken.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chain-link-broken.ts",declarations:[],exports:[{kind:"js",name:"IconChainLinkBroken",declaration:{name:"IconChainLinkBroken",module:"src/components/icon/icons/chain-link-broken.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chain-link.component.ts",declarations:[{kind:"class",description:"",name:"IconChainLink",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chain-link",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChainLink",declaration:{name:"IconChainLink",module:"src/components/icon/icons/chain-link.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chain-link.ts",declarations:[],exports:[{kind:"js",name:"IconChainLink",declaration:{name:"IconChainLink",module:"src/components/icon/icons/chain-link.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/charging-station.component.ts",declarations:[{kind:"class",description:"",name:"IconChargingStation",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-charging-station",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChargingStation",declaration:{name:"IconChargingStation",module:"src/components/icon/icons/charging-station.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/charging-station.ts",declarations:[],exports:[{kind:"js",name:"IconChargingStation",declaration:{name:"IconChargingStation",module:"src/components/icon/icons/charging-station.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chart-one.component.ts",declarations:[{kind:"class",description:"",name:"IconChartOne",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chart-one",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChartOne",declaration:{name:"IconChartOne",module:"src/components/icon/icons/chart-one.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chart-one.ts",declarations:[],exports:[{kind:"js",name:"IconChartOne",declaration:{name:"IconChartOne",module:"src/components/icon/icons/chart-one.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chart-presentation.component.ts",declarations:[{kind:"class",description:"",name:"IconChartPresentation",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chart-presentation",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChartPresentation",declaration:{name:"IconChartPresentation",module:"src/components/icon/icons/chart-presentation.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chart-presentation.ts",declarations:[],exports:[{kind:"js",name:"IconChartPresentation",declaration:{name:"IconChartPresentation",module:"src/components/icon/icons/chart-presentation.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chart-two.component.ts",declarations:[{kind:"class",description:"",name:"IconChartTwo",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chart-two",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChartTwo",declaration:{name:"IconChartTwo",module:"src/components/icon/icons/chart-two.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chart-two.ts",declarations:[],exports:[{kind:"js",name:"IconChartTwo",declaration:{name:"IconChartTwo",module:"src/components/icon/icons/chart-two.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/checklist.component.ts",declarations:[{kind:"class",description:"",name:"IconChecklist",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-checklist",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChecklist",declaration:{name:"IconChecklist",module:"src/components/icon/icons/checklist.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/checklist.ts",declarations:[],exports:[{kind:"js",name:"IconChecklist",declaration:{name:"IconChecklist",module:"src/components/icon/icons/checklist.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/checkmark.component.ts",declarations:[{kind:"class",description:"",name:"IconCheckmark",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-checkmark",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCheckmark",declaration:{name:"IconCheckmark",module:"src/components/icon/icons/checkmark.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/checkmark.ts",declarations:[],exports:[{kind:"js",name:"IconCheckmark",declaration:{name:"IconCheckmark",module:"src/components/icon/icons/checkmark.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-bottom.component.ts",declarations:[{kind:"class",description:"",name:"IconChevronBottom",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chevron-bottom",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChevronBottom",declaration:{name:"IconChevronBottom",module:"src/components/icon/icons/chevron-bottom.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-bottom.ts",declarations:[],exports:[{kind:"js",name:"IconChevronBottom",declaration:{name:"IconChevronBottom",module:"src/components/icon/icons/chevron-bottom.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-double-down.component.ts",declarations:[{kind:"class",description:"",name:"IconChevronDoubleDown",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chevron-double-down",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChevronDoubleDown",declaration:{name:"IconChevronDoubleDown",module:"src/components/icon/icons/chevron-double-down.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-double-down.ts",declarations:[],exports:[{kind:"js",name:"IconChevronDoubleDown",declaration:{name:"IconChevronDoubleDown",module:"src/components/icon/icons/chevron-double-down.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-double-left.component.ts",declarations:[{kind:"class",description:"",name:"IconChevronDoubleLeft",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chevron-double-left",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChevronDoubleLeft",declaration:{name:"IconChevronDoubleLeft",module:"src/components/icon/icons/chevron-double-left.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-double-left.ts",declarations:[],exports:[{kind:"js",name:"IconChevronDoubleLeft",declaration:{name:"IconChevronDoubleLeft",module:"src/components/icon/icons/chevron-double-left.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-double-right.component.ts",declarations:[{kind:"class",description:"",name:"IconChevronDoubleRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chevron-double-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChevronDoubleRight",declaration:{name:"IconChevronDoubleRight",module:"src/components/icon/icons/chevron-double-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-double-right.ts",declarations:[],exports:[{kind:"js",name:"IconChevronDoubleRight",declaration:{name:"IconChevronDoubleRight",module:"src/components/icon/icons/chevron-double-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-double-up.component.ts",declarations:[{kind:"class",description:"",name:"IconChevronDoubleUp",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chevron-double-up",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChevronDoubleUp",declaration:{name:"IconChevronDoubleUp",module:"src/components/icon/icons/chevron-double-up.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-double-up.ts",declarations:[],exports:[{kind:"js",name:"IconChevronDoubleUp",declaration:{name:"IconChevronDoubleUp",module:"src/components/icon/icons/chevron-double-up.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-grabber-vertical.component.ts",declarations:[{kind:"class",description:"",name:"IconChevronGrabberVertical",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chevron-grabber-vertical",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChevronGrabberVertical",declaration:{name:"IconChevronGrabberVertical",module:"src/components/icon/icons/chevron-grabber-vertical.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-grabber-vertical.ts",declarations:[],exports:[{kind:"js",name:"IconChevronGrabberVertical",declaration:{name:"IconChevronGrabberVertical",module:"src/components/icon/icons/chevron-grabber-vertical.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-left.component.ts",declarations:[{kind:"class",description:"",name:"IconChevronLeft",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chevron-left",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChevronLeft",declaration:{name:"IconChevronLeft",module:"src/components/icon/icons/chevron-left.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-left.ts",declarations:[],exports:[{kind:"js",name:"IconChevronLeft",declaration:{name:"IconChevronLeft",module:"src/components/icon/icons/chevron-left.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-right.component.ts",declarations:[{kind:"class",description:"",name:"IconChevronRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chevron-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChevronRight",declaration:{name:"IconChevronRight",module:"src/components/icon/icons/chevron-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-right.ts",declarations:[],exports:[{kind:"js",name:"IconChevronRight",declaration:{name:"IconChevronRight",module:"src/components/icon/icons/chevron-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-top.component.ts",declarations:[{kind:"class",description:"",name:"IconChevronTop",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-chevron-top",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconChevronTop",declaration:{name:"IconChevronTop",module:"src/components/icon/icons/chevron-top.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/chevron-top.ts",declarations:[],exports:[{kind:"js",name:"IconChevronTop",declaration:{name:"IconChevronTop",module:"src/components/icon/icons/chevron-top.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-check.component.ts",declarations:[{kind:"class",description:"",name:"IconCircleCheck",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-circle-check",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCircleCheck",declaration:{name:"IconCircleCheck",module:"src/components/icon/icons/circle-check.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-check.ts",declarations:[],exports:[{kind:"js",name:"IconCircleCheck",declaration:{name:"IconCircleCheck",module:"src/components/icon/icons/circle-check.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-info.component.ts",declarations:[{kind:"class",description:"",name:"IconCircleInfo",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-circle-info",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCircleInfo",declaration:{name:"IconCircleInfo",module:"src/components/icon/icons/circle-info.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-info.ts",declarations:[],exports:[{kind:"js",name:"IconCircleInfo",declaration:{name:"IconCircleInfo",module:"src/components/icon/icons/circle-info.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-minus.component.ts",declarations:[{kind:"class",description:"",name:"IconCircleMinus",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-circle-minus",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCircleMinus",declaration:{name:"IconCircleMinus",module:"src/components/icon/icons/circle-minus.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-minus.ts",declarations:[],exports:[{kind:"js",name:"IconCircleMinus",declaration:{name:"IconCircleMinus",module:"src/components/icon/icons/circle-minus.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-placeholder-on.component.ts",declarations:[{kind:"class",description:"",name:"IconCirclePlaceholderOn",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-circle-placeholder-on",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCirclePlaceholderOn",declaration:{name:"IconCirclePlaceholderOn",module:"src/components/icon/icons/circle-placeholder-on.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-placeholder-on.ts",declarations:[],exports:[{kind:"js",name:"IconCirclePlaceholderOn",declaration:{name:"IconCirclePlaceholderOn",module:"src/components/icon/icons/circle-placeholder-on.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-plus.component.ts",declarations:[{kind:"class",description:"",name:"IconCirclePlus",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-circle-plus",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCirclePlus",declaration:{name:"IconCirclePlus",module:"src/components/icon/icons/circle-plus.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-plus.ts",declarations:[],exports:[{kind:"js",name:"IconCirclePlus",declaration:{name:"IconCirclePlus",module:"src/components/icon/icons/circle-plus.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-questionmark.component.ts",declarations:[{kind:"class",description:"",name:"IconCircleQuestionmark",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-circle-questionmark",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCircleQuestionmark",declaration:{name:"IconCircleQuestionmark",module:"src/components/icon/icons/circle-questionmark.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-questionmark.ts",declarations:[],exports:[{kind:"js",name:"IconCircleQuestionmark",declaration:{name:"IconCircleQuestionmark",module:"src/components/icon/icons/circle-questionmark.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-x.component.ts",declarations:[{kind:"class",description:"",name:"IconCircleX",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-circle-x",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCircleX",declaration:{name:"IconCircleX",module:"src/components/icon/icons/circle-x.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circle-x.ts",declarations:[],exports:[{kind:"js",name:"IconCircleX",declaration:{name:"IconCircleX",module:"src/components/icon/icons/circle-x.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circles-three.component.ts",declarations:[{kind:"class",description:"",name:"IconCirclesThree",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-circles-three",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCirclesThree",declaration:{name:"IconCirclesThree",module:"src/components/icon/icons/circles-three.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/circles-three.ts",declarations:[],exports:[{kind:"js",name:"IconCirclesThree",declaration:{name:"IconCirclesThree",module:"src/components/icon/icons/circles-three.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/clock.component.ts",declarations:[{kind:"class",description:"",name:"IconClock",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-clock",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconClock",declaration:{name:"IconClock",module:"src/components/icon/icons/clock.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/clock.ts",declarations:[],exports:[{kind:"js",name:"IconClock",declaration:{name:"IconClock",module:"src/components/icon/icons/clock.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cloud-download.component.ts",declarations:[{kind:"class",description:"",name:"IconCloudDownload",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-cloud-download",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCloudDownload",declaration:{name:"IconCloudDownload",module:"src/components/icon/icons/cloud-download.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cloud-download.ts",declarations:[],exports:[{kind:"js",name:"IconCloudDownload",declaration:{name:"IconCloudDownload",module:"src/components/icon/icons/cloud-download.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cloud-upload.component.ts",declarations:[{kind:"class",description:"",name:"IconCloudUpload",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-cloud-upload",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCloudUpload",declaration:{name:"IconCloudUpload",module:"src/components/icon/icons/cloud-upload.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cloud-upload.ts",declarations:[],exports:[{kind:"js",name:"IconCloudUpload",declaration:{name:"IconCloudUpload",module:"src/components/icon/icons/cloud-upload.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cloudy-sun.component.ts",declarations:[{kind:"class",description:"",name:"IconCloudySun",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-cloudy-sun",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCloudySun",declaration:{name:"IconCloudySun",module:"src/components/icon/icons/cloudy-sun.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cloudy-sun.ts",declarations:[],exports:[{kind:"js",name:"IconCloudySun",declaration:{name:"IconCloudySun",module:"src/components/icon/icons/cloudy-sun.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/compass-round.component.ts",declarations:[{kind:"class",description:"",name:"IconCompassRound",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-compass-round",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCompassRound",declaration:{name:"IconCompassRound",module:"src/components/icon/icons/compass-round.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/compass-round.ts",declarations:[],exports:[{kind:"js",name:"IconCompassRound",declaration:{name:"IconCompassRound",module:"src/components/icon/icons/compass-round.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cookies.component.ts",declarations:[{kind:"class",description:"",name:"IconCookies",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-cookies",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCookies",declaration:{name:"IconCookies",module:"src/components/icon/icons/cookies.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cookies.ts",declarations:[],exports:[{kind:"js",name:"IconCookies",declaration:{name:"IconCookies",module:"src/components/icon/icons/cookies.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/copy.component.ts",declarations:[{kind:"class",description:"",name:"IconCopy",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-copy",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCopy",declaration:{name:"IconCopy",module:"src/components/icon/icons/copy.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/copy.ts",declarations:[],exports:[{kind:"js",name:"IconCopy",declaration:{name:"IconCopy",module:"src/components/icon/icons/copy.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/credit-card.component.ts",declarations:[{kind:"class",description:"",name:"IconCreditCard",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-credit-card",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCreditCard",declaration:{name:"IconCreditCard",module:"src/components/icon/icons/credit-card.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/credit-card.ts",declarations:[],exports:[{kind:"js",name:"IconCreditCard",declaration:{name:"IconCreditCard",module:"src/components/icon/icons/credit-card.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cross-large.component.ts",declarations:[{kind:"class",description:"",name:"IconCrossLarge",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-cross-large",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCrossLarge",declaration:{name:"IconCrossLarge",module:"src/components/icon/icons/cross-large.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cross-large.ts",declarations:[],exports:[{kind:"js",name:"IconCrossLarge",declaration:{name:"IconCrossLarge",module:"src/components/icon/icons/cross-large.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cross-small.component.ts",declarations:[{kind:"class",description:"",name:"IconCrossSmall",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-cross-small",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCrossSmall",declaration:{name:"IconCrossSmall",module:"src/components/icon/icons/cross-small.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cross-small.ts",declarations:[],exports:[{kind:"js",name:"IconCrossSmall",declaration:{name:"IconCrossSmall",module:"src/components/icon/icons/cross-small.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cup-hot.component.ts",declarations:[{kind:"class",description:"",name:"IconCupHot",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-cup-hot",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconCupHot",declaration:{name:"IconCupHot",module:"src/components/icon/icons/cup-hot.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/cup-hot.ts",declarations:[],exports:[{kind:"js",name:"IconCupHot",declaration:{name:"IconCupHot",module:"src/components/icon/icons/cup-hot.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/devices.component.ts",declarations:[{kind:"class",description:"",name:"IconDevices",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-devices",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconDevices",declaration:{name:"IconDevices",module:"src/components/icon/icons/devices.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/devices.ts",declarations:[],exports:[{kind:"js",name:"IconDevices",declaration:{name:"IconDevices",module:"src/components/icon/icons/devices.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/direction.component.ts",declarations:[{kind:"class",description:"",name:"IconDirection",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-direction",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconDirection",declaration:{name:"IconDirection",module:"src/components/icon/icons/direction.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/direction.ts",declarations:[],exports:[{kind:"js",name:"IconDirection",declaration:{name:"IconDirection",module:"src/components/icon/icons/direction.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dollar.component.ts",declarations:[{kind:"class",description:"",name:"IconDollar",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-dollar",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconDollar",declaration:{name:"IconDollar",module:"src/components/icon/icons/dollar.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dollar.ts",declarations:[],exports:[{kind:"js",name:"IconDollar",declaration:{name:"IconDollar",module:"src/components/icon/icons/dollar.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dot-grid-one-horizontal.component.ts",declarations:[{kind:"class",description:"",name:"IconDotGridOneHorizontal",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-dot-grid-one-horizontal",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconDotGridOneHorizontal",declaration:{name:"IconDotGridOneHorizontal",module:"src/components/icon/icons/dot-grid-one-horizontal.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dot-grid-one-horizontal.ts",declarations:[],exports:[{kind:"js",name:"IconDotGridOneHorizontal",declaration:{name:"IconDotGridOneHorizontal",module:"src/components/icon/icons/dot-grid-one-horizontal.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dot-grid-one-vertical.component.ts",declarations:[{kind:"class",description:"",name:"IconDotGridOneVertical",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-dot-grid-one-vertical",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconDotGridOneVertical",declaration:{name:"IconDotGridOneVertical",module:"src/components/icon/icons/dot-grid-one-vertical.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dot-grid-one-vertical.ts",declarations:[],exports:[{kind:"js",name:"IconDotGridOneVertical",declaration:{name:"IconDotGridOneVertical",module:"src/components/icon/icons/dot-grid-one-vertical.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dot-grid-three.component.ts",declarations:[{kind:"class",description:"",name:"IconDotGridThree",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-dot-grid-three",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconDotGridThree",declaration:{name:"IconDotGridThree",module:"src/components/icon/icons/dot-grid-three.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dot-grid-three.ts",declarations:[],exports:[{kind:"js",name:"IconDotGridThree",declaration:{name:"IconDotGridThree",module:"src/components/icon/icons/dot-grid-three.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dot-grid-two.component.ts",declarations:[{kind:"class",description:"",name:"IconDotGridTwo",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-dot-grid-two",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconDotGridTwo",declaration:{name:"IconDotGridTwo",module:"src/components/icon/icons/dot-grid-two.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/dot-grid-two.ts",declarations:[],exports:[{kind:"js",name:"IconDotGridTwo",declaration:{name:"IconDotGridTwo",module:"src/components/icon/icons/dot-grid-two.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/email.component.ts",declarations:[{kind:"class",description:"",name:"IconEmail",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-email",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconEmail",declaration:{name:"IconEmail",module:"src/components/icon/icons/email.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/email.ts",declarations:[],exports:[{kind:"js",name:"IconEmail",declaration:{name:"IconEmail",module:"src/components/icon/icons/email.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/euro.component.ts",declarations:[{kind:"class",description:"",name:"IconEuro",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-euro",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconEuro",declaration:{name:"IconEuro",module:"src/components/icon/icons/euro.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/euro.ts",declarations:[],exports:[{kind:"js",name:"IconEuro",declaration:{name:"IconEuro",module:"src/components/icon/icons/euro.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/eye-open.component.ts",declarations:[{kind:"class",description:"",name:"IconEyeOpen",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-eye-open",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconEyeOpen",declaration:{name:"IconEyeOpen",module:"src/components/icon/icons/eye-open.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/eye-open.ts",declarations:[],exports:[{kind:"js",name:"IconEyeOpen",declaration:{name:"IconEyeOpen",module:"src/components/icon/icons/eye-open.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/eye-slash.component.ts",declarations:[{kind:"class",description:"",name:"IconEyeSlash",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-eye-slash",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconEyeSlash",declaration:{name:"IconEyeSlash",module:"src/components/icon/icons/eye-slash.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/eye-slash.ts",declarations:[],exports:[{kind:"js",name:"IconEyeSlash",declaration:{name:"IconEyeSlash",module:"src/components/icon/icons/eye-slash.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/fashion.component.ts",declarations:[{kind:"class",description:"",name:"IconFashion",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-fashion",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFashion",declaration:{name:"IconFashion",module:"src/components/icon/icons/fashion.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/fashion.ts",declarations:[],exports:[{kind:"js",name:"IconFashion",declaration:{name:"IconFashion",module:"src/components/icon/icons/fashion.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/fast-forward.component.ts",declarations:[{kind:"class",description:"",name:"IconFastForward",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-fast-forward",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFastForward",declaration:{name:"IconFastForward",module:"src/components/icon/icons/fast-forward.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/fast-forward.ts",declarations:[],exports:[{kind:"js",name:"IconFastForward",declaration:{name:"IconFastForward",module:"src/components/icon/icons/fast-forward.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/file-bend.component.ts",declarations:[{kind:"class",description:"",name:"IconFileBend",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-file-bend",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFileBend",declaration:{name:"IconFileBend",module:"src/components/icon/icons/file-bend.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/file-bend.ts",declarations:[],exports:[{kind:"js",name:"IconFileBend",declaration:{name:"IconFileBend",module:"src/components/icon/icons/file-bend.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/file-chart.component.ts",declarations:[{kind:"class",description:"",name:"IconFileChart",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-file-chart",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFileChart",declaration:{name:"IconFileChart",module:"src/components/icon/icons/file-chart.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/file-chart.ts",declarations:[],exports:[{kind:"js",name:"IconFileChart",declaration:{name:"IconFileChart",module:"src/components/icon/icons/file-chart.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/file-text.component.ts",declarations:[{kind:"class",description:"",name:"IconFileText",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-file-text",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFileText",declaration:{name:"IconFileText",module:"src/components/icon/icons/file-text.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/file-text.ts",declarations:[],exports:[{kind:"js",name:"IconFileText",declaration:{name:"IconFileText",module:"src/components/icon/icons/file-text.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/files.component.ts",declarations:[{kind:"class",description:"",name:"IconFiles",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-files",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFiles",declaration:{name:"IconFiles",module:"src/components/icon/icons/files.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/files.ts",declarations:[],exports:[{kind:"js",name:"IconFiles",declaration:{name:"IconFiles",module:"src/components/icon/icons/files.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/filter.component.ts",declarations:[{kind:"class",description:"",name:"IconFilter",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-filter",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFilter",declaration:{name:"IconFilter",module:"src/components/icon/icons/filter.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/filter.ts",declarations:[],exports:[{kind:"js",name:"IconFilter",declaration:{name:"IconFilter",module:"src/components/icon/icons/filter.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/flag.component.ts",declarations:[{kind:"class",description:"",name:"IconFlag",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-flag",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFlag",declaration:{name:"IconFlag",module:"src/components/icon/icons/flag.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/flag.ts",declarations:[],exports:[{kind:"js",name:"IconFlag",declaration:{name:"IconFlag",module:"src/components/icon/icons/flag.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/floppy-disk.component.ts",declarations:[{kind:"class",description:"",name:"IconFloppyDisk",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-floppy-disk",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFloppyDisk",declaration:{name:"IconFloppyDisk",module:"src/components/icon/icons/floppy-disk.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/floppy-disk.ts",declarations:[],exports:[{kind:"js",name:"IconFloppyDisk",declaration:{name:"IconFloppyDisk",module:"src/components/icon/icons/floppy-disk.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/focus-square.component.ts",declarations:[{kind:"class",description:"",name:"IconFocusSquare",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-focus-square",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFocusSquare",declaration:{name:"IconFocusSquare",module:"src/components/icon/icons/focus-square.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/focus-square.ts",declarations:[],exports:[{kind:"js",name:"IconFocusSquare",declaration:{name:"IconFocusSquare",module:"src/components/icon/icons/focus-square.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/focus.component.ts",declarations:[{kind:"class",description:"",name:"IconFocus",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-focus",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFocus",declaration:{name:"IconFocus",module:"src/components/icon/icons/focus.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/focus.ts",declarations:[],exports:[{kind:"js",name:"IconFocus",declaration:{name:"IconFocus",module:"src/components/icon/icons/focus.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/folder-add-right.component.ts",declarations:[{kind:"class",description:"",name:"IconFolderAddRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-folder-add-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFolderAddRight",declaration:{name:"IconFolderAddRight",module:"src/components/icon/icons/folder-add-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/folder-add-right.ts",declarations:[],exports:[{kind:"js",name:"IconFolderAddRight",declaration:{name:"IconFolderAddRight",module:"src/components/icon/icons/folder-add-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/folder-paper.component.ts",declarations:[{kind:"class",description:"",name:"IconFolderPaper",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-folder-paper",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFolderPaper",declaration:{name:"IconFolderPaper",module:"src/components/icon/icons/folder-paper.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/folder-paper.ts",declarations:[],exports:[{kind:"js",name:"IconFolderPaper",declaration:{name:"IconFolderPaper",module:"src/components/icon/icons/folder-paper.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/folder-upload.component.ts",declarations:[{kind:"class",description:"",name:"IconFolderUpload",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-folder-upload",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFolderUpload",declaration:{name:"IconFolderUpload",module:"src/components/icon/icons/folder-upload.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/folder-upload.ts",declarations:[],exports:[{kind:"js",name:"IconFolderUpload",declaration:{name:"IconFolderUpload",module:"src/components/icon/icons/folder-upload.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/folder.component.ts",declarations:[{kind:"class",description:"",name:"IconFolder",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-folder",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFolder",declaration:{name:"IconFolder",module:"src/components/icon/icons/folder.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/folder.ts",declarations:[],exports:[{kind:"js",name:"IconFolder",declaration:{name:"IconFolder",module:"src/components/icon/icons/folder.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/fullscreen.component.ts",declarations:[{kind:"class",description:"",name:"IconFullscreen",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-fullscreen",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconFullscreen",declaration:{name:"IconFullscreen",module:"src/components/icon/icons/fullscreen.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/fullscreen.ts",declarations:[],exports:[{kind:"js",name:"IconFullscreen",declaration:{name:"IconFullscreen",module:"src/components/icon/icons/fullscreen.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/globus.component.ts",declarations:[{kind:"class",description:"",name:"IconGlobus",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-globus",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconGlobus",declaration:{name:"IconGlobus",module:"src/components/icon/icons/globus.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/globus.ts",declarations:[],exports:[{kind:"js",name:"IconGlobus",declaration:{name:"IconGlobus",module:"src/components/icon/icons/globus.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/graduate-cap.component.ts",declarations:[{kind:"class",description:"",name:"IconGraduateCap",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-graduate-cap",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconGraduateCap",declaration:{name:"IconGraduateCap",module:"src/components/icon/icons/graduate-cap.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/graduate-cap.ts",declarations:[],exports:[{kind:"js",name:"IconGraduateCap",declaration:{name:"IconGraduateCap",module:"src/components/icon/icons/graduate-cap.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/green-power.component.ts",declarations:[{kind:"class",description:"",name:"IconGreenPower",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-green-power",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconGreenPower",declaration:{name:"IconGreenPower",module:"src/components/icon/icons/green-power.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/green-power.ts",declarations:[],exports:[{kind:"js",name:"IconGreenPower",declaration:{name:"IconGreenPower",module:"src/components/icon/icons/green-power.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/group.component.ts",declarations:[{kind:"class",description:"",name:"IconGroup",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-group",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconGroup",declaration:{name:"IconGroup",module:"src/components/icon/icons/group.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/group.ts",declarations:[],exports:[{kind:"js",name:"IconGroup",declaration:{name:"IconGroup",module:"src/components/icon/icons/group.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/growth.component.ts",declarations:[{kind:"class",description:"",name:"IconGrowth",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-growth",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconGrowth",declaration:{name:"IconGrowth",module:"src/components/icon/icons/growth.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/growth.ts",declarations:[],exports:[{kind:"js",name:"IconGrowth",declaration:{name:"IconGrowth",module:"src/components/icon/icons/growth.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/headphones.component.ts",declarations:[{kind:"class",description:"",name:"IconHeadphones",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-headphones",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconHeadphones",declaration:{name:"IconHeadphones",module:"src/components/icon/icons/headphones.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/headphones.ts",declarations:[],exports:[{kind:"js",name:"IconHeadphones",declaration:{name:"IconHeadphones",module:"src/components/icon/icons/headphones.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/heart-beat.component.ts",declarations:[{kind:"class",description:"",name:"IconHeartBeat",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-heart-beat",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconHeartBeat",declaration:{name:"IconHeartBeat",module:"src/components/icon/icons/heart-beat.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/heart-beat.ts",declarations:[],exports:[{kind:"js",name:"IconHeartBeat",declaration:{name:"IconHeartBeat",module:"src/components/icon/icons/heart-beat.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/heart.component.ts",declarations:[{kind:"class",description:"",name:"IconHeart",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-heart",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconHeart",declaration:{name:"IconHeart",module:"src/components/icon/icons/heart.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/heart.ts",declarations:[],exports:[{kind:"js",name:"IconHeart",declaration:{name:"IconHeart",module:"src/components/icon/icons/heart.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/history.component.ts",declarations:[{kind:"class",description:"",name:"IconHistory",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-history",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconHistory",declaration:{name:"IconHistory",module:"src/components/icon/icons/history.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/history.ts",declarations:[],exports:[{kind:"js",name:"IconHistory",declaration:{name:"IconHistory",module:"src/components/icon/icons/history.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/home-energy-one.component.ts",declarations:[{kind:"class",description:"",name:"IconHomeEnergyOne",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-home-energy-one",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconHomeEnergyOne",declaration:{name:"IconHomeEnergyOne",module:"src/components/icon/icons/home-energy-one.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/home-energy-one.ts",declarations:[],exports:[{kind:"js",name:"IconHomeEnergyOne",declaration:{name:"IconHomeEnergyOne",module:"src/components/icon/icons/home-energy-one.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/home-energy-two.component.ts",declarations:[{kind:"class",description:"",name:"IconHomeEnergyTwo",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-home-energy-two",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconHomeEnergyTwo",declaration:{name:"IconHomeEnergyTwo",module:"src/components/icon/icons/home-energy-two.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/home-energy-two.ts",declarations:[],exports:[{kind:"js",name:"IconHomeEnergyTwo",declaration:{name:"IconHomeEnergyTwo",module:"src/components/icon/icons/home-energy-two.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/home-open.component.ts",declarations:[{kind:"class",description:"",name:"IconHomeOpen",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-home-open",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconHomeOpen",declaration:{name:"IconHomeOpen",module:"src/components/icon/icons/home-open.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/home-open.ts",declarations:[],exports:[{kind:"js",name:"IconHomeOpen",declaration:{name:"IconHomeOpen",module:"src/components/icon/icons/home-open.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/home-roof.component.ts",declarations:[{kind:"class",description:"",name:"IconHomeRoof",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-home-roof",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconHomeRoof",declaration:{name:"IconHomeRoof",module:"src/components/icon/icons/home-roof.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/home-roof.ts",declarations:[],exports:[{kind:"js",name:"IconHomeRoof",declaration:{name:"IconHomeRoof",module:"src/components/icon/icons/home-roof.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/horizontal-alignment-bottom.component.ts",declarations:[{kind:"class",description:"",name:"IconHorizontalAlignmentBottom",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-horizontal-alignment-bottom",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconHorizontalAlignmentBottom",declaration:{name:"IconHorizontalAlignmentBottom",module:"src/components/icon/icons/horizontal-alignment-bottom.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/horizontal-alignment-bottom.ts",declarations:[],exports:[{kind:"js",name:"IconHorizontalAlignmentBottom",declaration:{name:"IconHorizontalAlignmentBottom",module:"src/components/icon/icons/horizontal-alignment-bottom.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/images.component.ts",declarations:[{kind:"class",description:"",name:"IconImages",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-images",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconImages",declaration:{name:"IconImages",module:"src/components/icon/icons/images.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/images.ts",declarations:[],exports:[{kind:"js",name:"IconImages",declaration:{name:"IconImages",module:"src/components/icon/icons/images.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/index.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./ai"}},{kind:"js",name:"*",declaration:{name:"*",package:"./airplane-up"}},{kind:"js",name:"*",declaration:{name:"*",package:"./archive"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-bottom-top"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-box-left"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-box-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-down"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-inbox"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-left-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-left"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-out-of-box"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-right-circle"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-right-down-circle"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-right-up-circle"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-rotate-clockwise"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-rotate-counter-clockwise"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-rotate-left-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-rotate-right-left"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-share-left"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-share-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-up"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-wall-down"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-wall-left"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-wall-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-wall-up"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrows-repeat"}},{kind:"js",name:"*",declaration:{name:"*",package:"./at"}},{kind:"js",name:"*",declaration:{name:"*",package:"./back"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bag"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bank"}},{kind:"js",name:"*",declaration:{name:"*",package:"./banknote-2"}},{kind:"js",name:"*",declaration:{name:"*",package:"./banknote"}},{kind:"js",name:"*",declaration:{name:"*",package:"./barcode"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bars-three"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bars-two"}},{kind:"js",name:"*",declaration:{name:"*",package:"./battery-loading"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bell"}},{kind:"js",name:"*",declaration:{name:"*",package:"./block"}},{kind:"js",name:"*",declaration:{name:"*",package:"./book"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark-check"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark-delete"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark-plus"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark-remove"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark"}},{kind:"js",name:"*",declaration:{name:"*",package:"./books"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-app-store"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-apple-music"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-bankid"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-chrome"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-facebook"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-figma"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-firefox"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-github"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-green"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-instagram"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-linkedin"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-play-store"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-rss-feed"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-seb"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-spotify"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-storybook"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-x"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brush"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-annotation"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-dots"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-question"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-quotes"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-text"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-wide-annotation"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubbles"}},{kind:"js",name:"*",declaration:{name:"*",package:"./buildings"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cain-link"}},{kind:"js",name:"*",declaration:{name:"*",package:"./calculator"}},{kind:"js",name:"*",declaration:{name:"*",package:"./calendar-check"}},{kind:"js",name:"*",declaration:{name:"*",package:"./calendar"}},{kind:"js",name:"*",declaration:{name:"*",package:"./calender-add"}},{kind:"js",name:"*",declaration:{name:"*",package:"./call"}},{kind:"js",name:"*",declaration:{name:"*",package:"./car"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chain-link-broken"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chain-link"}},{kind:"js",name:"*",declaration:{name:"*",package:"./charging-station"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chart-one"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chart-presentation"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chart-two"}},{kind:"js",name:"*",declaration:{name:"*",package:"./checklist"}},{kind:"js",name:"*",declaration:{name:"*",package:"./checkmark"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-bottom"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-double-down"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-double-left"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-double-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-double-up"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-grabber-vertical"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-left"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-top"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-check"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-info"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-minus"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-placeholder-on"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-plus"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-questionmark"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-x"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circles-three"}},{kind:"js",name:"*",declaration:{name:"*",package:"./clock"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cloud-download"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cloud-upload"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cloudy-sun"}},{kind:"js",name:"*",declaration:{name:"*",package:"./compass-round"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cookies"}},{kind:"js",name:"*",declaration:{name:"*",package:"./copy"}},{kind:"js",name:"*",declaration:{name:"*",package:"./credit-card"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cross-large"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cross-small"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cup-hot"}},{kind:"js",name:"*",declaration:{name:"*",package:"./devices"}},{kind:"js",name:"*",declaration:{name:"*",package:"./direction"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dollar"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dot-grid-one-horizontal"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dot-grid-one-vertical"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dot-grid-three"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dot-grid-two"}},{kind:"js",name:"*",declaration:{name:"*",package:"./email"}},{kind:"js",name:"*",declaration:{name:"*",package:"./euro"}},{kind:"js",name:"*",declaration:{name:"*",package:"./eye-open"}},{kind:"js",name:"*",declaration:{name:"*",package:"./eye-slash"}},{kind:"js",name:"*",declaration:{name:"*",package:"./fashion"}},{kind:"js",name:"*",declaration:{name:"*",package:"./fast-forward"}},{kind:"js",name:"*",declaration:{name:"*",package:"./file-bend"}},{kind:"js",name:"*",declaration:{name:"*",package:"./file-chart"}},{kind:"js",name:"*",declaration:{name:"*",package:"./file-text"}},{kind:"js",name:"*",declaration:{name:"*",package:"./files"}},{kind:"js",name:"*",declaration:{name:"*",package:"./filter"}},{kind:"js",name:"*",declaration:{name:"*",package:"./flag"}},{kind:"js",name:"*",declaration:{name:"*",package:"./floppy-disk"}},{kind:"js",name:"*",declaration:{name:"*",package:"./focus-square"}},{kind:"js",name:"*",declaration:{name:"*",package:"./focus"}},{kind:"js",name:"*",declaration:{name:"*",package:"./folder-add-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./folder-paper"}},{kind:"js",name:"*",declaration:{name:"*",package:"./folder-upload"}},{kind:"js",name:"*",declaration:{name:"*",package:"./folder"}},{kind:"js",name:"*",declaration:{name:"*",package:"./fullscreen"}},{kind:"js",name:"*",declaration:{name:"*",package:"./globus"}},{kind:"js",name:"*",declaration:{name:"*",package:"./graduate-cap"}},{kind:"js",name:"*",declaration:{name:"*",package:"./green-power"}},{kind:"js",name:"*",declaration:{name:"*",package:"./group"}},{kind:"js",name:"*",declaration:{name:"*",package:"./growth"}},{kind:"js",name:"*",declaration:{name:"*",package:"./headphones"}},{kind:"js",name:"*",declaration:{name:"*",package:"./heart-beat"}},{kind:"js",name:"*",declaration:{name:"*",package:"./heart"}},{kind:"js",name:"*",declaration:{name:"*",package:"./history"}},{kind:"js",name:"*",declaration:{name:"*",package:"./home-energy-one"}},{kind:"js",name:"*",declaration:{name:"*",package:"./home-energy-two"}},{kind:"js",name:"*",declaration:{name:"*",package:"./home-open"}},{kind:"js",name:"*",declaration:{name:"*",package:"./home-roof"}},{kind:"js",name:"*",declaration:{name:"*",package:"./horizontal-alignment-bottom"}},{kind:"js",name:"*",declaration:{name:"*",package:"./images"}},{kind:"js",name:"*",declaration:{name:"*",package:"./industry"}},{kind:"js",name:"*",declaration:{name:"*",package:"./invite"}},{kind:"js",name:"*",declaration:{name:"*",package:"./knife-spoon"}},{kind:"js",name:"*",declaration:{name:"*",package:"./lab"}},{kind:"js",name:"*",declaration:{name:"*",package:"./law"}},{kind:"js",name:"*",declaration:{name:"*",package:"./leisure"}},{kind:"js",name:"*",declaration:{name:"*",package:"./light-bulb-simple"}},{kind:"js",name:"*",declaration:{name:"*",package:"./light-bulb"}},{kind:"js",name:"*",declaration:{name:"*",package:"./lightning"}},{kind:"js",name:"*",declaration:{name:"*",package:"./line-chart-four"}},{kind:"js",name:"*",declaration:{name:"*",package:"./line-chart-one"}},{kind:"js",name:"*",declaration:{name:"*",package:"./line-chart-three"}},{kind:"js",name:"*",declaration:{name:"*",package:"./line-chart-two"}},{kind:"js",name:"*",declaration:{name:"*",package:"./lock"}},{kind:"js",name:"*",declaration:{name:"*",package:"./macbook-air"}},{kind:"js",name:"*",declaration:{name:"*",package:"./magnifying-glass"}},{kind:"js",name:"*",declaration:{name:"*",package:"./maintenance"}},{kind:"js",name:"*",declaration:{name:"*",package:"./map-pin"}},{kind:"js",name:"*",declaration:{name:"*",package:"./megaphone"}},{kind:"js",name:"*",declaration:{name:"*",package:"./menu-sidebar"}},{kind:"js",name:"*",declaration:{name:"*",package:"./minus-large"}},{kind:"js",name:"*",declaration:{name:"*",package:"./minus-small"}},{kind:"js",name:"*",declaration:{name:"*",package:"./money-hand"}},{kind:"js",name:"*",declaration:{name:"*",package:"./moneybag"}},{kind:"js",name:"*",declaration:{name:"*",package:"./moon"}},{kind:"js",name:"*",declaration:{name:"*",package:"./mute"}},{kind:"js",name:"*",declaration:{name:"*",package:"./office"}},{kind:"js",name:"*",declaration:{name:"*",package:"./other"}},{kind:"js",name:"*",declaration:{name:"*",package:"./page-add"}},{kind:"js",name:"*",declaration:{name:"*",package:"./page-text"}},{kind:"js",name:"*",declaration:{name:"*",package:"./paperclip"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pause"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pencel-line"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pencil-sign"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pencil-sparkle"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pencil-wave"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pension"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-a11y"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-add"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-added"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-circle"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-copy"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-profile"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-remove"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people"}},{kind:"js",name:"*",declaration:{name:"*",package:"./percent"}},{kind:"js",name:"*",declaration:{name:"*",package:"./phone-dynamic-island"}},{kind:"js",name:"*",declaration:{name:"*",package:"./phone"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pie-chart"}},{kind:"js",name:"*",declaration:{name:"*",package:"./piggy-bank"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pin"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pinch"}},{kind:"js",name:"*",declaration:{name:"*",package:"./play-circle"}},{kind:"js",name:"*",declaration:{name:"*",package:"./play"}},{kind:"js",name:"*",declaration:{name:"*",package:"./plus-large"}},{kind:"js",name:"*",declaration:{name:"*",package:"./plus-small"}},{kind:"js",name:"*",declaration:{name:"*",package:"./poop"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pound"}},{kind:"js",name:"*",declaration:{name:"*",package:"./power-plant"}},{kind:"js",name:"*",declaration:{name:"*",package:"./printer"}},{kind:"js",name:"*",declaration:{name:"*",package:"./push"}},{kind:"js",name:"*",declaration:{name:"*",package:"./qr-code"}},{kind:"js",name:"*",declaration:{name:"*",package:"./rainy"}},{kind:"js",name:"*",declaration:{name:"*",package:"./raising-hand"}},{kind:"js",name:"*",declaration:{name:"*",package:"./reading-list"}},{kind:"js",name:"*",declaration:{name:"*",package:"./receipt-bill"}},{kind:"js",name:"*",declaration:{name:"*",package:"./receiption-bell"}},{kind:"js",name:"*",declaration:{name:"*",package:"./refund"}},{kind:"js",name:"*",declaration:{name:"*",package:"./robot"}},{kind:"js",name:"*",declaration:{name:"*",package:"./rocket"}},{kind:"js",name:"*",declaration:{name:"*",package:"./safari"}},{kind:"js",name:"*",declaration:{name:"*",package:"./school"}},{kind:"js",name:"*",declaration:{name:"*",package:"./scissors"}},{kind:"js",name:"*",declaration:{name:"*",package:"./search-menu"}},{kind:"js",name:"*",declaration:{name:"*",package:"./seb"}},{kind:"js",name:"*",declaration:{name:"*",package:"./settings-gear"}},{kind:"js",name:"*",declaration:{name:"*",package:"./settings-slider-hor"}},{kind:"js",name:"*",declaration:{name:"*",package:"./settings-slider-three"}},{kind:"js",name:"*",declaration:{name:"*",package:"./settings-slider-ver"}},{kind:"js",name:"*",declaration:{name:"*",package:"./share"}},{kind:"js",name:"*",declaration:{name:"*",package:"./shopping-bag"}},{kind:"js",name:"*",declaration:{name:"*",package:"./smartwatch"}},{kind:"js",name:"*",declaration:{name:"*",package:"./solar-panel"}},{kind:"js",name:"*",declaration:{name:"*",package:"./solar"}},{kind:"js",name:"*",declaration:{name:"*",package:"./sort"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-arrow-top-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-behind-square"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-check"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-grid-circle"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-info"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-minus"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-placeholder"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-plus"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-x"}},{kind:"js",name:"*",declaration:{name:"*",package:"./star"}},{kind:"js",name:"*",declaration:{name:"*",package:"./store"}},{kind:"js",name:"*",declaration:{name:"*",package:"./suitcase-work"}},{kind:"js",name:"*",declaration:{name:"*",package:"./sun"}},{kind:"js",name:"*",declaration:{name:"*",package:"./sunset-arrow-down"}},{kind:"js",name:"*",declaration:{name:"*",package:"./tag"}},{kind:"js",name:"*",declaration:{name:"*",package:"./television"}},{kind:"js",name:"*",declaration:{name:"*",package:"./tennis"}},{kind:"js",name:"*",declaration:{name:"*",package:"./text-edit"}},{kind:"js",name:"*",declaration:{name:"*",package:"./thermostat"}},{kind:"js",name:"*",declaration:{name:"*",package:"./thumbs-down"}},{kind:"js",name:"*",declaration:{name:"*",package:"./thumbs-up"}},{kind:"js",name:"*",declaration:{name:"*",package:"./todos"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trading-view-candles"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trash-can"}},{kind:"js",name:"*",declaration:{name:"*",package:"./tree"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trending-four"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trending-one"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trending-three"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trending-two"}},{kind:"js",name:"*",declaration:{name:"*",package:"./triangle-exclamation"}},{kind:"js",name:"*",declaration:{name:"*",package:"./truck"}},{kind:"js",name:"*",declaration:{name:"*",package:"./umbrella-security"}},{kind:"js",name:"*",declaration:{name:"*",package:"./unlocked"}},{kind:"js",name:"*",declaration:{name:"*",package:"./vertical-alignment-right"}},{kind:"js",name:"*",declaration:{name:"*",package:"./volume-full"}},{kind:"js",name:"*",declaration:{name:"*",package:"./volume-half"}},{kind:"js",name:"*",declaration:{name:"*",package:"./volume-off"}},{kind:"js",name:"*",declaration:{name:"*",package:"./wallet"}},{kind:"js",name:"*",declaration:{name:"*",package:"./warning-sign"}},{kind:"js",name:"*",declaration:{name:"*",package:"./youtube"}},{kind:"js",name:"*",declaration:{name:"*",package:"./zap"}},{kind:"js",name:"*",declaration:{name:"*",package:"./zoom-in"}},{kind:"js",name:"*",declaration:{name:"*",package:"./zoom-out"}}]},{kind:"javascript-module",path:"src/components/icon/icons/industry.component.ts",declarations:[{kind:"class",description:"",name:"IconIndustry",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-industry",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconIndustry",declaration:{name:"IconIndustry",module:"src/components/icon/icons/industry.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/industry.ts",declarations:[],exports:[{kind:"js",name:"IconIndustry",declaration:{name:"IconIndustry",module:"src/components/icon/icons/industry.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/invite.component.ts",declarations:[{kind:"class",description:"",name:"IconInvite",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-invite",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconInvite",declaration:{name:"IconInvite",module:"src/components/icon/icons/invite.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/invite.ts",declarations:[],exports:[{kind:"js",name:"IconInvite",declaration:{name:"IconInvite",module:"src/components/icon/icons/invite.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/knife-spoon.component.ts",declarations:[{kind:"class",description:"",name:"IconKnifeSpoon",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-knife-spoon",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconKnifeSpoon",declaration:{name:"IconKnifeSpoon",module:"src/components/icon/icons/knife-spoon.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/knife-spoon.ts",declarations:[],exports:[{kind:"js",name:"IconKnifeSpoon",declaration:{name:"IconKnifeSpoon",module:"src/components/icon/icons/knife-spoon.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/lab.component.ts",declarations:[{kind:"class",description:"",name:"IconLab",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-lab",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLab",declaration:{name:"IconLab",module:"src/components/icon/icons/lab.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/lab.ts",declarations:[],exports:[{kind:"js",name:"IconLab",declaration:{name:"IconLab",module:"src/components/icon/icons/lab.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/law.component.ts",declarations:[{kind:"class",description:"",name:"IconLaw",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-law",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLaw",declaration:{name:"IconLaw",module:"src/components/icon/icons/law.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/law.ts",declarations:[],exports:[{kind:"js",name:"IconLaw",declaration:{name:"IconLaw",module:"src/components/icon/icons/law.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/leisure.component.ts",declarations:[{kind:"class",description:"",name:"IconLeisure",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-leisure",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLeisure",declaration:{name:"IconLeisure",module:"src/components/icon/icons/leisure.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/leisure.ts",declarations:[],exports:[{kind:"js",name:"IconLeisure",declaration:{name:"IconLeisure",module:"src/components/icon/icons/leisure.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/light-bulb-simple.component.ts",declarations:[{kind:"class",description:"",name:"IconLightBulbSimple",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-light-bulb-simple",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLightBulbSimple",declaration:{name:"IconLightBulbSimple",module:"src/components/icon/icons/light-bulb-simple.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/light-bulb-simple.ts",declarations:[],exports:[{kind:"js",name:"IconLightBulbSimple",declaration:{name:"IconLightBulbSimple",module:"src/components/icon/icons/light-bulb-simple.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/light-bulb.component.ts",declarations:[{kind:"class",description:"",name:"IconLightBulb",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-light-bulb",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLightBulb",declaration:{name:"IconLightBulb",module:"src/components/icon/icons/light-bulb.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/light-bulb.ts",declarations:[],exports:[{kind:"js",name:"IconLightBulb",declaration:{name:"IconLightBulb",module:"src/components/icon/icons/light-bulb.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/lightning.component.ts",declarations:[{kind:"class",description:"",name:"IconLightning",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-lightning",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLightning",declaration:{name:"IconLightning",module:"src/components/icon/icons/lightning.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/lightning.ts",declarations:[],exports:[{kind:"js",name:"IconLightning",declaration:{name:"IconLightning",module:"src/components/icon/icons/lightning.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/line-chart-four.component.ts",declarations:[{kind:"class",description:"",name:"IconLineChartFour",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-line-chart-four",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLineChartFour",declaration:{name:"IconLineChartFour",module:"src/components/icon/icons/line-chart-four.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/line-chart-four.ts",declarations:[],exports:[{kind:"js",name:"IconLineChartFour",declaration:{name:"IconLineChartFour",module:"src/components/icon/icons/line-chart-four.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/line-chart-one.component.ts",declarations:[{kind:"class",description:"",name:"IconLineChartOne",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-line-chart-one",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLineChartOne",declaration:{name:"IconLineChartOne",module:"src/components/icon/icons/line-chart-one.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/line-chart-one.ts",declarations:[],exports:[{kind:"js",name:"IconLineChartOne",declaration:{name:"IconLineChartOne",module:"src/components/icon/icons/line-chart-one.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/line-chart-three.component.ts",declarations:[{kind:"class",description:"",name:"IconLineChartThree",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-line-chart-three",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLineChartThree",declaration:{name:"IconLineChartThree",module:"src/components/icon/icons/line-chart-three.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/line-chart-three.ts",declarations:[],exports:[{kind:"js",name:"IconLineChartThree",declaration:{name:"IconLineChartThree",module:"src/components/icon/icons/line-chart-three.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/line-chart-two.component.ts",declarations:[{kind:"class",description:"",name:"IconLineChartTwo",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-line-chart-two",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLineChartTwo",declaration:{name:"IconLineChartTwo",module:"src/components/icon/icons/line-chart-two.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/line-chart-two.ts",declarations:[],exports:[{kind:"js",name:"IconLineChartTwo",declaration:{name:"IconLineChartTwo",module:"src/components/icon/icons/line-chart-two.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/lock.component.ts",declarations:[{kind:"class",description:"",name:"IconLock",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-lock",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconLock",declaration:{name:"IconLock",module:"src/components/icon/icons/lock.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/lock.ts",declarations:[],exports:[{kind:"js",name:"IconLock",declaration:{name:"IconLock",module:"src/components/icon/icons/lock.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/macbook-air.component.ts",declarations:[{kind:"class",description:"",name:"IconMacbookAir",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-macbook-air",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMacbookAir",declaration:{name:"IconMacbookAir",module:"src/components/icon/icons/macbook-air.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/macbook-air.ts",declarations:[],exports:[{kind:"js",name:"IconMacbookAir",declaration:{name:"IconMacbookAir",module:"src/components/icon/icons/macbook-air.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/magnifying-glass.component.ts",declarations:[{kind:"class",description:"",name:"IconMagnifyingGlass",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-magnifying-glass",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMagnifyingGlass",declaration:{name:"IconMagnifyingGlass",module:"src/components/icon/icons/magnifying-glass.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/magnifying-glass.ts",declarations:[],exports:[{kind:"js",name:"IconMagnifyingGlass",declaration:{name:"IconMagnifyingGlass",module:"src/components/icon/icons/magnifying-glass.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/maintenance.component.ts",declarations:[{kind:"class",description:"",name:"IconMaintenance",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-maintenance",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMaintenance",declaration:{name:"IconMaintenance",module:"src/components/icon/icons/maintenance.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/maintenance.ts",declarations:[],exports:[{kind:"js",name:"IconMaintenance",declaration:{name:"IconMaintenance",module:"src/components/icon/icons/maintenance.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/map-pin.component.ts",declarations:[{kind:"class",description:"",name:"IconMapPin",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-map-pin",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMapPin",declaration:{name:"IconMapPin",module:"src/components/icon/icons/map-pin.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/map-pin.ts",declarations:[],exports:[{kind:"js",name:"IconMapPin",declaration:{name:"IconMapPin",module:"src/components/icon/icons/map-pin.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/megaphone.component.ts",declarations:[{kind:"class",description:"",name:"IconMegaphone",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-megaphone",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMegaphone",declaration:{name:"IconMegaphone",module:"src/components/icon/icons/megaphone.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/megaphone.ts",declarations:[],exports:[{kind:"js",name:"IconMegaphone",declaration:{name:"IconMegaphone",module:"src/components/icon/icons/megaphone.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/menu-sidebar.component.ts",declarations:[{kind:"class",description:"",name:"IconMenuSidebar",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-menu-sidebar",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMenuSidebar",declaration:{name:"IconMenuSidebar",module:"src/components/icon/icons/menu-sidebar.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/menu-sidebar.ts",declarations:[],exports:[{kind:"js",name:"IconMenuSidebar",declaration:{name:"IconMenuSidebar",module:"src/components/icon/icons/menu-sidebar.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/minus-large.component.ts",declarations:[{kind:"class",description:"",name:"IconMinusLarge",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-minus-large",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMinusLarge",declaration:{name:"IconMinusLarge",module:"src/components/icon/icons/minus-large.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/minus-large.ts",declarations:[],exports:[{kind:"js",name:"IconMinusLarge",declaration:{name:"IconMinusLarge",module:"src/components/icon/icons/minus-large.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/minus-small.component.ts",declarations:[{kind:"class",description:"",name:"IconMinusSmall",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-minus-small",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMinusSmall",declaration:{name:"IconMinusSmall",module:"src/components/icon/icons/minus-small.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/minus-small.ts",declarations:[],exports:[{kind:"js",name:"IconMinusSmall",declaration:{name:"IconMinusSmall",module:"src/components/icon/icons/minus-small.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/money-hand.component.ts",declarations:[{kind:"class",description:"",name:"IconMoneyHand",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-money-hand",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMoneyHand",declaration:{name:"IconMoneyHand",module:"src/components/icon/icons/money-hand.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/money-hand.ts",declarations:[],exports:[{kind:"js",name:"IconMoneyHand",declaration:{name:"IconMoneyHand",module:"src/components/icon/icons/money-hand.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/moneybag.component.ts",declarations:[{kind:"class",description:"",name:"IconMoneybag",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-moneybag",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMoneybag",declaration:{name:"IconMoneybag",module:"src/components/icon/icons/moneybag.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/moneybag.ts",declarations:[],exports:[{kind:"js",name:"IconMoneybag",declaration:{name:"IconMoneybag",module:"src/components/icon/icons/moneybag.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/moon.component.ts",declarations:[{kind:"class",description:"",name:"IconMoon",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-moon",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMoon",declaration:{name:"IconMoon",module:"src/components/icon/icons/moon.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/moon.ts",declarations:[],exports:[{kind:"js",name:"IconMoon",declaration:{name:"IconMoon",module:"src/components/icon/icons/moon.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/mute.component.ts",declarations:[{kind:"class",description:"",name:"IconMute",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-mute",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconMute",declaration:{name:"IconMute",module:"src/components/icon/icons/mute.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/mute.ts",declarations:[],exports:[{kind:"js",name:"IconMute",declaration:{name:"IconMute",module:"src/components/icon/icons/mute.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/office.component.ts",declarations:[{kind:"class",description:"",name:"IconOffice",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-office",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconOffice",declaration:{name:"IconOffice",module:"src/components/icon/icons/office.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/office.ts",declarations:[],exports:[{kind:"js",name:"IconOffice",declaration:{name:"IconOffice",module:"src/components/icon/icons/office.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/other.component.ts",declarations:[{kind:"class",description:"",name:"IconOther",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-other",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconOther",declaration:{name:"IconOther",module:"src/components/icon/icons/other.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/other.ts",declarations:[],exports:[{kind:"js",name:"IconOther",declaration:{name:"IconOther",module:"src/components/icon/icons/other.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/page-add.component.ts",declarations:[{kind:"class",description:"",name:"IconPageAdd",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-page-add",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPageAdd",declaration:{name:"IconPageAdd",module:"src/components/icon/icons/page-add.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/page-add.ts",declarations:[],exports:[{kind:"js",name:"IconPageAdd",declaration:{name:"IconPageAdd",module:"src/components/icon/icons/page-add.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/page-text.component.ts",declarations:[{kind:"class",description:"",name:"IconPageText",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-page-text",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPageText",declaration:{name:"IconPageText",module:"src/components/icon/icons/page-text.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/page-text.ts",declarations:[],exports:[{kind:"js",name:"IconPageText",declaration:{name:"IconPageText",module:"src/components/icon/icons/page-text.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/paperclip.component.ts",declarations:[{kind:"class",description:"",name:"IconPaperclip",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-paperclip",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPaperclip",declaration:{name:"IconPaperclip",module:"src/components/icon/icons/paperclip.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/paperclip.ts",declarations:[],exports:[{kind:"js",name:"IconPaperclip",declaration:{name:"IconPaperclip",module:"src/components/icon/icons/paperclip.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pause.component.ts",declarations:[{kind:"class",description:"",name:"IconPause",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pause",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPause",declaration:{name:"IconPause",module:"src/components/icon/icons/pause.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pause.ts",declarations:[],exports:[{kind:"js",name:"IconPause",declaration:{name:"IconPause",module:"src/components/icon/icons/pause.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pencel-line.component.ts",declarations:[{kind:"class",description:"",name:"IconPencelLine",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pencel-line",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPencelLine",declaration:{name:"IconPencelLine",module:"src/components/icon/icons/pencel-line.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pencel-line.ts",declarations:[],exports:[{kind:"js",name:"IconPencelLine",declaration:{name:"IconPencelLine",module:"src/components/icon/icons/pencel-line.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pencil-sign.component.ts",declarations:[{kind:"class",description:"",name:"IconPencilSign",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pencil-sign",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPencilSign",declaration:{name:"IconPencilSign",module:"src/components/icon/icons/pencil-sign.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pencil-sign.ts",declarations:[],exports:[{kind:"js",name:"IconPencilSign",declaration:{name:"IconPencilSign",module:"src/components/icon/icons/pencil-sign.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pencil-sparkle.component.ts",declarations:[{kind:"class",description:"",name:"IconPencilSparkle",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pencil-sparkle",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPencilSparkle",declaration:{name:"IconPencilSparkle",module:"src/components/icon/icons/pencil-sparkle.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pencil-sparkle.ts",declarations:[],exports:[{kind:"js",name:"IconPencilSparkle",declaration:{name:"IconPencilSparkle",module:"src/components/icon/icons/pencil-sparkle.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pencil-wave.component.ts",declarations:[{kind:"class",description:"",name:"IconPencilWave",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pencil-wave",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPencilWave",declaration:{name:"IconPencilWave",module:"src/components/icon/icons/pencil-wave.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pencil-wave.ts",declarations:[],exports:[{kind:"js",name:"IconPencilWave",declaration:{name:"IconPencilWave",module:"src/components/icon/icons/pencil-wave.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pension.component.ts",declarations:[{kind:"class",description:"",name:"IconPension",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pension",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPension",declaration:{name:"IconPension",module:"src/components/icon/icons/pension.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pension.ts",declarations:[],exports:[{kind:"js",name:"IconPension",declaration:{name:"IconPension",module:"src/components/icon/icons/pension.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-a11y.component.ts",declarations:[{kind:"class",description:"",name:"IconPeopleA11y",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-people-a11y",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPeopleA11y",declaration:{name:"IconPeopleA11y",module:"src/components/icon/icons/people-a11y.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-a11y.ts",declarations:[],exports:[{kind:"js",name:"IconPeopleA11y",declaration:{name:"IconPeopleA11y",module:"src/components/icon/icons/people-a11y.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-add.component.ts",declarations:[{kind:"class",description:"",name:"IconPeopleAdd",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-people-add",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPeopleAdd",declaration:{name:"IconPeopleAdd",module:"src/components/icon/icons/people-add.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-add.ts",declarations:[],exports:[{kind:"js",name:"IconPeopleAdd",declaration:{name:"IconPeopleAdd",module:"src/components/icon/icons/people-add.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-added.component.ts",declarations:[{kind:"class",description:"",name:"IconPeopleAdded",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-people-added",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPeopleAdded",declaration:{name:"IconPeopleAdded",module:"src/components/icon/icons/people-added.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-added.ts",declarations:[],exports:[{kind:"js",name:"IconPeopleAdded",declaration:{name:"IconPeopleAdded",module:"src/components/icon/icons/people-added.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-circle.component.ts",declarations:[{kind:"class",description:"",name:"IconPeopleCircle",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-people-circle",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPeopleCircle",declaration:{name:"IconPeopleCircle",module:"src/components/icon/icons/people-circle.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-circle.ts",declarations:[],exports:[{kind:"js",name:"IconPeopleCircle",declaration:{name:"IconPeopleCircle",module:"src/components/icon/icons/people-circle.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-copy.component.ts",declarations:[{kind:"class",description:"",name:"IconPeopleCopy",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-people-copy",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPeopleCopy",declaration:{name:"IconPeopleCopy",module:"src/components/icon/icons/people-copy.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-copy.ts",declarations:[],exports:[{kind:"js",name:"IconPeopleCopy",declaration:{name:"IconPeopleCopy",module:"src/components/icon/icons/people-copy.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-profile.component.ts",declarations:[{kind:"class",description:"",name:"IconPeopleProfile",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-people-profile",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPeopleProfile",declaration:{name:"IconPeopleProfile",module:"src/components/icon/icons/people-profile.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-profile.ts",declarations:[],exports:[{kind:"js",name:"IconPeopleProfile",declaration:{name:"IconPeopleProfile",module:"src/components/icon/icons/people-profile.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-remove.component.ts",declarations:[{kind:"class",description:"",name:"IconPeopleRemove",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-people-remove",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPeopleRemove",declaration:{name:"IconPeopleRemove",module:"src/components/icon/icons/people-remove.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people-remove.ts",declarations:[],exports:[{kind:"js",name:"IconPeopleRemove",declaration:{name:"IconPeopleRemove",module:"src/components/icon/icons/people-remove.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people.component.ts",declarations:[{kind:"class",description:"",name:"IconPeople",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-people",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPeople",declaration:{name:"IconPeople",module:"src/components/icon/icons/people.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/people.ts",declarations:[],exports:[{kind:"js",name:"IconPeople",declaration:{name:"IconPeople",module:"src/components/icon/icons/people.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/percent.component.ts",declarations:[{kind:"class",description:"",name:"IconPercent",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-percent",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPercent",declaration:{name:"IconPercent",module:"src/components/icon/icons/percent.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/percent.ts",declarations:[],exports:[{kind:"js",name:"IconPercent",declaration:{name:"IconPercent",module:"src/components/icon/icons/percent.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/phone-dynamic-island.component.ts",declarations:[{kind:"class",description:"",name:"IconPhoneDynamicIsland",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-phone-dynamic-island",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPhoneDynamicIsland",declaration:{name:"IconPhoneDynamicIsland",module:"src/components/icon/icons/phone-dynamic-island.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/phone-dynamic-island.ts",declarations:[],exports:[{kind:"js",name:"IconPhoneDynamicIsland",declaration:{name:"IconPhoneDynamicIsland",module:"src/components/icon/icons/phone-dynamic-island.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/phone.component.ts",declarations:[{kind:"class",description:"",name:"IconPhone",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-phone",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPhone",declaration:{name:"IconPhone",module:"src/components/icon/icons/phone.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/phone.ts",declarations:[],exports:[{kind:"js",name:"IconPhone",declaration:{name:"IconPhone",module:"src/components/icon/icons/phone.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pie-chart.component.ts",declarations:[{kind:"class",description:"",name:"IconPieChart",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pie-chart",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPieChart",declaration:{name:"IconPieChart",module:"src/components/icon/icons/pie-chart.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pie-chart.ts",declarations:[],exports:[{kind:"js",name:"IconPieChart",declaration:{name:"IconPieChart",module:"src/components/icon/icons/pie-chart.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/piggy-bank.component.ts",declarations:[{kind:"class",description:"",name:"IconPiggyBank",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-piggy-bank",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPiggyBank",declaration:{name:"IconPiggyBank",module:"src/components/icon/icons/piggy-bank.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/piggy-bank.ts",declarations:[],exports:[{kind:"js",name:"IconPiggyBank",declaration:{name:"IconPiggyBank",module:"src/components/icon/icons/piggy-bank.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pin.component.ts",declarations:[{kind:"class",description:"",name:"IconPin",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pin",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPin",declaration:{name:"IconPin",module:"src/components/icon/icons/pin.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pin.ts",declarations:[],exports:[{kind:"js",name:"IconPin",declaration:{name:"IconPin",module:"src/components/icon/icons/pin.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pinch.component.ts",declarations:[{kind:"class",description:"",name:"IconPinch",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pinch",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPinch",declaration:{name:"IconPinch",module:"src/components/icon/icons/pinch.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pinch.ts",declarations:[],exports:[{kind:"js",name:"IconPinch",declaration:{name:"IconPinch",module:"src/components/icon/icons/pinch.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/play-circle.component.ts",declarations:[{kind:"class",description:"",name:"IconPlayCircle",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-play-circle",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPlayCircle",declaration:{name:"IconPlayCircle",module:"src/components/icon/icons/play-circle.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/play-circle.ts",declarations:[],exports:[{kind:"js",name:"IconPlayCircle",declaration:{name:"IconPlayCircle",module:"src/components/icon/icons/play-circle.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/play.component.ts",declarations:[{kind:"class",description:"",name:"IconPlay",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-play",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPlay",declaration:{name:"IconPlay",module:"src/components/icon/icons/play.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/play.ts",declarations:[],exports:[{kind:"js",name:"IconPlay",declaration:{name:"IconPlay",module:"src/components/icon/icons/play.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/plus-large.component.ts",declarations:[{kind:"class",description:"",name:"IconPlusLarge",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-plus-large",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPlusLarge",declaration:{name:"IconPlusLarge",module:"src/components/icon/icons/plus-large.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/plus-large.ts",declarations:[],exports:[{kind:"js",name:"IconPlusLarge",declaration:{name:"IconPlusLarge",module:"src/components/icon/icons/plus-large.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/plus-small.component.ts",declarations:[{kind:"class",description:"",name:"IconPlusSmall",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-plus-small",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPlusSmall",declaration:{name:"IconPlusSmall",module:"src/components/icon/icons/plus-small.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/plus-small.ts",declarations:[],exports:[{kind:"js",name:"IconPlusSmall",declaration:{name:"IconPlusSmall",module:"src/components/icon/icons/plus-small.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/poop.component.ts",declarations:[{kind:"class",description:"",name:"IconPoop",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-poop",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPoop",declaration:{name:"IconPoop",module:"src/components/icon/icons/poop.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/poop.ts",declarations:[],exports:[{kind:"js",name:"IconPoop",declaration:{name:"IconPoop",module:"src/components/icon/icons/poop.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pound.component.ts",declarations:[{kind:"class",description:"",name:"IconPound",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-pound",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPound",declaration:{name:"IconPound",module:"src/components/icon/icons/pound.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pound.ts",declarations:[],exports:[{kind:"js",name:"IconPound",declaration:{name:"IconPound",module:"src/components/icon/icons/pound.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/power-plant.component.ts",declarations:[{kind:"class",description:"",name:"IconPowerPlant",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-power-plant",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPowerPlant",declaration:{name:"IconPowerPlant",module:"src/components/icon/icons/power-plant.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/power-plant.ts",declarations:[],exports:[{kind:"js",name:"IconPowerPlant",declaration:{name:"IconPowerPlant",module:"src/components/icon/icons/power-plant.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/printer.component.ts",declarations:[{kind:"class",description:"",name:"IconPrinter",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-printer",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPrinter",declaration:{name:"IconPrinter",module:"src/components/icon/icons/printer.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/printer.ts",declarations:[],exports:[{kind:"js",name:"IconPrinter",declaration:{name:"IconPrinter",module:"src/components/icon/icons/printer.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/pure.ts",declarations:[],exports:[{kind:"js",name:"*",declaration:{name:"*",package:"./ai.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./airplane-up.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./archive.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-bottom-top.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-box-left.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-box-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-down.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-inbox.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-left-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-left.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-out-of-box.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-right-circle.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-right-down-circle.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-right-up-circle.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-rotate-clockwise.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-rotate-counter-clockwise.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-rotate-left-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-rotate-right-left.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-share-left.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-share-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-up.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-wall-down.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-wall-left.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-wall-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow-wall-up.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrow.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./arrows-repeat.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./at.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./back.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bag.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bank.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./banknote-2.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./banknote.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./barcode.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bars-three.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bars-two.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./battery-loading.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bell.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./block.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./book.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark-check.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark-delete.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark-plus.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark-remove.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bookmark.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./books.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-app-store.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-apple-music.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-bankid.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-chrome.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-facebook.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-figma.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-firefox.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-github.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-green.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-instagram.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-linkedin.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-play-store.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-rss-feed.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-seb.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-spotify.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-storybook.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brand-x.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./brush.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-annotation.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-dots.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-question.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-quotes.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-text.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble-wide-annotation.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubble.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./bubbles.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./buildings.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cain-link.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./calculator.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./calendar-check.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./calendar.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./calender-add.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./call.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./car.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chain-link-broken.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chain-link.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./charging-station.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chart-one.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chart-presentation.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chart-two.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./checklist.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./checkmark.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-bottom.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-double-down.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-double-left.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-double-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-double-up.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-grabber-vertical.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-left.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./chevron-top.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-check.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-info.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-minus.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-placeholder-on.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-plus.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-questionmark.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circle-x.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./circles-three.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./clock.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cloud-download.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cloud-upload.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cloudy-sun.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./compass-round.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cookies.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./copy.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./credit-card.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cross-large.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cross-small.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./cup-hot.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./devices.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./direction.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dollar.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dot-grid-one-horizontal.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dot-grid-one-vertical.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dot-grid-three.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./dot-grid-two.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./email.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./euro.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./eye-open.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./eye-slash.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./fashion.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./fast-forward.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./file-bend.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./file-chart.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./file-text.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./files.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./filter.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./flag.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./floppy-disk.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./focus-square.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./focus.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./folder-add-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./folder-paper.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./folder-upload.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./folder.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./fullscreen.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./globus.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./graduate-cap.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./green-power.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./group.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./growth.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./headphones.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./heart-beat.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./heart.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./history.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./home-energy-one.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./home-energy-two.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./home-open.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./home-roof.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./horizontal-alignment-bottom.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./images.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./industry.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./invite.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./knife-spoon.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./lab.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./law.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./leisure.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./light-bulb-simple.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./light-bulb.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./lightning.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./line-chart-four.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./line-chart-one.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./line-chart-three.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./line-chart-two.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./lock.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./macbook-air.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./magnifying-glass.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./maintenance.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./map-pin.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./megaphone.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./menu-sidebar.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./minus-large.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./minus-small.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./money-hand.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./moneybag.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./moon.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./mute.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./office.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./other.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./page-add.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./page-text.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./paperclip.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pause.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pencel-line.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pencil-sign.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pencil-sparkle.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pencil-wave.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pension.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-a11y.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-add.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-added.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-circle.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-copy.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-profile.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people-remove.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./people.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./percent.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./phone-dynamic-island.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./phone.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pie-chart.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./piggy-bank.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pin.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pinch.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./play-circle.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./play.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./plus-large.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./plus-small.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./poop.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./pound.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./power-plant.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./printer.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./push.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./qr-code.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./rainy.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./raising-hand.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./reading-list.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./receipt-bill.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./receiption-bell.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./refund.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./robot.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./rocket.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./safari.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./school.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./scissors.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./search-menu.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./seb.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./settings-gear.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./settings-slider-hor.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./settings-slider-three.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./settings-slider-ver.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./share.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./shopping-bag.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./smartwatch.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./solar-panel.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./solar.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./sort.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-arrow-top-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-behind-square.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-check.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-grid-circle.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-info.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-minus.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-placeholder.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-plus.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./square-x.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./star.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./store.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./suitcase-work.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./sun.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./sunset-arrow-down.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./tag.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./television.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./tennis.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./text-edit.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./thermostat.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./thumbs-down.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./thumbs-up.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./todos.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trading-view-candles.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trash-can.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./tree.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trending-four.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trending-one.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trending-three.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./trending-two.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./triangle-exclamation.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./truck.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./umbrella-security.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./unlocked.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./vertical-alignment-right.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./volume-full.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./volume-half.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./volume-off.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./wallet.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./warning-sign.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./youtube.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./zap.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./zoom-in.component"}},{kind:"js",name:"*",declaration:{name:"*",package:"./zoom-out.component"}}]},{kind:"javascript-module",path:"src/components/icon/icons/push.component.ts",declarations:[{kind:"class",description:"",name:"IconPush",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-push",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconPush",declaration:{name:"IconPush",module:"src/components/icon/icons/push.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/push.ts",declarations:[],exports:[{kind:"js",name:"IconPush",declaration:{name:"IconPush",module:"src/components/icon/icons/push.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/qr-code.component.ts",declarations:[{kind:"class",description:"",name:"IconQrCode",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-qr-code",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconQrCode",declaration:{name:"IconQrCode",module:"src/components/icon/icons/qr-code.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/qr-code.ts",declarations:[],exports:[{kind:"js",name:"IconQrCode",declaration:{name:"IconQrCode",module:"src/components/icon/icons/qr-code.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/rainy.component.ts",declarations:[{kind:"class",description:"",name:"IconRainy",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-rainy",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconRainy",declaration:{name:"IconRainy",module:"src/components/icon/icons/rainy.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/rainy.ts",declarations:[],exports:[{kind:"js",name:"IconRainy",declaration:{name:"IconRainy",module:"src/components/icon/icons/rainy.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/raising-hand.component.ts",declarations:[{kind:"class",description:"",name:"IconRaisingHand",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-raising-hand",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconRaisingHand",declaration:{name:"IconRaisingHand",module:"src/components/icon/icons/raising-hand.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/raising-hand.ts",declarations:[],exports:[{kind:"js",name:"IconRaisingHand",declaration:{name:"IconRaisingHand",module:"src/components/icon/icons/raising-hand.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/reading-list.component.ts",declarations:[{kind:"class",description:"",name:"IconReadingList",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-reading-list",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconReadingList",declaration:{name:"IconReadingList",module:"src/components/icon/icons/reading-list.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/reading-list.ts",declarations:[],exports:[{kind:"js",name:"IconReadingList",declaration:{name:"IconReadingList",module:"src/components/icon/icons/reading-list.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/receipt-bill.component.ts",declarations:[{kind:"class",description:"",name:"IconReceiptBill",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-receipt-bill",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconReceiptBill",declaration:{name:"IconReceiptBill",module:"src/components/icon/icons/receipt-bill.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/receipt-bill.ts",declarations:[],exports:[{kind:"js",name:"IconReceiptBill",declaration:{name:"IconReceiptBill",module:"src/components/icon/icons/receipt-bill.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/receiption-bell.component.ts",declarations:[{kind:"class",description:"",name:"IconReceiptionBell",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-receiption-bell",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconReceiptionBell",declaration:{name:"IconReceiptionBell",module:"src/components/icon/icons/receiption-bell.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/receiption-bell.ts",declarations:[],exports:[{kind:"js",name:"IconReceiptionBell",declaration:{name:"IconReceiptionBell",module:"src/components/icon/icons/receiption-bell.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/refund.component.ts",declarations:[{kind:"class",description:"",name:"IconRefund",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-refund",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconRefund",declaration:{name:"IconRefund",module:"src/components/icon/icons/refund.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/refund.ts",declarations:[],exports:[{kind:"js",name:"IconRefund",declaration:{name:"IconRefund",module:"src/components/icon/icons/refund.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/robot.component.ts",declarations:[{kind:"class",description:"",name:"IconRobot",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-robot",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconRobot",declaration:{name:"IconRobot",module:"src/components/icon/icons/robot.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/robot.ts",declarations:[],exports:[{kind:"js",name:"IconRobot",declaration:{name:"IconRobot",module:"src/components/icon/icons/robot.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/rocket.component.ts",declarations:[{kind:"class",description:"",name:"IconRocket",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-rocket",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconRocket",declaration:{name:"IconRocket",module:"src/components/icon/icons/rocket.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/rocket.ts",declarations:[],exports:[{kind:"js",name:"IconRocket",declaration:{name:"IconRocket",module:"src/components/icon/icons/rocket.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/safari.component.ts",declarations:[{kind:"class",description:"",name:"IconSafari",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-safari",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSafari",declaration:{name:"IconSafari",module:"src/components/icon/icons/safari.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/safari.ts",declarations:[],exports:[{kind:"js",name:"IconSafari",declaration:{name:"IconSafari",module:"src/components/icon/icons/safari.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/school.component.ts",declarations:[{kind:"class",description:"",name:"IconSchool",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-school",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSchool",declaration:{name:"IconSchool",module:"src/components/icon/icons/school.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/school.ts",declarations:[],exports:[{kind:"js",name:"IconSchool",declaration:{name:"IconSchool",module:"src/components/icon/icons/school.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/scissors.component.ts",declarations:[{kind:"class",description:"",name:"IconScissors",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-scissors",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconScissors",declaration:{name:"IconScissors",module:"src/components/icon/icons/scissors.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/scissors.ts",declarations:[],exports:[{kind:"js",name:"IconScissors",declaration:{name:"IconScissors",module:"src/components/icon/icons/scissors.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/search-menu.component.ts",declarations:[{kind:"class",description:"",name:"IconSearchMenu",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-search-menu",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSearchMenu",declaration:{name:"IconSearchMenu",module:"src/components/icon/icons/search-menu.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/search-menu.ts",declarations:[],exports:[{kind:"js",name:"IconSearchMenu",declaration:{name:"IconSearchMenu",module:"src/components/icon/icons/search-menu.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/seb.component.ts",declarations:[{kind:"class",description:"",name:"IconSeb",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-seb",customElement:!0,deprecated:"Use `gds-icon-brand-seb` instead",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSeb",declaration:{name:"IconSeb",module:"src/components/icon/icons/seb.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/seb.ts",declarations:[],exports:[{kind:"js",name:"IconSeb",declaration:{name:"IconSeb",module:"src/components/icon/icons/seb.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/settings-gear.component.ts",declarations:[{kind:"class",description:"",name:"IconSettingsGear",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-settings-gear",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSettingsGear",declaration:{name:"IconSettingsGear",module:"src/components/icon/icons/settings-gear.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/settings-gear.ts",declarations:[],exports:[{kind:"js",name:"IconSettingsGear",declaration:{name:"IconSettingsGear",module:"src/components/icon/icons/settings-gear.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/settings-slider-hor.component.ts",declarations:[{kind:"class",description:"",name:"IconSettingsSliderHor",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-settings-slider-hor",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSettingsSliderHor",declaration:{name:"IconSettingsSliderHor",module:"src/components/icon/icons/settings-slider-hor.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/settings-slider-hor.ts",declarations:[],exports:[{kind:"js",name:"IconSettingsSliderHor",declaration:{name:"IconSettingsSliderHor",module:"src/components/icon/icons/settings-slider-hor.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/settings-slider-three.component.ts",declarations:[{kind:"class",description:"",name:"IconSettingsSliderThree",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-settings-slider-three",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSettingsSliderThree",declaration:{name:"IconSettingsSliderThree",module:"src/components/icon/icons/settings-slider-three.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/settings-slider-three.ts",declarations:[],exports:[{kind:"js",name:"IconSettingsSliderThree",declaration:{name:"IconSettingsSliderThree",module:"src/components/icon/icons/settings-slider-three.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/settings-slider-ver.component.ts",declarations:[{kind:"class",description:"",name:"IconSettingsSliderVer",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-settings-slider-ver",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSettingsSliderVer",declaration:{name:"IconSettingsSliderVer",module:"src/components/icon/icons/settings-slider-ver.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/settings-slider-ver.ts",declarations:[],exports:[{kind:"js",name:"IconSettingsSliderVer",declaration:{name:"IconSettingsSliderVer",module:"src/components/icon/icons/settings-slider-ver.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/share.component.ts",declarations:[{kind:"class",description:"",name:"IconShare",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-share",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconShare",declaration:{name:"IconShare",module:"src/components/icon/icons/share.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/share.ts",declarations:[],exports:[{kind:"js",name:"IconShare",declaration:{name:"IconShare",module:"src/components/icon/icons/share.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/shopping-bag.component.ts",declarations:[{kind:"class",description:"",name:"IconShoppingBag",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-shopping-bag",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconShoppingBag",declaration:{name:"IconShoppingBag",module:"src/components/icon/icons/shopping-bag.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/shopping-bag.ts",declarations:[],exports:[{kind:"js",name:"IconShoppingBag",declaration:{name:"IconShoppingBag",module:"src/components/icon/icons/shopping-bag.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/smartwatch.component.ts",declarations:[{kind:"class",description:"",name:"IconSmartwatch",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-smartwatch",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSmartwatch",declaration:{name:"IconSmartwatch",module:"src/components/icon/icons/smartwatch.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/smartwatch.ts",declarations:[],exports:[{kind:"js",name:"IconSmartwatch",declaration:{name:"IconSmartwatch",module:"src/components/icon/icons/smartwatch.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/solar-panel.component.ts",declarations:[{kind:"class",description:"",name:"IconSolarPanel",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-solar-panel",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSolarPanel",declaration:{name:"IconSolarPanel",module:"src/components/icon/icons/solar-panel.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/solar-panel.ts",declarations:[],exports:[{kind:"js",name:"IconSolarPanel",declaration:{name:"IconSolarPanel",module:"src/components/icon/icons/solar-panel.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/solar.component.ts",declarations:[{kind:"class",description:"",name:"IconSolar",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-solar",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSolar",declaration:{name:"IconSolar",module:"src/components/icon/icons/solar.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/solar.ts",declarations:[],exports:[{kind:"js",name:"IconSolar",declaration:{name:"IconSolar",module:"src/components/icon/icons/solar.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/sort.component.ts",declarations:[{kind:"class",description:"",name:"IconSort",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-sort",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSort",declaration:{name:"IconSort",module:"src/components/icon/icons/sort.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/sort.ts",declarations:[],exports:[{kind:"js",name:"IconSort",declaration:{name:"IconSort",module:"src/components/icon/icons/sort.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-arrow-top-right.component.ts",declarations:[{kind:"class",description:"",name:"IconSquareArrowTopRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-square-arrow-top-right",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSquareArrowTopRight",declaration:{name:"IconSquareArrowTopRight",module:"src/components/icon/icons/square-arrow-top-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-arrow-top-right.ts",declarations:[],exports:[{kind:"js",name:"IconSquareArrowTopRight",declaration:{name:"IconSquareArrowTopRight",module:"src/components/icon/icons/square-arrow-top-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-behind-square.component.ts",declarations:[{kind:"class",description:"",name:"IconSquareBehindSquare",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-square-behind-square",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSquareBehindSquare",declaration:{name:"IconSquareBehindSquare",module:"src/components/icon/icons/square-behind-square.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-behind-square.ts",declarations:[],exports:[{kind:"js",name:"IconSquareBehindSquare",declaration:{name:"IconSquareBehindSquare",module:"src/components/icon/icons/square-behind-square.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-check.component.ts",declarations:[{kind:"class",description:"",name:"IconSquareCheck",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-square-check",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSquareCheck",declaration:{name:"IconSquareCheck",module:"src/components/icon/icons/square-check.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-check.ts",declarations:[],exports:[{kind:"js",name:"IconSquareCheck",declaration:{name:"IconSquareCheck",module:"src/components/icon/icons/square-check.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-grid-circle.component.ts",declarations:[{kind:"class",description:"",name:"IconSquareGridCircle",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-square-grid-circle",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSquareGridCircle",declaration:{name:"IconSquareGridCircle",module:"src/components/icon/icons/square-grid-circle.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-grid-circle.ts",declarations:[],exports:[{kind:"js",name:"IconSquareGridCircle",declaration:{name:"IconSquareGridCircle",module:"src/components/icon/icons/square-grid-circle.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-info.component.ts",declarations:[{kind:"class",description:"",name:"IconSquareInfo",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-square-info",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSquareInfo",declaration:{name:"IconSquareInfo",module:"src/components/icon/icons/square-info.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-info.ts",declarations:[],exports:[{kind:"js",name:"IconSquareInfo",declaration:{name:"IconSquareInfo",module:"src/components/icon/icons/square-info.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-minus.component.ts",declarations:[{kind:"class",description:"",name:"IconSquareMinus",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-square-minus",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSquareMinus",declaration:{name:"IconSquareMinus",module:"src/components/icon/icons/square-minus.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-minus.ts",declarations:[],exports:[{kind:"js",name:"IconSquareMinus",declaration:{name:"IconSquareMinus",module:"src/components/icon/icons/square-minus.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-placeholder.component.ts",declarations:[{kind:"class",description:"",name:"IconSquarePlaceholder",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-square-placeholder",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSquarePlaceholder",declaration:{name:"IconSquarePlaceholder",module:"src/components/icon/icons/square-placeholder.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-placeholder.ts",declarations:[],exports:[{kind:"js",name:"IconSquarePlaceholder",declaration:{name:"IconSquarePlaceholder",module:"src/components/icon/icons/square-placeholder.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-plus.component.ts",declarations:[{kind:"class",description:"",name:"IconSquarePlus",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-square-plus",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSquarePlus",declaration:{name:"IconSquarePlus",module:"src/components/icon/icons/square-plus.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-plus.ts",declarations:[],exports:[{kind:"js",name:"IconSquarePlus",declaration:{name:"IconSquarePlus",module:"src/components/icon/icons/square-plus.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-x.component.ts",declarations:[{kind:"class",description:"",name:"IconSquareX",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-square-x",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSquareX",declaration:{name:"IconSquareX",module:"src/components/icon/icons/square-x.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/square-x.ts",declarations:[],exports:[{kind:"js",name:"IconSquareX",declaration:{name:"IconSquareX",module:"src/components/icon/icons/square-x.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/star.component.ts",declarations:[{kind:"class",description:"",name:"IconStar",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-star",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconStar",declaration:{name:"IconStar",module:"src/components/icon/icons/star.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/star.ts",declarations:[],exports:[{kind:"js",name:"IconStar",declaration:{name:"IconStar",module:"src/components/icon/icons/star.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/store.component.ts",declarations:[{kind:"class",description:"",name:"IconStore",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-store",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconStore",declaration:{name:"IconStore",module:"src/components/icon/icons/store.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/store.ts",declarations:[],exports:[{kind:"js",name:"IconStore",declaration:{name:"IconStore",module:"src/components/icon/icons/store.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/suitcase-work.component.ts",declarations:[{kind:"class",description:"",name:"IconSuitcaseWork",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-suitcase-work",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSuitcaseWork",declaration:{name:"IconSuitcaseWork",module:"src/components/icon/icons/suitcase-work.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/suitcase-work.ts",declarations:[],exports:[{kind:"js",name:"IconSuitcaseWork",declaration:{name:"IconSuitcaseWork",module:"src/components/icon/icons/suitcase-work.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/sun.component.ts",declarations:[{kind:"class",description:"",name:"IconSun",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-sun",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSun",declaration:{name:"IconSun",module:"src/components/icon/icons/sun.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/sun.ts",declarations:[],exports:[{kind:"js",name:"IconSun",declaration:{name:"IconSun",module:"src/components/icon/icons/sun.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/sunset-arrow-down.component.ts",declarations:[{kind:"class",description:"",name:"IconSunsetArrowDown",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-sunset-arrow-down",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconSunsetArrowDown",declaration:{name:"IconSunsetArrowDown",module:"src/components/icon/icons/sunset-arrow-down.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/sunset-arrow-down.ts",declarations:[],exports:[{kind:"js",name:"IconSunsetArrowDown",declaration:{name:"IconSunsetArrowDown",module:"src/components/icon/icons/sunset-arrow-down.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/tag.component.ts",declarations:[{kind:"class",description:"",name:"IconTag",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-tag",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTag",declaration:{name:"IconTag",module:"src/components/icon/icons/tag.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/tag.ts",declarations:[],exports:[{kind:"js",name:"IconTag",declaration:{name:"IconTag",module:"src/components/icon/icons/tag.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/television.component.ts",declarations:[{kind:"class",description:"",name:"IconTelevision",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-television",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTelevision",declaration:{name:"IconTelevision",module:"src/components/icon/icons/television.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/television.ts",declarations:[],exports:[{kind:"js",name:"IconTelevision",declaration:{name:"IconTelevision",module:"src/components/icon/icons/television.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/tennis.component.ts",declarations:[{kind:"class",description:"",name:"IconTennis",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-tennis",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTennis",declaration:{name:"IconTennis",module:"src/components/icon/icons/tennis.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/tennis.ts",declarations:[],exports:[{kind:"js",name:"IconTennis",declaration:{name:"IconTennis",module:"src/components/icon/icons/tennis.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/text-edit.component.ts",declarations:[{kind:"class",description:"",name:"IconTextEdit",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-text-edit",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTextEdit",declaration:{name:"IconTextEdit",module:"src/components/icon/icons/text-edit.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/text-edit.ts",declarations:[],exports:[{kind:"js",name:"IconTextEdit",declaration:{name:"IconTextEdit",module:"src/components/icon/icons/text-edit.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/thermostat.component.ts",declarations:[{kind:"class",description:"",name:"IconThermostat",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-thermostat",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconThermostat",declaration:{name:"IconThermostat",module:"src/components/icon/icons/thermostat.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/thermostat.ts",declarations:[],exports:[{kind:"js",name:"IconThermostat",declaration:{name:"IconThermostat",module:"src/components/icon/icons/thermostat.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/thumbs-down.component.ts",declarations:[{kind:"class",description:"",name:"IconThumbsDown",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-thumbs-down",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconThumbsDown",declaration:{name:"IconThumbsDown",module:"src/components/icon/icons/thumbs-down.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/thumbs-down.ts",declarations:[],exports:[{kind:"js",name:"IconThumbsDown",declaration:{name:"IconThumbsDown",module:"src/components/icon/icons/thumbs-down.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/thumbs-up.component.ts",declarations:[{kind:"class",description:"",name:"IconThumbsUp",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-thumbs-up",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconThumbsUp",declaration:{name:"IconThumbsUp",module:"src/components/icon/icons/thumbs-up.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/thumbs-up.ts",declarations:[],exports:[{kind:"js",name:"IconThumbsUp",declaration:{name:"IconThumbsUp",module:"src/components/icon/icons/thumbs-up.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/todos.component.ts",declarations:[{kind:"class",description:"",name:"IconTodos",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-todos",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTodos",declaration:{name:"IconTodos",module:"src/components/icon/icons/todos.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/todos.ts",declarations:[],exports:[{kind:"js",name:"IconTodos",declaration:{name:"IconTodos",module:"src/components/icon/icons/todos.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trading-view-candles.component.ts",declarations:[{kind:"class",description:"",name:"IconTradingViewCandles",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-trading-view-candles",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTradingViewCandles",declaration:{name:"IconTradingViewCandles",module:"src/components/icon/icons/trading-view-candles.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trading-view-candles.ts",declarations:[],exports:[{kind:"js",name:"IconTradingViewCandles",declaration:{name:"IconTradingViewCandles",module:"src/components/icon/icons/trading-view-candles.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trash-can.component.ts",declarations:[{kind:"class",description:"",name:"IconTrashCan",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-trash-can",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTrashCan",declaration:{name:"IconTrashCan",module:"src/components/icon/icons/trash-can.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trash-can.ts",declarations:[],exports:[{kind:"js",name:"IconTrashCan",declaration:{name:"IconTrashCan",module:"src/components/icon/icons/trash-can.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/tree.component.ts",declarations:[{kind:"class",description:"",name:"IconTree",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-tree",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTree",declaration:{name:"IconTree",module:"src/components/icon/icons/tree.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/tree.ts",declarations:[],exports:[{kind:"js",name:"IconTree",declaration:{name:"IconTree",module:"src/components/icon/icons/tree.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trending-four.component.ts",declarations:[{kind:"class",description:"",name:"IconTrendingFour",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-trending-four",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTrendingFour",declaration:{name:"IconTrendingFour",module:"src/components/icon/icons/trending-four.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trending-four.ts",declarations:[],exports:[{kind:"js",name:"IconTrendingFour",declaration:{name:"IconTrendingFour",module:"src/components/icon/icons/trending-four.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trending-one.component.ts",declarations:[{kind:"class",description:"",name:"IconTrendingOne",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-trending-one",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTrendingOne",declaration:{name:"IconTrendingOne",module:"src/components/icon/icons/trending-one.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trending-one.ts",declarations:[],exports:[{kind:"js",name:"IconTrendingOne",declaration:{name:"IconTrendingOne",module:"src/components/icon/icons/trending-one.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trending-three.component.ts",declarations:[{kind:"class",description:"",name:"IconTrendingThree",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-trending-three",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTrendingThree",declaration:{name:"IconTrendingThree",module:"src/components/icon/icons/trending-three.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trending-three.ts",declarations:[],exports:[{kind:"js",name:"IconTrendingThree",declaration:{name:"IconTrendingThree",module:"src/components/icon/icons/trending-three.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trending-two.component.ts",declarations:[{kind:"class",description:"",name:"IconTrendingTwo",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-trending-two",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTrendingTwo",declaration:{name:"IconTrendingTwo",module:"src/components/icon/icons/trending-two.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/trending-two.ts",declarations:[],exports:[{kind:"js",name:"IconTrendingTwo",declaration:{name:"IconTrendingTwo",module:"src/components/icon/icons/trending-two.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/triangle-exclamation.component.ts",declarations:[{kind:"class",description:"",name:"IconTriangleExclamation",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-triangle-exclamation",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTriangleExclamation",declaration:{name:"IconTriangleExclamation",module:"src/components/icon/icons/triangle-exclamation.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/triangle-exclamation.ts",declarations:[],exports:[{kind:"js",name:"IconTriangleExclamation",declaration:{name:"IconTriangleExclamation",module:"src/components/icon/icons/triangle-exclamation.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/truck.component.ts",declarations:[{kind:"class",description:"",name:"IconTruck",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-truck",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconTruck",declaration:{name:"IconTruck",module:"src/components/icon/icons/truck.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/truck.ts",declarations:[],exports:[{kind:"js",name:"IconTruck",declaration:{name:"IconTruck",module:"src/components/icon/icons/truck.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/umbrella-security.component.ts",declarations:[{kind:"class",description:"",name:"IconUmbrellaSecurity",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-umbrella-security",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconUmbrellaSecurity",declaration:{name:"IconUmbrellaSecurity",module:"src/components/icon/icons/umbrella-security.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/umbrella-security.ts",declarations:[],exports:[{kind:"js",name:"IconUmbrellaSecurity",declaration:{name:"IconUmbrellaSecurity",module:"src/components/icon/icons/umbrella-security.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/unlocked.component.ts",declarations:[{kind:"class",description:"",name:"IconUnlocked",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-unlocked",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconUnlocked",declaration:{name:"IconUnlocked",module:"src/components/icon/icons/unlocked.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/unlocked.ts",declarations:[],exports:[{kind:"js",name:"IconUnlocked",declaration:{name:"IconUnlocked",module:"src/components/icon/icons/unlocked.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/vertical-alignment-right.component.ts",declarations:[{kind:"class",description:"",name:"IconVerticalAlignmentRight",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-vertical-alignment-right",customElement:!0,deprecated:"This icon is deprecated",members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconVerticalAlignmentRight",declaration:{name:"IconVerticalAlignmentRight",module:"src/components/icon/icons/vertical-alignment-right.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/vertical-alignment-right.ts",declarations:[],exports:[{kind:"js",name:"IconVerticalAlignmentRight",declaration:{name:"IconVerticalAlignmentRight",module:"src/components/icon/icons/vertical-alignment-right.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/volume-full.component.ts",declarations:[{kind:"class",description:"",name:"IconVolumeFull",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-volume-full",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconVolumeFull",declaration:{name:"IconVolumeFull",module:"src/components/icon/icons/volume-full.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/volume-full.ts",declarations:[],exports:[{kind:"js",name:"IconVolumeFull",declaration:{name:"IconVolumeFull",module:"src/components/icon/icons/volume-full.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/volume-half.component.ts",declarations:[{kind:"class",description:"",name:"IconVolumeHalf",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-volume-half",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconVolumeHalf",declaration:{name:"IconVolumeHalf",module:"src/components/icon/icons/volume-half.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/volume-half.ts",declarations:[],exports:[{kind:"js",name:"IconVolumeHalf",declaration:{name:"IconVolumeHalf",module:"src/components/icon/icons/volume-half.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/volume-off.component.ts",declarations:[{kind:"class",description:"",name:"IconVolumeOff",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-volume-off",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconVolumeOff",declaration:{name:"IconVolumeOff",module:"src/components/icon/icons/volume-off.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/volume-off.ts",declarations:[],exports:[{kind:"js",name:"IconVolumeOff",declaration:{name:"IconVolumeOff",module:"src/components/icon/icons/volume-off.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/wallet.component.ts",declarations:[{kind:"class",description:"",name:"IconWallet",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-wallet",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconWallet",declaration:{name:"IconWallet",module:"src/components/icon/icons/wallet.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/wallet.ts",declarations:[],exports:[{kind:"js",name:"IconWallet",declaration:{name:"IconWallet",module:"src/components/icon/icons/wallet.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/warning-sign.component.ts",declarations:[{kind:"class",description:"",name:"IconWarningSign",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-warning-sign",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconWarningSign",declaration:{name:"IconWarningSign",module:"src/components/icon/icons/warning-sign.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/warning-sign.ts",declarations:[],exports:[{kind:"js",name:"IconWarningSign",declaration:{name:"IconWarningSign",module:"src/components/icon/icons/warning-sign.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/youtube.component.ts",declarations:[{kind:"class",description:"",name:"IconYoutube",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-youtube",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconYoutube",declaration:{name:"IconYoutube",module:"src/components/icon/icons/youtube.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/youtube.ts",declarations:[],exports:[{kind:"js",name:"IconYoutube",declaration:{name:"IconYoutube",module:"src/components/icon/icons/youtube.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/zap.component.ts",declarations:[{kind:"class",description:"",name:"IconZap",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-zap",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconZap",declaration:{name:"IconZap",module:"src/components/icon/icons/zap.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/zap.ts",declarations:[],exports:[{kind:"js",name:"IconZap",declaration:{name:"IconZap",module:"src/components/icon/icons/zap.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/zoom-in.component.ts",declarations:[{kind:"class",description:"",name:"IconZoomIn",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-zoom-in",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconZoomIn",declaration:{name:"IconZoomIn",module:"src/components/icon/icons/zoom-in.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/zoom-in.ts",declarations:[],exports:[{kind:"js",name:"IconZoomIn",declaration:{name:"IconZoomIn",module:"src/components/icon/icons/zoom-in.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/zoom-out.component.ts",declarations:[{kind:"class",description:"",name:"IconZoomOut",superclass:{name:"GdsIcon",module:"/src/components/icon/icon"},tagName:"gds-icon-zoom-out",customElement:!0,members:[{kind:"field",name:"margin",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-inline'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-inline` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'margin-block'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `margin-block` property.\nOnly accepts space tokens.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withMarginProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'align-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `align-self` property.\nSupports all valid CSS `align-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'justify-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `justify-self` property.\nSupports all valid CSS `justify-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'place-self'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `place-self` property.\nSupports all valid CSS `place-self` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-column'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-column` property.\nSupports all valid CSS grid-column values.\nDocumentation: https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-row'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-row` property.\nSupports all valid CSS `grid-row` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"'grid-area'",type:{text:"string | undefined"},description:"Style Expression Property that controls the `grid-area` property.\nSupports all valid CSS `grid-area` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"flex",type:{text:"string | undefined"},description:"Style Expression Property that controls the `flex` property.\nSupports all valid CSS `flex` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"order",type:{text:"string | undefined"},description:"Style Expression Property that controls the `order` property.\nSupports all valid CSS `order` values.",category:"Declarative layout / Style expression properties",inheritedFrom:{name:"withLayoutChildProps",module:"src/utils/mixins/declarative-layout-mixins.ts"}},{kind:"field",name:"size",type:{text:"string | undefined"},description:`This property allow you to set the size of the icon with the token and custom values.
If not provided, uses the icon's default size.

The size is a shorthand for setting both width and height at once.`,inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,attribute:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",attribute:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"field",name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,attribute:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{kind:"method",name:"define",static:!0,return:{type:{text:"void"}},description:`Defines the custom element in the custom element registry.
This method needs to be called once before the element can be used.`,inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"isDefined",type:{text:"boolean"},static:!0,default:"false",description:"Whether the element is defined in the custom element registry.",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}},{kind:"field",name:"gdsElementName",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,attribute:"gds-element",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],cssParts:[{description:"The icon SVG element.",name:"icon",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}}],attributes:[{name:"solid",type:{text:"boolean"},default:"false",description:`When set to true, the solid version of the icon is displayed.
When set to false or not provided, the regular version of the icon is displayed.`,fieldName:"solid",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"stroke",type:{text:"number | undefined"},description:"When set to true, you can apply custom stroke width to the icon.",fieldName:"stroke",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"label",type:{text:"string"},default:"''",description:`This property allow you to set the accessible label of the icon.
If not provided, the icon will be presentational.`,fieldName:"label",inheritedFrom:{name:"GdsIcon",module:"src/components/icon/icon.component.ts"}},{name:"gds-element",type:{text:"string | undefined"},description:"The unscoped name of this element. This attribute is set automatically by the element and is inteded to be read-only.",readonly:!0,fieldName:"gdsElementName",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}],events:[{name:"gds-element-disconnected",type:{text:"CustomEvent"},description:"When the element is disconnected from the DOM",reactName:"onGdsElementDisconnected",eventName:"GdsElementDisconnectedEvent",inheritedFrom:{name:"GdsElement",module:"src/gds-element.ts"}}]}],exports:[{kind:"js",name:"IconZoomOut",declaration:{name:"IconZoomOut",module:"src/components/icon/icons/zoom-out.component.ts"}}]},{kind:"javascript-module",path:"src/components/icon/icons/zoom-out.ts",declarations:[],exports:[{kind:"js",name:"IconZoomOut",declaration:{name:"IconZoomOut",module:"src/components/icon/icons/zoom-out.ts"}}]},{kind:"javascript-module",path:"src/generated/react/card/index.ts",declarations:[{kind:"function",name:"GdsCard",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsCardClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsCard",declaration:{name:"GdsCard",module:"src/generated/react/card/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/coachmark/index.ts",declarations:[{kind:"function",name:"GdsCoachmark",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsCoachmarkClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsCoachmark",declaration:{name:"GdsCoachmark",module:"src/generated/react/coachmark/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/container/index.ts",declarations:[{kind:"function",name:"GdsContainer",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsContainerClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsContainer",declaration:{name:"GdsContainer",module:"src/generated/react/container/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/context-menu/index.ts",declarations:[{kind:"function",name:"GdsContextMenu",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsContextMenuClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsContextMenu",declaration:{name:"GdsContextMenu",module:"src/generated/react/context-menu/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/datepicker/index.ts",declarations:[{kind:"function",name:"GdsDatepicker",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsDatepickerClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsDatepicker",declaration:{name:"GdsDatepicker",module:"src/generated/react/datepicker/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/details/index.ts",declarations:[{kind:"function",name:"GdsDetails",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsDetailsClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsDetails",declaration:{name:"GdsDetails",module:"src/generated/react/details/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/dialog/index.ts",declarations:[{kind:"function",name:"GdsDialog",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsDialogClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsDialog",declaration:{name:"GdsDialog",module:"src/generated/react/dialog/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/div/index.ts",declarations:[{kind:"function",name:"GdsDiv",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsDivClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsDiv",declaration:{name:"GdsDiv",module:"src/generated/react/div/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/divider/index.ts",declarations:[{kind:"function",name:"GdsDivider",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsDividerClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsDivider",declaration:{name:"GdsDivider",module:"src/generated/react/divider/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/dropdown/index.ts",declarations:[{kind:"function",name:"GdsDropdown",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsDropdownClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsDropdown",declaration:{name:"GdsDropdown",module:"src/generated/react/dropdown/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/fab/index.ts",declarations:[{kind:"function",name:"GdsFab",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsFabClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsFab",declaration:{name:"GdsFab",module:"src/generated/react/fab/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/filter-chip/index.ts",declarations:[{kind:"function",name:"GdsFilterChip",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsFilterChipClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsFilterChip",declaration:{name:"GdsFilterChip",module:"src/generated/react/filter-chip/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/filter-chips/index.ts",declarations:[{kind:"function",name:"GdsFilterChips",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsFilterChipsClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsFilterChips",declaration:{name:"GdsFilterChips",module:"src/generated/react/filter-chips/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/flex/index.ts",declarations:[{kind:"function",name:"GdsFlex",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsFlexClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsFlex",declaration:{name:"GdsFlex",module:"src/generated/react/flex/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/form-control-footer/index.ts",declarations:[{kind:"function",name:"GdsFormControlFooter",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsFormControlFooterClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsFormControlFooter",declaration:{name:"GdsFormControlFooter",module:"src/generated/react/form-control-footer/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/form-control-header/index.ts",declarations:[{kind:"function",name:"GdsFormControlHeader",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsFormControlHeaderClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsFormControlHeader",declaration:{name:"GdsFormControlHeader",module:"src/generated/react/form-control-header/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/formatted-account/index.ts",declarations:[{kind:"function",name:"GdsFormattedAccount",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsFormattedAccountClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsFormattedAccount",declaration:{name:"GdsFormattedAccount",module:"src/generated/react/formatted-account/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/formatted-date/index.ts",declarations:[{kind:"function",name:"GdsFormattedDate",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsFormattedDateClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsFormattedDate",declaration:{name:"GdsFormattedDate",module:"src/generated/react/formatted-date/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/formatted-number/index.ts",declarations:[{kind:"function",name:"GdsFormattedNumber",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsFormattedNumberClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsFormattedNumber",declaration:{name:"GdsFormattedNumber",module:"src/generated/react/formatted-number/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/grid/index.ts",declarations:[{kind:"function",name:"GdsGrid",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsGridClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsGrid",declaration:{name:"GdsGrid",module:"src/generated/react/grid/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/grouped-list/index.ts",declarations:[{kind:"function",name:"GdsGroupedList",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsGroupedListClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsGroupedList",declaration:{name:"GdsGroupedList",module:"src/generated/react/grouped-list/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/img/index.ts",declarations:[{kind:"function",name:"GdsImg",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsImgClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsImg",declaration:{name:"GdsImg",module:"src/generated/react/img/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/input/index.ts",declarations:[{kind:"function",name:"GdsInput",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsInputClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsInput",declaration:{name:"GdsInput",module:"src/generated/react/input/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/link/index.ts",declarations:[{kind:"function",name:"GdsLink",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsLinkClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsLink",declaration:{name:"GdsLink",module:"src/generated/react/link/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/list-item/index.ts",declarations:[{kind:"function",name:"GdsListItem",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsListItemClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsListItem",declaration:{name:"GdsListItem",module:"src/generated/react/list-item/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/mask/index.ts",declarations:[{kind:"function",name:"GdsMask",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsMaskClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsMask",declaration:{name:"GdsMask",module:"src/generated/react/mask/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/menu-button/index.ts",declarations:[{kind:"function",name:"GdsMenuButton",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsMenuButtonClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsMenuButton",declaration:{name:"GdsMenuButton",module:"src/generated/react/menu-button/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/menu-item/index.ts",declarations:[{kind:"function",name:"GdsMenuItem",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsMenuItemClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsMenuItem",declaration:{name:"GdsMenuItem",module:"src/generated/react/menu-item/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/option/index.ts",declarations:[{kind:"function",name:"GdsOption",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsOptionClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsOption",declaration:{name:"GdsOption",module:"src/generated/react/option/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/popover/index.ts",declarations:[{kind:"function",name:"GdsPopover",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsPopoverClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsPopover",declaration:{name:"GdsPopover",module:"src/generated/react/popover/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/radio/index.ts",declarations:[{kind:"function",name:"GdsRadio",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsRadioClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsRadio",declaration:{name:"GdsRadio",module:"src/generated/react/radio/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/radio-group/index.ts",declarations:[{kind:"function",name:"GdsRadioGroup",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsRadioGroupClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsRadioGroup",declaration:{name:"GdsRadioGroup",module:"src/generated/react/radio-group/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/rich-text/index.ts",declarations:[{kind:"function",name:"GdsRichText",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsRichTextClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsRichText",declaration:{name:"GdsRichText",module:"src/generated/react/rich-text/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/segment/index.ts",declarations:[{kind:"function",name:"GdsSegment",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsSegmentClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsSegment",declaration:{name:"GdsSegment",module:"src/generated/react/segment/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/segmented-control/index.ts",declarations:[{kind:"function",name:"GdsSegmentedControl",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsSegmentedControlClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsSegmentedControl",declaration:{name:"GdsSegmentedControl",module:"src/generated/react/segmented-control/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/select/index.ts",declarations:[{kind:"function",name:"GdsSelect",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsSelectClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsSelect",declaration:{name:"GdsSelect",module:"src/generated/react/select/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/sensitive-number/index.ts",declarations:[{kind:"function",name:"GdsSensitiveNumber",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsSensitiveNumberClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsSensitiveNumber",declaration:{name:"GdsSensitiveNumber",module:"src/generated/react/sensitive-number/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/signal/index.ts",declarations:[{kind:"function",name:"GdsSignal",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsSignalClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsSignal",declaration:{name:"GdsSignal",module:"src/generated/react/signal/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/spacer/index.ts",declarations:[{kind:"function",name:"GdsSpacer",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsSpacerClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsSpacer",declaration:{name:"GdsSpacer",module:"src/generated/react/spacer/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/spinner/index.ts",declarations:[{kind:"function",name:"GdsSpinner",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsSpinnerClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsSpinner",declaration:{name:"GdsSpinner",module:"src/generated/react/spinner/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/text/index.ts",declarations:[{kind:"function",name:"GdsText",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsTextClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsText",declaration:{name:"GdsText",module:"src/generated/react/text/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/textarea/index.ts",declarations:[{kind:"function",name:"GdsTextarea",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsTextareaClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsTextarea",declaration:{name:"GdsTextarea",module:"src/generated/react/textarea/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/theme/index.ts",declarations:[{kind:"function",name:"GdsTheme",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsThemeClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsTheme",declaration:{name:"GdsTheme",module:"src/generated/react/theme/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/video/index.ts",declarations:[{kind:"function",name:"GdsVideo",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsVideoClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsVideo",declaration:{name:"GdsVideo",module:"src/generated/react/video/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon/index.ts",declarations:[{kind:"function",name:"GdsIcon",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsIconClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsIcon",declaration:{name:"GdsIcon",module:"src/generated/react/icons/icon/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-ai/index.ts",declarations:[{kind:"function",name:"IconAi",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconAiClass>>
  >`}}]}],exports:[{kind:"js",name:"IconAi",declaration:{name:"IconAi",module:"src/generated/react/icons/icon-ai/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-airplane-up/index.ts",declarations:[{kind:"function",name:"IconAirplaneUp",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconAirplaneUpClass>>
  >`}}]}],exports:[{kind:"js",name:"IconAirplaneUp",declaration:{name:"IconAirplaneUp",module:"src/generated/react/icons/icon-airplane-up/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-archive/index.ts",declarations:[{kind:"function",name:"IconArchive",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArchiveClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArchive",declaration:{name:"IconArchive",module:"src/generated/react/icons/icon-archive/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow/index.ts",declarations:[{kind:"function",name:"IconArrow",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrow",declaration:{name:"IconArrow",module:"src/generated/react/icons/icon-arrow/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-bottom-top/index.ts",declarations:[{kind:"function",name:"IconArrowBottomTop",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowBottomTopClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowBottomTop",declaration:{name:"IconArrowBottomTop",module:"src/generated/react/icons/icon-arrow-bottom-top/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-box-left/index.ts",declarations:[{kind:"function",name:"IconArrowBoxLeft",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowBoxLeftClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowBoxLeft",declaration:{name:"IconArrowBoxLeft",module:"src/generated/react/icons/icon-arrow-box-left/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-box-right/index.ts",declarations:[{kind:"function",name:"IconArrowBoxRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowBoxRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowBoxRight",declaration:{name:"IconArrowBoxRight",module:"src/generated/react/icons/icon-arrow-box-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-down/index.ts",declarations:[{kind:"function",name:"IconArrowDown",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowDownClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowDown",declaration:{name:"IconArrowDown",module:"src/generated/react/icons/icon-arrow-down/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-inbox/index.ts",declarations:[{kind:"function",name:"IconArrowInbox",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowInboxClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowInbox",declaration:{name:"IconArrowInbox",module:"src/generated/react/icons/icon-arrow-inbox/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-left/index.ts",declarations:[{kind:"function",name:"IconArrowLeft",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowLeftClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowLeft",declaration:{name:"IconArrowLeft",module:"src/generated/react/icons/icon-arrow-left/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-left-right/index.ts",declarations:[{kind:"function",name:"IconArrowLeftRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowLeftRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowLeftRight",declaration:{name:"IconArrowLeftRight",module:"src/generated/react/icons/icon-arrow-left-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-out-of-box/index.ts",declarations:[{kind:"function",name:"IconArrowOutOfBox",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowOutOfBoxClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowOutOfBox",declaration:{name:"IconArrowOutOfBox",module:"src/generated/react/icons/icon-arrow-out-of-box/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-right/index.ts",declarations:[{kind:"function",name:"IconArrowRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowRight",declaration:{name:"IconArrowRight",module:"src/generated/react/icons/icon-arrow-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-right-circle/index.ts",declarations:[{kind:"function",name:"IconArrowRightCircle",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowRightCircleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowRightCircle",declaration:{name:"IconArrowRightCircle",module:"src/generated/react/icons/icon-arrow-right-circle/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-right-down-circle/index.ts",declarations:[{kind:"function",name:"IconArrowRightDownCircle",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowRightDownCircleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowRightDownCircle",declaration:{name:"IconArrowRightDownCircle",module:"src/generated/react/icons/icon-arrow-right-down-circle/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-right-up-circle/index.ts",declarations:[{kind:"function",name:"IconArrowRightUpCircle",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowRightUpCircleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowRightUpCircle",declaration:{name:"IconArrowRightUpCircle",module:"src/generated/react/icons/icon-arrow-right-up-circle/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-rotate-clockwise/index.ts",declarations:[{kind:"function",name:"IconArrowRotateClockwise",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowRotateClockwiseClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowRotateClockwise",declaration:{name:"IconArrowRotateClockwise",module:"src/generated/react/icons/icon-arrow-rotate-clockwise/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-rotate-counter-clockwise/index.ts",declarations:[{kind:"function",name:"IconArrowRotateCounterClockwise",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowRotateCounterClockwiseClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowRotateCounterClockwise",declaration:{name:"IconArrowRotateCounterClockwise",module:"src/generated/react/icons/icon-arrow-rotate-counter-clockwise/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-rotate-left-right/index.ts",declarations:[{kind:"function",name:"IconArrowRotateLeftRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowRotateLeftRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowRotateLeftRight",declaration:{name:"IconArrowRotateLeftRight",module:"src/generated/react/icons/icon-arrow-rotate-left-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-rotate-right-left/index.ts",declarations:[{kind:"function",name:"IconArrowRotateRightLeft",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowRotateRightLeftClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowRotateRightLeft",declaration:{name:"IconArrowRotateRightLeft",module:"src/generated/react/icons/icon-arrow-rotate-right-left/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-share-left/index.ts",declarations:[{kind:"function",name:"IconArrowShareLeft",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowShareLeftClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowShareLeft",declaration:{name:"IconArrowShareLeft",module:"src/generated/react/icons/icon-arrow-share-left/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-share-right/index.ts",declarations:[{kind:"function",name:"IconArrowShareRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowShareRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowShareRight",declaration:{name:"IconArrowShareRight",module:"src/generated/react/icons/icon-arrow-share-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-up/index.ts",declarations:[{kind:"function",name:"IconArrowUp",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowUpClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowUp",declaration:{name:"IconArrowUp",module:"src/generated/react/icons/icon-arrow-up/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-wall-down/index.ts",declarations:[{kind:"function",name:"IconArrowWallDown",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowWallDownClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowWallDown",declaration:{name:"IconArrowWallDown",module:"src/generated/react/icons/icon-arrow-wall-down/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-wall-left/index.ts",declarations:[{kind:"function",name:"IconArrowWallLeft",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowWallLeftClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowWallLeft",declaration:{name:"IconArrowWallLeft",module:"src/generated/react/icons/icon-arrow-wall-left/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-wall-right/index.ts",declarations:[{kind:"function",name:"IconArrowWallRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowWallRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowWallRight",declaration:{name:"IconArrowWallRight",module:"src/generated/react/icons/icon-arrow-wall-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrow-wall-up/index.ts",declarations:[{kind:"function",name:"IconArrowWallUp",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowWallUpClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowWallUp",declaration:{name:"IconArrowWallUp",module:"src/generated/react/icons/icon-arrow-wall-up/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-arrows-repeat/index.ts",declarations:[{kind:"function",name:"IconArrowsRepeat",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconArrowsRepeatClass>>
  >`}}]}],exports:[{kind:"js",name:"IconArrowsRepeat",declaration:{name:"IconArrowsRepeat",module:"src/generated/react/icons/icon-arrows-repeat/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-at/index.ts",declarations:[{kind:"function",name:"IconAt",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconAtClass>>
  >`}}]}],exports:[{kind:"js",name:"IconAt",declaration:{name:"IconAt",module:"src/generated/react/icons/icon-at/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-back/index.ts",declarations:[{kind:"function",name:"IconBack",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBackClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBack",declaration:{name:"IconBack",module:"src/generated/react/icons/icon-back/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bag/index.ts",declarations:[{kind:"function",name:"IconBag",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBagClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBag",declaration:{name:"IconBag",module:"src/generated/react/icons/icon-bag/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bank/index.ts",declarations:[{kind:"function",name:"IconBank",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBankClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBank",declaration:{name:"IconBank",module:"src/generated/react/icons/icon-bank/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-banknote/index.ts",declarations:[{kind:"function",name:"IconBanknote",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBanknoteClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBanknote",declaration:{name:"IconBanknote",module:"src/generated/react/icons/icon-banknote/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-banknote-2/index.ts",declarations:[{kind:"function",name:"IconBanknote2",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBanknote2Class>>
  >`}}]}],exports:[{kind:"js",name:"IconBanknote2",declaration:{name:"IconBanknote2",module:"src/generated/react/icons/icon-banknote-2/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-barcode/index.ts",declarations:[{kind:"function",name:"IconBarcode",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBarcodeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBarcode",declaration:{name:"IconBarcode",module:"src/generated/react/icons/icon-barcode/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bars-three/index.ts",declarations:[{kind:"function",name:"IconBarsThree",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBarsThreeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBarsThree",declaration:{name:"IconBarsThree",module:"src/generated/react/icons/icon-bars-three/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bars-two/index.ts",declarations:[{kind:"function",name:"IconBarsTwo",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBarsTwoClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBarsTwo",declaration:{name:"IconBarsTwo",module:"src/generated/react/icons/icon-bars-two/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-battery-loading/index.ts",declarations:[{kind:"function",name:"IconBatteryLoading",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBatteryLoadingClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBatteryLoading",declaration:{name:"IconBatteryLoading",module:"src/generated/react/icons/icon-battery-loading/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bell/index.ts",declarations:[{kind:"function",name:"IconBell",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBellClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBell",declaration:{name:"IconBell",module:"src/generated/react/icons/icon-bell/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-block/index.ts",declarations:[{kind:"function",name:"IconBlock",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBlockClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBlock",declaration:{name:"IconBlock",module:"src/generated/react/icons/icon-block/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-book/index.ts",declarations:[{kind:"function",name:"IconBook",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBookClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBook",declaration:{name:"IconBook",module:"src/generated/react/icons/icon-book/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bookmark/index.ts",declarations:[{kind:"function",name:"IconBookmark",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBookmarkClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBookmark",declaration:{name:"IconBookmark",module:"src/generated/react/icons/icon-bookmark/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bookmark-check/index.ts",declarations:[{kind:"function",name:"IconBookmarkCheck",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBookmarkCheckClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBookmarkCheck",declaration:{name:"IconBookmarkCheck",module:"src/generated/react/icons/icon-bookmark-check/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bookmark-delete/index.ts",declarations:[{kind:"function",name:"IconBookmarkDelete",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBookmarkDeleteClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBookmarkDelete",declaration:{name:"IconBookmarkDelete",module:"src/generated/react/icons/icon-bookmark-delete/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bookmark-plus/index.ts",declarations:[{kind:"function",name:"IconBookmarkPlus",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBookmarkPlusClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBookmarkPlus",declaration:{name:"IconBookmarkPlus",module:"src/generated/react/icons/icon-bookmark-plus/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bookmark-remove/index.ts",declarations:[{kind:"function",name:"IconBookmarkRemove",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBookmarkRemoveClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBookmarkRemove",declaration:{name:"IconBookmarkRemove",module:"src/generated/react/icons/icon-bookmark-remove/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-books/index.ts",declarations:[{kind:"function",name:"IconBooks",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBooksClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBooks",declaration:{name:"IconBooks",module:"src/generated/react/icons/icon-books/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-app-store/index.ts",declarations:[{kind:"function",name:"IconBrandAppStore",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandAppStoreClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandAppStore",declaration:{name:"IconBrandAppStore",module:"src/generated/react/icons/icon-brand-app-store/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-apple-music/index.ts",declarations:[{kind:"function",name:"IconBrandAppleMusic",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandAppleMusicClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandAppleMusic",declaration:{name:"IconBrandAppleMusic",module:"src/generated/react/icons/icon-brand-apple-music/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-bankid/index.ts",declarations:[{kind:"function",name:"IconBrandBankid",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandBankidClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandBankid",declaration:{name:"IconBrandBankid",module:"src/generated/react/icons/icon-brand-bankid/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-chrome/index.ts",declarations:[{kind:"function",name:"IconBrandChrome",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandChromeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandChrome",declaration:{name:"IconBrandChrome",module:"src/generated/react/icons/icon-brand-chrome/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-facebook/index.ts",declarations:[{kind:"function",name:"IconBrandFacebook",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandFacebookClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandFacebook",declaration:{name:"IconBrandFacebook",module:"src/generated/react/icons/icon-brand-facebook/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-figma/index.ts",declarations:[{kind:"function",name:"IconBrandFigma",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandFigmaClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandFigma",declaration:{name:"IconBrandFigma",module:"src/generated/react/icons/icon-brand-figma/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-firefox/index.ts",declarations:[{kind:"function",name:"IconBrandFirefox",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandFirefoxClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandFirefox",declaration:{name:"IconBrandFirefox",module:"src/generated/react/icons/icon-brand-firefox/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-github/index.ts",declarations:[{kind:"function",name:"IconBrandGithub",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandGithubClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandGithub",declaration:{name:"IconBrandGithub",module:"src/generated/react/icons/icon-brand-github/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-green/index.ts",declarations:[{kind:"function",name:"IconBrandGreen",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandGreenClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandGreen",declaration:{name:"IconBrandGreen",module:"src/generated/react/icons/icon-brand-green/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-instagram/index.ts",declarations:[{kind:"function",name:"IconBrandInstagram",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandInstagramClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandInstagram",declaration:{name:"IconBrandInstagram",module:"src/generated/react/icons/icon-brand-instagram/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-linkedin/index.ts",declarations:[{kind:"function",name:"IconBrandLinkedin",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandLinkedinClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandLinkedin",declaration:{name:"IconBrandLinkedin",module:"src/generated/react/icons/icon-brand-linkedin/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-play-store/index.ts",declarations:[{kind:"function",name:"IconBrandPlayStore",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandPlayStoreClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandPlayStore",declaration:{name:"IconBrandPlayStore",module:"src/generated/react/icons/icon-brand-play-store/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-rss-feed/index.ts",declarations:[{kind:"function",name:"IconBrandRssFeed",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandRssFeedClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandRssFeed",declaration:{name:"IconBrandRssFeed",module:"src/generated/react/icons/icon-brand-rss-feed/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-seb/index.ts",declarations:[{kind:"function",name:"IconBrandSeb",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandSebClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandSeb",declaration:{name:"IconBrandSeb",module:"src/generated/react/icons/icon-brand-seb/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-spotify/index.ts",declarations:[{kind:"function",name:"IconBrandSpotify",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandSpotifyClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandSpotify",declaration:{name:"IconBrandSpotify",module:"src/generated/react/icons/icon-brand-spotify/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-storybook/index.ts",declarations:[{kind:"function",name:"IconBrandStorybook",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandStorybookClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandStorybook",declaration:{name:"IconBrandStorybook",module:"src/generated/react/icons/icon-brand-storybook/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brand-x/index.ts",declarations:[{kind:"function",name:"IconBrandX",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrandXClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrandX",declaration:{name:"IconBrandX",module:"src/generated/react/icons/icon-brand-x/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-brush/index.ts",declarations:[{kind:"function",name:"IconBrush",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBrushClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBrush",declaration:{name:"IconBrush",module:"src/generated/react/icons/icon-brush/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bubble/index.ts",declarations:[{kind:"function",name:"IconBubble",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBubbleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBubble",declaration:{name:"IconBubble",module:"src/generated/react/icons/icon-bubble/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bubble-annotation/index.ts",declarations:[{kind:"function",name:"IconBubbleAnnotation",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBubbleAnnotationClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBubbleAnnotation",declaration:{name:"IconBubbleAnnotation",module:"src/generated/react/icons/icon-bubble-annotation/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bubble-dots/index.ts",declarations:[{kind:"function",name:"IconBubbleDots",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBubbleDotsClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBubbleDots",declaration:{name:"IconBubbleDots",module:"src/generated/react/icons/icon-bubble-dots/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bubble-question/index.ts",declarations:[{kind:"function",name:"IconBubbleQuestion",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBubbleQuestionClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBubbleQuestion",declaration:{name:"IconBubbleQuestion",module:"src/generated/react/icons/icon-bubble-question/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bubble-quotes/index.ts",declarations:[{kind:"function",name:"IconBubbleQuotes",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBubbleQuotesClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBubbleQuotes",declaration:{name:"IconBubbleQuotes",module:"src/generated/react/icons/icon-bubble-quotes/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bubble-text/index.ts",declarations:[{kind:"function",name:"IconBubbleText",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBubbleTextClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBubbleText",declaration:{name:"IconBubbleText",module:"src/generated/react/icons/icon-bubble-text/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bubble-wide-annotation/index.ts",declarations:[{kind:"function",name:"IconBubbleWideAnnotation",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBubbleWideAnnotationClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBubbleWideAnnotation",declaration:{name:"IconBubbleWideAnnotation",module:"src/generated/react/icons/icon-bubble-wide-annotation/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-bubbles/index.ts",declarations:[{kind:"function",name:"IconBubbles",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBubblesClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBubbles",declaration:{name:"IconBubbles",module:"src/generated/react/icons/icon-bubbles/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-buildings/index.ts",declarations:[{kind:"function",name:"IconBuildings",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconBuildingsClass>>
  >`}}]}],exports:[{kind:"js",name:"IconBuildings",declaration:{name:"IconBuildings",module:"src/generated/react/icons/icon-buildings/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-cain-link/index.ts",declarations:[{kind:"function",name:"IconCainLink",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCainLinkClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCainLink",declaration:{name:"IconCainLink",module:"src/generated/react/icons/icon-cain-link/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-calculator/index.ts",declarations:[{kind:"function",name:"IconCalculator",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCalculatorClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCalculator",declaration:{name:"IconCalculator",module:"src/generated/react/icons/icon-calculator/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-calendar/index.ts",declarations:[{kind:"function",name:"IconCalendar",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCalendarClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCalendar",declaration:{name:"IconCalendar",module:"src/generated/react/icons/icon-calendar/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-calendar-check/index.ts",declarations:[{kind:"function",name:"IconCalendarCheck",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCalendarCheckClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCalendarCheck",declaration:{name:"IconCalendarCheck",module:"src/generated/react/icons/icon-calendar-check/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-calender-add/index.ts",declarations:[{kind:"function",name:"IconCalenderAdd",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCalenderAddClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCalenderAdd",declaration:{name:"IconCalenderAdd",module:"src/generated/react/icons/icon-calender-add/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-call/index.ts",declarations:[{kind:"function",name:"IconCall",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCallClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCall",declaration:{name:"IconCall",module:"src/generated/react/icons/icon-call/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-car/index.ts",declarations:[{kind:"function",name:"IconCar",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCarClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCar",declaration:{name:"IconCar",module:"src/generated/react/icons/icon-car/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chain-link/index.ts",declarations:[{kind:"function",name:"IconChainLink",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChainLinkClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChainLink",declaration:{name:"IconChainLink",module:"src/generated/react/icons/icon-chain-link/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chain-link-broken/index.ts",declarations:[{kind:"function",name:"IconChainLinkBroken",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChainLinkBrokenClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChainLinkBroken",declaration:{name:"IconChainLinkBroken",module:"src/generated/react/icons/icon-chain-link-broken/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-charging-station/index.ts",declarations:[{kind:"function",name:"IconChargingStation",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChargingStationClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChargingStation",declaration:{name:"IconChargingStation",module:"src/generated/react/icons/icon-charging-station/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chart-one/index.ts",declarations:[{kind:"function",name:"IconChartOne",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChartOneClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChartOne",declaration:{name:"IconChartOne",module:"src/generated/react/icons/icon-chart-one/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chart-presentation/index.ts",declarations:[{kind:"function",name:"IconChartPresentation",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChartPresentationClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChartPresentation",declaration:{name:"IconChartPresentation",module:"src/generated/react/icons/icon-chart-presentation/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chart-two/index.ts",declarations:[{kind:"function",name:"IconChartTwo",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChartTwoClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChartTwo",declaration:{name:"IconChartTwo",module:"src/generated/react/icons/icon-chart-two/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-checklist/index.ts",declarations:[{kind:"function",name:"IconChecklist",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChecklistClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChecklist",declaration:{name:"IconChecklist",module:"src/generated/react/icons/icon-checklist/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-checkmark/index.ts",declarations:[{kind:"function",name:"IconCheckmark",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCheckmarkClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCheckmark",declaration:{name:"IconCheckmark",module:"src/generated/react/icons/icon-checkmark/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chevron-bottom/index.ts",declarations:[{kind:"function",name:"IconChevronBottom",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChevronBottomClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChevronBottom",declaration:{name:"IconChevronBottom",module:"src/generated/react/icons/icon-chevron-bottom/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chevron-double-down/index.ts",declarations:[{kind:"function",name:"IconChevronDoubleDown",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChevronDoubleDownClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChevronDoubleDown",declaration:{name:"IconChevronDoubleDown",module:"src/generated/react/icons/icon-chevron-double-down/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chevron-double-left/index.ts",declarations:[{kind:"function",name:"IconChevronDoubleLeft",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChevronDoubleLeftClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChevronDoubleLeft",declaration:{name:"IconChevronDoubleLeft",module:"src/generated/react/icons/icon-chevron-double-left/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chevron-double-right/index.ts",declarations:[{kind:"function",name:"IconChevronDoubleRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChevronDoubleRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChevronDoubleRight",declaration:{name:"IconChevronDoubleRight",module:"src/generated/react/icons/icon-chevron-double-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chevron-double-up/index.ts",declarations:[{kind:"function",name:"IconChevronDoubleUp",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChevronDoubleUpClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChevronDoubleUp",declaration:{name:"IconChevronDoubleUp",module:"src/generated/react/icons/icon-chevron-double-up/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chevron-grabber-vertical/index.ts",declarations:[{kind:"function",name:"IconChevronGrabberVertical",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChevronGrabberVerticalClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChevronGrabberVertical",declaration:{name:"IconChevronGrabberVertical",module:"src/generated/react/icons/icon-chevron-grabber-vertical/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chevron-left/index.ts",declarations:[{kind:"function",name:"IconChevronLeft",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChevronLeftClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChevronLeft",declaration:{name:"IconChevronLeft",module:"src/generated/react/icons/icon-chevron-left/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chevron-right/index.ts",declarations:[{kind:"function",name:"IconChevronRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChevronRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChevronRight",declaration:{name:"IconChevronRight",module:"src/generated/react/icons/icon-chevron-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-chevron-top/index.ts",declarations:[{kind:"function",name:"IconChevronTop",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconChevronTopClass>>
  >`}}]}],exports:[{kind:"js",name:"IconChevronTop",declaration:{name:"IconChevronTop",module:"src/generated/react/icons/icon-chevron-top/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-circle-check/index.ts",declarations:[{kind:"function",name:"IconCircleCheck",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCircleCheckClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCircleCheck",declaration:{name:"IconCircleCheck",module:"src/generated/react/icons/icon-circle-check/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-circle-info/index.ts",declarations:[{kind:"function",name:"IconCircleInfo",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCircleInfoClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCircleInfo",declaration:{name:"IconCircleInfo",module:"src/generated/react/icons/icon-circle-info/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-circle-minus/index.ts",declarations:[{kind:"function",name:"IconCircleMinus",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCircleMinusClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCircleMinus",declaration:{name:"IconCircleMinus",module:"src/generated/react/icons/icon-circle-minus/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-circle-placeholder-on/index.ts",declarations:[{kind:"function",name:"IconCirclePlaceholderOn",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCirclePlaceholderOnClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCirclePlaceholderOn",declaration:{name:"IconCirclePlaceholderOn",module:"src/generated/react/icons/icon-circle-placeholder-on/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-circle-plus/index.ts",declarations:[{kind:"function",name:"IconCirclePlus",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCirclePlusClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCirclePlus",declaration:{name:"IconCirclePlus",module:"src/generated/react/icons/icon-circle-plus/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-circle-questionmark/index.ts",declarations:[{kind:"function",name:"IconCircleQuestionmark",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCircleQuestionmarkClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCircleQuestionmark",declaration:{name:"IconCircleQuestionmark",module:"src/generated/react/icons/icon-circle-questionmark/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-circles-three/index.ts",declarations:[{kind:"function",name:"IconCirclesThree",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCirclesThreeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCirclesThree",declaration:{name:"IconCirclesThree",module:"src/generated/react/icons/icon-circles-three/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-circle-x/index.ts",declarations:[{kind:"function",name:"IconCircleX",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCircleXClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCircleX",declaration:{name:"IconCircleX",module:"src/generated/react/icons/icon-circle-x/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-clock/index.ts",declarations:[{kind:"function",name:"IconClock",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconClockClass>>
  >`}}]}],exports:[{kind:"js",name:"IconClock",declaration:{name:"IconClock",module:"src/generated/react/icons/icon-clock/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-cloud-download/index.ts",declarations:[{kind:"function",name:"IconCloudDownload",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCloudDownloadClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCloudDownload",declaration:{name:"IconCloudDownload",module:"src/generated/react/icons/icon-cloud-download/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-cloud-upload/index.ts",declarations:[{kind:"function",name:"IconCloudUpload",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCloudUploadClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCloudUpload",declaration:{name:"IconCloudUpload",module:"src/generated/react/icons/icon-cloud-upload/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-cloudy-sun/index.ts",declarations:[{kind:"function",name:"IconCloudySun",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCloudySunClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCloudySun",declaration:{name:"IconCloudySun",module:"src/generated/react/icons/icon-cloudy-sun/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-compass-round/index.ts",declarations:[{kind:"function",name:"IconCompassRound",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCompassRoundClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCompassRound",declaration:{name:"IconCompassRound",module:"src/generated/react/icons/icon-compass-round/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-cookies/index.ts",declarations:[{kind:"function",name:"IconCookies",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCookiesClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCookies",declaration:{name:"IconCookies",module:"src/generated/react/icons/icon-cookies/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-copy/index.ts",declarations:[{kind:"function",name:"IconCopy",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCopyClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCopy",declaration:{name:"IconCopy",module:"src/generated/react/icons/icon-copy/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-credit-card/index.ts",declarations:[{kind:"function",name:"IconCreditCard",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCreditCardClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCreditCard",declaration:{name:"IconCreditCard",module:"src/generated/react/icons/icon-credit-card/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-cross-large/index.ts",declarations:[{kind:"function",name:"IconCrossLarge",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCrossLargeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCrossLarge",declaration:{name:"IconCrossLarge",module:"src/generated/react/icons/icon-cross-large/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-cross-small/index.ts",declarations:[{kind:"function",name:"IconCrossSmall",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCrossSmallClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCrossSmall",declaration:{name:"IconCrossSmall",module:"src/generated/react/icons/icon-cross-small/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-cup-hot/index.ts",declarations:[{kind:"function",name:"IconCupHot",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconCupHotClass>>
  >`}}]}],exports:[{kind:"js",name:"IconCupHot",declaration:{name:"IconCupHot",module:"src/generated/react/icons/icon-cup-hot/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-details/index.ts",declarations:[{kind:"function",name:"GdsIconDetails",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<GdsIconDetailsClass>>
  >`}}]}],exports:[{kind:"js",name:"GdsIconDetails",declaration:{name:"GdsIconDetails",module:"src/generated/react/icons/icon-details/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-devices/index.ts",declarations:[{kind:"function",name:"IconDevices",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconDevicesClass>>
  >`}}]}],exports:[{kind:"js",name:"IconDevices",declaration:{name:"IconDevices",module:"src/generated/react/icons/icon-devices/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-direction/index.ts",declarations:[{kind:"function",name:"IconDirection",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconDirectionClass>>
  >`}}]}],exports:[{kind:"js",name:"IconDirection",declaration:{name:"IconDirection",module:"src/generated/react/icons/icon-direction/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-dollar/index.ts",declarations:[{kind:"function",name:"IconDollar",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconDollarClass>>
  >`}}]}],exports:[{kind:"js",name:"IconDollar",declaration:{name:"IconDollar",module:"src/generated/react/icons/icon-dollar/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-dot-grid-one-horizontal/index.ts",declarations:[{kind:"function",name:"IconDotGridOneHorizontal",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconDotGridOneHorizontalClass>>
  >`}}]}],exports:[{kind:"js",name:"IconDotGridOneHorizontal",declaration:{name:"IconDotGridOneHorizontal",module:"src/generated/react/icons/icon-dot-grid-one-horizontal/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-dot-grid-one-vertical/index.ts",declarations:[{kind:"function",name:"IconDotGridOneVertical",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconDotGridOneVerticalClass>>
  >`}}]}],exports:[{kind:"js",name:"IconDotGridOneVertical",declaration:{name:"IconDotGridOneVertical",module:"src/generated/react/icons/icon-dot-grid-one-vertical/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-dot-grid-three/index.ts",declarations:[{kind:"function",name:"IconDotGridThree",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconDotGridThreeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconDotGridThree",declaration:{name:"IconDotGridThree",module:"src/generated/react/icons/icon-dot-grid-three/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-dot-grid-two/index.ts",declarations:[{kind:"function",name:"IconDotGridTwo",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconDotGridTwoClass>>
  >`}}]}],exports:[{kind:"js",name:"IconDotGridTwo",declaration:{name:"IconDotGridTwo",module:"src/generated/react/icons/icon-dot-grid-two/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-email/index.ts",declarations:[{kind:"function",name:"IconEmail",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconEmailClass>>
  >`}}]}],exports:[{kind:"js",name:"IconEmail",declaration:{name:"IconEmail",module:"src/generated/react/icons/icon-email/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-euro/index.ts",declarations:[{kind:"function",name:"IconEuro",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconEuroClass>>
  >`}}]}],exports:[{kind:"js",name:"IconEuro",declaration:{name:"IconEuro",module:"src/generated/react/icons/icon-euro/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-eye-open/index.ts",declarations:[{kind:"function",name:"IconEyeOpen",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconEyeOpenClass>>
  >`}}]}],exports:[{kind:"js",name:"IconEyeOpen",declaration:{name:"IconEyeOpen",module:"src/generated/react/icons/icon-eye-open/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-eye-slash/index.ts",declarations:[{kind:"function",name:"IconEyeSlash",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconEyeSlashClass>>
  >`}}]}],exports:[{kind:"js",name:"IconEyeSlash",declaration:{name:"IconEyeSlash",module:"src/generated/react/icons/icon-eye-slash/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-fashion/index.ts",declarations:[{kind:"function",name:"IconFashion",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFashionClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFashion",declaration:{name:"IconFashion",module:"src/generated/react/icons/icon-fashion/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-fast-forward/index.ts",declarations:[{kind:"function",name:"IconFastForward",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFastForwardClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFastForward",declaration:{name:"IconFastForward",module:"src/generated/react/icons/icon-fast-forward/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-file-bend/index.ts",declarations:[{kind:"function",name:"IconFileBend",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFileBendClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFileBend",declaration:{name:"IconFileBend",module:"src/generated/react/icons/icon-file-bend/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-file-chart/index.ts",declarations:[{kind:"function",name:"IconFileChart",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFileChartClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFileChart",declaration:{name:"IconFileChart",module:"src/generated/react/icons/icon-file-chart/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-file-text/index.ts",declarations:[{kind:"function",name:"IconFileText",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFileTextClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFileText",declaration:{name:"IconFileText",module:"src/generated/react/icons/icon-file-text/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-files/index.ts",declarations:[{kind:"function",name:"IconFiles",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFilesClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFiles",declaration:{name:"IconFiles",module:"src/generated/react/icons/icon-files/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-filter/index.ts",declarations:[{kind:"function",name:"IconFilter",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFilterClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFilter",declaration:{name:"IconFilter",module:"src/generated/react/icons/icon-filter/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-flag/index.ts",declarations:[{kind:"function",name:"IconFlag",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFlagClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFlag",declaration:{name:"IconFlag",module:"src/generated/react/icons/icon-flag/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-floppy-disk/index.ts",declarations:[{kind:"function",name:"IconFloppyDisk",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFloppyDiskClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFloppyDisk",declaration:{name:"IconFloppyDisk",module:"src/generated/react/icons/icon-floppy-disk/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-focus/index.ts",declarations:[{kind:"function",name:"IconFocus",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFocusClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFocus",declaration:{name:"IconFocus",module:"src/generated/react/icons/icon-focus/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-focus-square/index.ts",declarations:[{kind:"function",name:"IconFocusSquare",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFocusSquareClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFocusSquare",declaration:{name:"IconFocusSquare",module:"src/generated/react/icons/icon-focus-square/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-folder/index.ts",declarations:[{kind:"function",name:"IconFolder",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFolderClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFolder",declaration:{name:"IconFolder",module:"src/generated/react/icons/icon-folder/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-folder-add-right/index.ts",declarations:[{kind:"function",name:"IconFolderAddRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFolderAddRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFolderAddRight",declaration:{name:"IconFolderAddRight",module:"src/generated/react/icons/icon-folder-add-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-folder-paper/index.ts",declarations:[{kind:"function",name:"IconFolderPaper",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFolderPaperClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFolderPaper",declaration:{name:"IconFolderPaper",module:"src/generated/react/icons/icon-folder-paper/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-folder-upload/index.ts",declarations:[{kind:"function",name:"IconFolderUpload",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFolderUploadClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFolderUpload",declaration:{name:"IconFolderUpload",module:"src/generated/react/icons/icon-folder-upload/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-fullscreen/index.ts",declarations:[{kind:"function",name:"IconFullscreen",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconFullscreenClass>>
  >`}}]}],exports:[{kind:"js",name:"IconFullscreen",declaration:{name:"IconFullscreen",module:"src/generated/react/icons/icon-fullscreen/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-globus/index.ts",declarations:[{kind:"function",name:"IconGlobus",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconGlobusClass>>
  >`}}]}],exports:[{kind:"js",name:"IconGlobus",declaration:{name:"IconGlobus",module:"src/generated/react/icons/icon-globus/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-graduate-cap/index.ts",declarations:[{kind:"function",name:"IconGraduateCap",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconGraduateCapClass>>
  >`}}]}],exports:[{kind:"js",name:"IconGraduateCap",declaration:{name:"IconGraduateCap",module:"src/generated/react/icons/icon-graduate-cap/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-green-power/index.ts",declarations:[{kind:"function",name:"IconGreenPower",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconGreenPowerClass>>
  >`}}]}],exports:[{kind:"js",name:"IconGreenPower",declaration:{name:"IconGreenPower",module:"src/generated/react/icons/icon-green-power/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-group/index.ts",declarations:[{kind:"function",name:"IconGroup",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconGroupClass>>
  >`}}]}],exports:[{kind:"js",name:"IconGroup",declaration:{name:"IconGroup",module:"src/generated/react/icons/icon-group/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-growth/index.ts",declarations:[{kind:"function",name:"IconGrowth",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconGrowthClass>>
  >`}}]}],exports:[{kind:"js",name:"IconGrowth",declaration:{name:"IconGrowth",module:"src/generated/react/icons/icon-growth/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-headphones/index.ts",declarations:[{kind:"function",name:"IconHeadphones",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconHeadphonesClass>>
  >`}}]}],exports:[{kind:"js",name:"IconHeadphones",declaration:{name:"IconHeadphones",module:"src/generated/react/icons/icon-headphones/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-heart/index.ts",declarations:[{kind:"function",name:"IconHeart",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconHeartClass>>
  >`}}]}],exports:[{kind:"js",name:"IconHeart",declaration:{name:"IconHeart",module:"src/generated/react/icons/icon-heart/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-heart-beat/index.ts",declarations:[{kind:"function",name:"IconHeartBeat",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconHeartBeatClass>>
  >`}}]}],exports:[{kind:"js",name:"IconHeartBeat",declaration:{name:"IconHeartBeat",module:"src/generated/react/icons/icon-heart-beat/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-history/index.ts",declarations:[{kind:"function",name:"IconHistory",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconHistoryClass>>
  >`}}]}],exports:[{kind:"js",name:"IconHistory",declaration:{name:"IconHistory",module:"src/generated/react/icons/icon-history/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-home-energy-one/index.ts",declarations:[{kind:"function",name:"IconHomeEnergyOne",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconHomeEnergyOneClass>>
  >`}}]}],exports:[{kind:"js",name:"IconHomeEnergyOne",declaration:{name:"IconHomeEnergyOne",module:"src/generated/react/icons/icon-home-energy-one/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-home-energy-two/index.ts",declarations:[{kind:"function",name:"IconHomeEnergyTwo",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconHomeEnergyTwoClass>>
  >`}}]}],exports:[{kind:"js",name:"IconHomeEnergyTwo",declaration:{name:"IconHomeEnergyTwo",module:"src/generated/react/icons/icon-home-energy-two/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-home-open/index.ts",declarations:[{kind:"function",name:"IconHomeOpen",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconHomeOpenClass>>
  >`}}]}],exports:[{kind:"js",name:"IconHomeOpen",declaration:{name:"IconHomeOpen",module:"src/generated/react/icons/icon-home-open/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-home-roof/index.ts",declarations:[{kind:"function",name:"IconHomeRoof",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconHomeRoofClass>>
  >`}}]}],exports:[{kind:"js",name:"IconHomeRoof",declaration:{name:"IconHomeRoof",module:"src/generated/react/icons/icon-home-roof/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-horizontal-alignment-bottom/index.ts",declarations:[{kind:"function",name:"IconHorizontalAlignmentBottom",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconHorizontalAlignmentBottomClass>>
  >`}}]}],exports:[{kind:"js",name:"IconHorizontalAlignmentBottom",declaration:{name:"IconHorizontalAlignmentBottom",module:"src/generated/react/icons/icon-horizontal-alignment-bottom/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-images/index.ts",declarations:[{kind:"function",name:"IconImages",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconImagesClass>>
  >`}}]}],exports:[{kind:"js",name:"IconImages",declaration:{name:"IconImages",module:"src/generated/react/icons/icon-images/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-industry/index.ts",declarations:[{kind:"function",name:"IconIndustry",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconIndustryClass>>
  >`}}]}],exports:[{kind:"js",name:"IconIndustry",declaration:{name:"IconIndustry",module:"src/generated/react/icons/icon-industry/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-invite/index.ts",declarations:[{kind:"function",name:"IconInvite",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconInviteClass>>
  >`}}]}],exports:[{kind:"js",name:"IconInvite",declaration:{name:"IconInvite",module:"src/generated/react/icons/icon-invite/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-knife-spoon/index.ts",declarations:[{kind:"function",name:"IconKnifeSpoon",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconKnifeSpoonClass>>
  >`}}]}],exports:[{kind:"js",name:"IconKnifeSpoon",declaration:{name:"IconKnifeSpoon",module:"src/generated/react/icons/icon-knife-spoon/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-lab/index.ts",declarations:[{kind:"function",name:"IconLab",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLabClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLab",declaration:{name:"IconLab",module:"src/generated/react/icons/icon-lab/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-law/index.ts",declarations:[{kind:"function",name:"IconLaw",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLawClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLaw",declaration:{name:"IconLaw",module:"src/generated/react/icons/icon-law/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-leisure/index.ts",declarations:[{kind:"function",name:"IconLeisure",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLeisureClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLeisure",declaration:{name:"IconLeisure",module:"src/generated/react/icons/icon-leisure/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-light-bulb/index.ts",declarations:[{kind:"function",name:"IconLightBulb",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLightBulbClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLightBulb",declaration:{name:"IconLightBulb",module:"src/generated/react/icons/icon-light-bulb/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-light-bulb-simple/index.ts",declarations:[{kind:"function",name:"IconLightBulbSimple",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLightBulbSimpleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLightBulbSimple",declaration:{name:"IconLightBulbSimple",module:"src/generated/react/icons/icon-light-bulb-simple/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-lightning/index.ts",declarations:[{kind:"function",name:"IconLightning",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLightningClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLightning",declaration:{name:"IconLightning",module:"src/generated/react/icons/icon-lightning/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-line-chart-four/index.ts",declarations:[{kind:"function",name:"IconLineChartFour",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLineChartFourClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLineChartFour",declaration:{name:"IconLineChartFour",module:"src/generated/react/icons/icon-line-chart-four/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-line-chart-one/index.ts",declarations:[{kind:"function",name:"IconLineChartOne",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLineChartOneClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLineChartOne",declaration:{name:"IconLineChartOne",module:"src/generated/react/icons/icon-line-chart-one/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-line-chart-three/index.ts",declarations:[{kind:"function",name:"IconLineChartThree",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLineChartThreeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLineChartThree",declaration:{name:"IconLineChartThree",module:"src/generated/react/icons/icon-line-chart-three/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-line-chart-two/index.ts",declarations:[{kind:"function",name:"IconLineChartTwo",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLineChartTwoClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLineChartTwo",declaration:{name:"IconLineChartTwo",module:"src/generated/react/icons/icon-line-chart-two/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-lock/index.ts",declarations:[{kind:"function",name:"IconLock",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconLockClass>>
  >`}}]}],exports:[{kind:"js",name:"IconLock",declaration:{name:"IconLock",module:"src/generated/react/icons/icon-lock/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-macbook-air/index.ts",declarations:[{kind:"function",name:"IconMacbookAir",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMacbookAirClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMacbookAir",declaration:{name:"IconMacbookAir",module:"src/generated/react/icons/icon-macbook-air/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-magnifying-glass/index.ts",declarations:[{kind:"function",name:"IconMagnifyingGlass",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMagnifyingGlassClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMagnifyingGlass",declaration:{name:"IconMagnifyingGlass",module:"src/generated/react/icons/icon-magnifying-glass/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-maintenance/index.ts",declarations:[{kind:"function",name:"IconMaintenance",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMaintenanceClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMaintenance",declaration:{name:"IconMaintenance",module:"src/generated/react/icons/icon-maintenance/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-map-pin/index.ts",declarations:[{kind:"function",name:"IconMapPin",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMapPinClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMapPin",declaration:{name:"IconMapPin",module:"src/generated/react/icons/icon-map-pin/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-megaphone/index.ts",declarations:[{kind:"function",name:"IconMegaphone",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMegaphoneClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMegaphone",declaration:{name:"IconMegaphone",module:"src/generated/react/icons/icon-megaphone/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-menu-sidebar/index.ts",declarations:[{kind:"function",name:"IconMenuSidebar",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMenuSidebarClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMenuSidebar",declaration:{name:"IconMenuSidebar",module:"src/generated/react/icons/icon-menu-sidebar/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-minus-large/index.ts",declarations:[{kind:"function",name:"IconMinusLarge",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMinusLargeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMinusLarge",declaration:{name:"IconMinusLarge",module:"src/generated/react/icons/icon-minus-large/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-minus-small/index.ts",declarations:[{kind:"function",name:"IconMinusSmall",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMinusSmallClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMinusSmall",declaration:{name:"IconMinusSmall",module:"src/generated/react/icons/icon-minus-small/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-money-hand/index.ts",declarations:[{kind:"function",name:"IconMoneyHand",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMoneyHandClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMoneyHand",declaration:{name:"IconMoneyHand",module:"src/generated/react/icons/icon-money-hand/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-moneybag/index.ts",declarations:[{kind:"function",name:"IconMoneybag",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMoneybagClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMoneybag",declaration:{name:"IconMoneybag",module:"src/generated/react/icons/icon-moneybag/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-moon/index.ts",declarations:[{kind:"function",name:"IconMoon",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMoonClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMoon",declaration:{name:"IconMoon",module:"src/generated/react/icons/icon-moon/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-mute/index.ts",declarations:[{kind:"function",name:"IconMute",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconMuteClass>>
  >`}}]}],exports:[{kind:"js",name:"IconMute",declaration:{name:"IconMute",module:"src/generated/react/icons/icon-mute/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-office/index.ts",declarations:[{kind:"function",name:"IconOffice",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconOfficeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconOffice",declaration:{name:"IconOffice",module:"src/generated/react/icons/icon-office/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-other/index.ts",declarations:[{kind:"function",name:"IconOther",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconOtherClass>>
  >`}}]}],exports:[{kind:"js",name:"IconOther",declaration:{name:"IconOther",module:"src/generated/react/icons/icon-other/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-page-add/index.ts",declarations:[{kind:"function",name:"IconPageAdd",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPageAddClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPageAdd",declaration:{name:"IconPageAdd",module:"src/generated/react/icons/icon-page-add/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-page-text/index.ts",declarations:[{kind:"function",name:"IconPageText",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPageTextClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPageText",declaration:{name:"IconPageText",module:"src/generated/react/icons/icon-page-text/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-paperclip/index.ts",declarations:[{kind:"function",name:"IconPaperclip",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPaperclipClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPaperclip",declaration:{name:"IconPaperclip",module:"src/generated/react/icons/icon-paperclip/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pause/index.ts",declarations:[{kind:"function",name:"IconPause",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPauseClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPause",declaration:{name:"IconPause",module:"src/generated/react/icons/icon-pause/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pencel-line/index.ts",declarations:[{kind:"function",name:"IconPencelLine",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPencelLineClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPencelLine",declaration:{name:"IconPencelLine",module:"src/generated/react/icons/icon-pencel-line/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pencil-sign/index.ts",declarations:[{kind:"function",name:"IconPencilSign",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPencilSignClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPencilSign",declaration:{name:"IconPencilSign",module:"src/generated/react/icons/icon-pencil-sign/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pencil-sparkle/index.ts",declarations:[{kind:"function",name:"IconPencilSparkle",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPencilSparkleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPencilSparkle",declaration:{name:"IconPencilSparkle",module:"src/generated/react/icons/icon-pencil-sparkle/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pencil-wave/index.ts",declarations:[{kind:"function",name:"IconPencilWave",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPencilWaveClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPencilWave",declaration:{name:"IconPencilWave",module:"src/generated/react/icons/icon-pencil-wave/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pension/index.ts",declarations:[{kind:"function",name:"IconPension",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPensionClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPension",declaration:{name:"IconPension",module:"src/generated/react/icons/icon-pension/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-people/index.ts",declarations:[{kind:"function",name:"IconPeople",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPeopleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPeople",declaration:{name:"IconPeople",module:"src/generated/react/icons/icon-people/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-people-a11y/index.ts",declarations:[{kind:"function",name:"IconPeopleA11y",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPeopleA11yClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPeopleA11y",declaration:{name:"IconPeopleA11y",module:"src/generated/react/icons/icon-people-a11y/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-people-add/index.ts",declarations:[{kind:"function",name:"IconPeopleAdd",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPeopleAddClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPeopleAdd",declaration:{name:"IconPeopleAdd",module:"src/generated/react/icons/icon-people-add/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-people-added/index.ts",declarations:[{kind:"function",name:"IconPeopleAdded",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPeopleAddedClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPeopleAdded",declaration:{name:"IconPeopleAdded",module:"src/generated/react/icons/icon-people-added/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-people-circle/index.ts",declarations:[{kind:"function",name:"IconPeopleCircle",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPeopleCircleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPeopleCircle",declaration:{name:"IconPeopleCircle",module:"src/generated/react/icons/icon-people-circle/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-people-copy/index.ts",declarations:[{kind:"function",name:"IconPeopleCopy",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPeopleCopyClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPeopleCopy",declaration:{name:"IconPeopleCopy",module:"src/generated/react/icons/icon-people-copy/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-people-profile/index.ts",declarations:[{kind:"function",name:"IconPeopleProfile",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPeopleProfileClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPeopleProfile",declaration:{name:"IconPeopleProfile",module:"src/generated/react/icons/icon-people-profile/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-people-remove/index.ts",declarations:[{kind:"function",name:"IconPeopleRemove",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPeopleRemoveClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPeopleRemove",declaration:{name:"IconPeopleRemove",module:"src/generated/react/icons/icon-people-remove/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-percent/index.ts",declarations:[{kind:"function",name:"IconPercent",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPercentClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPercent",declaration:{name:"IconPercent",module:"src/generated/react/icons/icon-percent/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-phone/index.ts",declarations:[{kind:"function",name:"IconPhone",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPhoneClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPhone",declaration:{name:"IconPhone",module:"src/generated/react/icons/icon-phone/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-phone-dynamic-island/index.ts",declarations:[{kind:"function",name:"IconPhoneDynamicIsland",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPhoneDynamicIslandClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPhoneDynamicIsland",declaration:{name:"IconPhoneDynamicIsland",module:"src/generated/react/icons/icon-phone-dynamic-island/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pie-chart/index.ts",declarations:[{kind:"function",name:"IconPieChart",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPieChartClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPieChart",declaration:{name:"IconPieChart",module:"src/generated/react/icons/icon-pie-chart/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-piggy-bank/index.ts",declarations:[{kind:"function",name:"IconPiggyBank",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPiggyBankClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPiggyBank",declaration:{name:"IconPiggyBank",module:"src/generated/react/icons/icon-piggy-bank/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pin/index.ts",declarations:[{kind:"function",name:"IconPin",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPinClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPin",declaration:{name:"IconPin",module:"src/generated/react/icons/icon-pin/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pinch/index.ts",declarations:[{kind:"function",name:"IconPinch",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPinchClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPinch",declaration:{name:"IconPinch",module:"src/generated/react/icons/icon-pinch/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-play/index.ts",declarations:[{kind:"function",name:"IconPlay",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPlayClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPlay",declaration:{name:"IconPlay",module:"src/generated/react/icons/icon-play/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-play-circle/index.ts",declarations:[{kind:"function",name:"IconPlayCircle",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPlayCircleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPlayCircle",declaration:{name:"IconPlayCircle",module:"src/generated/react/icons/icon-play-circle/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-plus-large/index.ts",declarations:[{kind:"function",name:"IconPlusLarge",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPlusLargeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPlusLarge",declaration:{name:"IconPlusLarge",module:"src/generated/react/icons/icon-plus-large/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-plus-small/index.ts",declarations:[{kind:"function",name:"IconPlusSmall",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPlusSmallClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPlusSmall",declaration:{name:"IconPlusSmall",module:"src/generated/react/icons/icon-plus-small/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-poop/index.ts",declarations:[{kind:"function",name:"IconPoop",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPoopClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPoop",declaration:{name:"IconPoop",module:"src/generated/react/icons/icon-poop/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-pound/index.ts",declarations:[{kind:"function",name:"IconPound",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPoundClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPound",declaration:{name:"IconPound",module:"src/generated/react/icons/icon-pound/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-power-plant/index.ts",declarations:[{kind:"function",name:"IconPowerPlant",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPowerPlantClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPowerPlant",declaration:{name:"IconPowerPlant",module:"src/generated/react/icons/icon-power-plant/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-printer/index.ts",declarations:[{kind:"function",name:"IconPrinter",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPrinterClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPrinter",declaration:{name:"IconPrinter",module:"src/generated/react/icons/icon-printer/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-push/index.ts",declarations:[{kind:"function",name:"IconPush",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconPushClass>>
  >`}}]}],exports:[{kind:"js",name:"IconPush",declaration:{name:"IconPush",module:"src/generated/react/icons/icon-push/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-qr-code/index.ts",declarations:[{kind:"function",name:"IconQrCode",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconQrCodeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconQrCode",declaration:{name:"IconQrCode",module:"src/generated/react/icons/icon-qr-code/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-rainy/index.ts",declarations:[{kind:"function",name:"IconRainy",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconRainyClass>>
  >`}}]}],exports:[{kind:"js",name:"IconRainy",declaration:{name:"IconRainy",module:"src/generated/react/icons/icon-rainy/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-raising-hand/index.ts",declarations:[{kind:"function",name:"IconRaisingHand",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconRaisingHandClass>>
  >`}}]}],exports:[{kind:"js",name:"IconRaisingHand",declaration:{name:"IconRaisingHand",module:"src/generated/react/icons/icon-raising-hand/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-reading-list/index.ts",declarations:[{kind:"function",name:"IconReadingList",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconReadingListClass>>
  >`}}]}],exports:[{kind:"js",name:"IconReadingList",declaration:{name:"IconReadingList",module:"src/generated/react/icons/icon-reading-list/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-receipt-bill/index.ts",declarations:[{kind:"function",name:"IconReceiptBill",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconReceiptBillClass>>
  >`}}]}],exports:[{kind:"js",name:"IconReceiptBill",declaration:{name:"IconReceiptBill",module:"src/generated/react/icons/icon-receipt-bill/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-receiption-bell/index.ts",declarations:[{kind:"function",name:"IconReceiptionBell",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconReceiptionBellClass>>
  >`}}]}],exports:[{kind:"js",name:"IconReceiptionBell",declaration:{name:"IconReceiptionBell",module:"src/generated/react/icons/icon-receiption-bell/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-refund/index.ts",declarations:[{kind:"function",name:"IconRefund",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconRefundClass>>
  >`}}]}],exports:[{kind:"js",name:"IconRefund",declaration:{name:"IconRefund",module:"src/generated/react/icons/icon-refund/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-robot/index.ts",declarations:[{kind:"function",name:"IconRobot",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconRobotClass>>
  >`}}]}],exports:[{kind:"js",name:"IconRobot",declaration:{name:"IconRobot",module:"src/generated/react/icons/icon-robot/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-rocket/index.ts",declarations:[{kind:"function",name:"IconRocket",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconRocketClass>>
  >`}}]}],exports:[{kind:"js",name:"IconRocket",declaration:{name:"IconRocket",module:"src/generated/react/icons/icon-rocket/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-safari/index.ts",declarations:[{kind:"function",name:"IconSafari",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSafariClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSafari",declaration:{name:"IconSafari",module:"src/generated/react/icons/icon-safari/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-school/index.ts",declarations:[{kind:"function",name:"IconSchool",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSchoolClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSchool",declaration:{name:"IconSchool",module:"src/generated/react/icons/icon-school/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-scissors/index.ts",declarations:[{kind:"function",name:"IconScissors",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconScissorsClass>>
  >`}}]}],exports:[{kind:"js",name:"IconScissors",declaration:{name:"IconScissors",module:"src/generated/react/icons/icon-scissors/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-search-menu/index.ts",declarations:[{kind:"function",name:"IconSearchMenu",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSearchMenuClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSearchMenu",declaration:{name:"IconSearchMenu",module:"src/generated/react/icons/icon-search-menu/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-seb/index.ts",declarations:[{kind:"function",name:"IconSeb",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSebClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSeb",declaration:{name:"IconSeb",module:"src/generated/react/icons/icon-seb/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-settings-gear/index.ts",declarations:[{kind:"function",name:"IconSettingsGear",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSettingsGearClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSettingsGear",declaration:{name:"IconSettingsGear",module:"src/generated/react/icons/icon-settings-gear/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-settings-slider-hor/index.ts",declarations:[{kind:"function",name:"IconSettingsSliderHor",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSettingsSliderHorClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSettingsSliderHor",declaration:{name:"IconSettingsSliderHor",module:"src/generated/react/icons/icon-settings-slider-hor/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-settings-slider-three/index.ts",declarations:[{kind:"function",name:"IconSettingsSliderThree",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSettingsSliderThreeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSettingsSliderThree",declaration:{name:"IconSettingsSliderThree",module:"src/generated/react/icons/icon-settings-slider-three/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-settings-slider-ver/index.ts",declarations:[{kind:"function",name:"IconSettingsSliderVer",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSettingsSliderVerClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSettingsSliderVer",declaration:{name:"IconSettingsSliderVer",module:"src/generated/react/icons/icon-settings-slider-ver/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-share/index.ts",declarations:[{kind:"function",name:"IconShare",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconShareClass>>
  >`}}]}],exports:[{kind:"js",name:"IconShare",declaration:{name:"IconShare",module:"src/generated/react/icons/icon-share/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-shopping-bag/index.ts",declarations:[{kind:"function",name:"IconShoppingBag",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconShoppingBagClass>>
  >`}}]}],exports:[{kind:"js",name:"IconShoppingBag",declaration:{name:"IconShoppingBag",module:"src/generated/react/icons/icon-shopping-bag/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-smartwatch/index.ts",declarations:[{kind:"function",name:"IconSmartwatch",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSmartwatchClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSmartwatch",declaration:{name:"IconSmartwatch",module:"src/generated/react/icons/icon-smartwatch/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-solar/index.ts",declarations:[{kind:"function",name:"IconSolar",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSolarClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSolar",declaration:{name:"IconSolar",module:"src/generated/react/icons/icon-solar/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-solar-panel/index.ts",declarations:[{kind:"function",name:"IconSolarPanel",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSolarPanelClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSolarPanel",declaration:{name:"IconSolarPanel",module:"src/generated/react/icons/icon-solar-panel/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-sort/index.ts",declarations:[{kind:"function",name:"IconSort",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSortClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSort",declaration:{name:"IconSort",module:"src/generated/react/icons/icon-sort/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-square-arrow-top-right/index.ts",declarations:[{kind:"function",name:"IconSquareArrowTopRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSquareArrowTopRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSquareArrowTopRight",declaration:{name:"IconSquareArrowTopRight",module:"src/generated/react/icons/icon-square-arrow-top-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-square-behind-square/index.ts",declarations:[{kind:"function",name:"IconSquareBehindSquare",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSquareBehindSquareClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSquareBehindSquare",declaration:{name:"IconSquareBehindSquare",module:"src/generated/react/icons/icon-square-behind-square/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-square-check/index.ts",declarations:[{kind:"function",name:"IconSquareCheck",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSquareCheckClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSquareCheck",declaration:{name:"IconSquareCheck",module:"src/generated/react/icons/icon-square-check/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-square-grid-circle/index.ts",declarations:[{kind:"function",name:"IconSquareGridCircle",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSquareGridCircleClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSquareGridCircle",declaration:{name:"IconSquareGridCircle",module:"src/generated/react/icons/icon-square-grid-circle/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-square-info/index.ts",declarations:[{kind:"function",name:"IconSquareInfo",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSquareInfoClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSquareInfo",declaration:{name:"IconSquareInfo",module:"src/generated/react/icons/icon-square-info/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-square-minus/index.ts",declarations:[{kind:"function",name:"IconSquareMinus",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSquareMinusClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSquareMinus",declaration:{name:"IconSquareMinus",module:"src/generated/react/icons/icon-square-minus/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-square-placeholder/index.ts",declarations:[{kind:"function",name:"IconSquarePlaceholder",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSquarePlaceholderClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSquarePlaceholder",declaration:{name:"IconSquarePlaceholder",module:"src/generated/react/icons/icon-square-placeholder/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-square-plus/index.ts",declarations:[{kind:"function",name:"IconSquarePlus",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSquarePlusClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSquarePlus",declaration:{name:"IconSquarePlus",module:"src/generated/react/icons/icon-square-plus/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-square-x/index.ts",declarations:[{kind:"function",name:"IconSquareX",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSquareXClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSquareX",declaration:{name:"IconSquareX",module:"src/generated/react/icons/icon-square-x/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-star/index.ts",declarations:[{kind:"function",name:"IconStar",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconStarClass>>
  >`}}]}],exports:[{kind:"js",name:"IconStar",declaration:{name:"IconStar",module:"src/generated/react/icons/icon-star/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-store/index.ts",declarations:[{kind:"function",name:"IconStore",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconStoreClass>>
  >`}}]}],exports:[{kind:"js",name:"IconStore",declaration:{name:"IconStore",module:"src/generated/react/icons/icon-store/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-suitcase-work/index.ts",declarations:[{kind:"function",name:"IconSuitcaseWork",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSuitcaseWorkClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSuitcaseWork",declaration:{name:"IconSuitcaseWork",module:"src/generated/react/icons/icon-suitcase-work/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-sun/index.ts",declarations:[{kind:"function",name:"IconSun",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSunClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSun",declaration:{name:"IconSun",module:"src/generated/react/icons/icon-sun/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-sunset-arrow-down/index.ts",declarations:[{kind:"function",name:"IconSunsetArrowDown",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconSunsetArrowDownClass>>
  >`}}]}],exports:[{kind:"js",name:"IconSunsetArrowDown",declaration:{name:"IconSunsetArrowDown",module:"src/generated/react/icons/icon-sunset-arrow-down/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-tag/index.ts",declarations:[{kind:"function",name:"IconTag",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTagClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTag",declaration:{name:"IconTag",module:"src/generated/react/icons/icon-tag/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-television/index.ts",declarations:[{kind:"function",name:"IconTelevision",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTelevisionClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTelevision",declaration:{name:"IconTelevision",module:"src/generated/react/icons/icon-television/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-tennis/index.ts",declarations:[{kind:"function",name:"IconTennis",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTennisClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTennis",declaration:{name:"IconTennis",module:"src/generated/react/icons/icon-tennis/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-text-edit/index.ts",declarations:[{kind:"function",name:"IconTextEdit",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTextEditClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTextEdit",declaration:{name:"IconTextEdit",module:"src/generated/react/icons/icon-text-edit/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-thermostat/index.ts",declarations:[{kind:"function",name:"IconThermostat",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconThermostatClass>>
  >`}}]}],exports:[{kind:"js",name:"IconThermostat",declaration:{name:"IconThermostat",module:"src/generated/react/icons/icon-thermostat/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-thumbs-down/index.ts",declarations:[{kind:"function",name:"IconThumbsDown",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconThumbsDownClass>>
  >`}}]}],exports:[{kind:"js",name:"IconThumbsDown",declaration:{name:"IconThumbsDown",module:"src/generated/react/icons/icon-thumbs-down/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-thumbs-up/index.ts",declarations:[{kind:"function",name:"IconThumbsUp",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconThumbsUpClass>>
  >`}}]}],exports:[{kind:"js",name:"IconThumbsUp",declaration:{name:"IconThumbsUp",module:"src/generated/react/icons/icon-thumbs-up/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-todos/index.ts",declarations:[{kind:"function",name:"IconTodos",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTodosClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTodos",declaration:{name:"IconTodos",module:"src/generated/react/icons/icon-todos/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-trading-view-candles/index.ts",declarations:[{kind:"function",name:"IconTradingViewCandles",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTradingViewCandlesClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTradingViewCandles",declaration:{name:"IconTradingViewCandles",module:"src/generated/react/icons/icon-trading-view-candles/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-trash-can/index.ts",declarations:[{kind:"function",name:"IconTrashCan",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTrashCanClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTrashCan",declaration:{name:"IconTrashCan",module:"src/generated/react/icons/icon-trash-can/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-tree/index.ts",declarations:[{kind:"function",name:"IconTree",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTreeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTree",declaration:{name:"IconTree",module:"src/generated/react/icons/icon-tree/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-trending-four/index.ts",declarations:[{kind:"function",name:"IconTrendingFour",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTrendingFourClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTrendingFour",declaration:{name:"IconTrendingFour",module:"src/generated/react/icons/icon-trending-four/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-trending-one/index.ts",declarations:[{kind:"function",name:"IconTrendingOne",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTrendingOneClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTrendingOne",declaration:{name:"IconTrendingOne",module:"src/generated/react/icons/icon-trending-one/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-trending-three/index.ts",declarations:[{kind:"function",name:"IconTrendingThree",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTrendingThreeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTrendingThree",declaration:{name:"IconTrendingThree",module:"src/generated/react/icons/icon-trending-three/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-trending-two/index.ts",declarations:[{kind:"function",name:"IconTrendingTwo",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTrendingTwoClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTrendingTwo",declaration:{name:"IconTrendingTwo",module:"src/generated/react/icons/icon-trending-two/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-triangle-exclamation/index.ts",declarations:[{kind:"function",name:"IconTriangleExclamation",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTriangleExclamationClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTriangleExclamation",declaration:{name:"IconTriangleExclamation",module:"src/generated/react/icons/icon-triangle-exclamation/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-truck/index.ts",declarations:[{kind:"function",name:"IconTruck",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconTruckClass>>
  >`}}]}],exports:[{kind:"js",name:"IconTruck",declaration:{name:"IconTruck",module:"src/generated/react/icons/icon-truck/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-umbrella-security/index.ts",declarations:[{kind:"function",name:"IconUmbrellaSecurity",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconUmbrellaSecurityClass>>
  >`}}]}],exports:[{kind:"js",name:"IconUmbrellaSecurity",declaration:{name:"IconUmbrellaSecurity",module:"src/generated/react/icons/icon-umbrella-security/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-unlocked/index.ts",declarations:[{kind:"function",name:"IconUnlocked",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconUnlockedClass>>
  >`}}]}],exports:[{kind:"js",name:"IconUnlocked",declaration:{name:"IconUnlocked",module:"src/generated/react/icons/icon-unlocked/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-vertical-alignment-right/index.ts",declarations:[{kind:"function",name:"IconVerticalAlignmentRight",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconVerticalAlignmentRightClass>>
  >`}}]}],exports:[{kind:"js",name:"IconVerticalAlignmentRight",declaration:{name:"IconVerticalAlignmentRight",module:"src/generated/react/icons/icon-vertical-alignment-right/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-volume-full/index.ts",declarations:[{kind:"function",name:"IconVolumeFull",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconVolumeFullClass>>
  >`}}]}],exports:[{kind:"js",name:"IconVolumeFull",declaration:{name:"IconVolumeFull",module:"src/generated/react/icons/icon-volume-full/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-volume-half/index.ts",declarations:[{kind:"function",name:"IconVolumeHalf",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconVolumeHalfClass>>
  >`}}]}],exports:[{kind:"js",name:"IconVolumeHalf",declaration:{name:"IconVolumeHalf",module:"src/generated/react/icons/icon-volume-half/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-volume-off/index.ts",declarations:[{kind:"function",name:"IconVolumeOff",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconVolumeOffClass>>
  >`}}]}],exports:[{kind:"js",name:"IconVolumeOff",declaration:{name:"IconVolumeOff",module:"src/generated/react/icons/icon-volume-off/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-wallet/index.ts",declarations:[{kind:"function",name:"IconWallet",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconWalletClass>>
  >`}}]}],exports:[{kind:"js",name:"IconWallet",declaration:{name:"IconWallet",module:"src/generated/react/icons/icon-wallet/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-warning-sign/index.ts",declarations:[{kind:"function",name:"IconWarningSign",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconWarningSignClass>>
  >`}}]}],exports:[{kind:"js",name:"IconWarningSign",declaration:{name:"IconWarningSign",module:"src/generated/react/icons/icon-warning-sign/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-youtube/index.ts",declarations:[{kind:"function",name:"IconYoutube",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconYoutubeClass>>
  >`}}]}],exports:[{kind:"js",name:"IconYoutube",declaration:{name:"IconYoutube",module:"src/generated/react/icons/icon-youtube/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-zap/index.ts",declarations:[{kind:"function",name:"IconZap",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconZapClass>>
  >`}}]}],exports:[{kind:"js",name:"IconZap",declaration:{name:"IconZap",module:"src/generated/react/icons/icon-zap/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-zoom-in/index.ts",declarations:[{kind:"function",name:"IconZoomIn",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconZoomInClass>>
  >`}}]}],exports:[{kind:"js",name:"IconZoomIn",declaration:{name:"IconZoomIn",module:"src/generated/react/icons/icon-zoom-in/index.ts"}}]},{kind:"javascript-module",path:"src/generated/react/icons/icon-zoom-out/index.ts",declarations:[{kind:"function",name:"IconZoomOut",parameters:[{name:"props",type:{text:`React.ComponentProps<
    ReturnType<typeof getReactComponent<IconZoomOutClass>>
  >`}}]}],exports:[{kind:"js",name:"IconZoomOut",declaration:{name:"IconZoomOut",module:"src/generated/react/icons/icon-zoom-out/index.ts"}}]}],i={schemaVersion:e,readme:t,modules:n};export{i as c};
