@use '../../tokens';
@use '../../common';
@use 'sass:map';

@mixin add-feedback-element() {
  transition: 200ms ease-in-out;

  &::before {
    background: transparent;
    border-radius: 0 0 4px 4px;
    clip-path: inset(4px 0 0 0);
    content: '';
    display: block;
    height: 4px;
    position: absolute;
    transform: translate3d(0, -12px, 0);
    transition: 300ms ease-in-out;
    width: 100%;
  }
}

@mixin add-feedback($color) {
  color: $color;
  //height: auto;
  //min-height: 1rem;
  opacity: 1;

  &::before {
    background: $color;
    clip-path: inset(1px 0 0 0);
  }
}



// form info
.form-info {
  @include common.font-size('s');
  color: map-get(tokens.$grey, 3);
  display: block;
  max-width: fit-content;
  min-width: 100%;
}

label + .form-info {
  @include common.margin-bottom(3);
}

input + .form-info {
  @include add-feedback-element();
}


.was-validated input + .form-info {
  opacity: 0;
}

.was-validated input:not(.is-invalid):valid + .form-info,
.is-valid ~ .form-info {
  @include add-feedback(map.get(tokens.$intent-colors, 'success'));
}

.was-validated input:not(.is-valid):invalid + .form-info,
.is-invalid ~ .form-info {
  @include add-feedback(map.get(tokens.$intent-colors, 'danger'));
}
