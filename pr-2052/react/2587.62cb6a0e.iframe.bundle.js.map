{"version":3,"file":"2587.62cb6a0e.iframe.bundle.js","mappings":";;;;AAiCA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiCA;AAuDA;;AACA;AADA;;;AAEA;AAFA;;;AAEA;;;;;;;;;;;;;ACtFA;;;;;;;;;;ACEA;;;AAiBA;AAFA;;AACA;;AAAA;;;AACA;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACwGA;AAuDA;;AACA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3LA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqFA;AAwLA;AAAA;;AACA;;;;;;;;;;AAQA;AATA;AAAA;;;AAEA;;;;AACA;AAHA;AAAA;;AACA;;AA2DA;AADA;AAAA;AAAA;;AACA;;;AACA;;AADA;;;;AAoBA;AAHA;AAAA;AAAA;;;;;;AAKA;;;;AC1TA;;;;;;;;;;;;;;;;;AC1BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6EA;;;AAwEA;;;;AACA;AAHA;AAuHA;;AACA;;;;;;;AAKA;;AAUA;AADA;;AACA;AADA;;AAWA;AADA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClRA;;;;;AAoBA;AAJA;AAAA;;;AAEA;AAKA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4CA;;AA2DA;AADA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtNA;AAyFA;AAAA;;AACA;;;;;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;;AACA;;;;AAEA;AAHA;;AACA;;;;;;;;;;;;;;;;;AC5IA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiEA;AAqFA;AAAA;;AACA;;;;;;;;AAMA;AAPA;AAAA;AAAA;;;AAEA;;;AAAA;AAFA;AAAA;;AACA;;AAwDA;AADA;AAAA;;AACA;;AAAA;;AAAA;;AAAA;AAiBA;;AACA;AADA;AAAA;AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChNA;;AAWA;AADA;AAAA;AAAA;;;;;;AAKA;;;;;;;;;;;;;;;;;ACzCA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC8GA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAIA;AAJA;;;;;;;;;;;;;;;;;;;;;;;ACtIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;;;;;AAUA;;ACsKA;;AAAA;AAKA;AAAA;;;;;;;;;AAQA;;;;;;;;;AAAA;;;;;AAJA;AAJA;;;;;;;;;;;;;;;;AAeA;;AAdA;;AAAA;;;;;;AAIA;;;;;;;;;;;;;;;ACpJA;;;;;;;;;;;;ACdA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsDA;;;;AAiEA;AAHA;;;AAEA;;AADA","sources":["webpack://green/./dist/libs/core/src/chunks/chunk.4UQURUC6.js","webpack://green/./dist/libs/core/src/chunks/chunk.DRP7KGCT.js","webpack://green/./dist/libs/core/src/chunks/chunk.GWTK5YTL.js","webpack://green/./dist/libs/core/src/chunks/chunk.LRPK34FO.js","webpack://green/./dist/libs/core/src/chunks/chunk.2ODW7RX5.js","webpack://green/./dist/libs/core/src/chunks/chunk.Z6NDJMQT.js","webpack://green/./dist/libs/core/src/chunks/chunk.AMXTBHUT.js","webpack://green/./dist/libs/core/src/chunks/chunk.TDFVYPFL.js","webpack://green/./dist/libs/core/src/chunks/chunk.XHX7BHMI.js","webpack://green/./dist/libs/core/src/chunks/chunk.IGQEKN3R.js","webpack://green/./dist/libs/core/src/chunks/chunk.MZDD3X3K.js","webpack://green/./dist/libs/core/src/chunks/chunk.R7QBWELB.js","webpack://green/./dist/libs/core/src/chunks/chunk.K3RWCBS5.js","webpack://green/./dist/libs/core/src/chunks/chunk.YX7CN6Y2.js","webpack://green/./dist/libs/core/src/chunks/chunk.4EJ356OD.js","webpack://green/./dist/libs/core/src/chunks/chunk.WKH6M6HO.js","webpack://green/./dist/libs/core/src/chunks/chunk.AHRFCGHK.js","webpack://green/./dist/libs/core/src/chunks/chunk.QSL6EI3X.js","webpack://green/./dist/libs/core/src/chunks/chunk.KVH7IVES.js","webpack://green/./dist/libs/core/src/chunks/chunk.XH5NG3R4.js","webpack://green/./dist/libs/core/src/chunks/chunk.JYIJKDEM.js","webpack://green/./dist/libs/core/src/chunks/chunk.KAP7LDUQ.js","webpack://green/./dist/libs/core/src/chunks/chunk.7T327IC2.js","webpack://green/./dist/libs/core/src/chunks/chunk.DKDS26LS.js","webpack://green/./dist/libs/core/src/chunks/chunk.2NDDK2QF.js","webpack://green/./dist/libs/core/src/chunks/chunk.I5SR633T.js"],"sourcesContent":["import {\n  GdsListItem\n} from \"./chunk.MMPBG5MI.js\";\nimport {\n  TransitionalStyles\n} from \"./chunk.YOUAKTVG.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/grouped-list/grouped-list.component.ts\nimport { property } from \"lit/decorators.js\";\nimport { when } from \"lit/directives/when.js\";\nvar GdsGroupedList = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    this.label = \"\";\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    TransitionalStyles.instance.apply(this, \"gds-grouped-list\");\n  }\n  render() {\n    return html`${when(\n      this.label,\n      () => html`<div class=\"gds-list-heading\" aria-hidden=\"true\" id=\"label\">\n            ${this.label}\n          </div>`\n    )}\n      <div role=\"list\" aria-labelledby=\"label\">\n        <slot></slot>\n      </div>`;\n  }\n};\n__decorateClass([\n  property()\n], GdsGroupedList.prototype, \"label\", 2);\nGdsGroupedList = __decorateClass([\n  gdsCustomElement(\"gds-grouped-list\", { dependsOn: [GdsListItem] })\n], GdsGroupedList);\n\nexport {\n  GdsGroupedList\n};\n","import {\n  resizeObserver\n} from \"./chunk.VHN4JEZC.js\";\nimport {\n  GdsFilterChip\n} from \"./chunk.LRPK34FO.js\";\nimport {\n  stringArrayConverter\n} from \"./chunk.C3ECHGX7.js\";\nimport {\n  GdsFormControlElement\n} from \"./chunk.5FHEJLB5.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/filter-chips/filter-chips.component.ts\nimport { property, query, state } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\n// libs/core/src/components/filter-chips/filter-chips.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, reset, transitional-styles;\n  @layer base {\n    :host {\n      display: inline-block;\n      max-width: 100%;\n    }\n\n    .chips {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.5rem;\n    }\n\n    .collapse {\n      overflow: auto;\n      scroll-snap-type: both mandatory;\n      overscroll-behavior-x: contain;\n      flex-wrap: nowrap;\n      padding-bottom: 0.5rem;\n      scrollbar-color: rgba(0, 0, 0, 0.5) transparent;\n      scrollbar-width: thin;\n    }\n\n    ::slotted(*) {\n      scroll-snap-align: start;\n      scroll-snap-stop: always;\n    }\n  }\n`;\n\n// libs/core/src/components/filter-chips/filter-chips.component.ts\nvar _handleChipClick, _collapseThreshold, _collapsedAt, _getChipHeight, getChipHeight_fn, _handleSlotChange, handleSlotChange_fn;\nvar GdsFilterChips = class extends GdsFormControlElement {\n  constructor() {\n    super(...arguments);\n    __privateAdd(this, _getChipHeight);\n    __privateAdd(this, _handleSlotChange);\n    this.multiple = false;\n    this.label = \"\";\n    this.rowCollapse = false;\n    this._collapsed = false;\n    __privateAdd(this, _handleChipClick, (event) => {\n      const clickedChip = this.chips.find(\n        (s) => s === event.target || s.contains(event.target)\n      );\n      if (clickedChip) {\n        if (this.multiple && Array.isArray(this.value)) {\n          if (clickedChip.selected) {\n            this.value = this.value.filter(\n              (v) => v !== clickedChip.value\n            );\n          } else {\n            this.value = [...this.value, clickedChip.value];\n          }\n        } else {\n          this.value = clickedChip.value;\n        }\n        this.dispatchEvent(\n          new CustomEvent(\"change\", {\n            detail: { clickedChip, value: this.value },\n            bubbles: true,\n            composed: true\n          })\n        );\n      }\n    });\n    __privateAdd(this, _collapseThreshold, 3);\n    __privateAdd(this, _collapsedAt, 0);\n  }\n  get value() {\n    return this._internalValue;\n  }\n  set value(value) {\n    this._internalValue = value;\n  }\n  /**\n   * Returns the chips in the control\n   * @readonly\n   */\n  get chips() {\n    return this._elSlot ? this._elSlot.assignedElements() : [];\n  }\n  render() {\n    const layoutClasses = {\n      collapse: this._collapsed\n    };\n    return html`<div\n      class=\"chips ${classMap(layoutClasses)}\"\n      role=\"listbox\"\n      aria-label=${this.label}\n      aria-multiselectable=${this.multiple}\n    >\n      <slot\n        @click=${__privateGet(this, _handleChipClick)}\n        @slotchange=${__privateMethod(this, _handleSlotChange, handleSlotChange_fn)}\n        role=\"none\"\n      ></slot>\n    </div>`;\n  }\n  _getValidityAnchor() {\n    return this;\n  }\n  _handleResize() {\n    if (!this.rowCollapse)\n      return;\n    const chipHeight = __privateMethod(this, _getChipHeight, getChipHeight_fn).call(this);\n    const selfHeight = this.offsetHeight;\n    const selfWidth = this.offsetWidth;\n    if (selfHeight >= chipHeight * __privateGet(this, _collapseThreshold)) {\n      this._collapsed = true;\n      __privateSet(this, _collapsedAt, selfWidth);\n    }\n    if (selfWidth > __privateGet(this, _collapsedAt)) {\n      this._collapsed = false;\n    }\n  }\n  _updateSelectedFromValue() {\n    if (!this.value)\n      return;\n    if (this.multiple && !Array.isArray(this.value)) {\n      this.value = [this.value];\n    }\n    if (!this.multiple && Array.isArray(this.value)) {\n      this.value = this.value[0];\n    }\n    this.updateComplete.then(() => {\n      this.chips.forEach((chip) => {\n        chip.selected = this.multiple ? this.value.includes(chip.value) : this.value === chip.value;\n      });\n    });\n  }\n};\n_handleChipClick = new WeakMap();\n_collapseThreshold = new WeakMap();\n_collapsedAt = new WeakMap();\n_getChipHeight = new WeakSet();\ngetChipHeight_fn = function() {\n  var _a;\n  return ((_a = this.chips[0]) == null ? void 0 : _a.offsetHeight) || 0;\n};\n_handleSlotChange = new WeakSet();\nhandleSlotChange_fn = function() {\n  var _a;\n  const selChipValue = (_a = this.chips.find((s) => s.selected)) == null ? void 0 : _a.value;\n  if (selChipValue) {\n    this.value = selChipValue;\n  }\n};\nGdsFilterChips.styles = [styles];\n__decorateClass([\n  property({ converter: stringArrayConverter })\n], GdsFilterChips.prototype, \"value\", 1);\n__decorateClass([\n  property({ type: Boolean })\n], GdsFilterChips.prototype, \"multiple\", 2);\n__decorateClass([\n  property()\n], GdsFilterChips.prototype, \"label\", 2);\n__decorateClass([\n  property({ type: Boolean, attribute: \"row-collapse\" })\n], GdsFilterChips.prototype, \"rowCollapse\", 2);\n__decorateClass([\n  state()\n], GdsFilterChips.prototype, \"_collapsed\", 2);\n__decorateClass([\n  query(\"slot\")\n], GdsFilterChips.prototype, \"_elSlot\", 2);\n__decorateClass([\n  resizeObserver()\n], GdsFilterChips.prototype, \"_handleResize\", 1);\n__decorateClass([\n  watch(\"value\")\n], GdsFilterChips.prototype, \"_updateSelectedFromValue\", 1);\nGdsFilterChips = __decorateClass([\n  gdsCustomElement(\"gds-filter-chips\", { dependsOn: [GdsFilterChip] })\n], GdsFilterChips);\n\nexport {\n  GdsFilterChips\n};\n","import {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/popover/backdrop.component.ts\nimport { css } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nvar GdsBackdrop = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    this.show = false;\n  }\n  render() {\n    return html``;\n  }\n};\nGdsBackdrop.styles = css`\n    :host {\n      display: none;\n      position: fixed;\n      inset: 0;\n      background-color: rgba(0, 0, 0, 0.25);\n      width: 100%;\n      height: 100%;\n    }\n\n    :host([show]) {\n      display: block;\n    }\n  `;\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsBackdrop.prototype, \"show\", 2);\nGdsBackdrop = __decorateClass([\n  gdsCustomElement(\"gds-backdrop\")\n], GdsBackdrop);\n\nexport {\n  GdsBackdrop\n};\n","import {\n  IconCheckmark\n} from \"./chunk.IKEM2YEF.js\";\nimport {\n  GdsButton\n} from \"./chunk.W45PHIFX.js\";\nimport {\n  TransitionalStyles\n} from \"./chunk.YOUAKTVG.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/filter-chips/filter-chip/filter-chip.component.ts\nimport { property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\n// libs/core/src/components/filter-chips/filter-chip/filter-chip.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, reset, transitional-styles;\n  @layer base {\n    .btn-p {\n      padding: 0 0.75rem;\n    }\n    .icon {\n      width: 1rem;\n    }\n  }\n`;\n\n// libs/core/src/components/filter-chips/filter-chip/filter-chip.component.ts\nvar GdsFilterChip = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    this.selected = false;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"none\");\n    TransitionalStyles.instance.apply(this, \"gds-filter-chip\");\n  }\n  render() {\n    const btnClasses = {\n      \"btn-p\": !this.selected\n    };\n    return html`<gds-button\n      class=\"btn\"\n      size=\"small\"\n      .rank=${this.selected ? \"primary\" : \"secondary\"}\n      variant=${this._isUsingTransitionalStyles ? \"ghost\" : \"default\"}\n      gds-role=\"option\"\n      gds-aria-selected=${this.selected}\n    >\n      <span class=${classMap(btnClasses)}><slot></slot></span>\n      <gds-icon-checkmark\n        slot=\"trail\"\n        style=\"display: ${this.selected ? \"contents\" : \"none\"}\"\n        width=\"16\"\n        height=\"16\"\n        class=\"icon\"\n      ></gds-icon-checkmark>\n    </gds-button>`;\n  }\n};\nGdsFilterChip.styles = [styles];\n__decorateClass([\n  property({ reflect: true, type: Boolean })\n], GdsFilterChip.prototype, \"selected\", 2);\n__decorateClass([\n  property()\n], GdsFilterChip.prototype, \"value\", 2);\nGdsFilterChip = __decorateClass([\n  gdsCustomElement(\"gds-filter-chip\", {\n    dependsOn: [GdsButton, IconCheckmark]\n  })\n], GdsFilterChip);\n\nexport {\n  GdsFilterChip\n};\n","import {\n  styleExpressionProperty\n} from \"./chunk.NUUST5OZ.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/signal/signal.component.ts\nimport { html } from \"lit/static-html.js\";\n\n// libs/core/src/components/signal/signal.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    display: inline-block;\n  }\n\n  [part='signal'] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    width: 6px;\n    height: 6px;\n    border-radius: var(--gds-space-max);\n    background-color: currentColor;\n    transition: all 0.4s;\n\n    &::before {\n      display: flex;\n      position: absolute;\n      content: '';\n      inset: -4px;\n      border-radius: inherit;\n      background-color: color-mix(in srgb, currentColor, transparent 80%);\n      animation: signal 3s ease-in-out infinite;\n    }\n  }\n\n  @keyframes signal {\n    0% {\n      transform: scale(2);\n      opacity: 0;\n    }\n    60% {\n      transform: scale(1);\n      opacity: 1;\n    }\n    100% {\n      transform: scale(3);\n      opacity: 0;\n    }\n  }\n`;\nvar signal_style_default = style;\n\n// libs/core/src/components/signal/signal.component.ts\nvar GdsSignal = class extends GdsElement {\n  render() {\n    return html`<div part=\"signal\"></div>`;\n  }\n};\nGdsSignal.styles = [tokens, signal_style_default];\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => `var(--gds-color-${v})`,\n    selector: '[part=\"signal\"]'\n  })\n], GdsSignal.prototype, \"color\", 2);\nGdsSignal = __decorateClass([\n  gdsCustomElement(\"gds-signal\")\n], GdsSignal);\n\nexport {\n  GdsSignal\n};\n","import {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  withLayoutChildProps,\n  withMarginProps,\n  withPositioningProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/spinner/spinner.component.ts\nimport { localized, msg } from \"@lit/localize\";\nimport { property, state } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\n// libs/core/src/components/spinner/spinner.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  /* Host configuration with core variables */\n  :host {\n    /* Size variables with indexed access using CSS custom properties */\n    --spinner-sizes: 2rem 3.75rem 6rem;\n    --spinner-size-sm: 2rem;\n    --spinner-size-md: 3.75rem;\n    --spinner-size-lg: 6rem;\n\n    --track-widths: 0.1rem 0.2rem 0.3rem;\n    --track-width-sm: 0.275rem;\n    --track-width-md: 0.375rem;\n    --track-width-lg: 0.375rem;\n\n    /* Default to light mode as fallback */\n    --spinner-track-color: var(--gds-color-l3-background-secondary);\n    --spinner-active-color: var(--gds-color-l3-content-secondary);\n    --spinner-label-color: currentColor;\n    --spinner-backdrop-color: rgba(0, 0, 0, 0.8);\n\n    --spinner-backdrop-blur: 2px;\n\n    /* Base sizing, will be overridden by size-specific variables */\n    --size: var(--spinner-size-md);\n    --track-width: var(--track-width-md);\n\n    /* Use CSS variable for color-scheme to avoid minification issues */\n    --spinner-color-scheme: light dark;\n    color-scheme: var(--spinner-color-scheme);\n\n    display: block;\n  }\n\n  /* Size-specific host settings */\n  :host([size='sm']) {\n    --size: var(--spinner-size-sm);\n    --track-width: var(--track-width-sm);\n  }\n\n  :host([size='md']),\n  :host([size='default']) {\n    --size: var(--spinner-size-md);\n    --track-width: var(--track-width-md);\n  }\n\n  :host([size='lg']) {\n    --size: var(--spinner-size-lg);\n    --track-width: var(--track-width-lg);\n  }\n\n  /* Fullscreen positioning */\n  :host([fullscreen]) {\n    position: fixed;\n    inset: 0;\n    width: 100vw;\n    height: 100vh;\n    z-index: 9999;\n  }\n\n  /* Focus styles */\n  :host(:focus-visible) {\n    outline: 2px solid var(--spinner-active-color);\n    outline-offset: 2px;\n  }\n\n  /* Spinner component */\n  .spinner {\n    border-radius: 50%;\n    border: var(--track-width, 0.375rem) solid var(--spinner-track-color);\n    border-top-color: var(--spinner-active-color);\n    height: var(--size, 3.75rem);\n    width: var(--size, 3.75rem);\n    animation: gdsSpinnerRotation 1s linear infinite;\n  }\n\n  /* Motion preference adjustments */\n  @media (prefers-reduced-motion: reduce) {\n    .spinner {\n      /* Slower rotation for reduced motion preference */\n      animation-duration: 2s;\n      /* Smaller rotation to reduce visual intensity */\n      animation-name: gdsSpinnerReducedRotation;\n    }\n\n    @keyframes gdsSpinnerReducedRotation {\n      to {\n        transform: rotate(180deg);\n      }\n    }\n  }\n\n  /* Layout components */\n  .spinner-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  .spinner-wrapper.spinner-cover {\n    position: absolute;\n    inset: 0;\n    z-index: 999;\n  }\n\n  .spinner-wrapper.spinner-fullscreen {\n    position: fixed;\n    inset: 0;\n    z-index: 9999;\n  }\n\n  .spinner-wrapper.spinner-backdrop {\n    background-color: var(--spinner-backdrop-color);\n    backdrop-filter: blur(var(--spinner-backdrop-blur));\n    --spinner-label-color: #fff;\n    --spinner-track-color: var(--gds-color-l3-content-secondary);\n    --spinner-active-color: var(--gds-color-l3-background-secondary);\n  }\n\n  /* Label styling */\n  .spinner-label {\n    margin-top: 1rem;\n    color: var(--spinner-label-color);\n    text-align: center;\n  }\n\n  /* Animation keyframes */\n  @keyframes gdsSpinnerRotation {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\n// libs/core/src/components/spinner/spinner.component.ts\nvar _getWrapperClasses, getWrapperClasses_fn, _originalStyles;\nvar GdsSpinner = class extends withMarginProps(\n  withPositioningProps(withLayoutChildProps(GdsElement))\n) {\n  constructor() {\n    super(...arguments);\n    /**\n     * Generates CSS classes for the wrapper element based on component state\n     * @private\n     */\n    __privateAdd(this, _getWrapperClasses);\n    this.label = msg(\"Loading...\");\n    this.showLabel = false;\n    this.cover = false;\n    this.fullscreen = false;\n    this.size = \"md\";\n    this._isAnimating = false;\n    /**\n     * Stores original document styles before applying fullscreen mode\n     * @private\n     */\n    __privateAdd(this, _originalStyles, {\n      overflow: \"visible\",\n      overscrollBehavior: \"auto\"\n    });\n  }\n  /**\n   * Sets up accessibility attributes and initializes the spinner\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"status\");\n    this.setAttribute(\"aria-live\", \"polite\");\n    this._isAnimating = true;\n    this.dispatchEvent(new CustomEvent(\"gds-spinner-connected\"));\n  }\n  /**\n   * Cleans up document styles if fullscreen mode was used\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this.fullscreen) {\n      this.fullscreen = false;\n      this._toggleRootStyles();\n    }\n    this._isAnimating = false;\n    super.disconnectedCallback();\n  }\n  _updateAriaLabel() {\n    this.setAttribute(\"aria-label\", this.label);\n  }\n  /**\n   * Renders the spinner component\n   */\n  render() {\n    return html`\n      <div part=\"wrapper\" class=${classMap(__privateMethod(this, _getWrapperClasses, getWrapperClasses_fn).call(this))}>\n        <span part=\"spinner\" class=\"spinner\"></span>\n        ${when(\n      this.label && this.showLabel,\n      () => html`<span part=\"label\" class=\"spinner-label\">${this.label}</span>`,\n      () => null\n    )}\n      </div>\n    `;\n  }\n  _toggleRootStyles() {\n    const { style } = document.documentElement;\n    if (this.fullscreen) {\n      __privateSet(this, _originalStyles, {\n        overflow: style.overflow,\n        overscrollBehavior: style.overscrollBehavior\n      });\n      style.overflow = \"hidden\";\n      style.overscrollBehavior = \"none\";\n    } else {\n      style.overflow = __privateGet(this, _originalStyles).overflow;\n      style.overscrollBehavior = __privateGet(this, _originalStyles).overscrollBehavior;\n    }\n  }\n};\n_getWrapperClasses = new WeakSet();\ngetWrapperClasses_fn = function() {\n  return {\n    \"spinner-wrapper\": true,\n    \"spinner-fullscreen\": this.fullscreen,\n    \"spinner-cover\": this.cover,\n    \"spinner-backdrop\": this.cover || this.fullscreen,\n    \"spinner-animating\": this._isAnimating\n  };\n};\n_originalStyles = new WeakMap();\n/** All styles are defined in the external styles file */\nGdsSpinner.styles = [tokens, styles];\n__decorateClass([\n  property({ type: String })\n], GdsSpinner.prototype, \"label\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsSpinner.prototype, \"showLabel\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsSpinner.prototype, \"cover\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsSpinner.prototype, \"fullscreen\", 2);\n__decorateClass([\n  property({ type: String, reflect: true })\n], GdsSpinner.prototype, \"size\", 2);\n__decorateClass([\n  state()\n], GdsSpinner.prototype, \"_isAnimating\", 2);\n__decorateClass([\n  watch(\"label\")\n], GdsSpinner.prototype, \"_updateAriaLabel\", 1);\n__decorateClass([\n  watch(\"fullscreen\")\n], GdsSpinner.prototype, \"_toggleRootStyles\", 1);\nGdsSpinner = __decorateClass([\n  gdsCustomElement(\"gds-spinner\"),\n  localized()\n], GdsSpinner);\n\nexport {\n  GdsSpinner\n};\n","import {\n  defaultStyles\n} from \"./chunk.2JGBCOIQ.js\";\nimport {\n  GdsDiv\n} from \"./chunk.PHLWSTVX.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.NUUST5OZ.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/text/text.component.ts\nimport { property } from \"lit/decorators.js\";\nimport { html, unsafeStatic } from \"lit/static-html.js\";\n\n// libs/core/src/components/text/text.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    display: block;\n  }\n\n  [tag] {\n    margin: 0;\n    padding: 0;\n    text-underline-offset: 0.2lh;\n  }\n`;\nvar text_style_default = style;\n\n// libs/core/src/components/text/text.component.ts\nvar GdsText = class extends GdsDiv {\n  constructor() {\n    super(...arguments);\n    this.tag = \"span\";\n  }\n  render() {\n    const TAG = unsafeStatic(encodeURI(this.tag));\n    return html`<${TAG} tag><slot></slot></${TAG}>`;\n  }\n};\nGdsText.styles = [tokens, defaultStyles, text_style_default];\n__decorateClass([\n  property({ type: String })\n], GdsText.prototype, \"tag\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: \"[tag]\",\n    styleTemplate: (_prop, values) => {\n      const size = values[0];\n      const styleSize = `font-size: var(--gds-text-size-${size});`;\n      const styleLine = `line-height: var(--gds-text-line-height-${size});`;\n      return styleSize + styleLine;\n    }\n  })\n], GdsText.prototype, \"font-size\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: \"[tag]\",\n    valueTemplate: (v) => `var(--gds-text-weight-${v})`\n  })\n], GdsText.prototype, \"font-weight\", 2);\n__decorateClass([\n  styleExpressionProperty()\n], GdsText.prototype, \"text-transform\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: \"[tag]\"\n  })\n], GdsText.prototype, \"text-decoration\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: \"[tag]\",\n    styleTemplate: (_prop, values) => {\n      return `overflow: hidden;\n      text-overflow: ellipsis;\n      display: -webkit-box;\n      -webkit-line-clamp: ${values[0]};\n      -webkit-box-orient: vertical;`;\n    }\n  })\n], GdsText.prototype, \"lines\", 2);\nGdsText = __decorateClass([\n  gdsCustomElement(\"gds-text\")\n], GdsText);\n\nexport {\n  GdsText\n};\n","import {\n  resizeObserver\n} from \"./chunk.VHN4JEZC.js\";\nimport {\n  GdsFieldBase\n} from \"./chunk.LFP624OU.js\";\nimport {\n  GdsFormControlFooter\n} from \"./chunk.NFVK7X4Q.js\";\nimport {\n  GdsFormControlHeader\n} from \"./chunk.OCDDV4IH.js\";\nimport {\n  IconCrossLarge\n} from \"./chunk.I463CBWH.js\";\nimport {\n  GdsButton,\n  forwardAttributes\n} from \"./chunk.W45PHIFX.js\";\nimport {\n  GdsFormControlElement\n} from \"./chunk.5FHEJLB5.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  withLayoutChildProps,\n  withMarginProps,\n  withSizeXProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.NUUST5OZ.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/textarea/textarea.component.ts\nimport { localized, msg } from \"@lit/localize\";\nimport { property, query, queryAsync } from \"lit/decorators.js\";\nimport { choose } from \"lit/directives/choose.js\";\nimport { nothing } from \"lit/html.js\";\n\n// libs/core/src/components/textarea/textarea.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, simplified;\n\n  @layer base {\n    * {\n      box-sizing: border-box;\n    }\n\n    :host {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      contain: layout;\n      isolation: isolate;\n      gap: var(--gds-space-xs);\n    }\n\n    textarea {\n      appearance: none;\n      background-color: transparent;\n      border: 0;\n      box-sizing: border-box;\n      font-family: inherit;\n      font-size: var(--gds-text-size-detail-m);\n      height: calc(1lh * var(--_lines));\n      line-height: var(--gds-text-line-height-detail-m);\n      margin: unset;\n      min-height: calc(1lh * 4);\n      max-height: calc(1lh * 20);\n      overflow: auto;\n      outline: none;\n      padding: unset;\n      width: 100%;\n      min-width: 20ch;\n      padding-inline-end: calc(var(--gds-space-xs) + var(--padding-inline-end));\n\n      &.resize-manual {\n        resize: vertical;\n      }\n\n      &.resize-auto {\n        resize: none;\n      }\n\n      &.resize-false {\n        resize: none;\n      }\n    }\n\n    :host([size='small']) slot[name='lead']::slotted(*) {\n      width: var(--gds-space-m);\n    }\n\n    slot[name='lead']::slotted(*) {\n      min-width: var(--gds-space-l);\n      display: flex;\n    }\n\n    [align-items] ::part(_button) {\n      margin-top: calc(var(--gds-space-2xs) * -1);\n    }\n  }\n\n  @layer simplified {\n  }\n`;\n\n// libs/core/src/components/textarea/textarea.component.ts\nvar _renderDefault, renderDefault_fn, _renderFloatingLabel, renderFloatingLabel_fn, _forwardableAttrs, _handleOnInput, _handleOnChange, _handleOnPaste, _handleFieldClick, _handleClearBtnClick, _renderFieldContents, renderFieldContents_fn, _renderSlotLead, renderSlotLead_fn, _renderSlotTrail, renderSlotTrail_fn, _renderNativeTextarea, renderNativeTextarea_fn, _renderClearButton, renderClearButton_fn, _shouldShowRemainingChars, shouldShowRemainingChars_get;\nvar Textarea = class extends GdsFormControlElement {\n  constructor() {\n    super();\n    __privateAdd(this, _renderDefault);\n    __privateAdd(this, _renderFloatingLabel);\n    __privateAdd(this, _renderFieldContents);\n    __privateAdd(this, _renderSlotLead);\n    __privateAdd(this, _renderSlotTrail);\n    __privateAdd(this, _renderNativeTextarea);\n    __privateAdd(this, _renderClearButton);\n    __privateAdd(this, _shouldShowRemainingChars);\n    this._defaultRows = 4;\n    this.rows = 4;\n    this.supportingText = \"\";\n    this.clearable = false;\n    this.resizable = \"auto\";\n    this.maxlength = Number.MAX_SAFE_INTEGER;\n    this.variant = \"default\";\n    this.size = \"large\";\n    this._handleSlotChange = () => {\n      requestAnimationFrame(() => {\n        this._handleResize();\n      });\n    };\n    // Any attribute name added here will get forwarded to the native <input> element.\n    __privateAdd(this, _forwardableAttrs, (attr) => [\"type\", \"placeholder\", \"required\"].includes(attr.name));\n    __privateAdd(this, _handleOnInput, (e) => {\n      const element = e.target;\n      this.value = element.value;\n    });\n    __privateAdd(this, _handleOnChange, (e) => {\n      const element = e.target;\n      this.value = element.value;\n      this.dispatchEvent(\n        new Event(\"change\", {\n          bubbles: true,\n          composed: true\n        })\n      );\n    });\n    __privateAdd(this, _handleOnPaste, (e) => {\n      requestAnimationFrame(() => {\n        this._setAutoHeight();\n      });\n    });\n    __privateAdd(this, _handleFieldClick, () => {\n      this.elTextareaAsync.then((el) => el.focus());\n    });\n    __privateAdd(this, _handleClearBtnClick, () => {\n      this.value = \"\";\n      this.elTextareaAsync.then((element) => {\n        var _a, _b;\n        if (this.resizable === \"manual\") {\n          element.style.height = \"\";\n        } else if (this.resizable === \"false\") {\n          const rowsToUse = (_a = this._initialRows) != null ? _a : this._defaultRows;\n          this.rows = rowsToUse;\n          element.style.setProperty(\"--_lines\", rowsToUse.toString());\n        } else {\n          const rowsToUse = (_b = this._initialRows) != null ? _b : this._defaultRows;\n          this.rows = rowsToUse;\n          element.style.setProperty(\"--_lines\", rowsToUse.toString());\n          element.style.height = \"\";\n        }\n      });\n      this.dispatchEvent(\n        new Event(\"gds-input-cleared\", {\n          bubbles: true,\n          composed: true\n        })\n      );\n      this.dispatchEvent(\n        new Event(\"input\", {\n          bubbles: true,\n          composed: true\n        })\n      );\n    });\n    this.value = \"\";\n  }\n  /**\n   * A reference to the clear button element. Returns null if there is no clear button.\n   * Intended for use in integration tests.\n   */\n  test_getClearButton() {\n    var _a;\n    return (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(\"#clear-button\");\n  }\n  /**\n   * A reference to the field element. This does not refer to the input element itself,\n   * but the wrapper that makes up the visual field.\n   * Intended for use in integration tests.\n   */\n  test_getFieldElement() {\n    var _a;\n    return (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(\"#field\");\n  }\n  _handleResize() {\n    if (!this.fieldBase)\n      return;\n    Promise.resolve().then(() => {\n      var _a;\n      const fieldBaseShadowRoot = (_a = this.fieldBase) == null ? void 0 : _a.shadowRoot;\n      if (!fieldBaseShadowRoot)\n        return;\n      const rightDiv = fieldBaseShadowRoot.querySelector(\n        \".right\"\n      );\n      if (rightDiv) {\n        const boundingBox = rightDiv.getBoundingClientRect();\n        this.elTextarea.style.setProperty(\n          \"--padding-inline-end\",\n          `${boundingBox.width}px`\n        );\n      } else {\n        this.elTextarea.style.removeProperty(\"--padding-inline-end\");\n      }\n    });\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.hasAttribute(\"rows\")) {\n      this._initialRows = this.rows;\n    }\n    this._setAutoHeight();\n    this.addEventListener(\"slotchange\", this._handleSlotChange);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeEventListener(\"slotchange\", this._handleSlotChange);\n  }\n  render() {\n    return html`${choose(this.variant, [\n      [\"default\", () => __privateMethod(this, _renderDefault, renderDefault_fn).call(this)],\n      [\"floating-label\", () => __privateMethod(this, _renderFloatingLabel, renderFloatingLabel_fn).call(this)]\n    ])}`;\n  }\n  _getValidityAnchor() {\n    return this.elTextarea;\n  }\n  _setAutoHeight() {\n    this.elTextareaAsync.then((element) => {\n      var _a, _b, _c;\n      if (this.resizable === \"false\") {\n        const rowsToUse = (_a = this._initialRows) != null ? _a : this._defaultRows;\n        this.rows = rowsToUse;\n        element.style.setProperty(\"--_lines\", rowsToUse.toString());\n        return;\n      }\n      if (this.resizable === \"manual\") {\n        return;\n      }\n      if (this.resizable === \"auto\") {\n        if (element.value === \"\") {\n          const rowsToUse = (_b = this._initialRows) != null ? _b : this._defaultRows;\n          this.rows = rowsToUse;\n          element.style.setProperty(\"--_lines\", rowsToUse.toString());\n        } else {\n          const computedStyle = getComputedStyle(element);\n          const lineHeight = parseFloat(computedStyle.lineHeight);\n          const contentHeight = element.scrollHeight;\n          const requiredRows = Math.ceil(contentHeight / lineHeight);\n          const minRows = (_c = this._initialRows) != null ? _c : this._defaultRows;\n          this.rows = Math.max(minRows, requiredRows);\n          element.style.setProperty(\"--_lines\", this.rows.toString());\n        }\n      }\n    });\n  }\n  _handleRowsChange() {\n    if (this.hasAttribute(\"rows\")) {\n      this._initialRows = this.rows;\n    }\n    this.elTextareaAsync.then((element) => {\n      if (this.resizable === \"false\") {\n        element.style.setProperty(\"--_lines\", this.rows.toString());\n      }\n    });\n  }\n};\n_renderDefault = new WeakSet();\nrenderDefault_fn = function() {\n  var _a;\n  return html`\n      <gds-form-control-header class=\"size-${this.size}\">\n        <label for=\"input\" slot=\"label\">${this.label}</label>\n        <span slot=\"supporting-text\" id=\"supporting-text\">\n          ${this.supportingText}\n        </span>\n        <slot\n          name=\"extended-supporting-text\"\n          slot=\"extended-supporting-text\"\n        ></slot>\n      </gds-form-control-header>\n\n      <gds-field-base\n        id=\"field\"\n        .disabled=${this.disabled}\n        .invalid=${this.invalid}\n        @click=${__privateGet(this, _handleFieldClick)}\n        multiline\n      >\n        ${__privateMethod(this, _renderFieldContents, renderFieldContents_fn).call(this)}\n      </gds-field-base>\n\n      <gds-form-control-footer\n        lass=\"size-${this.size}\"\n        .charCounter=${__privateGet(this, _shouldShowRemainingChars, shouldShowRemainingChars_get) && this.maxlength - (((_a = this.value) == null ? void 0 : _a.length) || 0)}\n        .validationMessage=${this.invalid && (this.errorMessage || this.validationMessage)}\n      ></gds-form-control-footer>\n    `;\n};\n_renderFloatingLabel = new WeakSet();\nrenderFloatingLabel_fn = function() {\n  return nothing;\n};\n_forwardableAttrs = new WeakMap();\n_handleOnInput = new WeakMap();\n_handleOnChange = new WeakMap();\n_handleOnPaste = new WeakMap();\n_handleFieldClick = new WeakMap();\n_handleClearBtnClick = new WeakMap();\n_renderFieldContents = new WeakSet();\nrenderFieldContents_fn = function() {\n  const elements = [\n    __privateMethod(this, _renderSlotLead, renderSlotLead_fn).call(this),\n    __privateMethod(this, _renderNativeTextarea, renderNativeTextarea_fn).call(this),\n    __privateMethod(this, _renderClearButton, renderClearButton_fn).call(this),\n    __privateMethod(this, _renderSlotTrail, renderSlotTrail_fn).call(this)\n  ];\n  return elements.map((element) => html`${element}`);\n};\n_renderSlotLead = new WeakSet();\nrenderSlotLead_fn = function() {\n  return html`<slot slot=\"lead\" name=\"lead\"></slot>`;\n};\n_renderSlotTrail = new WeakSet();\nrenderSlotTrail_fn = function() {\n  return html`<slot slot=\"trail\" name=\"trail\"></slot>`;\n};\n_renderNativeTextarea = new WeakSet();\nrenderNativeTextarea_fn = function() {\n  return html`\n      <textarea\n        @input=${__privateGet(this, _handleOnInput)}\n        @change=${__privateGet(this, _handleOnChange)}\n        @paste=${__privateGet(this, _handleOnPaste)}\n        .value=${this.value}\n        id=\"input\"\n        class=\"resize-${this.resizable}\"\n        aria-describedby=\"supporting-text extended-supporting-text sub-label message\"\n        placeholder=\" \"\n        ${forwardAttributes(__privateGet(this, _forwardableAttrs))}\n      ></textarea>\n    `;\n};\n_renderClearButton = new WeakSet();\nrenderClearButton_fn = function() {\n  var _a;\n  if (this.clearable && (((_a = this.value) == null ? void 0 : _a.length) || 0) > 0)\n    return html`\n        <gds-button\n          size=\"small\"\n          rank=\"tertiary\"\n          variant=\"${this.invalid ? \"negative\" : \"\"}\"\n          ?disabled=\"${this.disabled}\"\n          label=\"${msg(\"Clear input\")}\"\n          @click=${__privateGet(this, _handleClearBtnClick)}\n          slot=\"action\"\n          id=\"clear-button\"\n        >\n          <gds-icon-cross-large></gds-icon-cross-large>\n        </gds-button>\n      `;\n  else\n    return nothing;\n};\n_shouldShowRemainingChars = new WeakSet();\nshouldShowRemainingChars_get = function() {\n  return this.maxlength < Number.MAX_SAFE_INTEGER;\n};\nTextarea.styles = [tokens, styles];\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v,\n    selector: \"textarea\",\n    styleTemplate: (_prop, values) => {\n      const ROWS = values[0];\n      return `min-height: calc(1lh * ${ROWS});`;\n    }\n  })\n], Textarea.prototype, \"rows\", 2);\n__decorateClass([\n  property({ attribute: \"supporting-text\" })\n], Textarea.prototype, \"supportingText\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], Textarea.prototype, \"clearable\", 2);\n__decorateClass([\n  property({ type: String })\n], Textarea.prototype, \"resizable\", 2);\n__decorateClass([\n  property({ type: Number })\n], Textarea.prototype, \"maxlength\", 2);\n__decorateClass([\n  property({ type: String })\n], Textarea.prototype, \"variant\", 2);\n__decorateClass([\n  property({ type: String })\n], Textarea.prototype, \"size\", 2);\n__decorateClass([\n  queryAsync(\"textarea\")\n], Textarea.prototype, \"elTextareaAsync\", 2);\n__decorateClass([\n  query(\"textarea\")\n], Textarea.prototype, \"elTextarea\", 2);\n__decorateClass([\n  query(\"gds-field-base\")\n], Textarea.prototype, \"fieldBase\", 2);\n__decorateClass([\n  resizeObserver()\n], Textarea.prototype, \"_handleResize\", 1);\n__decorateClass([\n  watch(\"value\")\n], Textarea.prototype, \"_setAutoHeight\", 1);\n__decorateClass([\n  watch(\"rows\")\n], Textarea.prototype, \"_handleRowsChange\", 1);\nTextarea = __decorateClass([\n  localized()\n], Textarea);\nvar GdsTextarea = class extends withLayoutChildProps(\n  withSizeXProps(withMarginProps(Textarea))\n) {\n};\nGdsTextarea = __decorateClass([\n  gdsCustomElement(\"gds-textarea\", {\n    dependsOn: [\n      GdsFormControlHeader,\n      GdsFormControlFooter,\n      GdsButton,\n      GdsFieldBase,\n      IconCrossLarge\n    ]\n  })\n], GdsTextarea);\n\nexport {\n  GdsTextarea\n};\n","import {\n  TransitionalStyles\n} from \"./chunk.YOUAKTVG.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  dark_default,\n  light_default,\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/theme/theme.component.ts\nimport { css, unsafeCSS } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nvar GdsTheme = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    this.colorScheme = \"light\";\n    this.designVersion = \"2016\";\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    TransitionalStyles.instance.apply(this, \"gds-theme\");\n    this._dynamicStylesController.inject(\n      \"dark\",\n      unsafeCSS(`:host {${dark_default}}`)\n    );\n  }\n  render() {\n    return html`<slot></slot>`;\n  }\n  _onColorSchemeChange() {\n    if (this.colorScheme === \"dark\") {\n      this._dynamicStylesController.inject(\n        \"color-scheme\",\n        unsafeCSS(`:host { ${dark_default}}`)\n      );\n    } else {\n      this._dynamicStylesController.inject(\n        \"color-scheme\",\n        unsafeCSS(`:host { ${light_default}}`)\n      );\n    }\n    this.dispatchEvent(\n      new CustomEvent(\"gds-color-scheme-changed\", {\n        detail: { colorScheme: this.colorScheme }\n      })\n    );\n  }\n  _onDesignVersionChange() {\n    this.dispatchEvent(\n      new CustomEvent(\"gds-design-version-changed\", {\n        detail: { designVersion: this.designVersion }\n      })\n    );\n  }\n};\nGdsTheme.styles = [\n  tokens,\n  css`\n      :host {\n        display: contents;\n      }\n    `\n];\n__decorateClass([\n  property({ reflect: true, attribute: \"color-scheme\" })\n], GdsTheme.prototype, \"colorScheme\", 2);\n__decorateClass([\n  property({ reflect: true, attribute: \"design-version\" })\n], GdsTheme.prototype, \"designVersion\", 2);\n__decorateClass([\n  watch(\"colorScheme\")\n], GdsTheme.prototype, \"_onColorSchemeChange\", 1);\n__decorateClass([\n  watch(\"designVersion\")\n], GdsTheme.prototype, \"_onDesignVersionChange\", 1);\nGdsTheme = __decorateClass([\n  gdsCustomElement(\"gds-theme\")\n], GdsTheme);\n\nexport {\n  GdsTheme\n};\n","import {\n  withLayoutChildProps,\n  withMarginProps,\n  withPositioningProps,\n  withSizeXProps,\n  withSizeYProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.NUUST5OZ.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/video/video.component.ts\nimport { property, query } from \"lit/decorators.js\";\n\n// libs/core/src/components/video/video.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    display: block;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 0;\n    width: 100%;\n    height: auto;\n    overflow: hidden;\n  }\n\n  video {\n    display: flex;\n    width: 100%;\n    height: 100%;\n  }\n`;\nvar video_style_default = style;\n\n// libs/core/src/components/video/video.component.ts\nvar GdsVideo = class extends withSizeXProps(\n  withSizeYProps(\n    withMarginProps(withLayoutChildProps(withPositioningProps(GdsElement)))\n  )\n) {\n  // Method to programmatically apply video settings\n  applyVideoSettings() {\n    if (this.videoElement) {\n      this.videoElement.src = this.src || \"\";\n      this.videoElement.poster = this.poster || \"\";\n      this.videoElement.muted = this.muted || false;\n      this.videoElement.autoplay = this.autoplay || false;\n      this.videoElement.loop = this.loop || false;\n      this.videoElement.playsInline = this.playsinline || false;\n    }\n  }\n  render() {\n    return html`<video></video>`;\n  }\n  firstUpdated() {\n    this.applyVideoSettings();\n  }\n};\nGdsVideo.styles = [tokens, video_style_default];\n__decorateClass([\n  styleExpressionProperty()\n], GdsVideo.prototype, \"aspect-ratio\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: \"video\"\n  })\n], GdsVideo.prototype, \"object-position\", 2);\n__decorateClass([\n  styleExpressionProperty()\n], GdsVideo.prototype, \"opacity\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: \"video\"\n  })\n], GdsVideo.prototype, \"object-fit\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: \"video\"\n  })\n], GdsVideo.prototype, \"pointer-events\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => `var(--gds-space-${v})`\n  })\n], GdsVideo.prototype, \"border-radius\", 2);\n__decorateClass([\n  property()\n], GdsVideo.prototype, \"src\", 2);\n__decorateClass([\n  property()\n], GdsVideo.prototype, \"poster\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsVideo.prototype, \"muted\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsVideo.prototype, \"playsinline\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsVideo.prototype, \"autoplay\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsVideo.prototype, \"loop\", 2);\n__decorateClass([\n  query(\"video\")\n], GdsVideo.prototype, \"videoElement\", 2);\nGdsVideo = __decorateClass([\n  gdsCustomElement(\"gds-video\")\n], GdsVideo);\n\nexport {\n  GdsVideo\n};\n","import {\n  GdsFormControlFooter\n} from \"./chunk.NFVK7X4Q.js\";\nimport {\n  GdsFormControlHeader\n} from \"./chunk.OCDDV4IH.js\";\nimport {\n  GdsFormControlElement\n} from \"./chunk.5FHEJLB5.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  withLayoutChildProps,\n  withMarginProps,\n  withSizeXProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateMethod\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/radio/radio-group/radio-group.component.ts\nimport { localized } from \"@lit/localize\";\nimport { property, query } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\n// libs/core/src/components/radio/radio-group/radio-group.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  :host {\n    --radio-bg-mix: color-mix(\n      in srgb,\n      var(--gds-color-l3-background-secondary),\n      var(--gds-color-l3-states-light-hover)\n    );\n    --radio-bg-mix-active: color-mix(\n      in srgb,\n      var(--gds-color-l3-background-secondary),\n      var(--gds-color-l3-states-light-pressed)\n    );\n\n    --radio-size: var(--gds-space-xl);\n    --radio-disc-size: var(--gds-space-m);\n    --radio-radius: var(--gds-space-max);\n    --radio-border-color: var(--gds-color-l3-border-secondary);\n    --radio-border-color-selected: var(--gds-color-l3-border-primary);\n    --radio-border-width: var(--gds-space-4xs);\n    --radio-border-width-selected: var(--gds-space-2xs);\n    --radio-outline-width: var(--gds-space-3xs);\n    --radio-disc-background-color: var(--gds-color-l3-content-primary);\n\n    /* Font Sizes */\n    --_font-size-label: var(--gds-text-size-detail-m);\n    --_line-height-label: var(--gds-text-line-height-detail-m);\n    --_font-size-supporting-text: var(--gds-text-size-detail-s);\n    --_line-height-supporting-text: var(--gds-text-line-height-detail-s);\n    font-size: var(--_font-size-label);\n    line-height: var(--_line-height-label);\n\n    /* Color */\n    --_radio-label-color: var(--gds-color-l3-content-tertiary);\n    --_radio-outline-color: var(--gds-color-l3-content-tertiary);\n  }\n\n  :host(:invalid) {\n    --radio-border-color: var(--gds-color-l3-border-negative);\n    --radio-disc-background-color: var(\n      --gds-color-l3-background-negative-secondary\n    );\n    --radio-border-color-selected: var(--gds-color-l3-border-negative);\n    --radio-bg-mix: color-mix(\n      in srgb,\n      var(--gds-color-l3-background-negative-secondary),\n      var(--gds-color-l3-states-negative-hover)\n    );\n    --radio-bg-mix-active: color-mix(\n      in srgb,\n      var(--gds-color-l3-background-negative-secondary),\n      var(--gds-color-l3-states-negative-pressed)\n    );\n    --_radio-label-color: var(--gds-color-l3-content-negative);\n    --_radio-outline-color: var(--gds-color-l3-content-negative);\n  }\n\n  :host([size='small']) {\n    --_font-size-label: var(--gds-text-size-detail-s);\n    --_line-height-label: var(--gds-text-line-height-detail-s);\n    --_font-size-supporting-text: var(--gds-text-size-detail-s);\n    --_line-height-supporting-text: var(--gds-text-line-height-detail-s);\n  }\n\n  .radio-group {\n    display: flex;\n    flex-direction: column;\n    gap: var(--gds-space-m);\n  }\n\n  .content {\n    display: flex;\n    position: relative;\n    max-width: max-content;\n    color: var(--_radio-label-color);\n  }\n\n  .direction-row .content {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: var(--gds-space-l);\n  }\n\n  .direction-column .content {\n    flex-direction: column;\n    gap: var(--gds-space-xs);\n  }\n`;\n\n// libs/core/src/components/radio/radio-group/radio-group.component.ts\nvar _initializeFocusable, initializeFocusable_fn, _handleFocus, handleFocus_fn, _dispatchChangeEvents, dispatchChangeEvents_fn, _handleRadioChange, handleRadioChange_fn, _handleKeyDown, handleKeyDown_fn, _focusAndSelectRadio, focusAndSelectRadio_fn, _renderRadioGroupContents, renderRadioGroupContents_fn, _renderFieldControlHeader, renderFieldControlHeader_fn, _renderRadios, renderRadios_fn, _renderFieldControlFooter, renderFieldControlFooter_fn;\nvar RadioGroup = class extends GdsFormControlElement {\n  constructor() {\n    super(...arguments);\n    __privateAdd(this, _initializeFocusable);\n    __privateAdd(this, _handleFocus);\n    __privateAdd(this, _dispatchChangeEvents);\n    __privateAdd(this, _handleRadioChange);\n    __privateAdd(this, _handleKeyDown);\n    __privateAdd(this, _focusAndSelectRadio);\n    __privateAdd(this, _renderRadioGroupContents);\n    __privateAdd(this, _renderFieldControlHeader);\n    __privateAdd(this, _renderRadios);\n    __privateAdd(this, _renderFieldControlFooter);\n    this.size = \"large\";\n    this.direction = \"column\";\n    this.supportingText = \"\";\n    this.showExtendedSupportingText = false;\n    this._isConnected = false;\n  }\n  /**\n   * Returns an array of `<gds-radio>` elements in the radio group.\n   *\n   * @readonly\n   */\n  get radios() {\n    return Array.from(\n      this.querySelectorAll(\"[gds-element=gds-radio]\")\n    );\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this._isConnected = true;\n    this.updateComplete.then(() => {\n      this._syncRadioStates();\n      __privateMethod(this, _initializeFocusable, initializeFocusable_fn).call(this);\n    });\n    this.addEventListener(\"invalid\", this._syncRadioStates);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._isConnected = false;\n    this.removeEventListener(\"invalid\", this._syncRadioStates);\n  }\n  _getValidityAnchor() {\n    return this._contentElement;\n  }\n  _handleValueChange() {\n    if (!this._isConnected)\n      return;\n    this._syncRadioStates();\n    this.updateComplete.then(() => {\n      __privateMethod(this, _initializeFocusable, initializeFocusable_fn).call(this);\n    });\n  }\n  _syncRadioStates() {\n    if (!this._isConnected)\n      return;\n    this.radios.forEach((radio) => {\n      radio.checked = radio.value === this.value;\n      radio.size = this.size;\n      radio.invalid = this.invalid;\n    });\n  }\n  render() {\n    const classes = {\n      \"radio-group\": true,\n      \"direction-row\": this.direction === \"row\",\n      \"direction-column\": this.direction === \"column\"\n    };\n    return html`<div\n      role=\"radiogroup\"\n      id=\"radiogroup\"\n      class=${classMap(classes)}\n      aria-labelledby=\"group-label\"\n      aria-describedby=\"supporting-text extended-supporting-text footer\"\n    >\n      ${__privateMethod(this, _renderRadioGroupContents, renderRadioGroupContents_fn).call(this)}\n    </div>`;\n  }\n};\n_initializeFocusable = new WeakSet();\ninitializeFocusable_fn = function() {\n  if (!this._contentElement || !this._isConnected)\n    return;\n  const selectedRadio = this.radios.find((radio) => radio.checked);\n  if (selectedRadio) {\n    selectedRadio.setAttribute(\"tabindex\", \"0\");\n    this._contentElement.setAttribute(\"tabindex\", \"-1\");\n  } else {\n    this._contentElement.setAttribute(\"tabindex\", \"0\");\n  }\n  this.radios.filter((radio) => !radio.checked).forEach((radio) => radio.setAttribute(\"tabindex\", \"-1\"));\n};\n_handleFocus = new WeakSet();\nhandleFocus_fn = function() {\n  if (!this._contentElement || !this._isConnected)\n    return;\n  const selectedRadio = this.radios.find((radio) => radio.checked);\n  const radioToFocus = selectedRadio || this.radios[0];\n  if (radioToFocus) {\n    radioToFocus.focus();\n    if (!selectedRadio) {\n      this.radios.forEach((radio) => radio.setAttribute(\"tabindex\", \"-1\"));\n      radioToFocus.setAttribute(\"tabindex\", \"0\");\n      this._contentElement.setAttribute(\"tabindex\", \"-1\");\n    }\n  }\n};\n_dispatchChangeEvents = new WeakSet();\ndispatchChangeEvents_fn = function() {\n  this.dispatchEvent(\n    new CustomEvent(\"change\", {\n      detail: { value: this.value },\n      bubbles: true\n    })\n  );\n  this.dispatchEvent(new Event(\"input\", { bubbles: true }));\n};\n_handleRadioChange = new WeakSet();\nhandleRadioChange_fn = function(e) {\n  const radio = e.target;\n  if (radio.hasAttribute(\"value\")) {\n    this.value = radio.value;\n    this._syncRadioStates();\n    __privateMethod(this, _dispatchChangeEvents, dispatchChangeEvents_fn).call(this);\n  }\n};\n_handleKeyDown = new WeakSet();\nhandleKeyDown_fn = function(e) {\n  if (!this._isConnected)\n    return;\n  const radios = this.radios.filter(\n    (radio) => !radio.hasAttribute(\"disabled\")\n  );\n  if (radios.length === 0)\n    return;\n  let currentIndex = radios.findIndex(\n    (radio) => document.activeElement === radio\n  );\n  if (currentIndex === -1) {\n    currentIndex = radios.findIndex((radio) => radio.checked);\n    if (currentIndex === -1)\n      currentIndex = 0;\n  }\n  switch (e.key) {\n    case \"ArrowDown\":\n    case \"ArrowRight\": {\n      e.preventDefault();\n      const nextIndex = (currentIndex + 1) % radios.length;\n      __privateMethod(this, _focusAndSelectRadio, focusAndSelectRadio_fn).call(this, radios[nextIndex]);\n      break;\n    }\n    case \"ArrowUp\":\n    case \"ArrowLeft\": {\n      e.preventDefault();\n      const nextIndex = (currentIndex - 1 + radios.length) % radios.length;\n      __privateMethod(this, _focusAndSelectRadio, focusAndSelectRadio_fn).call(this, radios[nextIndex]);\n      break;\n    }\n    default:\n      return;\n  }\n};\n_focusAndSelectRadio = new WeakSet();\nfocusAndSelectRadio_fn = function(radio) {\n  if (!this._contentElement || !this._isConnected)\n    return;\n  this.radios.forEach((r) => r.setAttribute(\"tabindex\", \"-1\"));\n  radio.setAttribute(\"tabindex\", \"0\");\n  this._contentElement.setAttribute(\"tabindex\", \"-1\");\n  radio.checked = true;\n  radio.focus();\n  this.value = radio.value;\n  this._syncRadioStates();\n  __privateMethod(this, _dispatchChangeEvents, dispatchChangeEvents_fn).call(this);\n};\n_renderRadioGroupContents = new WeakSet();\nrenderRadioGroupContents_fn = function() {\n  const elements = [\n    __privateMethod(this, _renderFieldControlHeader, renderFieldControlHeader_fn).call(this),\n    __privateMethod(this, _renderRadios, renderRadios_fn).call(this),\n    __privateMethod(this, _renderFieldControlFooter, renderFieldControlFooter_fn).call(this)\n  ];\n  return elements.map((element) => html`${element}`);\n};\n_renderFieldControlHeader = new WeakSet();\nrenderFieldControlHeader_fn = function() {\n  if (this.label) {\n    return html` <gds-form-control-header class=\"size-${this.size}\">\n        <label id=\"group-label\" slot=\"label\">${this.label}</label>\n        <span slot=\"supporting-text\" id=\"supporting-text\">\n          ${this.supportingText}\n        </span>\n        <slot\n          id=\"extended-supporting-text\"\n          name=\"extended-supporting-text\"\n          slot=\"extended-supporting-text\"\n        ></slot>\n      </gds-form-control-header>`;\n  }\n};\n_renderRadios = new WeakSet();\nrenderRadios_fn = function() {\n  return html` <div\n      class=\"content\"\n      @keydown=${__privateMethod(this, _handleKeyDown, handleKeyDown_fn)}\n      @focus=${__privateMethod(this, _handleFocus, handleFocus_fn)}\n    >\n      <slot @gds-radio-change=${__privateMethod(this, _handleRadioChange, handleRadioChange_fn)}></slot>\n    </div>`;\n};\n_renderFieldControlFooter = new WeakSet();\nrenderFieldControlFooter_fn = function() {\n  return html` <gds-form-control-footer\n      id=\"footer\"\n      class=\"size-${this.size}\"\n      .validationMessage=${this.invalid && (this.errorMessage || this.validationMessage)}\n    >\n    </gds-form-control-footer>`;\n};\nRadioGroup.styles = [tokens, styles];\n__decorateClass([\n  property()\n], RadioGroup.prototype, \"size\", 2);\n__decorateClass([\n  property()\n], RadioGroup.prototype, \"direction\", 2);\n__decorateClass([\n  property({ attribute: \"supporting-text\" })\n], RadioGroup.prototype, \"supportingText\", 2);\n__decorateClass([\n  property({\n    attribute: \"show-extended-supporting-text\",\n    type: Boolean,\n    reflect: true\n  })\n], RadioGroup.prototype, \"showExtendedSupportingText\", 2);\n__decorateClass([\n  query(\".content\")\n], RadioGroup.prototype, \"_contentElement\", 2);\n__decorateClass([\n  watch(\"value\")\n], RadioGroup.prototype, \"_handleValueChange\", 1);\n__decorateClass([\n  watch(\"invalid\")\n], RadioGroup.prototype, \"_syncRadioStates\", 1);\nRadioGroup = __decorateClass([\n  localized()\n], RadioGroup);\nvar GdsRadioGroup = class extends withLayoutChildProps(\n  withMarginProps(withSizeXProps(RadioGroup))\n) {\n};\nGdsRadioGroup = __decorateClass([\n  gdsCustomElement(\"gds-radio-group\", {\n    dependsOn: [GdsFormControlHeader, GdsFormControlFooter]\n  })\n], GdsRadioGroup);\n\nexport {\n  GdsRadioGroup\n};\n","import {\n  TransitionalStyles\n} from \"./chunk.YOUAKTVG.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/primitives/selection-controls/selection-field-label.component.ts\nimport { localized } from \"@lit/localize\";\nimport { property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\n// libs/core/src/primitives/selection-controls/selection-field-label.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, a11y;\n\n  @layer a11y {\n    @media (prefers-reduced-motion: reduce) {\n      .field-label {\n        transition: none;\n      }\n    }\n  }\n\n  @layer base {\n    * {\n      box-sizing: border-box;\n      --_color: var(--_radio-label-color, inherit);\n    }\n\n    .selection-field-container {\n      display: flex;\n      gap: var(--gds-space-s);\n      cursor: pointer;\n    }\n\n    .selection-field-label {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      color: var(--_color);\n    }\n\n    .primary-label {\n      font-weight: var(--gds-text-weight-book);\n      cursor: pointer;\n    }\n\n    .supporting-text {\n      font-size: var(--_font-size-supporting-text);\n      line-height: var(--_line-height-supporting-text);\n      font-weight: var(--gds-text-weight-regular);\n    }\n  }\n`;\n\n// libs/core/src/primitives/selection-controls/selection-field-label.component.ts\nvar GdsSelectionFieldLabel = class extends GdsElement {\n  constructor() {\n    super();\n    this.label = \"\";\n    this.supportingText = \"\";\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    TransitionalStyles.instance.apply(this, \"gds-selection-field-label\");\n  }\n  render() {\n    const classes = {\n      \"selection-field-label\": true,\n      \"has-supporting-text\": !!this.supportingText\n    };\n    return html`\n      <div class=\"selection-field-container\">\n        <div class=\"control-slot\">\n          <slot></slot>\n        </div>\n        <div class=\"${classMap(classes)}\">\n          <label class=\"primary-label\"> ${this.label} </label>\n          ${this.label ? html`\n                <span class=\"supporting-text\"> ${this.supportingText} </span>\n              ` : \"\"}\n        </div>\n      </div>\n    `;\n  }\n};\nGdsSelectionFieldLabel.styles = [tokens, styles];\n__decorateClass([\n  property()\n], GdsSelectionFieldLabel.prototype, \"label\", 2);\n__decorateClass([\n  property({ attribute: \"supporting-text\" })\n], GdsSelectionFieldLabel.prototype, \"supportingText\", 2);\nGdsSelectionFieldLabel = __decorateClass([\n  gdsCustomElement(\"gds-selection-field-label\"),\n  localized()\n], GdsSelectionFieldLabel);\n\nexport {\n  GdsSelectionFieldLabel\n};\n","import {\n  GdsSelectionFieldLabel\n} from \"./chunk.R7QBWELB.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/radio/radio.component.ts\nimport { property, state } from \"lit/decorators.js\";\n\n// libs/core/src/components/radio/radio.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, a11y, reset, transitional-styles;\n\n  @layer a11y {\n    @media (prefers-reduced-motion: reduce) {\n      .radio {\n        transition: none;\n      }\n    }\n  }\n\n  @layer base {\n    :host([disabled]) {\n      --_radio-label-color: var(--gds-color-l3-content-disabled);\n    }\n\n    .radio {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      width: var(--radio-disc-size);\n      height: var(--radio-disc-size);\n      margin-block-start: calc(var(--radio-border-width) * 2);\n      cursor: pointer;\n    }\n\n    .state {\n      display: flex;\n      box-sizing: border-box;\n      backface-visibility: hidden;\n      transition-property: background-color, scale, outline;\n      transition-duration: 248ms;\n      outline-style: solid;\n      outline-offset: calc(-1 * var(--radio-outline-width));\n      outline-width: var(--radio-outline-width);\n      outline-color: transparent;\n      border-radius: var(--radio-radius);\n      min-width: var(--radio-size);\n      min-height: var(--radio-size);\n      position: absolute;\n      left: calc(* 1 - calc((var(--radio-size) - var(--radio-disc-size)) / 2));\n      top: calc(* 1 - calc((var(--radio-size) - var(--radio-disc-size)) / 2));\n      scale: 0.8;\n    }\n\n    @media (hover: hover) {\n      .radio:hover,\n      :host(:hover) .radio .state {\n        background-color: var(--radio-bg-mix);\n        scale: 1;\n      }\n    }\n\n    .radio:active .state,\n    :host(:active) .radio .state {\n      background-color: var(--radio-bg-mix-active);\n    }\n\n    :host(:active:not(:focus-visible)) .radio:active .state,\n    :host(:active:not(:focus-visible)) .radio .state {\n      scale: 0.96;\n    }\n\n    :host(:focus) {\n      outline: none;\n    }\n\n    :host(:focus) .radio .state {\n      outline-color: var(--_radio-outline-color);\n      scale: 1;\n    }\n\n    :host(:not(:focus-visible)) .radio .state {\n      outline-color: transparent;\n    }\n\n    .disc {\n      width: var(--radio-disc-size);\n      height: var(--radio-disc-size);\n      border-radius: var(--radio-radius);\n      box-shadow: inset 0 0 0 var(--radio-border-width)\n        var(--radio-border-color);\n      background-color: var(--radio-disc-background-color);\n      box-sizing: border-box;\n      transition-property: box-shadow;\n      transition-duration: 248ms;\n      will-change: box-shadow;\n      position: absolute;\n      inset: 0;\n    }\n\n    :host([checked]) .disc,\n    :host(:active) .disc {\n      box-shadow: inset 0 0 0 var(--radio-border-width-selected)\n        var(--radio-border-color-selected);\n    }\n\n    :host([disabled]) {\n      pointer-events: none;\n    }\n\n    :host([disabled]) .radio .disc {\n      box-shadow: none;\n      background-color: var(--gds-color-l3-content-disabled);\n    }\n  }\n`;\n\n// libs/core/src/components/radio/radio.component.ts\nvar _handleClick, _handleKeyDown;\nvar GdsRadio = class extends GdsElement {\n  constructor() {\n    super();\n    this.label = \"\";\n    this.supportingText = \"\";\n    this.value = \"\";\n    this.checked = false;\n    this.disabled = false;\n    this.invalid = false;\n    this._isFocused = false;\n    __privateAdd(this, _handleClick, (e) => {\n      if (this.disabled || !this.value || !this.label)\n        return;\n      e.preventDefault();\n      this.checked = true;\n      this.focus();\n      this.dispatchEvent(new Event(\"gds-radio-change\", { bubbles: true }));\n    });\n    __privateAdd(this, _handleKeyDown, (e) => {\n      if (this.disabled)\n        return;\n      if (e.key === \"Enter\" || e.key === \" \") {\n        e.preventDefault();\n        this.checked = true;\n        this.dispatchEvent(new Event(\"gds-radio-change\", { bubbles: true }));\n      }\n    });\n    this.addEventListener(\"keydown\", __privateGet(this, _handleKeyDown));\n    this.addEventListener(\"focus\", () => this._isFocused = true);\n    this.addEventListener(\"blur\", () => this._isFocused = false);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"radio\");\n    this._updateAriaState();\n    this.addEventListener(\"click\", __privateGet(this, _handleClick));\n  }\n  _updateAriaState() {\n    this.setAttribute(\"aria-checked\", this.checked.toString());\n    this.setAttribute(\"aria-disabled\", this.disabled.toString());\n    this.setAttribute(\"tabindex\", this.disabled ? \"-1\" : \"0\");\n    this.toggleAttribute(\"aria-invalid\", this.invalid);\n  }\n  updated(changedProperties) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"checked\") || changedProperties.has(\"disabled\") || changedProperties.has(\"invalid\")) {\n      this._updateAriaState();\n    }\n  }\n  _handleDisabledChange() {\n    if (this.disabled) {\n      this.setAttribute(\"inert\", \"\");\n    } else {\n      this.removeAttribute(\"inert\");\n    }\n  }\n  render() {\n    return html`\n      <gds-selection-field-label\n        supporting-text=${this.supportingText}\n        label=${this.label}\n        type=\"radio\"\n      >\n        <div class=\"radio\">\n          <div class=\"state\"></div>\n          <div class=\"disc\"></div>\n        </div>\n      </gds-selection-field-label>\n    `;\n  }\n};\n_handleClick = new WeakMap();\n_handleKeyDown = new WeakMap();\nGdsRadio.styles = [styles];\n__decorateClass([\n  property()\n], GdsRadio.prototype, \"label\", 2);\n__decorateClass([\n  property({ attribute: \"supporting-text\" })\n], GdsRadio.prototype, \"supportingText\", 2);\n__decorateClass([\n  property()\n], GdsRadio.prototype, \"value\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsRadio.prototype, \"checked\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsRadio.prototype, \"disabled\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsRadio.prototype, \"invalid\", 2);\n__decorateClass([\n  state()\n], GdsRadio.prototype, \"_isFocused\", 2);\n__decorateClass([\n  watch(\"disabled\")\n], GdsRadio.prototype, \"_handleDisabledChange\", 1);\nGdsRadio = __decorateClass([\n  gdsCustomElement(\"gds-radio\", { dependsOn: [GdsSelectionFieldLabel] })\n], GdsRadio);\n\nexport {\n  GdsRadio\n};\n","import {\n  defaultStyles\n} from \"./chunk.2JGBCOIQ.js\";\nimport {\n  observeLightDOM\n} from \"./chunk.WM7HBMMV.js\";\nimport {\n  withLayoutChildProps,\n  withMarginProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/rich-text/rich-text.component.ts\nimport { property } from \"lit/decorators.js\";\n\n// libs/core/src/components/rich-text/rich-text.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  :host {\n    font-size: var(--gds-text-size-body-m);\n    line-height: var(--gds-text-line-height-body-m);\n    --default-border: 1px solid\n      color-mix(in srgb, currentColor, transparent 80%);\n    letter-spacing: 0.0125rem;\n    display: block;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: var(--gds-space-2xl);\n    margin-bottom: var(--gds-space-xs);\n  }\n\n  :is(h1, h2, h3, h4, h5, h6):first-child {\n    margin-top: unset;\n  }\n\n  h1 + h2 {\n    margin-top: 0;\n  }\n\n  h2 + h3 {\n    margin-top: 0;\n  }\n\n  h3 + h4 {\n    margin-top: 0;\n  }\n\n  h4 + h5 {\n    margin-top: 0;\n  }\n\n  h4 + h5 {\n    margin-top: 0;\n  }\n\n  h5 + h6 {\n    margin-top: 0;\n  }\n\n  p {\n    margin: 0;\n    margin-bottom: var(--gds-space-xs);\n    max-width: 80ch;\n  }\n\n  blockquote {\n    margin: unset;\n    margin-block: 2lh;\n    border-left: 0.2rem solid currentColor;\n    padding-left: 2ch;\n    max-width: 40ch;\n  }\n\n  hr {\n    border: none;\n    border-top: var(--default-border);\n    margin: var(--gds-space-xl) 0;\n  }\n\n  s {\n    text-decoration: underline;\n    text-decoration-skip-ink: none;\n    text-underline-offset: -0.22lh;\n  }\n\n  mark {\n    color: currentColor;\n    background-color: color-mix(in srgb, currentColor, transparent 80%);\n  }\n\n  /*\n  * lists\n  * -----------------------------------------------------------\n  */\n  ul,\n  ol {\n    padding-inline-start: 2ch;\n    margin: unset;\n    margin-bottom: 1lh;\n    max-width: 80ch;\n  }\n\n  ol {\n    list-style-type: none;\n    counter-reset: ordered-list;\n    margin: unset;\n    padding: unset;\n  }\n\n  ol li {\n    padding-left: 3.6ch;\n    position: relative;\n  }\n\n  ol li:before {\n    counter-increment: ordered-list;\n    content: counter(ordered-list) '.';\n    left: 0.2rem;\n    position: absolute;\n  }\n\n  ol:not(:has(li:nth-child(10))) li {\n    padding-left: 2.4ch;\n  }\n\n  ol:has(li:nth-child(10)) li:nth-child(-n + 9):before {\n    left: 1.4ch;\n  }\n\n  li {\n    padding: 0 0 0.3lh 0;\n  }\n\n  ul li:last-child {\n    padding: 0;\n  }\n\n  ul li::marker {\n    content: '– ';\n  }\n\n  /*\n  * figure and image\n  * -----------------------------------------------------------\n  */\n  img {\n    display: block;\n    border-radius: var(--gds-space-xs);\n  }\n\n  figure {\n    margin: 0;\n    padding: 0;\n    margin-top: var(--gds-space-xl);\n  }\n\n  figcaption {\n    font-size: smaller;\n    margin-block-start: var(--gds-space-xs);\n  }\n\n  /*\n  * table\n  * -----------------------------------------------------------\n  */\n  table {\n    border-collapse: separate;\n    border-spacing: 0;\n    width: 100%;\n    border: var(--default-border);\n    border-radius: var(--gds-space-s);\n    margin-top: var(--gds-space-xl);\n  }\n\n  th {\n    font-weight: var(--gds-text-weight-book);\n    text-align: left;\n    border-bottom: var(--default-border);\n    border-left: transparent;\n    border-right: transparent;\n    color: currentColor;\n  }\n\n  th:not(:last-child) {\n    border-right: var(--default-border);\n  }\n\n  th,\n  td {\n    padding: 0.3lh 2ch;\n  }\n  td:not(:last-child) {\n    border-right: var(--default-border);\n  }\n  tr:nth-child(even) td {\n    background: color-mix(in srgb, currentColor, transparent 95%);\n  }\n\n  /*\n  * Details\n  * -----------------------------------------------------------\n  */\n  details {\n    border-top: solid var(--gds-space-4xs)\n      color-mix(in srgb, currentColor, transparent 90%);\n    font-size: var(--gds-text-size-body-m);\n    line-height: var(--gds-text-line-height-body-m);\n  }\n\n  summary {\n    font-weight: var(--gds-text-weight-regular);\n    list-style: none;\n    padding: 0.4lh 0.2ch;\n    font-size: var(--gds-text-size-body-l);\n    line-height: var(--gds-text-line-height-body-l);\n    color: currentColor;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n    user-select: none;\n    outline-offset: var(--gds-space-2xs);\n    outline-color: currentColor;\n    padding-inline: var(--gds-space-m);\n  }\n\n  details summary::-webkit-details-marker {\n    display: none;\n  }\n\n  summary:focus-visible {\n    border-radius: var(--gds-space-2xs);\n  }\n\n  details:hover summary {\n    background: color-mix(in srgb, currentColor, transparent 95%);\n  }\n\n  summary::after {\n    content: '+';\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 24px;\n    height: 24px;\n    font-weight: var(--gds-text-weight-regular);\n    font-size: var(--gds-text-size-body-l);\n  }\n\n  details[open] summary::after {\n    content: '-';\n  }\n\n  details[open] {\n    border-bottom: var(--gds-space-4xs) solid\n      color-mix(in srgb, currentColor, transparent 95%);\n    padding-bottom: 0.4lh;\n    background: color-mix(in srgb, currentColor, transparent 95%);\n  }\n\n  details[open] > *:not(summary) {\n    margin-left: var(--gds-space-m);\n  }\n\n  details[open] summary {\n    margin-bottom: 0.4lh;\n  }\n\n  details[open] + details {\n    border: none;\n  }\n\n  details:last-of-type {\n    border-bottom: var(--gds-space-4xs) solid\n      color-mix(in srgb, currentColor, transparent 90%);\n    margin-bottom: var(--gds-space-xl);\n  }\n\n  a {\n    color: currentColor;\n    text-decoration-color: currentColor;\n  }\n\n  /*\n  * Iframe\n  */\n  iframe {\n    border: var(--gds-space-4xs) solid var(--gds-color-l2-border-primary);\n    border-radius: var(--gds-space-xs);\n    min-width: 100%;\n    margin-bottom: var(--gds-space-l);\n  }\n`;\n\n// libs/core/src/components/rich-text/rich-text.component.ts\nvar GdsRichText = class extends withLayoutChildProps(\n  withMarginProps(GdsElement)\n) {\n  constructor() {\n    super(...arguments);\n    this.captureMode = \"clone\";\n  }\n  /**\n   * Forwards the selector to the corresponding function on the inner shadowRoot.\n   */\n  querySelectorAll(selector) {\n    if (!this.shadowRoot)\n      return new NodeList();\n    return this.shadowRoot.querySelectorAll(selector);\n  }\n  /**\n   * Forwards the selector to the corresponding function on the inner shadowRoot.\n   */\n  querySelector(selector) {\n    if (!this.shadowRoot)\n      return null;\n    return this.shadowRoot.querySelector(selector);\n  }\n  /**\n   * Forwards innerHTML from the inner shadowRoot.\n   */\n  get innerHTML() {\n    var _a;\n    return ((_a = this.shadowRoot) == null ? void 0 : _a.innerHTML) || \"\";\n  }\n  set innerHTML(value) {\n    if (!this.shadowRoot)\n      return;\n    this.shadowRoot.innerHTML = value;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this._captureDOM();\n  }\n  _captureDOM() {\n    if (!this.shadowRoot || this.childNodes.length === 0)\n      return;\n    if (this.captureMode === \"move\") {\n      this.shadowRoot.replaceChildren(...Array.from(this.childNodes));\n      return;\n    }\n    const cloned = Array.from(this.childNodes).map(\n      (node) => node.cloneNode(true)\n    );\n    this.shadowRoot.replaceChildren(...cloned);\n  }\n};\nGdsRichText.styles = [tokens, defaultStyles, styles];\n__decorateClass([\n  property()\n], GdsRichText.prototype, \"captureMode\", 2);\n__decorateClass([\n  observeLightDOM({\n    childList: true,\n    subtree: true,\n    attributes: true,\n    characterData: true\n  })\n], GdsRichText.prototype, \"_captureDOM\", 1);\nGdsRichText = __decorateClass([\n  gdsCustomElement(\"gds-rich-text\")\n], GdsRichText);\n\nexport {\n  GdsRichText\n};\n","import {\n  GdsFieldBase\n} from \"./chunk.LFP624OU.js\";\nimport {\n  GdsFormControlFooter\n} from \"./chunk.NFVK7X4Q.js\";\nimport {\n  GdsFormControlHeader\n} from \"./chunk.OCDDV4IH.js\";\nimport {\n  IconChevronBottom\n} from \"./chunk.IJLBIJ5M.js\";\nimport {\n  GdsFormControlElement\n} from \"./chunk.5FHEJLB5.js\";\nimport {\n  observeLightDOM\n} from \"./chunk.WM7HBMMV.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  withLayoutChildProps,\n  withMarginProps,\n  withSizeXProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/select/select.component.ts\nimport { localized } from \"@lit/localize\";\nimport { property, query } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\n// libs/core/src/components/select/select.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, reset, transitional-styles;\n  @layer base {\n    :host {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      contain: layout;\n      isolation: isolate;\n      gap: var(--gds-space-xs);\n    }\n\n    .select-container {\n      display: contents;\n    }\n\n    select,\n    ::slotted(select) {\n      appearance: none;\n      outline: none;\n      border: none;\n      font: inherit;\n      flex: 1;\n      box-sizing: border-box;\n      background: transparent;\n      height: 100%;\n      opacity: 0;\n      position: absolute;\n      z-index: 1;\n      inset: 0;\n\n      &::-ms-expand {\n        display: none;\n      }\n    }\n\n    select[multiple] {\n      opacity: 1;\n      position: relative;\n      width: 100%;\n    }\n\n    label {\n      flex: 1;\n    }\n  }\n`;\n\n// libs/core/src/components/select/select.component.ts\nvar _isValueInitialized, _handleSelectElementChange, _setValueFromSelectElement, setValueFromSelectElement_fn, _renderFieldContents, renderFieldContents_fn, _renderSlotLead, renderSlotLead_fn, _renderMainLabel, renderMainLabel_fn, _renderMainSlot, renderMainSlot_fn, _renderChevron, renderChevron_fn;\nvar Select = class extends GdsFormControlElement {\n  constructor() {\n    super(...arguments);\n    __privateAdd(this, _setValueFromSelectElement);\n    /**\n     * Renders the main content area of the select field.\n     * Composes the field from various sub-elements.\n     */\n    __privateAdd(this, _renderFieldContents);\n    /**\n     * Renders the leading slot content if provided.\n     */\n    __privateAdd(this, _renderSlotLead);\n    /**\n     * Renders the main label text for single-select mode.\n     * Shows either selected option text or placeholder.\n     */\n    __privateAdd(this, _renderMainLabel);\n    /**\n     * Renders the main slot and select container.\n     * The select container is where the native select is moved to.\n     */\n    __privateAdd(this, _renderMainSlot);\n    /**\n     * Renders the chevron icon button for single-select mode.\n     * Provides visual indication of dropdown functionality.\n     */\n    __privateAdd(this, _renderChevron);\n    this.supportingText = \"\";\n    this.size = \"large\";\n    __privateAdd(this, _isValueInitialized, false);\n    __privateAdd(this, _handleSelectElementChange, (e) => {\n      e.stopPropagation();\n      __privateMethod(this, _setValueFromSelectElement, setValueFromSelectElement_fn).call(this);\n      requestAnimationFrame(() => {\n        this.dispatchEvent(\n          new CustomEvent(\"input\", {\n            detail: { value: this.value },\n            bubbles: true,\n            composed: true\n          })\n        );\n        this.dispatchEvent(\n          new CustomEvent(\"change\", {\n            detail: { value: this.value },\n            bubbles: true,\n            composed: true\n          })\n        );\n      });\n    });\n  }\n  get value() {\n    return this._internalValue;\n  }\n  set value(value) {\n    __privateGet(this, _isValueInitialized) || __privateSet(this, _isValueInitialized, true);\n    this._internalValue = value;\n  }\n  /**\n   * Returns the display value for the select component.\n   * For single-select mode, this is the selected option text.\n   * For multi-select mode, this is a comma-separated list of selected option texts.\n   */\n  get displayValue() {\n    if (!this.selectElement)\n      return \"\";\n    return Array.from(this.selectElement.selectedOptions).map((o) => o.text).join(\", \");\n  }\n  /**\n   * Wheter the select element is in multiple selection mode.\n   */\n  get multiple() {\n    var _a, _b;\n    return (_b = (_a = this.selectElement) == null ? void 0 : _a.multiple) != null ? _b : false;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.updateComplete.then(() => {\n      this._captureDOM();\n      this._handleValueChange();\n    });\n  }\n  render() {\n    const CLASSES = {\n      multiple: this.multiple\n    };\n    this.selectElement && (this.selectElement.disabled = this.disabled);\n    return html`\n      <gds-form-control-header class=\"size-${this.size}\">\n        <label for=\"select\" slot=\"label\" id=\"label-text\">${this.label}</label>\n        <span slot=\"supporting-text\" id=\"supporting-text\">\n          ${this.supportingText}\n        </span>\n      </gds-form-control-header>\n\n      <gds-field-base\n        .size=${this.size}\n        .disabled=${this.disabled}\n        .invalid=${this.invalid}\n        .multiline=${this.multiple}\n        align-items=${this.multiple ? \"flex-start\" : \"center\"}\n        class=${classMap(CLASSES)}\n      >\n        ${__privateMethod(this, _renderFieldContents, renderFieldContents_fn).call(this)}\n      </gds-field-base>\n\n      <gds-form-control-footer\n        class=\"size-${this.size}\"\n        .validationMessage=${this.invalid && (this.errorMessage || this.validationMessage)}\n      ></gds-form-control-footer>\n    `;\n  }\n  _captureDOM() {\n    if (!this.shadowRoot || this.childNodes.length === 0 || !this._elSelectContainer)\n      return;\n    const cloned = Array.from(this.children).filter((n) => n.nodeName === \"SELECT\").map((node) => {\n      const clone = node.cloneNode(true);\n      clone.addEventListener(\"change\", __privateGet(this, _handleSelectElementChange));\n      clone.addEventListener(\"input\", __privateGet(this, _handleSelectElementChange));\n      clone.setAttribute(\n        \"aria-describedby\",\n        \"supporting-text extended-supporting-text sub-label message\"\n      );\n      clone.setAttribute(\"id\", \"select\");\n      clone.disabled = this.disabled;\n      if (!__privateGet(this, _isValueInitialized))\n        this.value = clone.value;\n      else\n        clone.value = this.value;\n      return clone;\n    });\n    this._elSelectContainer.replaceChildren(...cloned);\n  }\n  /**\n   * Handles form reset events by selecting the first option.\n   */\n  formResetCallback() {\n    if (!this.selectElement)\n      return;\n    if (this.selectElement.multiple) {\n      Array.from(this.selectElement.options).forEach((option) => {\n        option.selected = false;\n      });\n      this.value = [];\n    } else {\n      const firstOption = this.selectElement.options[0];\n      if (firstOption) {\n        this.value = firstOption.value;\n        this.selectElement.value = firstOption.value;\n      }\n    }\n  }\n  _getValidityAnchor() {\n    return this.selectElement;\n  }\n  _handleValueChange() {\n    if (!this.selectElement)\n      return;\n    if (this.multiple) {\n      const valArr = this.value || [];\n      Array.from(this.selectElement.options).forEach((option) => {\n        option.selected = valArr.includes(option.value);\n      });\n    } else\n      this.selectElement.value = this.value;\n    this.requestUpdate();\n  }\n};\n_isValueInitialized = new WeakMap();\n_handleSelectElementChange = new WeakMap();\n_setValueFromSelectElement = new WeakSet();\nsetValueFromSelectElement_fn = function() {\n  if (!this.selectElement)\n    return;\n  if (this.multiple) {\n    const selectedOptions = Array.from(this.selectElement.selectedOptions);\n    this.value = selectedOptions.map((o) => o.value);\n  } else {\n    this.value = this.selectElement.value;\n  }\n};\n_renderFieldContents = new WeakSet();\nrenderFieldContents_fn = function() {\n  const elements = [\n    __privateMethod(this, _renderSlotLead, renderSlotLead_fn).call(this),\n    __privateMethod(this, _renderMainSlot, renderMainSlot_fn).call(this),\n    __privateMethod(this, _renderMainLabel, renderMainLabel_fn).call(this),\n    __privateMethod(this, _renderChevron, renderChevron_fn).call(this)\n  ];\n  return elements.map((element) => html`${element}`);\n};\n_renderSlotLead = new WeakSet();\nrenderSlotLead_fn = function() {\n  return html`<slot name=\"lead\" slot=\"lead\"></slot>`;\n};\n_renderMainLabel = new WeakSet();\nrenderMainLabel_fn = function() {\n  if (!this.multiple) {\n    return html`<label id=\"placeholder\">${this.displayValue}</label>`;\n  }\n};\n_renderMainSlot = new WeakSet();\nrenderMainSlot_fn = function() {\n  return html`<div class=\"select-container\"></div>`;\n};\n_renderChevron = new WeakSet();\nrenderChevron_fn = function() {\n  if (!this.multiple) {\n    return html` <gds-icon-chevron-bottom></gds-icon-chevron-bottom> `;\n  }\n};\nSelect.styles = [tokens, styles];\n__decorateClass([\n  property({ attribute: \"supporting-text\" })\n], Select.prototype, \"supportingText\", 2);\n__decorateClass([\n  property({ type: String })\n], Select.prototype, \"size\", 2);\n__decorateClass([\n  query(\"select\")\n], Select.prototype, \"selectElement\", 2);\n__decorateClass([\n  property()\n], Select.prototype, \"value\", 1);\n__decorateClass([\n  query(\".select-container\")\n], Select.prototype, \"_elSelectContainer\", 2);\n__decorateClass([\n  observeLightDOM({\n    childList: true,\n    subtree: true,\n    attributes: true,\n    characterData: true\n  })\n], Select.prototype, \"_captureDOM\", 1);\n__decorateClass([\n  watch(\"value\")\n], Select.prototype, \"_handleValueChange\", 1);\nSelect = __decorateClass([\n  localized()\n], Select);\nvar GdsSelect = class extends withLayoutChildProps(\n  withSizeXProps(withMarginProps(Select))\n) {\n};\nGdsSelect = __decorateClass([\n  gdsCustomElement(\"gds-select\", {\n    dependsOn: [\n      GdsFormControlHeader,\n      GdsFormControlFooter,\n      GdsFieldBase,\n      IconChevronBottom\n    ]\n  })\n], GdsSelect);\n\nexport {\n  GdsSelect\n};\n","import {\n  withPositioningProps,\n  withSizeXProps,\n  withSizeYProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.NUUST5OZ.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/img/img.component.ts\nimport { property } from \"lit/decorators.js\";\n\n// libs/core/src/components/img/img.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    display: block;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-size: 0;\n    width: 100%;\n    height: auto;\n    overflow: hidden;\n  }\n\n  img {\n    display: flex;\n    width: 100%;\n    height: 100%;\n  }\n`;\nvar img_style_default = style;\n\n// libs/core/src/components/img/img.component.ts\nvar GdsImg = class extends withPositioningProps(\n  withSizeXProps(withSizeYProps(GdsElement))\n) {\n  render() {\n    return html`<img src=\"${this.src}\" alt=\"${this.alt}\" />`;\n  }\n};\nGdsImg.styles = [tokens, img_style_default];\n__decorateClass([\n  styleExpressionProperty()\n], GdsImg.prototype, \"aspect-ratio\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    property: \"border-radius\",\n    valueTemplate: (v) => `var(--gds-space-${v})`\n  })\n], GdsImg.prototype, \"border-radius\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: \"img\"\n  })\n], GdsImg.prototype, \"object-fit\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: \"img\"\n  })\n], GdsImg.prototype, \"object-position\", 2);\n__decorateClass([\n  property()\n], GdsImg.prototype, \"src\", 2);\n__decorateClass([\n  property()\n], GdsImg.prototype, \"alt\", 2);\nGdsImg = __decorateClass([\n  gdsCustomElement(\"gds-img\")\n], GdsImg);\n\nexport {\n  GdsImg\n};\n","import {\n  GdsFieldBase\n} from \"./chunk.LFP624OU.js\";\nimport {\n  GdsFormControlFooter\n} from \"./chunk.NFVK7X4Q.js\";\nimport {\n  GdsFormControlHeader\n} from \"./chunk.OCDDV4IH.js\";\nimport {\n  IconCrossLarge\n} from \"./chunk.I463CBWH.js\";\nimport {\n  GdsFlex\n} from \"./chunk.RLW3O3CX.js\";\nimport {\n  GdsButton,\n  forwardAttributes\n} from \"./chunk.W45PHIFX.js\";\nimport {\n  GdsFormControlElement\n} from \"./chunk.5FHEJLB5.js\";\nimport {\n  withLayoutChildProps,\n  withMarginProps,\n  withSizeXProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/input/input.component.ts\nimport { localized, msg } from \"@lit/localize\";\nimport { property, query, queryAsync } from \"lit/decorators.js\";\nimport { choose } from \"lit/directives/choose.js\";\nimport { nothing } from \"lit/html.js\";\n\n// libs/core/src/components/input/input.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, simplified;\n\n  @layer base {\n    * {\n      box-sizing: border-box;\n    }\n\n    :host {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      contain: layout;\n      isolation: isolate;\n      gap: var(--gds-space-xs);\n    }\n\n    :host([disabled]) {\n      color: var(--gds-color-l3-content-disabled);\n      pointer-events: none;\n    }\n\n    :host([size='small']) input {\n      font-size: var(--gds-text-size-detail-s);\n      line-height: var(--gds-text-line-height-detail-s);\n    }\n\n    input {\n      appearance: none;\n      background-color: transparent;\n      border: 0;\n      box-sizing: border-box;\n      font-family: inherit;\n      margin: unset;\n      outline: none;\n      overflow: hidden;\n      padding: unset;\n      width: 100%;\n      font-size: var(--gds-text-size-detail-m);\n      line-height: var(--gds-text-line-height-detail-m);\n    }\n\n    :host([size='small']) slot[name='lead']::slotted(*) {\n      line-height: 18px;\n    }\n\n    :host([size='small']) slot[name='lead']::slotted(*) {\n      min-width: var(--gds-space-m);\n      max-width: var(--gds-space-m);\n      display: flex;\n    }\n\n    slot[name='lead']::slotted(*) {\n      min-width: var(--gds-space-l);\n      display: flex;\n    }\n  }\n\n  @layer simplified {\n  }\n`;\n\n// libs/core/src/components/input/input.component.ts\nvar _renderDefault, renderDefault_fn, _renderFloatingLabel, renderFloatingLabel_fn, _forwardableAttrs, _handleOnInput, _handleOnChange, _handleFieldClick, _handleClearBtnClick, _renderFieldContents, renderFieldContents_fn, _renderSlotLead, renderSlotLead_fn, _renderSlotTrail, renderSlotTrail_fn, _renderNativeInput, renderNativeInput_fn, _renderClearButton, renderClearButton_fn, _shouldShowRemainingChars, shouldShowRemainingChars_get;\nvar Input = class extends GdsFormControlElement {\n  constructor() {\n    super();\n    __privateAdd(this, _renderDefault);\n    // variant=\"floatingLabel\"\n    __privateAdd(this, _renderFloatingLabel);\n    __privateAdd(this, _renderFieldContents);\n    __privateAdd(this, _renderSlotLead);\n    __privateAdd(this, _renderSlotTrail);\n    __privateAdd(this, _renderNativeInput);\n    __privateAdd(this, _renderClearButton);\n    __privateAdd(this, _shouldShowRemainingChars);\n    this.supportingText = \"\";\n    this.showExtendedSupportingText = false;\n    this.clearable = false;\n    this.maxlength = Number.MAX_SAFE_INTEGER;\n    this.variant = \"default\";\n    this.size = \"large\";\n    // Any attribute name added here will get forwarded to the native <input> element.\n    __privateAdd(this, _forwardableAttrs, (attr) => [\"type\", \"placeholder\", \"required\"].includes(attr.name));\n    __privateAdd(this, _handleOnInput, (e) => {\n      const element = e.target;\n      this.value = element.value;\n    });\n    __privateAdd(this, _handleOnChange, (e) => {\n      const element = e.target;\n      this.value = element.value;\n      this.dispatchEvent(\n        new Event(\"change\", {\n          bubbles: true,\n          composed: true\n        })\n      );\n    });\n    __privateAdd(this, _handleFieldClick, () => {\n      this.elInputAsync.then((el) => el.focus());\n    });\n    __privateAdd(this, _handleClearBtnClick, () => {\n      this.value = \"\";\n      this.dispatchEvent(\n        new Event(\"gds-input-cleared\", {\n          bubbles: true,\n          composed: true\n        })\n      );\n      this.dispatchEvent(\n        new Event(\"input\", {\n          bubbles: true,\n          composed: true\n        })\n      );\n    });\n    this.value = \"\";\n  }\n  /**\n   * A reference to the clear button element. Returns null if there is no clear button.\n   * Intended for use in integration tests.\n   */\n  test_getClearButton() {\n    var _a;\n    return (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(\"#clear-button\");\n  }\n  /**\n   * A reference to the field element. This does not refer to the input element itself,\n   * but the wrapper that makes up the visual field.\n   * Intended for use in integration tests.\n   */\n  test_getFieldElement() {\n    var _a;\n    return (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(\"#field\");\n  }\n  render() {\n    return html`${choose(this.variant, [\n      [\"default\", () => __privateMethod(this, _renderDefault, renderDefault_fn).call(this)],\n      [\"floating-label\", () => __privateMethod(this, _renderFloatingLabel, renderFloatingLabel_fn).call(this)]\n    ])}`;\n  }\n  _getValidityAnchor() {\n    return this.elInput;\n  }\n};\n_renderDefault = new WeakSet();\nrenderDefault_fn = function() {\n  var _a;\n  return html`\n      <gds-form-control-header class=\"size-${this.size}\">\n        <label for=\"input\" slot=\"label\">${this.label}</label>\n        <span slot=\"supporting-text\" id=\"supporting-text\">\n          ${this.supportingText}\n        </span>\n        <slot\n          name=\"extended-supporting-text\"\n          slot=\"extended-supporting-text\"\n        ></slot>\n      </gds-form-control-header>\n      <gds-field-base\n        .size=${this.size}\n        .disabled=${this.disabled}\n        .invalid=${this.invalid}\n        @click=${__privateGet(this, _handleFieldClick)}\n        id=\"field\"\n      >\n        ${__privateMethod(this, _renderFieldContents, renderFieldContents_fn).call(this)}\n      </gds-field-base>\n      <gds-form-control-footer\n        class=\"size-${this.size}\"\n        .charCounter=${__privateGet(this, _shouldShowRemainingChars, shouldShowRemainingChars_get) && this.maxlength - (((_a = this.value) == null ? void 0 : _a.length) || 0)}\n        .validationMessage=${this.invalid && (this.errorMessage || this.validationMessage)}\n      ></gds-form-control-footer>\n    `;\n};\n_renderFloatingLabel = new WeakSet();\nrenderFloatingLabel_fn = function() {\n  return nothing;\n};\n_forwardableAttrs = new WeakMap();\n_handleOnInput = new WeakMap();\n_handleOnChange = new WeakMap();\n_handleFieldClick = new WeakMap();\n_handleClearBtnClick = new WeakMap();\n_renderFieldContents = new WeakSet();\nrenderFieldContents_fn = function() {\n  const elements = [\n    __privateMethod(this, _renderSlotLead, renderSlotLead_fn).call(this),\n    __privateMethod(this, _renderNativeInput, renderNativeInput_fn).call(this),\n    __privateMethod(this, _renderClearButton, renderClearButton_fn).call(this),\n    __privateMethod(this, _renderSlotTrail, renderSlotTrail_fn).call(this)\n  ];\n  return elements.map((element) => html`${element}`);\n};\n_renderSlotLead = new WeakSet();\nrenderSlotLead_fn = function() {\n  return html` <slot slot=\"lead\" name=\"lead\"></slot> `;\n};\n_renderSlotTrail = new WeakSet();\nrenderSlotTrail_fn = function() {\n  return html`<slot slot=\"trail\" name=\"trail\"></slot>`;\n};\n_renderNativeInput = new WeakSet();\nrenderNativeInput_fn = function() {\n  return html`\n      <input\n        @input=${__privateGet(this, _handleOnInput)}\n        @change=${__privateGet(this, _handleOnChange)}\n        .value=${this.value}\n        id=\"input\"\n        ?disabled=${this.disabled}\n        aria-describedby=\"supporting-text extended-supporting-text sub-label message\"\n        aria-invalid=${this.invalid}\n        placeholder=\" \"\n        ${forwardAttributes(__privateGet(this, _forwardableAttrs))}\n      />\n    `;\n};\n_renderClearButton = new WeakSet();\nrenderClearButton_fn = function() {\n  var _a;\n  if (this.clearable && (((_a = this.value) == null ? void 0 : _a.length) || 0) > 0)\n    return html`<gds-button\n        size=\"${this.size === \"small\" ? \"xs\" : \"small\"}\"\n        rank=\"tertiary\"\n        variant=\"${this.invalid ? \"negative\" : \"\"}\"\n        ?disabled=\"${this.disabled}\"\n        label=\"${msg(\"Clear input\")}\"\n        @click=${__privateGet(this, _handleClearBtnClick)}\n        id=\"clear-button\"\n        slot=\"action\"\n      >\n        <gds-icon-cross-large />\n      </gds-button>`;\n  else\n    return nothing;\n};\n_shouldShowRemainingChars = new WeakSet();\nshouldShowRemainingChars_get = function() {\n  return this.maxlength < Number.MAX_SAFE_INTEGER;\n};\nInput.styles = [tokens, styles];\n__decorateClass([\n  property({ attribute: \"supporting-text\" })\n], Input.prototype, \"supportingText\", 2);\n__decorateClass([\n  property({\n    attribute: \"show-extended-supporting-text\",\n    type: Boolean,\n    reflect: true\n  })\n], Input.prototype, \"showExtendedSupportingText\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], Input.prototype, \"clearable\", 2);\n__decorateClass([\n  property({ type: Number })\n], Input.prototype, \"maxlength\", 2);\n__decorateClass([\n  property({ type: String })\n], Input.prototype, \"variant\", 2);\n__decorateClass([\n  property({ type: String })\n], Input.prototype, \"size\", 2);\n__decorateClass([\n  queryAsync(\"input\")\n], Input.prototype, \"elInputAsync\", 2);\n__decorateClass([\n  query(\"input\")\n], Input.prototype, \"elInput\", 2);\nInput = __decorateClass([\n  localized()\n], Input);\nvar GdsInput = class extends withSizeXProps(\n  withMarginProps(withLayoutChildProps(Input))\n) {\n};\nGdsInput = __decorateClass([\n  gdsCustomElement(\"gds-input\", {\n    dependsOn: [\n      GdsFormControlHeader,\n      GdsFormControlFooter,\n      GdsFieldBase,\n      GdsFlex,\n      GdsButton,\n      IconCrossLarge\n    ]\n  })\n], GdsInput);\n\nexport {\n  GdsInput\n};\n","import {\n  withLayoutChildProps,\n  withMarginProps,\n  withSizeXProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.NUUST5OZ.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/link/link.component.ts\nimport { unsafeCSS } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { html as staticHtml } from \"lit/static-html.js\";\n\n// libs/core/src/components/link/link.styles.ts\nimport { css } from \"lit\";\nvar style = css`\n  @layer core, link;\n\n  @layer core {\n    :host {\n      display: inline-block;\n    }\n  }\n\n  @layer link {\n    a {\n      display: flex;\n      align-items: center;\n      gap: 1ch;\n      text-decoration: none;\n      text-underline-offset: 0.2lh;\n      color: currentColor;\n      outline-offset: 4px;\n      outline-color: currentColor;\n      font-weight: var(--gds-text-weight-book);\n      transition: all 0.2s ease-in-out;\n\n      &:hover {\n        text-decoration: underline;\n        text-underline-offset: 0.16lh;\n\n        &:active {\n          text-underline-offset: 0.08lh;\n        }\n      }\n    }\n  }\n`;\nvar link_styles_default = style;\n\n// libs/core/src/components/link/link.component.ts\nvar _defaultRel, defaultRel_get;\nvar GdsLink = class extends withMarginProps(\n  withSizeXProps(withLayoutChildProps(GdsElement))\n) {\n  constructor() {\n    super();\n    __privateAdd(this, _defaultRel);\n    this.href = \"\";\n  }\n  render() {\n    return staticHtml`\n      <a\n        href=${ifDefined(this.href)}\n        target=${ifDefined(this.target)}\n        rel=${ifDefined(this.rel || __privateGet(this, _defaultRel, defaultRel_get))}\n        download=${ifDefined(this.download)}\n      >\n        <slot name=\"lead\"></slot>\n        <slot></slot>\n        <slot name=\"trail\"></slot>\n      </a>\n    `;\n  }\n};\n_defaultRel = new WeakSet();\ndefaultRel_get = function() {\n  return this.target === \"_blank\" ? \"noreferrer noopener\" : void 0;\n};\nGdsLink.styles = [tokens, unsafeCSS(link_styles_default)];\nGdsLink.shadowRootOptions = {\n  mode: \"open\",\n  delegatesFocus: true\n};\n__decorateClass([\n  property()\n], GdsLink.prototype, \"href\", 2);\n__decorateClass([\n  property()\n], GdsLink.prototype, \"target\", 2);\n__decorateClass([\n  property()\n], GdsLink.prototype, \"rel\", 2);\n__decorateClass([\n  property()\n], GdsLink.prototype, \"download\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v,\n    selector: \"a\"\n  })\n], GdsLink.prototype, \"text-decoration\", 2);\nGdsLink = __decorateClass([\n  gdsCustomElement(\"gds-link\")\n], GdsLink);\n\nexport {\n  GdsLink\n};\n","import {\n  GdsFlex\n} from \"./chunk.RLW3O3CX.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.NUUST5OZ.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/mask/mask.component.ts\nimport { html } from \"lit/static-html.js\";\n\n// libs/core/src/components/mask/mask.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    isolation: isolate;\n  }\n\n  [part='mask'] {\n    position: absolute;\n    inset: 0;\n    z-index: -1;\n    pointer-events: none;\n  }\n\n  [part='content'] {\n    z-index: 1;\n    position: absolute;\n    inset: 0;\n  }\n`;\nvar mask_style_default = style;\n\n// libs/core/src/components/mask/mask.component.ts\nvar GdsMask = class extends GdsFlex {\n  constructor() {\n    super();\n    this[\"mask-size\"] = \"cover\";\n    this[\"mask-repeat\"] = \"no-repeat\";\n    this[\"mask-position\"] = \"center\";\n    this.position = \"relative\";\n    this.inset = \"0\";\n  }\n  render() {\n    return html`<div part=\"mask\"></div>\n      <div part=\"content\"><slot></slot></div>`;\n  }\n};\nGdsMask.styles = [tokens, mask_style_default];\n__decorateClass([\n  styleExpressionProperty({\n    selector: '[part=\"mask\"]',\n    valueTemplate: (v) => {\n      const [direction] = v.split(\"/\");\n      return `linear-gradient(to ${direction}, rgba(0, 0, 0, 1) 20%, rgba(0, 0, 0, 0) 100%)`;\n    }\n  })\n], GdsMask.prototype, \"mask-image\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v,\n    selector: '[part=\"mask\"]'\n  })\n], GdsMask.prototype, \"mask-size\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v,\n    selector: '[part=\"mask\"]'\n  })\n], GdsMask.prototype, \"mask-repeat\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v,\n    selector: '[part=\"mask\"]'\n  })\n], GdsMask.prototype, \"mask-position\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    selector: '[part=\"mask\"]',\n    valueTemplate: function(v) {\n      const [backgroundColor, backgroundColorAlpha] = v.split(\"/\");\n      const background = backgroundColorAlpha ? `color-mix(in srgb, var(--gds-color-${\"l\" + this.level}-background-${backgroundColor}) ${parseFloat(backgroundColorAlpha) * 100}%, transparent 0%)` : `var(--gds-color-${\"l\" + this.level}-background-${backgroundColor})`;\n      return background;\n    }\n  })\n], GdsMask.prototype, \"background-color\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v,\n    selector: '[part=\"mask\"]'\n  })\n], GdsMask.prototype, \"backdrop-filter\", 2);\nGdsMask = __decorateClass([\n  gdsCustomElement(\"gds-mask\")\n], GdsMask);\n\nexport {\n  GdsMask\n};\n","import {\n  withLayoutChildProps,\n  withSizeXProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/menu-button/menu-button.component.ts\nimport { unsafeCSS } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { literal, html as staticHtml } from \"lit/static-html.js\";\n\n// libs/core/src/components/menu-button/menu-button.styles.ts\nimport { css } from \"lit\";\nvar style = css`\n  @layer tokens, core, a11y, disabled, variants, sizes, sets;\n\n  @layer tokens {\n    :host {\n      --_gap: var(--gds-space-xs);\n\n      --_padding-inline: var(--gds-space-m);\n      --_padding-block: var(--gds-space-xs);\n\n      --_color-bg: transparent;\n      --_color-text: var(--gds-color-l3-content-tertiary);\n      --_color-border: transparent;\n\n      --_font-size: 1rem;\n      --_font-weight: 400;\n      --_line-height: 1.25;\n\n      display: inline-block;\n      isolation: isolate;\n      max-width: 100%;\n      height: 100%;\n    }\n  }\n\n  @layer core {\n    .button {\n      align-items: center;\n\n      background-color: var(--_color-bg);\n\n      border-color: var(--_color-border);\n      border-style: none;\n      border-bottom-style: solid;\n      border-bottom-width: 2px;\n\n      box-sizing: border-box;\n      color: var(--_color-text);\n      color-scheme: dark light;\n      cursor: pointer;\n\n      display: inline-flex;\n      gap: var(--_gap);\n      height: 100%;\n\n      inline-size: 100%;\n      justify-content: space-between;\n      justify-items: center;\n      outline-color: transparent;\n      outline-offset: -2px;\n      outline-style: solid;\n      outline-width: 2px;\n      padding-block: var(--_padding-block);\n      padding-inline: var(--_padding-inline);\n      position: relative;\n      font-family: inherit;\n      font-size: var(--_font-size);\n      font-weight: var(--_font-weight);\n      line-height: var(--_line-height);\n      transition-property: color, border-color;\n      transition: all 0.4s;\n\n      &:focus-visible {\n        outline-color: currentColor;\n        border-radius: 6px;\n        overflow: visible;\n        border-color: transparent;\n      }\n\n      &:hover,\n      &.selected:hover,\n      &:active {\n        background-color: color-mix(\n          in srgb,\n          transparent,\n          var(--gds-color-l3-states-light-hover)\n        );\n        --_color-border: var(--gds-color-l3-border-secondary);\n      }\n\n      &.selected {\n        background-color: color-mix(\n          in srgb,\n          transparent,\n          var(--gds-color-l3-states-light-hover)\n        );\n        --_color-border: var(--gds-color-l3-border-primary);\n      }\n\n      slot:not([name]) {\n        display: inline-block;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n    }\n    .compact {\n      display: flex;\n      flex-direction: column;\n      --_padding-inline: var(--gds-space-s);\n      --_gap: 1px;\n      font-size: 0.875rem;\n      height: 56px;\n      justify-content: center;\n\n      & > slot[name] {\n        order: 0;\n      }\n      & > slot:not([name]) {\n        order: 1;\n      }\n    }\n\n    a {\n      text-decoration: none;\n    }\n  }\n\n  :disabled {\n    border-color: var(--_color-bg);\n    color: var(--gds-color-l3-content-disabled);\n    pointer-events: none;\n  }\n\n  @layer a11y {\n    @media (prefers-reduced-motion: reduce) {\n      .button {\n        transition: none;\n      }\n    }\n  }\n`;\nvar menu_button_styles_default = style;\n\n// libs/core/src/components/menu-button/menu-button.component.ts\nvar _isLink, isLink_get, _defaultRel, defaultRel_get;\nvar GdsMenuButton = class extends withSizeXProps(\n  withLayoutChildProps(GdsElement)\n) {\n  constructor() {\n    super();\n    __privateAdd(this, _isLink);\n    __privateAdd(this, _defaultRel);\n    this.disabled = false;\n    this.label = \"\";\n    this.href = \"\";\n    this.compact = false;\n    this.selected = false;\n  }\n  render() {\n    const classes = {\n      button: true,\n      selected: this.selected,\n      compact: this.compact\n    };\n    const tag = __privateGet(this, _isLink, isLink_get) ? literal`a` : literal`button`;\n    return staticHtml`\n      <${tag}\n        class=\"${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label}\"\n        href=${ifDefined(__privateGet(this, _isLink, isLink_get) ? this.href : void 0)}\n        target=${ifDefined(__privateGet(this, _isLink, isLink_get) ? this.target : void 0)}\n        rel=${ifDefined(__privateGet(this, _isLink, isLink_get) ? this.rel || __privateGet(this, _defaultRel, defaultRel_get) : void 0)}\n        download=${ifDefined(__privateGet(this, _isLink, isLink_get) ? this.download : void 0)}\n      >\n        <slot name=\"lead\"></slot>\n        <slot part=\"main-slot\"></slot>\n        <slot name=\"trail\"></slot>\n      </${tag}>\n    `;\n  }\n};\n_isLink = new WeakSet();\nisLink_get = function() {\n  return this.href.length > 0;\n};\n_defaultRel = new WeakSet();\ndefaultRel_get = function() {\n  return this.target === \"_blank\" ? \"noreferrer noopener\" : void 0;\n};\nGdsMenuButton.styles = [tokens, unsafeCSS(menu_button_styles_default)];\nGdsMenuButton.shadowRootOptions = {\n  mode: \"open\",\n  delegatesFocus: true\n};\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsMenuButton.prototype, \"disabled\", 2);\n__decorateClass([\n  property()\n], GdsMenuButton.prototype, \"label\", 2);\n__decorateClass([\n  property()\n], GdsMenuButton.prototype, \"href\", 2);\n__decorateClass([\n  property()\n], GdsMenuButton.prototype, \"target\", 2);\n__decorateClass([\n  property()\n], GdsMenuButton.prototype, \"rel\", 2);\n__decorateClass([\n  property()\n], GdsMenuButton.prototype, \"download\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsMenuButton.prototype, \"compact\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsMenuButton.prototype, \"selected\", 2);\nGdsMenuButton = __decorateClass([\n  gdsCustomElement(\"gds-menu-button\")\n], GdsMenuButton);\n\nexport {\n  GdsMenuButton\n};\n","import {\n  GdsDiv\n} from \"./chunk.PHLWSTVX.js\";\nimport {\n  forSpaceTokens\n} from \"./chunk.76QWARGM.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.NUUST5OZ.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  __decorateClass,\n  __spreadProps,\n  __spreadValues\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/grid/grid.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    --_c: 12;\n    --_grid-col: repeat(var(--_c), 1fr);\n    width: 100%;\n    display: grid;\n    grid-template-columns: var(--_grid-col);\n    grid-column-gap: var(--_gap-column, 0px);\n    grid-row-gap: var(--_gap-row, 0px);\n  }\n\n  :host([auto-columns]) {\n    --_col-count: var(--_c, 0);\n    --_gap-count: calc(var(--_col-count) - 1);\n    --_total-gap-width: calc(var(--_gap-count) * var(--_gap-column, 0px));\n    --_col-width-max: calc(\n      (100% - var(--_total-gap-width)) / var(--_col-count)\n    );\n    grid-template-columns: repeat(\n      auto-fill,\n      minmax(max(var(--_col-width), var(--_col-width-max)), 1fr)\n    );\n  }\n`;\nvar grid_style_default = style;\n\n// libs/core/src/components/grid/grid.component.ts\nvar GdsGrid = class extends GdsDiv {\n  render() {\n    return html`<slot></slot>`;\n  }\n};\nGdsGrid.styles = [tokens, grid_style_default];\n__decorateClass([\n  styleExpressionProperty({\n    property: \"--_c\"\n  })\n], GdsGrid.prototype, \"columns\", 2);\n__decorateClass([\n  styleExpressionProperty(__spreadProps(__spreadValues({}, forSpaceTokens), {\n    styleTemplate: (_prop, values) => {\n      const rowGap = values[0];\n      const colGap = values[1] || rowGap;\n      return `--_gap-column: ${colGap}; --_gap-row: ${rowGap};`;\n    }\n  }))\n], GdsGrid.prototype, \"gap\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    property: \"--_col-width\",\n    valueTemplate: (v) => `${isNaN(v) ? v : `${v}px`}`\n  })\n], GdsGrid.prototype, \"auto-columns\", 2);\nGdsGrid = __decorateClass([\n  gdsCustomElement(\"gds-grid\")\n], GdsGrid);\n\nexport {\n  GdsGrid\n};\n","import {\n  GlobalStylesRegistry\n} from \"./chunk.6QMJ7GQK.js\";\n\n// libs/core/src/components/dialog/scroll-lock.ts\nimport { css } from \"lit\";\nvar locks = /* @__PURE__ */ new Set();\nfunction registerGlobalScrollLockStyles() {\n  GlobalStylesRegistry.instance.injectGlobalStyles(\n    \"dialog-scroll-lock\",\n    css`\n      .gds-scroll-lock body {\n        padding-right: var(--gds-scroll-lock-size) !important;\n        overflow: hidden !important;\n      }\n    `\n  );\n}\nfunction lockBodyScrolling(lockingEl) {\n  locks.add(lockingEl);\n  if (!document.documentElement.classList.contains(\"gds-scroll-lock\")) {\n    const scrollbarWidth = getScrollbarWidth() + getExistingBodyPadding();\n    let scrollbarGutterProperty = getComputedStyle(\n      document.documentElement\n    ).scrollbarGutter;\n    if (!scrollbarGutterProperty || scrollbarGutterProperty === \"auto\") {\n      scrollbarGutterProperty = \"stable\";\n    }\n    if (scrollbarWidth < 2) {\n      scrollbarGutterProperty = \"\";\n    }\n    document.documentElement.style.setProperty(\n      \"--gds-scroll-lock-gutter\",\n      scrollbarGutterProperty\n    );\n    document.documentElement.classList.add(\"gds-scroll-lock\");\n    document.documentElement.style.setProperty(\n      \"--gds-scroll-lock-size\",\n      `${scrollbarWidth}px`\n    );\n  }\n}\nfunction unlockBodyScrolling(lockingEl) {\n  locks.delete(lockingEl);\n  if (locks.size === 0) {\n    document.documentElement.classList.remove(\"gds-scroll-lock\");\n    document.documentElement.style.removeProperty(\"--gds-scroll-lock-size\");\n  }\n}\nfunction getScrollbarWidth() {\n  const documentWidth = document.documentElement.clientWidth;\n  return Math.abs(window.innerWidth - documentWidth);\n}\nfunction getExistingBodyPadding() {\n  const padding = Number(\n    getComputedStyle(document.body).paddingRight.replace(/px/, \"\")\n  );\n  if (isNaN(padding) || !padding) {\n    return 0;\n  }\n  return padding;\n}\n\nexport {\n  registerGlobalScrollLockStyles,\n  lockBodyScrolling,\n  unlockBodyScrolling\n};\n","import {\n  lockBodyScrolling,\n  registerGlobalScrollLockStyles,\n  unlockBodyScrolling\n} from \"./chunk.KAP7LDUQ.js\";\nimport {\n  IconCrossLarge\n} from \"./chunk.I463CBWH.js\";\nimport {\n  GdsCard\n} from \"./chunk.2UMKP3IY.js\";\nimport {\n  GdsFlex\n} from \"./chunk.RLW3O3CX.js\";\nimport {\n  GdsButton\n} from \"./chunk.W45PHIFX.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/dialog/dialog.component.ts\nimport { localized, msg } from \"@lit/localize\";\nimport { property, query } from \"lit/decorators.js\";\nimport { when } from \"lit/directives/when.js\";\n\n// libs/core/src/components/dialog/dialog.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, reset, transitional-styles;\n  @layer base {\n    :host {\n      display: contents;\n    }\n\n    dialog {\n      transition: 0.3s;\n      background: transparent;\n      padding: 0;\n      border-width: 0;\n      overflow: visible;\n      max-width: 100vw;\n      max-height: 100vh;\n      display: flex;\n\n      @starting-style {\n        opacity: 0;\n        transform: translateY(-16px);\n        &::backdrop {\n          opacity: 0;\n          backdrop-filter: blur(0);\n        }\n      }\n\n      &::backdrop {\n        transition: 0.3s;\n        background: rgba(100, 100, 100, 0.3);\n        backdrop-filter: blur(3px);\n      }\n    }\n\n    dialog > * {\n      flex-grow: 1;\n    }\n\n    dialog.default {\n      width: 400px;\n      max-height: 400px;\n    }\n\n    dialog.slide-out {\n      width: 600px;\n      height: 100vh;\n      inset: 0 0 0 auto;\n      @starting-style {\n        transform: translateX(96px);\n      }\n    }\n\n    .card {\n      flex-direction: column;\n    }\n\n    slot[name='footer'] > *,\n    slot[name='footer']::slotted(*) {\n      flex: 1;\n    }\n\n    h2 {\n      margin: 0;\n      padding: 0;\n      font-size: 1.5rem;\n      font-weight: 450;\n    }\n  }\n`;\n\n// libs/core/src/components/dialog/dialog.component.ts\nregisterGlobalScrollLockStyles();\nvar _returnValue, _handleNativeClose, _dispatchCloseEvent, _dispatchShowEvent, _dispatchUiStateEvent, _handleTriggerSlotChange, handleTriggerSlotChange_fn, _handleTriggerClick;\nvar GdsDialog = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    __privateAdd(this, _handleTriggerSlotChange);\n    this.open = false;\n    this.variant = \"default\";\n    __privateAdd(this, _returnValue, void 0);\n    __privateAdd(this, _handleNativeClose, (e) => {\n      const dialog = e.target;\n      const returnValue = dialog.returnValue;\n      this.close(returnValue || \"native-close\");\n      if (returnValue !== \"prop-change\")\n        __privateGet(this, _dispatchCloseEvent).call(this, returnValue);\n    });\n    __privateAdd(this, _dispatchCloseEvent, (reason) => {\n      this.dispatchEvent(\n        new CustomEvent(\"gds-close\", {\n          detail: reason,\n          bubbles: false,\n          composed: false\n        })\n      );\n      __privateGet(this, _dispatchUiStateEvent).call(this, reason);\n    });\n    __privateAdd(this, _dispatchShowEvent, (reason) => {\n      this.dispatchEvent(\n        new CustomEvent(\"gds-show\", {\n          detail: reason,\n          bubbles: false,\n          composed: false\n        })\n      );\n      __privateGet(this, _dispatchUiStateEvent).call(this, reason);\n    });\n    __privateAdd(this, _dispatchUiStateEvent, (reason) => {\n      this.dispatchEvent(\n        new CustomEvent(\"gds-ui-state\", {\n          detail: { reason, open: this.open },\n          bubbles: false,\n          composed: false\n        })\n      );\n    });\n    __privateAdd(this, _handleTriggerClick, (e) => {\n      this.show(\"slotted-trigger\");\n    });\n  }\n  /**\n   * Opens the dialog.\n   */\n  show(reason) {\n    this.open = true;\n    reason && __privateGet(this, _dispatchShowEvent).call(this, reason);\n  }\n  /**\n   * Closes the dialog.\n   * @param returnValue - The value to return when the dialog is closed.\n   */\n  close(reason) {\n    __privateSet(this, _returnValue, reason);\n    this.open = false;\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    unlockBodyScrolling(this);\n  }\n  render() {\n    return html`<slot\n        name=\"trigger\"\n        @slotchange=${__privateMethod(this, _handleTriggerSlotChange, handleTriggerSlotChange_fn)}\n      ></slot>\n      ${when(\n      this.open,\n      () => html`<dialog\n            @close=${__privateGet(this, _handleNativeClose)}\n            class=${this.variant}\n            aria-describedby=\"heading\"\n          >\n            <gds-card\n              class=\"card\"\n              display=\"flex\"\n              variant=\"secondary\"\n              shadow=\"xl\"\n              padding=\"s\"\n              border-radius=${this.variant === \"default\" ? \"s\" : \"0\"}\n            >\n              <gds-flex\n                justify-content=\"space-between\"\n                border-width=\"0 0 4xs 0\"\n                margin=\"0 -s\"\n                padding=\"0 s s\"\n                background-color=\"secondary\"\n              >\n                <h2 id=\"heading\">${this.heading}</h2>\n                <gds-button\n                  id=\"close-btn\"\n                  rank=\"secondary\"\n                  size=\"small\"\n                  label=${msg(\"Close\")}\n                  @click=${() => this.close(\"btn-close\")}\n                  ><gds-icon-cross-large></gds-icon-cross-large\n                ></gds-button>\n              </gds-flex>\n              <gds-div id=\"content\" padding=\"m 0\" overflow=\"auto\" flex=\"1\">\n                <slot></slot>\n              </gds-div>\n              <gds-flex\n                class=\"footer\"\n                justify-content=\"center\"\n                gap=\"s\"\n                padding=\"s 0 0 0\"\n              >\n                <slot name=\"footer\">\n                  <gds-button\n                    value=\"cancel\"\n                    @click=${() => this.close(\"btn-cancel\")}\n                    rank=\"secondary\"\n                    >${msg(\"Cancel\")}</gds-button\n                  >\n                  <gds-button value=\"ok\" @click=${() => this.close(\"btn-ok\")}\n                    >Ok</gds-button\n                  >\n                </slot>\n              </gds-flex>\n            </gds-card>\n          </dialog>`\n    )}`;\n  }\n  _handleOpenChange() {\n    var _a;\n    if (this.open) {\n      __privateSet(this, _returnValue, void 0);\n      this.updateComplete.then(() => {\n        var _a2;\n        (_a2 = this._elDialog) == null ? void 0 : _a2.showModal();\n        lockBodyScrolling(this);\n      });\n    } else {\n      __privateSet(this, _returnValue, __privateGet(this, _returnValue) || \"prop-change\");\n      (_a = this._elDialog) == null ? void 0 : _a.close(__privateGet(this, _returnValue));\n      unlockBodyScrolling(this);\n      this.requestUpdate(\"open\");\n    }\n  }\n};\n_returnValue = new WeakMap();\n_handleNativeClose = new WeakMap();\n_dispatchCloseEvent = new WeakMap();\n_dispatchShowEvent = new WeakMap();\n_dispatchUiStateEvent = new WeakMap();\n_handleTriggerSlotChange = new WeakSet();\nhandleTriggerSlotChange_fn = function() {\n  if (this._elTriggerSlot && this._elTriggerSlot.assignedElements()[0]) {\n    const trigger = this._elTriggerSlot.assignedElements()[0];\n    trigger == null ? void 0 : trigger.addEventListener(\"click\", __privateGet(this, _handleTriggerClick));\n    trigger == null ? void 0 : trigger.setAttribute(\"aria-haspopup\", \"dialog\");\n  }\n};\n_handleTriggerClick = new WeakMap();\nGdsDialog.styles = [styles];\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsDialog.prototype, \"open\", 2);\n__decorateClass([\n  property()\n], GdsDialog.prototype, \"heading\", 2);\n__decorateClass([\n  property()\n], GdsDialog.prototype, \"variant\", 2);\n__decorateClass([\n  query(\"dialog\")\n], GdsDialog.prototype, \"_elDialog\", 2);\n__decorateClass([\n  query('slot[name=\"trigger\"]')\n], GdsDialog.prototype, \"_elTriggerSlot\", 2);\n__decorateClass([\n  watch(\"open\")\n], GdsDialog.prototype, \"_handleOpenChange\", 1);\nGdsDialog = __decorateClass([\n  gdsCustomElement(\"gds-dialog\", {\n    dependsOn: [GdsButton, GdsCard, GdsFlex, IconCrossLarge]\n  }),\n  localized()\n], GdsDialog);\n\nexport {\n  GdsDialog\n};\n","import {\n  forColorTokens\n} from \"./chunk.76QWARGM.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.NUUST5OZ.js\";\nimport {\n  tokens\n} from \"./chunk.JZY6MZJA.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/divider/divider.component.ts\nimport { nothing } from \"lit\";\nimport { property } from \"lit/decorators.js\";\n\n// libs/core/src/components/divider/divider.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    display: block;\n  }\n\n  hr {\n    border-radius: 200px;\n    background: currentColor;\n    font-size: 0;\n    border: 0;\n    height: 1px;\n    width: 100%;\n    margin-top: calc((var(--_size, 0) / 2) - (1px / 2));\n    margin-bottom: calc((var(--_size, 0) / 2) - (1px / 2));\n  }\n`;\nvar divider_style_default = style;\n\n// libs/core/src/components/divider/divider.component.ts\nvar GdsDivider = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    this.level = \"2\";\n    this.role = null;\n  }\n  render() {\n    return html`<hr role=${this.role || nothing} />`;\n  }\n};\nGdsDivider.styles = [tokens, divider_style_default];\n__decorateClass([\n  property()\n], GdsDivider.prototype, \"level\", 2);\n__decorateClass([\n  styleExpressionProperty(forColorTokens(\"border\"))\n], GdsDivider.prototype, \"color\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    property: \"--_size\",\n    valueTemplate: (v) => `var(--gds-space-${v})`\n  })\n], GdsDivider.prototype, \"size\", 2);\n__decorateClass([\n  styleExpressionProperty()\n], GdsDivider.prototype, \"opacity\", 2);\n__decorateClass([\n  property()\n], GdsDivider.prototype, \"role\", 2);\nGdsDivider = __decorateClass([\n  gdsCustomElement(\"gds-divider\")\n], GdsDivider);\n\nexport {\n  GdsDivider\n};\n","import {\n  GdsButton\n} from \"./chunk.W45PHIFX.js\";\nimport {\n  withPositioningProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  gdsCustomElement\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/fab/fab.styles.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    display: flex;\n    z-index: 1050;\n    position: fixed;\n    inset: auto var(--gds-space-3xl) var(--gds-space-3xl) auto;\n  }\n  .button {\n    box-shadow: var(--gds-shadow-m);\n    block-size: calc(var(--_block-size) + var(--gds-space-xs));\n    width: max-content;\n  }\n`;\nvar fab_styles_default = style;\n\n// libs/core/src/components/fab/fab.component.ts\nvar GdsFab = class extends withPositioningProps(GdsButton) {\n  connectedCallback() {\n    super.connectedCallback();\n    this._dynamicStylesController.inject(\"FAB_styles\", fab_styles_default);\n  }\n};\nGdsFab = __decorateClass([\n  gdsCustomElement(\"gds-fab\")\n], GdsFab);\n\nexport {\n  GdsFab\n};\n","import {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/coachmark/coachmark.component.ts\nimport { property, state } from \"lit/decorators.js\";\nimport { createRef, ref } from \"lit/directives/ref.js\";\nimport { when } from \"lit/directives/when.js\";\nimport {\n  arrow,\n  autoUpdate,\n  computePosition,\n  detectOverflow,\n  flip,\n  hide,\n  offset,\n  shift\n} from \"@floating-ui/dom\";\n\n// libs/core/src/components/coachmark/coachmark.styles.ts\nimport { css } from \"lit\";\nvar style = css`\n  #body {\n    visibility: hidden;\n    position: absolute;\n    z-index: 1060;\n    box-sizing: border-box;\n    padding: 1rem;\n    width: 20rem;\n    border-radius: 0.25rem;\n    background-color: #222;\n    color: #fff;\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n\n  #arrow {\n    box-sizing: border-box;\n    z-index: -1;\n    position: absolute;\n    height: 1rem;\n    width: 1rem;\n    background-color: #222;\n    transform: rotate(45deg);\n  }\n\n  .arrow-top,\n  .arrow-top-start,\n  .arrow-top-end {\n    bottom: -0.5rem;\n  }\n\n  .arrow-bottom,\n  .arrow-bottom-start,\n  .arrow-bottom-end {\n    top: -0.5rem;\n  }\n\n  .arrow-left,\n  .arrow-left-start,\n  .arrow-left-end {\n    right: -0.5rem;\n  }\n\n  .arrow-right,\n  .arrow-right-start,\n  .arrow-right-end {\n    left: -0.5rem;\n  }\n`;\nvar coachmark_styles_default = style;\n\n// libs/core/src/components/coachmark/coachmark.component.ts\nvar _cardRef, _arrowRef, _autoUpdateCleanupFn, _closeCoachMark, closeCoachMark_fn, _findTarget, findTarget_fn, _checkBoundingRect, checkBoundingRect_fn, _checkOverlap, checkOverlap_fn, _isElementOutsideView, isElementOutsideView_fn, _computeTooltipPosition, computeTooltipPosition_fn, _shouldTooltipBeVisible, shouldTooltipBeVisible_fn, _updateCoachmarks, updateCoachmarks_fn;\nvar GdsCoachmark = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    __privateAdd(this, _closeCoachMark);\n    __privateAdd(this, _findTarget);\n    __privateAdd(this, _checkBoundingRect);\n    __privateAdd(this, _checkOverlap);\n    __privateAdd(this, _isElementOutsideView);\n    __privateAdd(this, _computeTooltipPosition);\n    __privateAdd(this, _shouldTooltipBeVisible);\n    __privateAdd(this, _updateCoachmarks);\n    this.placement = \"bottom\";\n    this.overlappedBy = [];\n    this.target = [];\n    this.label = \"Coachmark\";\n    this.computeVisibility = (_self, _target, computedVisibility) => computedVisibility;\n    /**\n     * The resolved targeted element (readonly)\n     */\n    this.targetElement = void 0;\n    this._isVisible = false;\n    this._preventClose = false;\n    __privateAdd(this, _cardRef, createRef());\n    __privateAdd(this, _arrowRef, createRef());\n    __privateAdd(this, _autoUpdateCleanupFn, void 0);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    document.addEventListener(\"click\", () => {\n      setTimeout(() => {\n        __privateMethod(this, _updateCoachmarks, updateCoachmarks_fn).call(this);\n        __privateMethod(this, _closeCoachMark, closeCoachMark_fn).call(this);\n      }, 400);\n    });\n    document.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"Escape\" && this._isVisible) {\n        __privateMethod(this, _closeCoachMark, closeCoachMark_fn).call(this);\n      }\n    });\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    document.removeEventListener(\"click\", __privateMethod(this, _closeCoachMark, closeCoachMark_fn));\n    document.removeEventListener(\"keydown\", (event) => {\n      if (event.key === \"Escape\" && this._isVisible) {\n        __privateMethod(this, _closeCoachMark, closeCoachMark_fn).call(this);\n      }\n    });\n  }\n  firstUpdated() {\n    if (this.target.length > 0) {\n      this.targetElement = __privateMethod(this, _findTarget, findTarget_fn).call(this, this.target);\n      __privateMethod(this, _updateCoachmarks, updateCoachmarks_fn).call(this);\n    }\n  }\n  setPreventClose(preventClose) {\n    this._preventClose = preventClose;\n  }\n  render() {\n    return html`${when(\n      this.target.length > 0,\n      () => html`\n        <div\n          role=\"dialog\"\n          id=\"body\"\n          aria-label=${this.label}\n          ${ref(__privateGet(this, _cardRef))}\n        >\n          <slot></slot>\n          <div id=\"arrow\" ${ref(__privateGet(this, _arrowRef))}></div>\n        </div>\n      `,\n      () => html``\n    )}`;\n  }\n};\n_cardRef = new WeakMap();\n_arrowRef = new WeakMap();\n_autoUpdateCleanupFn = new WeakMap();\n_closeCoachMark = new WeakSet();\ncloseCoachMark_fn = function() {\n  var _a, _b;\n  if (!this._isVisible)\n    return;\n  this._isVisible = false;\n  (_a = __privateGet(this, _cardRef).value) == null ? void 0 : _a.remove();\n  (_b = __privateGet(this, _autoUpdateCleanupFn)) == null ? void 0 : _b.call(this);\n  this.dispatchEvent(\n    new CustomEvent(\"gds-ui-state\", {\n      detail: { open: this._isVisible, reason: \"closed\" },\n      bubbles: false,\n      composed: false\n    })\n  );\n};\n_findTarget = new WeakSet();\nfindTarget_fn = function(selectors) {\n  let shadow = false;\n  let el = void 0;\n  for (const selector of selectors) {\n    if (selector === \"shadowRoot\") {\n      shadow = true;\n      continue;\n    }\n    if (!el) {\n      el = document.querySelector(selector);\n    } else if (shadow && el.shadowRoot) {\n      el = el.shadowRoot.querySelector(selector);\n      shadow = false;\n    } else {\n      el = el.querySelector(selector);\n    }\n  }\n  return el;\n};\n_checkBoundingRect = new WeakSet();\ncheckBoundingRect_fn = function(element, overlappedElement) {\n  if (element == overlappedElement)\n    return;\n  const elementRect = element.getBoundingClientRect();\n  const overlappedElementRect = overlappedElement.getBoundingClientRect();\n  return elementRect.top < overlappedElementRect.bottom && elementRect.bottom > overlappedElementRect.top && elementRect.left < overlappedElementRect.right && elementRect.right > overlappedElementRect.left;\n};\n_checkOverlap = new WeakSet();\ncheckOverlap_fn = function(selectors) {\n  if (!selectors)\n    return false;\n  for (const selector of selectors) {\n    const el = document.querySelector(selector);\n    if (!el || getComputedStyle(el).visibility === \"hidden\")\n      continue;\n    if (__privateMethod(this, _checkBoundingRect, checkBoundingRect_fn).call(this, this.targetElement, el)) {\n      return true;\n    }\n  }\n  return false;\n};\n_isElementOutsideView = new WeakSet();\nisElementOutsideView_fn = function(element) {\n  const elementRect = element.getBoundingClientRect();\n  const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n  const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n  return elementRect.top + elementRect.height < 0 || elementRect.top > windowHeight || elementRect.left + elementRect.width < 0 || elementRect.left > windowWidth;\n};\n_computeTooltipPosition = new WeakSet();\ncomputeTooltipPosition_fn = async function(targetedEl, componentEl, arrowEl) {\n  return computePosition(targetedEl, componentEl, {\n    placement: this.placement,\n    middleware: [\n      offset(() => ({\n        mainAxis: 16,\n        alignmentAxis: 16\n      })),\n      {\n        name: \"detectOverflow\",\n        async fn(positionState) {\n          const overflow = await detectOverflow(positionState, {\n            boundary: document.body,\n            rootBoundary: \"document\",\n            altBoundary: true,\n            padding: {\n              top: 167,\n              left: 20\n            }\n          });\n          return {\n            data: overflow\n          };\n        }\n      },\n      shift({ padding: 16 }),\n      flip(),\n      hide(),\n      arrow({\n        padding: 16,\n        element: arrowEl\n      })\n    ]\n  });\n};\n_shouldTooltipBeVisible = new WeakSet();\nshouldTooltipBeVisible_fn = function() {\n  if (!this.targetElement)\n    return false;\n  const isOutOfBound = __privateMethod(this, _isElementOutsideView, isElementOutsideView_fn).call(this, this.targetElement);\n  const targetIsVisible = this.targetElement.checkVisibility();\n  const isOverlapping = this.overlappedBy.length === 0 ? false : __privateMethod(this, _checkOverlap, checkOverlap_fn).call(this, this.overlappedBy);\n  return this.computeVisibility(\n    this,\n    this.targetElement,\n    !isOverlapping && !isOutOfBound && targetIsVisible\n  );\n};\n_updateCoachmarks = new WeakSet();\nupdateCoachmarks_fn = async function() {\n  const targetEl = this.targetElement;\n  const componentEl = __privateGet(this, _cardRef).value;\n  const arrowEl = __privateGet(this, _arrowRef).value;\n  if (!targetEl || !componentEl || !arrowEl)\n    return;\n  try {\n    __privateSet(this, _autoUpdateCleanupFn, autoUpdate(targetEl, componentEl, () => {\n      __privateMethod(this, _computeTooltipPosition, computeTooltipPosition_fn).call(this, targetEl, componentEl, arrowEl).then(\n        ({ x, y, middlewareData, placement }) => {\n          if (__privateMethod(this, _shouldTooltipBeVisible, shouldTooltipBeVisible_fn).call(this)) {\n            this._isVisible = true;\n            Object.assign(componentEl.style, {\n              visibility: \"visible\",\n              opacity: 1,\n              left: `${x}px`,\n              top: `${y}px`\n            });\n            if (middlewareData.arrow) {\n              const { x: x2, y: y2 } = middlewareData.arrow;\n              arrowEl.removeAttribute(\"class\");\n              arrowEl.classList.add(\"arrow-\" + placement);\n              Object.assign(arrowEl.style, {\n                left: x2 != null ? `${x2}px` : \"\",\n                top: y2 != null ? `${y2}px` : \"\"\n              });\n            }\n          } else {\n            this._isVisible = false;\n            Object.assign(componentEl.style, {\n              visibility: \"hidden\",\n              opacity: 0\n            });\n          }\n        }\n      );\n    }));\n  } catch (error) {\n    console.warn(\"failed to render tooltips\");\n  }\n};\nGdsCoachmark.styles = coachmark_styles_default;\n__decorateClass([\n  property()\n], GdsCoachmark.prototype, \"placement\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsCoachmark.prototype, \"overlappedBy\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsCoachmark.prototype, \"target\", 2);\n__decorateClass([\n  property()\n], GdsCoachmark.prototype, \"label\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsCoachmark.prototype, \"computeVisibility\", 2);\n__decorateClass([\n  state()\n], GdsCoachmark.prototype, \"_isVisible\", 2);\n__decorateClass([\n  state()\n], GdsCoachmark.prototype, \"_preventClose\", 2);\nGdsCoachmark = __decorateClass([\n  gdsCustomElement(\"gds-coachmark\")\n], GdsCoachmark);\n\nexport {\n  GdsCoachmark\n};\n"],"names":[],"sourceRoot":""}