{"version":3,"file":"8648.0f65c344.iframe.bundle.js","mappings":";;AAmFA;AAAA;;AACA;;;;AAIA;;;;;;;;;;;;AC1DA","sources":["webpack://green/./dist/libs/core/src/chunks/chunk.5IC7RUOJ.js","webpack://green/./dist/libs/core/src/chunks/chunk.GZOA3K7L.js"],"sourcesContent":["import {\n  IconCheckmark\n} from \"./chunk.IKEM2YEF.js\";\nimport {\n  Focusable,\n  option_styles_default\n} from \"./chunk.YSAE26FD.js\";\nimport {\n  TransitionalStyles\n} from \"./chunk.GRK6I5M6.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  tokens\n} from \"./chunk.ZE5LXBMJ.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.EGTIV5MO.js\";\nimport {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/primitives/listbox/option.component.ts\nimport { property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { when } from \"lit/directives/when.js\";\nvar _hidden, _emitSelect, emitSelect_fn;\nvar GdsOption = class extends Focusable(GdsElement) {\n  constructor() {\n    super();\n    __privateAdd(this, _emitSelect);\n    __privateAdd(this, _hidden, false);\n    this.selected = false;\n    this.isPlaceholder = false;\n    this.addEventListener(\"click\", __privateMethod(this, _emitSelect, emitSelect_fn));\n    this.addEventListener(\"keydown\", (e) => {\n      if (e.key !== \"Enter\" && e.key !== \" \")\n        return;\n      e.preventDefault();\n      __privateMethod(this, _emitSelect, emitSelect_fn).call(this, e);\n    });\n  }\n  get hidden() {\n    return __privateGet(this, _hidden);\n  }\n  set hidden(value) {\n    const strValue = value.toString();\n    __privateSet(this, _hidden, strValue === \"true\");\n    __privateGet(this, _hidden) ? this.setAttribute(\"inert\", \"\") : this.removeAttribute(\"inert\");\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"option\");\n    this.updateComplete.then(() => {\n      if (this.isPlaceholder) {\n        this.hidden = true;\n      }\n      TransitionalStyles.instance.apply(this, \"gds-option\");\n    });\n  }\n  get parentElement() {\n    return super.parentElement;\n  }\n  _handlePlaceholderStatusChange() {\n    if (this.isPlaceholder) {\n      this.hidden = true;\n    } else {\n      this.hidden = false;\n    }\n  }\n  render() {\n    var _a;\n    const isMultiple = (_a = this.parentElement) == null ? void 0 : _a.multiple;\n    const checkbox = html`\n      <span class=\"checkbox ${classMap({ checked: this.selected })}\">\n        ${this.selected ? html`<gds-icon-checkmark\n              width=\"10\"\n              height=\"10\"\n              stroke=\"4\"\n            ></gds-icon-checkmark>` : \"\"}\n      </span>\n    `;\n    if (!isMultiple) {\n      if (this.selected)\n        this.setAttribute(\"highlighted\", \"\");\n      else\n        this.removeAttribute(\"highlighted\");\n    }\n    return html`<div>${when(isMultiple, () => checkbox)} <slot></slot></div>`;\n  }\n};\n_hidden = new WeakMap();\n_emitSelect = new WeakSet();\nemitSelect_fn = function(e) {\n  e.stopPropagation();\n  this.dispatchEvent(\n    new CustomEvent(\"gds-select\", {\n      bubbles: true,\n      composed: true,\n      detail: {\n        value: this.value\n      }\n    })\n  );\n};\nGdsOption.styles = [tokens, option_styles_default];\n__decorateClass([\n  property()\n], GdsOption.prototype, \"value\", 2);\n__decorateClass([\n  property({\n    type: Boolean,\n    reflect: true\n  })\n], GdsOption.prototype, \"hidden\", 1);\n__decorateClass([\n  property({\n    attribute: \"aria-selected\",\n    reflect: true\n  })\n], GdsOption.prototype, \"selected\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsOption.prototype, \"isPlaceholder\", 2);\n__decorateClass([\n  watch(\"isPlaceholder\")\n], GdsOption.prototype, \"_handlePlaceholderStatusChange\", 1);\nGdsOption = __decorateClass([\n  gdsCustomElement(\"gds-option\", { dependsOn: [IconCheckmark] })\n], GdsOption);\n\nexport {\n  GdsOption\n};\n","import {\n  GdsElement\n} from \"./chunk.NAGWK5F6.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/icon/icon.component.ts\nimport { html } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\n\n// libs/core/src/components/icon/icon.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  @layer icon;\n\n  @layer icon {\n    :host {\n      display: inline-block;\n    }\n\n    svg {\n      display: block;\n    }\n  }\n`;\nvar icon_style_default = style;\n\n// libs/core/src/components/icon/icon.component.ts\nvar GdsIcon = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    this.solid = false;\n    this.box = false;\n    this.label = \"\";\n  }\n  render() {\n    const isSebIcon = this.constructor._name === \"brand-seb\";\n    const width = isSebIcon ? \"55px\" : this.width !== void 0 ? `${this.width.toString()}px` : void 0;\n    const height = isSebIcon ? \"24px\" : this.height !== void 0 ? `${this.height.toString()}px` : \"1lh\";\n    const viewBox = isSebIcon ? \"0 0 55 24\" : this.box || \"0 0 24 24\";\n    let svgContent = `<svg\n      style=\"height:${height};${width ? `width:${width};` : \"\"}\"\n      viewBox=\"${viewBox}\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      ${this.label ? `aria-label=\"${this.label}\"` : `aria-label=\"${this.constructor._name}\"`}\n      role=\"graphics-symbol\"\n      part=\"icon\"\n    >\n      ${this.solid ? this.constructor._solidSVG : this.constructor._regularSVG}\n    </svg>`;\n    if (this.stroke) {\n      svgContent = svgContent.replace(\n        /<(path|rect|circle|ellipse|line|polyline|polygon)/g,\n        `<$1 stroke-width=\"${this.stroke}\"`\n      );\n    }\n    return html`${unsafeHTML(svgContent)}`;\n  }\n};\nGdsIcon.styles = [icon_style_default];\n__decorateClass([\n  property({ type: Number })\n], GdsIcon.prototype, \"width\", 2);\n__decorateClass([\n  property({ type: Number })\n], GdsIcon.prototype, \"height\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsIcon.prototype, \"solid\", 2);\n__decorateClass([\n  property({ type: Number })\n], GdsIcon.prototype, \"stroke\", 2);\n__decorateClass([\n  property({ type: String })\n], GdsIcon.prototype, \"box\", 2);\n__decorateClass([\n  property({ type: String })\n], GdsIcon.prototype, \"label\", 2);\n\nexport {\n  GdsIcon\n};\n"],"names":[],"sourceRoot":""}