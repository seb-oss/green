{"version":3,"file":"5713.51351c4e.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;;;;AAYA;AACA;AACA;;AAEA;;AAIA;;;;;;AAuBA;;;AAGA;AAEA;;;AAaA;AACA;;;;AAIA;;;AAIA;;;;;;;;;;;;;;;;AC3GA;;AAqBA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;;;AASA;;;;AAMA;;;;;AAMA;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsEA;AAkDA;AACA;;AAGA;;;AAqBA;;;AAGA;AAEA;;AAKA;AAEA;AAIA;;;AAGA;;AAGA;;;AAMA;;AAGA;;;AAMA;;AAGA;AC9LA;AACA;;;;AAIA;;AASA;;;;ACvEA;;;;;;ACeA;;;;;;;;;ACCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoFA;;;;AA8BA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAGA;AAKA;;AAQA;;;;AAOA;;;;;AAKA;;AAEA;AACA;AACA;;;AAGA;;;AAKA;AAwJA;AAGA;AACA;AACA;AAGA;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;;AAKA;;;;AAIA;;;AAKA;AACA;AACA;AACA;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;AAMA;AAGA;AACA;;;;;AAUA;;;;;AAQA;;;;;;;;;;AC7ZA","sources":["webpack://green/./dist/libs/core/src/chunks/chunk.2BJVQ5WE.js","webpack://green/./dist/libs/core/src/chunks/chunk.BAN7WT3Y.js","webpack://green/./dist/libs/core/src/chunks/chunk.HO2KZJXR.js","webpack://green/./dist/libs/core/src/chunks/chunk.LLZQM4P5.js","webpack://green/./dist/libs/core/src/chunks/chunk.LZWFBXQV.js","webpack://green/./dist/libs/core/src/chunks/chunk.OF557EG5.js","webpack://green/./dist/libs/core/src/chunks/chunk.QTQUAFLN.js","webpack://green/./dist/libs/core/src/chunks/chunk.S22JHHZQ.js","webpack://green/./dist/libs/core/src/chunks/chunk.VIEI5FT6.js","webpack://green/./dist/libs/core/src/chunks/chunk.WS7X64NX.js"],"sourcesContent":["import {\n  GdsElement\n} from \"./chunk.TMEWQZER.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/primitives/form-control-header/form-control-header.ts\nimport { localized, msg } from \"@lit/localize\";\nimport { property, query, state } from \"lit/decorators.js\";\nimport { when } from \"lit/directives/when.js\";\n\n// libs/core/src/primitives/form-control-header/form-control-header.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, reset, transitional-styles;\n  @layer base {\n    #label-row {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      line-height: var(--gds-text-line-height-detail-m);\n\n      & > div {\n        display: flex;\n        flex-direction: column;\n      }\n    }\n\n    ::slotted(label) {\n      font-weight: var(--gds-text-weight-book);\n    }\n\n    :host(.size-small) {\n      & slot[name='supporting-text'],\n      & ::slotted(label) {\n        font-size: var(--gds-text-size-detail-s);\n        line-height: var(--gds-text-line-height-detail-s);\n      }\n    }\n\n    #extended-supporting-text {\n      opacity: 1;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      transition-duration: 368ms;\n      transition-property: all;\n      font-size: var(--gds-text-size-body-s);\n      line-height: var(--gds-text-line-height-body-s);\n      border-radius: var(--gds-space-xs);\n      background-color: var(--gds-color-l3-background-secondary);\n      color: var(--gds-color-l3-content-tertiary);\n      max-height: var(--_max-height);\n\n      &[aria-hidden='false'] {\n        margin: var(--gds-space-2xs) 0 0 0;\n        padding: var(--gds-space-s) var(--gds-space-m);\n      }\n\n      &[aria-hidden='true'] {\n        max-height: 0;\n        opacity: 0;\n        translate: 0 2px;\n        padding: 0 var(--gds-space-m);\n        margin: 0;\n        overflow: hidden;\n      }\n    }\n  }\n`;\n\n// libs/core/src/primitives/form-control-header/form-control-header.ts\nvar _handleExtSupTxtSlotChange, handleExtSupTxtSlotChange_fn, _renderExtSupTxtButton, _handleExtSupTxtBtnClick, _renderExtSupTxt, renderExtSupTxt_fn;\nvar GdsFormControlHeader = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    __privateAdd(this, _handleExtSupTxtSlotChange);\n    __privateAdd(this, _renderExtSupTxt);\n    this.showExtendedSupportingText = false;\n    this._hasExtendedSupportingText = false;\n    __privateAdd(this, _renderExtSupTxtButton, () => {\n      return html`\n      <gds-button\n        size=\"small\"\n        rank=\"tertiary\"\n        label=\"${msg(\"Show more information\")}\"\n        gds-aria-expanded=\"${this.showExtendedSupportingText}\"\n        @click=${__privateGet(this, _handleExtSupTxtBtnClick)}\n      >\n        <gds-icon-circle-info ?solid=${this.showExtendedSupportingText} />\n      </gds-button>\n    `;\n    });\n    __privateAdd(this, _handleExtSupTxtBtnClick, () => {\n      var _a;\n      this.showExtendedSupportingText = !this.showExtendedSupportingText;\n      (_a = this._extendedSupportingText) == null ? void 0 : _a.style.setProperty(\n        \"--_max-height\",\n        this.showExtendedSupportingText ? `${this._extendedSupportingText.scrollHeight}px` : \"0\"\n      );\n      this.dispatchEvent(\n        new CustomEvent(\"gds-ui-state\", {\n          bubbles: true,\n          composed: true,\n          detail: this.showExtendedSupportingText\n        })\n      );\n    });\n  }\n  render() {\n    return html`\n      <div id=\"label-row\">\n        <div>\n          <slot name=\"label\"></slot>\n          <slot name=\"supporting-text\"></slot>\n        </div>\n        ${when(this._hasExtendedSupportingText, __privateGet(this, _renderExtSupTxtButton))}\n      </div>\n\n      ${__privateMethod(this, _renderExtSupTxt, renderExtSupTxt_fn).call(this)}\n    `;\n  }\n};\n_handleExtSupTxtSlotChange = new WeakSet();\nhandleExtSupTxtSlotChange_fn = function(e) {\n  this._hasExtendedSupportingText = e.target.assignedElements({ flatten: true }).length > 0;\n};\n_renderExtSupTxtButton = new WeakMap();\n_handleExtSupTxtBtnClick = new WeakMap();\n_renderExtSupTxt = new WeakSet();\nrenderExtSupTxt_fn = function() {\n  return html`\n      <div\n        id=\"extended-supporting-text\"\n        aria-hidden=\"${this.showExtendedSupportingText ? \"false\" : \"true\"}\"\n        ?inert=${!this.showExtendedSupportingText}\n      >\n        <slot\n          name=\"extended-supporting-text\"\n          @slotchange=${__privateMethod(this, _handleExtSupTxtSlotChange, handleExtSupTxtSlotChange_fn)}\n        ></slot>\n      </div>\n    `;\n};\nGdsFormControlHeader.styles = [styles];\n__decorateClass([\n  property({\n    type: Boolean,\n    reflect: true\n  })\n], GdsFormControlHeader.prototype, \"showExtendedSupportingText\", 2);\n__decorateClass([\n  state()\n], GdsFormControlHeader.prototype, \"_hasExtendedSupportingText\", 2);\n__decorateClass([\n  query(\"#extended-supporting-text\")\n], GdsFormControlHeader.prototype, \"_extendedSupportingText\", 2);\nGdsFormControlHeader = __decorateClass([\n  gdsCustomElement(\"gds-form-control-header\"),\n  localized()\n], GdsFormControlHeader);\n\nexport {\n  GdsFormControlHeader\n};\n","import {\n  tokens\n} from \"./chunk.M3IOWJFN.js\";\nimport {\n  GdsElement\n} from \"./chunk.TMEWQZER.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateMethod\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/badge/badge.ts\nimport { property, state } from \"lit/decorators.js\";\n\n// libs/core/src/components/badge/badge.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    display: inline-block;\n  }\n\n  slot[name='lead']::slotted(*) {\n    line-height: var(--gds-space-m);\n  }\n\n  :host([notification]) slot[name='trail']::slotted(*) {\n    line-height: var(--gds-space-s);\n  }\n\n  :host([notification]) slot[name='lead']::slotted(*) {\n    line-height: var(--gds-space-s);\n  }\n`;\nvar badge_style_default = style;\n\n// libs/core/src/components/badge/badge.ts\nvar _renderLeadSlot, renderLeadSlot_fn, _renderMainSlot, renderMainSlot_fn, _handleSlotChange, handleSlotChange_fn, _renderTrailSlot, renderTrailSlot_fn;\nvar GdsBadge = class extends GdsElement {\n  constructor() {\n    super();\n    __privateAdd(this, _renderLeadSlot);\n    __privateAdd(this, _renderMainSlot);\n    __privateAdd(this, _handleSlotChange);\n    __privateAdd(this, _renderTrailSlot);\n    this.variant = \"information\";\n    this.size = \"default\";\n    this.disabled = false;\n    this.notification = false;\n    this.rounded = false;\n    this.mainSlotOccupied = false;\n  }\n  render() {\n    const background = this.disabled ? \"disabled\" : this.notification ? this.variant : this.variant + \"-badge\";\n    const color = this.disabled ? \"disabled\" : this.notification ? \"primary\" : this.variant;\n    const padding = this.size === \"small\" || this.notification ? \"2xs\" : \"xs\";\n    const blockSize = this.mainSlotOccupied ? this.size === \"small\" || this.notification ? \"m\" : \"l\" : \"xs\";\n    return html`<gds-flex\n      level=\"3\"\n      background=${background}\n      color=${color}\n      gap=\"${this.notification ? \"\" : \"2xs\"}\"\n      align-items=\"center\"\n      justify-content=\"flex-start\"\n      padding-inline=\"${padding}\"\n      border-radius=\"${this.notification || this.rounded ? \"max\" : \"2xs\"}\"\n      block-size=\"${blockSize}\"\n      width=\"max-content\"\n      font-size=\"${this.size === \"small\" || this.notification ? \"detail-xs\" : \"detail-s\"}\"\n      pointer-events=${this.disabled ? \"none\" : \"auto\"}\n      user-select=\"${this.disabled ? \"none\" : \"auto\"}\"\n    >\n      ${__privateMethod(this, _renderLeadSlot, renderLeadSlot_fn).call(this)} ${__privateMethod(this, _renderMainSlot, renderMainSlot_fn).call(this)}\n      ${__privateMethod(this, _renderTrailSlot, renderTrailSlot_fn).call(this)}\n    </gds-flex>`;\n  }\n};\n_renderLeadSlot = new WeakSet();\nrenderLeadSlot_fn = function() {\n  if (this.size !== \"small\" || !this.notification) {\n    return html`<slot name=\"lead\"></slot>`;\n  }\n};\n_renderMainSlot = new WeakSet();\nrenderMainSlot_fn = function() {\n  return html`<slot @slotchange=${__privateMethod(this, _handleSlotChange, handleSlotChange_fn)}></slot>`;\n};\n_handleSlotChange = new WeakSet();\nhandleSlotChange_fn = function(event) {\n  const slot = event.target;\n  const assignedNodes = slot.assignedNodes({ flatten: true });\n  this.mainSlotOccupied = assignedNodes.length > 0 && assignedNodes.some(\n    (node) => {\n      var _a;\n      return node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.TEXT_NODE && ((_a = node.textContent) == null ? void 0 : _a.trim()) !== \"\";\n    }\n  );\n};\n_renderTrailSlot = new WeakSet();\nrenderTrailSlot_fn = function() {\n  return html`<slot name=\"trail\"></slot>`;\n};\nGdsBadge.styles = [tokens, badge_style_default];\n__decorateClass([\n  property()\n], GdsBadge.prototype, \"variant\", 2);\n__decorateClass([\n  property({ type: String })\n], GdsBadge.prototype, \"size\", 2);\n__decorateClass([\n  property({\n    attribute: \"disabled\",\n    type: Boolean,\n    reflect: true\n  })\n], GdsBadge.prototype, \"disabled\", 2);\n__decorateClass([\n  property({\n    attribute: \"notification\",\n    type: Boolean,\n    reflect: true\n  })\n], GdsBadge.prototype, \"notification\", 2);\n__decorateClass([\n  property({\n    attribute: \"rounded\",\n    type: Boolean,\n    reflect: true\n  })\n], GdsBadge.prototype, \"rounded\", 2);\n__decorateClass([\n  state()\n], GdsBadge.prototype, \"mainSlotOccupied\", 2);\nGdsBadge = __decorateClass([\n  gdsCustomElement(\"gds-badge\")\n], GdsBadge);\n\nexport {\n  GdsBadge\n};\n","import {\n  GdsElement\n} from \"./chunk.TMEWQZER.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateMethod\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/primitives/form-control-footer/form-control-footer.ts\nimport { property } from \"lit/decorators.js\";\nimport { when } from \"lit/directives/when.js\";\n\n// libs/core/src/primitives/form-control-footer/form-control-footer.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, reset, transitional-styles;\n  @layer base {\n    :host > *:not(style) {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      gap: var(--gds-space-xl);\n    }\n\n    .error-message {\n      display: flex;\n      align-items: flex-start;\n      gap: var(--gds-space-xs);\n      margin-top: var(--gds-space-2xs);\n      font-weight: var(--gds-text-weight-book);\n      font-size: var(--gds-text-size-detail-s);\n      color: var(--gds-color-l3-content-negative);\n    }\n\n    [gds-element^='gds-icon'] {\n      width: 18px;\n      height: 18px;\n    }\n\n    :host(.size-small) {\n      & .error-message {\n        font-size: var(--gds-text-size-detail-xs);\n        line-height: var(--gds-text-line-height-detail-s);\n        gap: var(--gds-space-2xs);\n      }\n      & [gds-element^='gds-icon'] {\n        width: 16px;\n        height: 16px;\n        line-height: 16px;\n        margin-right: 2px;\n      }\n    }\n  }\n`;\n\n// libs/core/src/primitives/form-control-footer/form-control-footer.ts\nvar _renderRemainingCharsBadge, renderRemainingCharsBadge_fn;\nvar GdsFormControlFooter = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    __privateAdd(this, _renderRemainingCharsBadge);\n  }\n  render() {\n    return html`<div aria-live=\"polite\">\n      <div class=\"error-message\">\n        <slot name=\"message\"\n          >${when(\n      this.validationMessage,\n      () => html`\n              <gds-icon-triangle-exclamation\n                solid\n              ></gds-icon-triangle-exclamation>\n              ${this.validationMessage}\n            `\n    )}</slot\n        >\n      </div>\n      <div class=\"char-counter\">\n        ${when(\n      Number.isInteger(this.charCounter),\n      () => __privateMethod(this, _renderRemainingCharsBadge, renderRemainingCharsBadge_fn).call(this, this.charCounter)\n    )}\n      </div>\n    </div>`;\n  }\n};\n_renderRemainingCharsBadge = new WeakSet();\nrenderRemainingCharsBadge_fn = function(remaining) {\n  let variant;\n  if (remaining < 0) {\n    variant = \"negative\";\n  } else if (remaining < 20) {\n    variant = \"warning\";\n  } else {\n    variant = \"positive\";\n  }\n  return html`<gds-badge variant=\"${variant}\">${remaining}</gds-badge>`;\n};\nGdsFormControlFooter.styles = [styles];\n__decorateClass([\n  property({ type: Number })\n], GdsFormControlFooter.prototype, \"charCounter\", 2);\n__decorateClass([\n  property()\n], GdsFormControlFooter.prototype, \"validationMessage\", 2);\nGdsFormControlFooter = __decorateClass([\n  gdsCustomElement(\"gds-form-control-footer\")\n], GdsFormControlFooter);\n\nexport {\n  GdsFormControlFooter\n};\n","import {\n  TransitionalStyles\n} from \"./chunk.ASIT5AB2.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  GdsElement\n} from \"./chunk.TMEWQZER.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/primitives/field-base/field-base.ts\nimport { localized } from \"@lit/localize\";\nimport { property, query, state } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { map } from \"lit/directives/map.js\";\n\n// libs/core/src/primitives/field-base/field-base.styles.ts\nimport { css } from \"lit\";\nvar styles = css`\n  @layer base, a11y;\n\n  @layer a11y {\n    @media (prefers-reduced-motion: reduce) {\n      .field {\n        transition: none;\n      }\n    }\n  }\n\n  @layer base {\n    * {\n      box-sizing: border-box;\n    }\n\n    .field {\n      display: flex;\n      position: relative;\n      align-items: center;\n      justify-content: space-between;\n      gap: var(--gds-space-xs);\n      padding-block: var(--gds-space-xs);\n      padding-inline: var(--gds-space-m) var(--gds-space-s);\n      min-block-size: var(--gds-space-3xl);\n      block-size: var(--gds-space-3xl);\n      outline-style: solid;\n      outline-width: 0;\n      border-radius: var(--gds-space-xs);\n      background: var(--gds-color-l3-background-secondary);\n      color: var(--gds-color-l3-content-tertiary);\n      border: var(--gds-space-4xs) solid var(--gds-color-l3-border-secondary);\n      cursor: text;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      transition-duration: 368ms;\n      transition-property: background-color;\n    }\n\n    .field.lead-slot-occupied {\n      padding-inline-start: var(--gds-space-s);\n    }\n\n    .field.action-slot-occupied:not(.trail-slot-occupied) {\n      padding-inline-end: var(--gds-space-s);\n\n      &.small {\n        padding-inline-end: var(--gds-space-xs);\n      }\n    }\n\n    .field:focus-within {\n      outline-width: var(--gds-space-3xs);\n      outline-offset: var(--gds-space-3xs);\n      outline-color: currentColor;\n      border-color: currentColor;\n    }\n\n    .field.small {\n      gap: var(--gds-space-2xs);\n      padding: calc(var(--gds-space-xs) - 1px) var(--gds-space-xs);\n      min-block-size: var(--gds-space-xl);\n      block-size: var(--gds-space-xl);\n    }\n\n    .field.multiline {\n      align-items: flex-start;\n      padding: var(--gds-space-s);\n      padding-inline-start: var(--gds-space-m);\n      height: max-content;\n    }\n\n    .field.disabled {\n      background: var(--gds-color-l3-background-disabled);\n      color: var(--gds-color-l3-content-disabled);\n      border-color: transparent;\n      pointer-events: none;\n    }\n\n    .field.invalid {\n      background: var(--gds-color-l3-background-negative-secondary);\n      border-color: var(--gds-color-l3-border-negative);\n      color: var(--gds-color-l3-content-negative);\n    }\n\n    slot:not([name])::slotted(*) {\n      color: currentColor;\n    }\n\n    .main-slot-wrap {\n      display: flex;\n      flex: 1;\n    }\n\n    .main-slot-wrap.multiline {\n      height: max-content;\n    }\n\n    @media (hover: hover) {\n      .field:hover {\n        background: color-mix(\n          in srgb,\n          var(--gds-color-l3-background-secondary),\n          var(--gds-color-l3-states-light-hover)\n        );\n      }\n\n      .field.invalid:hover {\n        background: color-mix(\n          in srgb,\n          var(--gds-color-l3-background-negative-secondary),\n          var(--gds-color-l3-states-negative-hover)\n        );\n      }\n    }\n\n    slot[name='lead']::slotted([gds-element^='gds-icon-']) {\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      inline-size: var(--gds-space-l);\n      block-size: var(--gds-space-l);\n    }\n\n    .multiline slot[name='action']::slotted([gds-element]) {\n      margin-top: -4px;\n    }\n  }\n`;\n\n// libs/core/src/primitives/field-base/field-base.ts\nvar _handleSlotChange, _renderFieldContents, renderFieldContents_fn, _renderSlotLead, renderSlotLead_fn, _renderSlotMain, renderSlotMain_fn, _renderSlotAction, renderSlotAction_fn, _renderSlotTrail, renderSlotTrail_fn;\nvar GdsFieldBase = class extends GdsElement {\n  constructor() {\n    super();\n    __privateAdd(this, _renderFieldContents);\n    __privateAdd(this, _renderSlotLead);\n    __privateAdd(this, _renderSlotMain);\n    __privateAdd(this, _renderSlotAction);\n    __privateAdd(this, _renderSlotTrail);\n    this.size = \"large\";\n    this.multiline = false;\n    this.disabled = false;\n    this.invalid = false;\n    this._leadSlotOccupied = false;\n    this._trailSlotOccupied = false;\n    this._actionSlotOccupied = false;\n    __privateAdd(this, _handleSlotChange, (slotName, event) => {\n      const slot = event.target;\n      const assignedNodes = slot.assignedNodes({ flatten: true });\n      const slotOccupied = assignedNodes.length > 0 && assignedNodes.some(\n        (node) => {\n          var _a;\n          return node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.TEXT_NODE && ((_a = node.textContent) == null ? void 0 : _a.trim()) !== \"\";\n        }\n      );\n      if (slotName === \"lead\") {\n        this._leadSlotOccupied = slotOccupied;\n      } else if (slotName === \"trail\") {\n        this._trailSlotOccupied = slotOccupied;\n      } else if (slotName === \"action\") {\n        this._actionSlotOccupied = slotOccupied;\n      } else if (slotName === \"main\") {\n      }\n    });\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    TransitionalStyles.instance.apply(this, \"gds-field-base\");\n  }\n  render() {\n    var _a;\n    const classes = {\n      invalid: (_a = this.invalid) != null ? _a : false,\n      multiline: this.multiline,\n      disabled: this.disabled,\n      \"lead-slot-occupied\": this._leadSlotOccupied,\n      \"trail-slot-occupied\": this._trailSlotOccupied,\n      \"action-slot-occupied\": this._actionSlotOccupied,\n      small: this.size === \"small\"\n    };\n    return html`\n      <div class=\"field ${classMap(classes)}\" part=\"_base\">\n        ${__privateMethod(this, _renderFieldContents, renderFieldContents_fn).call(this)}\n      </div>\n    `;\n  }\n  _handleDisabledChange() {\n    if (this.disabled) {\n      this.setAttribute(\"inert\", \"\");\n    } else {\n      this.removeAttribute(\"inert\");\n    }\n  }\n};\n_handleSlotChange = new WeakMap();\n_renderFieldContents = new WeakSet();\nrenderFieldContents_fn = function() {\n  const elements = [\n    __privateMethod(this, _renderSlotLead, renderSlotLead_fn).call(this),\n    __privateMethod(this, _renderSlotMain, renderSlotMain_fn).call(this),\n    __privateMethod(this, _renderSlotAction, renderSlotAction_fn).call(this),\n    __privateMethod(this, _renderSlotTrail, renderSlotTrail_fn).call(this)\n  ];\n  return html`${map(elements, (el) => el)}\n\n      <!-- <div class=\"left\">\n        ${__privateMethod(this, _renderSlotLead, renderSlotLead_fn).call(this)} ${__privateMethod(this, _renderSlotMain, renderSlotMain_fn).call(this)}\n      </div>\n      <div class=\"right\">\n        ${__privateMethod(this, _renderSlotAction, renderSlotAction_fn).call(this)} ${__privateMethod(this, _renderSlotTrail, renderSlotTrail_fn).call(this)}\n      </div>  --> `;\n};\n_renderSlotLead = new WeakSet();\nrenderSlotLead_fn = function() {\n  return html` <slot\n      name=\"lead\"\n      @slotchange=${(e) => __privateGet(this, _handleSlotChange).call(this, \"lead\", e)}\n    ></slot>`;\n};\n_renderSlotMain = new WeakSet();\nrenderSlotMain_fn = function() {\n  return html`<div\n      class=\"main-slot-wrap ${classMap({ multiline: this.multiline })}\"\n    >\n      <slot\n        @slotchange=${(e) => __privateGet(this, _handleSlotChange).call(this, \"main\", e)}\n      ></slot>\n    </div>`;\n};\n_renderSlotAction = new WeakSet();\nrenderSlotAction_fn = function() {\n  return html`\n      <slot\n        name=\"action\"\n        @slotchange=${(e) => __privateGet(this, _handleSlotChange).call(this, \"action\", e)}\n      ></slot>\n    `;\n};\n_renderSlotTrail = new WeakSet();\nrenderSlotTrail_fn = function() {\n  return html`\n      <slot\n        name=\"trail\"\n        @slotchange=${(e) => __privateGet(this, _handleSlotChange).call(this, \"trail\", e)}\n      ></slot>\n    `;\n};\nGdsFieldBase.styles = [styles];\n__decorateClass([\n  property()\n], GdsFieldBase.prototype, \"size\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsFieldBase.prototype, \"multiline\", 2);\n__decorateClass([\n  property({\n    type: Boolean,\n    reflect: true\n  })\n], GdsFieldBase.prototype, \"disabled\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsFieldBase.prototype, \"invalid\", 2);\n__decorateClass([\n  query(\"slot:not([name])\")\n], GdsFieldBase.prototype, \"_mainSlotElement\", 2);\n__decorateClass([\n  state()\n], GdsFieldBase.prototype, \"_leadSlotOccupied\", 2);\n__decorateClass([\n  state()\n], GdsFieldBase.prototype, \"_trailSlotOccupied\", 2);\n__decorateClass([\n  state()\n], GdsFieldBase.prototype, \"_actionSlotOccupied\", 2);\n__decorateClass([\n  watch(\"disabled\")\n], GdsFieldBase.prototype, \"_handleDisabledChange\", 1);\nGdsFieldBase = __decorateClass([\n  gdsCustomElement(\"gds-field-base\"),\n  localized()\n], GdsFieldBase);\n\nexport {\n  GdsFieldBase\n};\n","import {\n  Focusable,\n  option_styles_default\n} from \"./chunk.ZRKILGXZ.js\";\nimport {\n  TransitionalStyles\n} from \"./chunk.ASIT5AB2.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  tokens\n} from \"./chunk.M3IOWJFN.js\";\nimport {\n  GdsElement\n} from \"./chunk.TMEWQZER.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/primitives/listbox/option.ts\nimport { property } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { when } from \"lit/directives/when.js\";\nvar _hidden, _emitSelect, emitSelect_fn;\nvar GdsOption = class extends Focusable(GdsElement) {\n  constructor() {\n    super();\n    __privateAdd(this, _emitSelect);\n    __privateAdd(this, _hidden, false);\n    this.selected = false;\n    this.isPlaceholder = false;\n    this.addEventListener(\"click\", __privateMethod(this, _emitSelect, emitSelect_fn));\n    this.addEventListener(\"keydown\", (e) => {\n      if (e.key !== \"Enter\" && e.key !== \" \")\n        return;\n      e.preventDefault();\n      __privateMethod(this, _emitSelect, emitSelect_fn).call(this, e);\n    });\n  }\n  get hidden() {\n    return __privateGet(this, _hidden);\n  }\n  set hidden(value) {\n    if (this.isPlaceholder)\n      return;\n    __privateSet(this, _hidden, value === \"true\" || value === true);\n    this.setAttribute(\"aria-hidden\", value.toString());\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"option\");\n    if (this.isPlaceholder) {\n      __privateSet(this, _hidden, true);\n      this.setAttribute(\"aria-hidden\", \"true\");\n    }\n    this.updateComplete.then(\n      () => TransitionalStyles.instance.apply(this, \"gds-option\")\n    );\n  }\n  get parentElement() {\n    return super.parentElement;\n  }\n  _handlePlaceholderStatusChange() {\n    if (this.isPlaceholder) {\n      __privateSet(this, _hidden, true);\n      this.setAttribute(\"aria-hidden\", \"true\");\n    } else {\n      __privateSet(this, _hidden, false);\n      this.setAttribute(\"aria-hidden\", \"false\");\n    }\n  }\n  render() {\n    var _a;\n    const isMultiple = (_a = this.parentElement) == null ? void 0 : _a.multiple;\n    const checkbox = html`\n      <span class=\"checkbox ${classMap({ checked: this.selected })}\">\n        ${this.selected ? html`<gds-icon-checkmark\n              width=\"10\"\n              height=\"10\"\n              stroke=\"4\"\n            ></gds-icon-checkmark>` : \"\"}\n      </span>\n    `;\n    if (!isMultiple) {\n      if (this.selected)\n        this.setAttribute(\"highlighted\", \"\");\n      else\n        this.removeAttribute(\"highlighted\");\n    }\n    return html`<div>${when(isMultiple, () => checkbox)} <slot></slot></div>`;\n  }\n};\n_hidden = new WeakMap();\n_emitSelect = new WeakSet();\nemitSelect_fn = function(e) {\n  e.stopPropagation();\n  this.dispatchEvent(\n    new CustomEvent(\"gds-select\", {\n      bubbles: true,\n      composed: true,\n      detail: {\n        value: this.value\n      }\n    })\n  );\n};\nGdsOption.styles = [tokens, option_styles_default];\n__decorateClass([\n  property()\n], GdsOption.prototype, \"value\", 2);\n__decorateClass([\n  property({\n    attribute: \"aria-hidden\",\n    reflect: true\n  })\n], GdsOption.prototype, \"hidden\", 1);\n__decorateClass([\n  property({\n    attribute: \"aria-selected\",\n    reflect: true\n  })\n], GdsOption.prototype, \"selected\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsOption.prototype, \"isPlaceholder\", 2);\n__decorateClass([\n  watch(\"isplaceholder\")\n], GdsOption.prototype, \"_handlePlaceholderStatusChange\", 1);\nGdsOption = __decorateClass([\n  gdsCustomElement(\"gds-option\")\n], GdsOption);\n\nexport {\n  GdsOption\n};\n","import {\n  GdsContainer\n} from \"./chunk.WS7X64NX.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.K4KPKUH4.js\";\nimport {\n  tokens\n} from \"./chunk.M3IOWJFN.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/flex/flex.styles.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    box-sizing: border-box;\n  }\n`;\nvar flex_styles_default = style;\n\n// libs/core/src/components/flex/flex.ts\nvar GdsFlex = class extends GdsContainer {\n  connectedCallback() {\n    super.connectedCallback();\n    this.display = \"flex\";\n  }\n  render() {\n    return html`<slot></slot>`;\n  }\n};\nGdsFlex.styles = [tokens, flex_styles_default];\n__decorateClass([\n  styleExpressionProperty({\n    styleTemplate: (_prop, values) => {\n      const colGap = values[0];\n      const rowGap = values[1] || colGap;\n      return `gap: ${colGap} ${rowGap};`;\n    },\n    cacheOverrideKey: \"flex\"\n  })\n], GdsFlex.prototype, \"gap\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"flex\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"align-self\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"align-items\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"align-content\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"justify-content\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"place-content\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"justify-items\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"justify-self\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    property: \"flex-direction\",\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"flex-direction\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    property: \"flex-wrap\",\n    valueTemplate: (v) => v\n  })\n], GdsFlex.prototype, \"flex-wrap\", 2);\nGdsFlex = __decorateClass([\n  gdsCustomElement(\"gds-flex\")\n], GdsFlex);\n\nexport {\n  GdsFlex\n};\n","import {\n  GdsContainer\n} from \"./chunk.WS7X64NX.js\";\nimport {\n  styleExpressionProperty\n} from \"./chunk.K4KPKUH4.js\";\nimport {\n  tokens\n} from \"./chunk.M3IOWJFN.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/card/card.ts\nimport { css } from \"lit\";\nvar GdsCard = class extends GdsContainer {\n  /// This sets variables that are used in the default styles. Any other SEPs will override.\n  constructor() {\n    super();\n    this.variant = \"primary\";\n    this.padding = \"s; m{l}\";\n    this[\"border-radius\"] = \"xs; m{s}\";\n    this[\"border-width\"] = \"4xs\";\n  }\n  render() {\n    return html`<slot></slot>`;\n  }\n};\nGdsCard.styles = [\n  tokens,\n  css`\n      :host {\n        border-color: var(--_border-color);\n        background-color: var(--_background-color);\n        color: var(--_color);\n      }\n    `\n];\n__decorateClass([\n  styleExpressionProperty({\n    property: \"box-shadow\",\n    valueTemplate: (v) => `var(--gds-shadow-${v})`\n  })\n], GdsCard.prototype, \"shadow\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v,\n    styleTemplate: function(_prop, v) {\n      return `\n      --_border-color: var(--gds-color-l${this.level}-background-${v});\n      --_background-color: var(--gds-color-l${this.level}-background-${v});\n      --_color: var(--gds-color-l${this.level}-content-${v});\n      `;\n    }\n  })\n], GdsCard.prototype, \"variant\", 2);\nGdsCard = __decorateClass([\n  gdsCustomElement(\"gds-card\")\n], GdsCard);\n\nexport {\n  GdsCard\n};\n","import {\n  ListboxKbNavController,\n  unwrap\n} from \"./chunk.E62NOHQC.js\";\nimport {\n  TransitionalStyles\n} from \"./chunk.ASIT5AB2.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  GdsElement\n} from \"./chunk.TMEWQZER.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/primitives/listbox/listbox.ts\nimport { property } from \"lit/decorators.js\";\nimport { createRef, ref } from \"lit/directives/ref.js\";\n\n// libs/core/src/primitives/listbox/listbox.styles.ts\nimport { css } from \"lit\";\nvar style = css`\n  @layer base, reset, transitional-styles;\n  @layer base {\n    :host {\n      display: flex;\n      flex-direction: column;\n      overflow: auto;\n    }\n  }\n`;\nvar listbox_styles_default = style;\n\n// libs/core/src/primitives/listbox/listbox.ts\nvar _slotRef, _handleSelect;\nvar GdsListbox = class extends GdsElement {\n  constructor() {\n    super();\n    this.multiple = false;\n    this.compareWith = (a, b) => a === b;\n    __privateAdd(this, _slotRef, createRef());\n    __privateAdd(this, _handleSelect, (e) => {\n      const option = e.target;\n      if (this.multiple)\n        option.selected = !option.selected;\n      else {\n        option.selected = true;\n        Array.from(this.options).forEach((el) => {\n          if (el !== option)\n            el.selected = false;\n        });\n      }\n      ;\n      this.ariaActiveDescendantElement = option;\n      this.dispatchEvent(\n        new CustomEvent(\"change\", {\n          bubbles: false,\n          composed: false\n        })\n      );\n    });\n    new ListboxKbNavController(this);\n  }\n  get navigableItems() {\n    return this.visibleOptionElements;\n  }\n  /**\n   * Returns a list of all `gds-option` elements in the listbox.\n   */\n  get options() {\n    if (!__privateGet(this, _slotRef).value)\n      return [];\n    return unwrap(__privateGet(this, _slotRef).value).assignedElements().filter(\n      (o) => !o.hasAttribute(\"isplaceholder\") && o.gdsElementName === \"gds-option\"\n    ) || [];\n  }\n  /**\n   * Returns a list of all visible `gds-option` elements in the listbox.\n   */\n  get visibleOptionElements() {\n    return this.options.filter((el) => !el.hidden);\n  }\n  /**\n   * Returns a list of all visible `gds-option` elements in the listbox.\n   */\n  get visibleSelectedOptionElements() {\n    return this.options.filter((el) => el.selected && !el.hidden);\n  }\n  /**\n   * Returns a list of all selected `gds-option` elements in the listbox.\n   */\n  get selection() {\n    return this.options.filter((el) => el.selected);\n  }\n  set selection(values) {\n    this.options.forEach((el) => {\n      el.selected = values.some((v) => this.compareWith(v, el.value));\n    });\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"listbox\");\n    TransitionalStyles.instance.apply(this, \"gds-listbox\");\n    this.addEventListener(\"gds-select\", __privateGet(this, _handleSelect));\n  }\n  /**\n   * Focuses the first selected option in the listbox.\n   * If no option is selected, the first visible option is focused.\n   */\n  focus() {\n    var _a;\n    ;\n    (_a = this.visibleSelectedOptionElements[0] || this.visibleOptionElements[0]) == null ? void 0 : _a.focus();\n  }\n  render() {\n    return html`<slot ${ref(__privateGet(this, _slotRef))}></slot>`;\n  }\n  _rerenderOptions() {\n    this.options.forEach((el) => {\n      el.requestUpdate();\n    });\n  }\n};\n_slotRef = new WeakMap();\n_handleSelect = new WeakMap();\nGdsListbox.styles = listbox_styles_default;\n__decorateClass([\n  property({\n    type: Boolean,\n    reflect: true,\n    attribute: \"aria-multiselectable\",\n    converter: {\n      fromAttribute: Boolean,\n      toAttribute: (value) => value.toString()\n    }\n  })\n], GdsListbox.prototype, \"multiple\", 2);\n__decorateClass([\n  property()\n], GdsListbox.prototype, \"compareWith\", 2);\n__decorateClass([\n  watch(\"multiple\")\n], GdsListbox.prototype, \"_rerenderOptions\", 1);\nGdsListbox = __decorateClass([\n  gdsCustomElement(\"gds-listbox\")\n], GdsListbox);\n\nexport {\n  GdsListbox\n};\n","import {\n  GdsFormControlElement\n} from \"./chunk.UHTT4KTD.js\";\nimport {\n  observeLightDOM\n} from \"./chunk.WM7HBMMV.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  tokens\n} from \"./chunk.M3IOWJFN.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/dropdown/dropdown.ts\nimport { localized, msg, str } from \"@lit/localize\";\nimport { property, query, queryAsync } from \"lit/decorators.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { unsafeHTML } from \"lit/directives/unsafe-html.js\";\nimport { when } from \"lit/directives/when.js\";\n\n// libs/core/src/components/dropdown/dropdown.styles.ts\nimport { css } from \"lit\";\nvar style = css`\n  @layer base, reset;\n\n  @layer base {\n    :host {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      gap: var(--gds-space-xs);\n      contain: layout;\n      isolation: isolate;\n      --_transition: all 368ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n\n    #field::part(_base) {\n      cursor: pointer;\n    }\n\n    button {\n      appearance: none;\n      background: transparent;\n      border-width: 0;\n      font-family: inherit;\n      font-size: inherit;\n      line-height: inherit;\n      color: currentColor;\n      cursor: pointer;\n      padding: 0;\n      text-align: left;\n      flex: 0 1 100%;\n\n      /* This prevents overflow when the text is too long */\n      display: grid;\n    }\n\n    button:focus {\n      outline: none;\n    }\n\n    slot[name='trigger'] > span {\n      display: block;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    input[type='text'] {\n      border-radius: var(--gds-space-xs);\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n      font-size: inherit;\n      line-height: inherit;\n      border: none;\n      outline: none;\n      color: var(--gds-color-l3-content-disabled);\n      border-color: var(--gds-color-l3-border-tertiary);\n      border-width: 0 0 var(--gds-space-4xs) 0;\n      border-style: solid;\n      width: 100%;\n      padding: var(--gds-space-m);\n      font-weight: var(--gds-text-weight-regular);\n      flex: 1;\n      box-sizing: border-box;\n      font-family: inherit;\n\n      &:focus {\n        border-color: var(--gds-color-l3-border-secondary);\n        color: var(--gds-color-l3-content-tertiary);\n      }\n\n      &::placeholder {\n        font-family: inherit;\n        font-weight: var(--gds-text-weight-book);\n        color: var(--gds-color-l3-content-disabled);\n      }\n    }\n\n    input[role='combobox'] {\n      appearance: none;\n      background: transparent;\n      border: none;\n      font-size: inherit;\n      outline: none;\n    }\n\n    [aria-expanded='true'] [slot='trail'] {\n      transform: scaleY(-1);\n    }\n  }\n`;\nvar dropdown_styles_default = style;\n\n// libs/core/src/components/dropdown/dropdown.ts\nvar _optionElements, _renderCombobox, _renderTriggerButton, _calcMaxHeight, _handleSearchFieldInput, _handleSearchFieldKeyDown, _handleListboxKeyDown, _handleOptionFocusChange, _handleSelectionChange, handleSelectionChange_fn, _registerAutoCloseListener, registerAutoCloseListener_fn, _unregisterAutoCloseListener, unregisterAutoCloseListener_fn, _blurCloseListener, _tabCloseListener;\nvar GdsDropdown = class extends GdsFormControlElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Selects an option in the dropdown.\n     *\n     * @fires change\n     */\n    __privateAdd(this, _handleSelectionChange);\n    __privateAdd(this, _registerAutoCloseListener);\n    __privateAdd(this, _unregisterAutoCloseListener);\n    this.supportingText = \"\";\n    this.open = false;\n    this.searchable = false;\n    this.multiple = false;\n    this.combobox = false;\n    this.compareWith = (a, b) => a === b;\n    this.searchFilter = (q, o) => o.innerHTML.toLowerCase().includes(q.toLowerCase());\n    this.syncPopoverWidth = false;\n    this.maxHeight = 500;\n    this.size = \"medium\";\n    this.hideLabel = false;\n    this.disableMobileStyles = false;\n    __privateAdd(this, _optionElements, void 0);\n    __privateAdd(this, _renderCombobox, () => {\n      var _a;\n      return html`\n      <input\n        id=\"trigger\"\n        role=\"combobox\"\n        aria-expanded=\"${this.open}\"\n        aria-owns=\"listbox\"\n        aria-haspopup=\"listbox\"\n        aria-controls=\"listbox\"\n        placeholder=\"${(_a = this.placeholder) == null ? void 0 : _a.innerHTML}\"\n        name=\"trigger\"\n        aria-label=\"${this.label} ${this.displayValue}\"\n        aria-describedby=\"supporting-text extended-supporting-text sub-label message\"\n        aria-invalid=\"${this.invalid}\"\n        aria-required=\"${this.required}\"\n        aria-disabled=\"${this.disabled}\"\n        .value=${this.value}\n        @click=${(e) => {\n        e.stopImmediatePropagation();\n      }}\n        @input=${(e) => {\n        this.value = e.target.value;\n        __privateGet(this, _handleSearchFieldInput).call(this, e);\n        this.open = true;\n      }}\n        @keydown=${(e) => {\n        if (e.key === \"ArrowDown\") {\n          e.preventDefault();\n          this.open = true;\n          this._elListbox.then((listbox) => listbox.focus());\n        }\n      }}\n      />\n    `;\n    });\n    __privateAdd(this, _renderTriggerButton, () => {\n      return html`\n      <button\n        id=\"trigger\"\n        role=\"combobox\"\n        aria-expanded=\"${this.open}\"\n        aria-owns=\"listbox\"\n        aria-haspopup=\"listbox\"\n        aria-controls=\"listbox\"\n        name=\"trigger\"\n        aria-label=\"${this.label} ${this.displayValue}\"\n        aria-describedby=\"supporting-text extended-supporting-text sub-label message\"\n        aria-invalid=\"${this.invalid}\"\n        aria-required=\"${this.required}\"\n        aria-disabled=\"${this.disabled}\"\n      >\n        <slot name=\"trigger\">\n          <span>${unsafeHTML(this.displayValue)}</span>\n        </slot>\n      </button>\n    `;\n    });\n    __privateAdd(this, _calcMaxHeight, (trigger) => {\n      const triggerRect = trigger.getBoundingClientRect();\n      const windowHeight = window.innerHeight;\n      const bottomSpace = windowHeight - triggerRect.bottom;\n      const topSpace = triggerRect.top;\n      let height = Math.min(topSpace, this.maxHeight);\n      if (bottomSpace > topSpace)\n        height = Math.min(bottomSpace, this.maxHeight);\n      return `${height - 16}px`;\n    });\n    /**\n     * Event handler for filtering the options in the dropdown.\n     *\n     * @param e The input event.\n     */\n    __privateAdd(this, _handleSearchFieldInput, (e) => {\n      if (!e.currentTarget)\n        return;\n      e.stopPropagation();\n      const wasCancelled = !this.dispatchEvent(\n        new CustomEvent(\"gds-filter-input\", {\n          detail: { value: e.currentTarget.value },\n          cancelable: true\n        })\n      );\n      if (wasCancelled)\n        return;\n      const input = e.currentTarget;\n      this.options.forEach((o) => o.hidden = false);\n      if (!input.value)\n        return;\n      const filteredOptions = this.options.filter(\n        (o) => !this.searchFilter(input.value, o)\n      );\n      filteredOptions.forEach((o) => o.hidden = true);\n    });\n    /**\n     * Check for ArrowDown or Tab in the search field.\n     * If found, focus should be moved to the listbox.\n     */\n    __privateAdd(this, _handleSearchFieldKeyDown, (e) => {\n      var _a;\n      (_a = this._elListbox) == null ? void 0 : _a.then((listbox) => {\n        if (e.key === \"ArrowDown\" || e.key === \"Tab\") {\n          e.preventDefault();\n          listbox.focus();\n          return;\n        }\n      });\n    });\n    /**\n     * Check for Tab in the listbox.\n     * If found, focus should be moved to the search field.\n     */\n    __privateAdd(this, _handleListboxKeyDown, (e) => {\n      var _a;\n      if (e.key === \"Tab\" && this.searchable) {\n        e.preventDefault();\n        (_a = this._elSearchInput) == null ? void 0 : _a.focus();\n        return;\n      }\n    });\n    __privateAdd(this, _handleOptionFocusChange, (e) => {\n      const triggerButton = this._elTriggerBtn;\n      if (triggerButton)\n        triggerButton.ariaActiveDescendantElement = e.target;\n    });\n    /**\n     * A listener to close the dropdown when any other element is focused.\n     */\n    __privateAdd(this, _blurCloseListener, (e) => {\n      const isFocusOutside = e instanceof FocusEvent && e.relatedTarget && !this.contains(e.relatedTarget);\n      if (isFocusOutside)\n        this.open = false;\n    });\n    __privateAdd(this, _tabCloseListener, (e) => {\n      var _a;\n      if (e.key === \"Tab\" && !this.searchable) {\n        e.preventDefault();\n        this.open = false;\n        (_a = this._elTriggerBtn) == null ? void 0 : _a.focus();\n      }\n    });\n  }\n  get type() {\n    return \"gds-dropdown\";\n  }\n  /**\n   * Get the options of the dropdown.\n   */\n  get options() {\n    if (!__privateGet(this, _optionElements))\n      return [];\n    return Array.from(__privateGet(this, _optionElements)).filter(\n      (o) => !o.hasAttribute(\"isplaceholder\")\n    );\n  }\n  /**\n   * Return the first option with a isPlaceholder attribute.\n   * If no placeholder is found, this will be undefined.\n   */\n  get placeholder() {\n    if (!__privateGet(this, _optionElements))\n      return;\n    return Array.from(__privateGet(this, _optionElements)).find(\n      (o) => o.hasAttribute(\"isplaceholder\")\n    );\n  }\n  /**\n   * Returns the display value as a string.\n   * If the dropdown is in multiple mode, this will be a comma separated list of the selected values.\n   */\n  get displayValue() {\n    var _a, _b;\n    let displayValue;\n    if (Array.isArray(this.value)) {\n      this.value.length > 2 ? displayValue = msg(str`${this.value.length} selected`) : displayValue = this.value.reduce(\n        (acc, cur) => {\n          var _a2;\n          return acc + ((_a2 = this.options.find((v) => v.value === cur)) == null ? void 0 : _a2.innerHTML) + \", \";\n        },\n        \"\"\n      ).slice(0, -2);\n    } else {\n      displayValue = (_a = this.options.find((v) => v.selected)) == null ? void 0 : _a.innerHTML;\n    }\n    return displayValue || ((_b = this.placeholder) == null ? void 0 : _b.innerHTML) || \"\";\n  }\n  /**\n   * Moves focus to this element.\n   */\n  focus() {\n    this._getValidityAnchor().focus();\n  }\n  /**\n   * A reference to the field element. This does not refer to the trigger button element itself,\n   * but the wrapper that makes up the visual field.\n   * Intended for use in integration tests.\n   */\n  test_getFieldElement() {\n    var _a;\n    return (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(\"#field\");\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.updateComplete.then(() => {\n      this._handleLightDOMChange();\n      this._handleValueChange();\n    });\n  }\n  render() {\n    return html`\n      ${when(\n      !this.hideLabel,\n      () => html`\n          <gds-form-control-header class=\"size-${this.size}\">\n            <label id=\"label\" for=\"trigger\" slot=\"label\">${this.label}</label>\n            ${when(\n        this.supportingText.length > 0,\n        () => html`<span slot=\"supporting-text\" id=\"supporting-text\">\n                  ${this.supportingText}\n                </span>`\n      )}\n            <slot\n              id=\"extended-supporting-text\"\n              name=\"extended-supporting-text\"\n              slot=\"extended-supporting-text\"\n            ></slot>\n            <!-- @deprecated: use 'supporting-text' slot instead. Remove in 2.0 release. -->\n            <slot id=\"sub-label\" name=\"sub-label\" slot=\"supporting-text\"></slot>\n          </gds-form-control-header>\n        `\n    )}\n      <gds-popover\n        .autofocus=${!this.combobox}\n        .label=${this.label}\n        .open=${this.open}\n        .calcMaxWidth=${(trigger) => this.syncPopoverWidth ? `${trigger.offsetWidth}px` : `auto`}\n        .calcMaxHeight=${__privateGet(this, _calcMaxHeight)}\n        .disableMobileStyles=${this.disableMobileStyles || this.combobox}\n        .nonmodal=${this.combobox}\n        @gds-ui-state=${(e) => this.open = e.detail.open}\n      >\n        <gds-field-base\n          .size=${this.size}\n          .disabled=${this.disabled}\n          .invalid=${this.invalid}\n          slot=\"trigger\"\n          id=\"field\"\n        >\n          <slot name=\"lead\" slot=\"lead\"></slot>\n          ${this.combobox && !this.multiple ? __privateGet(this, _renderCombobox).call(this) : __privateGet(this, _renderTriggerButton).call(this)}\n          <gds-icon-chevron-bottom slot=\"trail\"></gds-icon-chevron-bottom>\n        </gds-field-base>\n\n        ${when(\n      this.searchable,\n      () => html`<input\n              id=\"searchinput\"\n              type=\"text\"\n              aria-label=\"${msg(\"Filter available options\")}\"\n              placeholder=\"${msg(\"Search\")}\"\n              @keydown=${__privateGet(this, _handleSearchFieldKeyDown)}\n              @input=${__privateGet(this, _handleSearchFieldInput)}\n            />`\n    )}\n        <gds-listbox\n          id=\"listbox\"\n          .multiple=\"${ifDefined(this.multiple)}\"\n          .compareWith=\"${this.compareWith}\"\n          @change=\"${__privateMethod(this, _handleSelectionChange, handleSelectionChange_fn)}\"\n          @gds-focus=\"${__privateGet(this, _handleOptionFocusChange)}\"\n          @keydown=${__privateGet(this, _handleListboxKeyDown)}\n        >\n          <slot></slot>\n        </gds-listbox>\n      </gds-popover>\n\n      ${when(\n      !this.hideLabel,\n      () => html`\n          <gds-form-control-footer class=\"size-${this.size}\">\n            ${when(\n        this.invalid,\n        // @deprecated\n        // Wrapped in a slot for backwards compatibility with the deprecated message slot\n        // Remove for 2.0 release\n        () => html`\n                <slot id=\"message\" name=\"message\" slot=\"message\">\n                  <gds-icon-triangle-exclamation\n                    solid\n                  ></gds-icon-triangle-exclamation>\n                  ${this.errorMessage || this.validationMessage}\n                </slot>\n              `\n      )}\n          </gds-form-control-footer>\n        `\n    )}\n    `;\n  }\n  _getValidityAnchor() {\n    return this._elTriggerBtn;\n  }\n  _handleLightDOMChange() {\n    var _a, _b;\n    this.requestUpdate();\n    __privateSet(this, _optionElements, this.querySelectorAll(\"[gds-element=gds-option]\"));\n    if (this.multiple) {\n      this._handleValueChange();\n      return;\n    }\n    if (this.value === void 0) {\n      if (this.placeholder)\n        this.value = this.placeholder.value;\n      else\n        this.value = (_a = this.options[0]) == null ? void 0 : _a.value;\n    } else if (!this.placeholder && this.options.find(\n      (o) => this.compareWith(o.value, this.value)\n    ) === void 0) {\n      this.options[0] && (this.options[0].selected = true);\n      this.value = (_b = this.options[0]) == null ? void 0 : _b.value;\n    }\n  }\n  _handleValueChange() {\n    this._elListbox.then((listbox) => {\n      if (listbox) {\n        if (Array.isArray(this.value))\n          listbox.selection = this.value;\n        else\n          listbox.selection = [this.value];\n      }\n    });\n  }\n  _onOpenChange() {\n    var _a;\n    const open = this.open;\n    (_a = __privateGet(this, _optionElements)) == null ? void 0 : _a.forEach((o) => o.hidden = !open);\n    if (open)\n      __privateMethod(this, _registerAutoCloseListener, registerAutoCloseListener_fn).call(this);\n    else {\n      __privateMethod(this, _unregisterAutoCloseListener, unregisterAutoCloseListener_fn).call(this);\n      this._elSearchInput && (this._elSearchInput.value = \"\");\n    }\n    const selectedOption = this.options.find((option) => option.selected);\n    this.updateComplete.then(() => selectedOption == null ? void 0 : selectedOption.scrollIntoView());\n    this.dispatchEvent(\n      new CustomEvent(\"gds-ui-state\", {\n        detail: { open },\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n};\n_optionElements = new WeakMap();\n_renderCombobox = new WeakMap();\n_renderTriggerButton = new WeakMap();\n_calcMaxHeight = new WeakMap();\n_handleSearchFieldInput = new WeakMap();\n_handleSearchFieldKeyDown = new WeakMap();\n_handleListboxKeyDown = new WeakMap();\n_handleOptionFocusChange = new WeakMap();\n_handleSelectionChange = new WeakSet();\nhandleSelectionChange_fn = function() {\n  this._elListbox.then((listbox) => {\n    var _a;\n    if (this.multiple)\n      this.value = listbox.selection.map((s) => s.value);\n    else {\n      this.value = (_a = listbox.selection[0]) == null ? void 0 : _a.value;\n      this.open = false;\n      this.dispatchEvent(\n        new Event(\"input\", {\n          bubbles: true,\n          composed: true\n        })\n      );\n      setTimeout(() => {\n        var _a2;\n        return (_a2 = this._elTriggerBtn) == null ? void 0 : _a2.focus();\n      }, 0);\n    }\n    this.dispatchEvent(\n      new CustomEvent(\"change\", {\n        detail: { value: this.value },\n        bubbles: true,\n        composed: true\n      })\n    );\n  });\n};\n_registerAutoCloseListener = new WeakSet();\nregisterAutoCloseListener_fn = function() {\n  this.addEventListener(\"blur\", __privateGet(this, _blurCloseListener));\n  this.addEventListener(\"gds-blur\", __privateGet(this, _blurCloseListener));\n  this.addEventListener(\"keydown\", __privateGet(this, _tabCloseListener));\n};\n_unregisterAutoCloseListener = new WeakSet();\nunregisterAutoCloseListener_fn = function() {\n  this.removeEventListener(\"blur\", __privateGet(this, _blurCloseListener));\n  this.removeEventListener(\"gds-blur\", __privateGet(this, _blurCloseListener));\n  this.removeEventListener(\"keydown\", __privateGet(this, _tabCloseListener));\n};\n_blurCloseListener = new WeakMap();\n_tabCloseListener = new WeakMap();\nGdsDropdown.styles = [tokens, dropdown_styles_default];\n__decorateClass([\n  property({ attribute: \"supporting-text\" })\n], GdsDropdown.prototype, \"supportingText\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsDropdown.prototype, \"open\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsDropdown.prototype, \"searchable\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsDropdown.prototype, \"multiple\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsDropdown.prototype, \"combobox\", 2);\n__decorateClass([\n  property()\n], GdsDropdown.prototype, \"compareWith\", 2);\n__decorateClass([\n  property()\n], GdsDropdown.prototype, \"searchFilter\", 2);\n__decorateClass([\n  property({ type: Boolean, attribute: \"sync-popover-width\" })\n], GdsDropdown.prototype, \"syncPopoverWidth\", 2);\n__decorateClass([\n  property({ type: Number, attribute: \"max-height\" })\n], GdsDropdown.prototype, \"maxHeight\", 2);\n__decorateClass([\n  property()\n], GdsDropdown.prototype, \"size\", 2);\n__decorateClass([\n  property({ type: Boolean, attribute: \"hide-label\" })\n], GdsDropdown.prototype, \"hideLabel\", 2);\n__decorateClass([\n  property()\n], GdsDropdown.prototype, \"disableMobileStyles\", 2);\n__decorateClass([\n  query(\"#trigger\")\n], GdsDropdown.prototype, \"_elTriggerBtn\", 2);\n__decorateClass([\n  queryAsync(\"#listbox\")\n], GdsDropdown.prototype, \"_elListbox\", 2);\n__decorateClass([\n  query(\"#searchinput\")\n], GdsDropdown.prototype, \"_elSearchInput\", 2);\n__decorateClass([\n  observeLightDOM({\n    attributes: true,\n    childList: true,\n    subtree: true,\n    characterData: true\n  })\n], GdsDropdown.prototype, \"_handleLightDOMChange\", 1);\n__decorateClass([\n  watch(\"value\")\n], GdsDropdown.prototype, \"_handleValueChange\", 1);\n__decorateClass([\n  watch(\"open\")\n], GdsDropdown.prototype, \"_onOpenChange\", 1);\nGdsDropdown = __decorateClass([\n  gdsCustomElement(\"gds-dropdown\"),\n  localized()\n], GdsDropdown);\n\nexport {\n  GdsDropdown\n};\n","import {\n  styleExpressionProperty\n} from \"./chunk.K4KPKUH4.js\";\nimport {\n  tokens\n} from \"./chunk.M3IOWJFN.js\";\nimport {\n  GdsElement\n} from \"./chunk.TMEWQZER.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/container/container.ts\nimport { property } from \"lit/decorators.js\";\n\n// libs/core/src/components/container/container.style.ts\nimport { css } from \"lit\";\nvar style = css`\n  :host {\n    box-sizing: border-box;\n  }\n  :host(:focus-visible) {\n    outline-color: color-mix(in srgb, currentcolor, #000 100%);\n    outline-offset: var(--gds-space-3xs);\n    outline-style: solid;\n    outline-width: var(--gds-space-3xs);\n  }\n`;\nvar container_style_default = style;\n\n// libs/core/src/components/container/container.ts\nvar GdsContainer = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    this.display = \"block\";\n    this.level = \"2\";\n  }\n  render() {\n    return html`<slot></slot>`;\n  }\n};\nGdsContainer.styles = [tokens, container_style_default];\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"display\", 2);\n__decorateClass([\n  property()\n], GdsContainer.prototype, \"level\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"place-items\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"place-content\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: function(v) {\n      const [colorInput, transparency] = v.split(\"/\");\n      const isCustomColor = (color) => {\n        const trimmedColor = color.trim();\n        return trimmedColor.startsWith(\"#\") || // Hex color\n        trimmedColor.startsWith(\"rgb(\") || // RGB color\n        trimmedColor.startsWith(\"rgba(\") || // RGBA color\n        trimmedColor.startsWith(\"hsl(\") || // HSL color\n        trimmedColor.startsWith(\"hsla(\");\n      };\n      const constructCssVariable = (level, colorName) => {\n        return `var(--gds-color-l${level}-content-${colorName})`;\n      };\n      const getColorValue = (color, transparency2) => {\n        if (isCustomColor(color)) {\n          return transparency2 ? `color-mix(in srgb, ${color} ${parseFloat(transparency2) * 100}%, transparent 0%)` : color;\n        } else {\n          return constructCssVariable(this.level, color);\n        }\n      };\n      return getColorValue(colorInput, transparency);\n    }\n  })\n], GdsContainer.prototype, \"color\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: function(v) {\n      const [colorInput, transparency] = v.split(\"/\");\n      const isCustomColor = (color) => {\n        const trimmedColor = color.trim();\n        return trimmedColor.startsWith(\"#\") || // Hex color\n        trimmedColor.startsWith(\"rgb(\") || // RGB color\n        trimmedColor.startsWith(\"rgba(\") || // RGBA color\n        trimmedColor.startsWith(\"hsl(\") || // HSL color\n        trimmedColor.startsWith(\"hsla(\");\n      };\n      const constructCssVariable = (level, color) => {\n        return `var(--gds-color-l${level}-background-${color})`;\n      };\n      const getBackgroundColor = (color, transparency2) => {\n        if (isCustomColor(color)) {\n          return transparency2 ? `color-mix(in srgb, ${color} ${parseFloat(transparency2) * 100}%, transparent 0%)` : color;\n        } else {\n          return constructCssVariable(this.level, color);\n        }\n      };\n      return getBackgroundColor(colorInput, transparency);\n    }\n  })\n], GdsContainer.prototype, \"background\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: function(v) {\n      const [size, color] = v.split(\"/\");\n      const isCustomColor = (color2) => {\n        const trimmedColor = color2.trim();\n        return trimmedColor.startsWith(\"#\") || // Hex color\n        trimmedColor.startsWith(\"rgb(\") || // RGB color\n        trimmedColor.startsWith(\"rgba(\") || // RGBA color\n        trimmedColor.startsWith(\"hsl(\") || // HSL color\n        trimmedColor.startsWith(\"hsla(\");\n      };\n      const constructBorderColorVariable = (level, color2) => {\n        return `var(--gds-color-l${level}-border-${color2})`;\n      };\n      const getBorderColorValue = (color2) => {\n        return isCustomColor(color2) ? color2 : constructBorderColorVariable(this.level, color2);\n      };\n      return `var(--gds-space-${size}) solid ${color ? getBorderColorValue(color) : \"currentColor\"}`;\n    },\n    styleTemplate: (_prop, values) => {\n      const top = values[0];\n      const right = values.length > 1 ? values[1] : top;\n      const bottom = values.length > 2 ? values[2] : top;\n      const left = values.length > 3 ? values[3] : top;\n      return `\n        border-top: ${top};\n        border-right: ${right};\n        border-bottom: ${bottom};\n        border-left: ${left};\n      `;\n    }\n  })\n], GdsContainer.prototype, \"border\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: function(v) {\n      const [color] = v.split(\"/\");\n      const isCustomColor = (color2) => {\n        const trimmedColor = color2.trim();\n        return trimmedColor.startsWith(\"#\") || // Hex color\n        trimmedColor.startsWith(\"rgb(\") || // RGB color\n        trimmedColor.startsWith(\"rgba(\") || // RGBA color\n        trimmedColor.startsWith(\"hsl(\") || // HSL color\n        trimmedColor.startsWith(\"hsla(\");\n      };\n      const constructBorderColorVariable = (level, color2) => {\n        return `var(--gds-color-l${level}-border-${color2})`;\n      };\n      const getBorderColorValue = (color2) => {\n        return isCustomColor(color2) ? color2 : constructBorderColorVariable(this.level, color2);\n      };\n      return color ? getBorderColorValue(color) : \"currentColor\";\n    },\n    styleTemplate: (_prop, values) => {\n      const top = values[0];\n      const right = values.length > 1 ? values[1] : top;\n      const bottom = values.length > 2 ? values[2] : top;\n      const left = values.length > 3 ? values[3] : top;\n      return `\n        border-top-color: ${top};\n        border-right-color: ${right};\n        border-bottom-color: ${bottom};\n        border-left-color: ${left};\n      `;\n    }\n  })\n], GdsContainer.prototype, \"border-color\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    styleTemplate: (_prop, values) => {\n      const top = values[0];\n      const right = values.length > 1 ? values[1] : top;\n      const bottom = values.length > 2 ? values[2] : top;\n      const left = values.length > 3 ? values[3] : top;\n      return `\n        border-top-width: ${top};\n        border-right-width: ${right};\n        border-bottom-width: ${bottom};\n        border-left-width: ${left};\n        border-style: solid;\n      `;\n    }\n  })\n], GdsContainer.prototype, \"border-width\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => `var(--gds-space-${v})`\n  })\n], GdsContainer.prototype, \"border-radius\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"opacity\", 2);\n__decorateClass([\n  styleExpressionProperty()\n], GdsContainer.prototype, \"padding\", 2);\n__decorateClass([\n  styleExpressionProperty()\n], GdsContainer.prototype, \"padding-inline\", 2);\n__decorateClass([\n  styleExpressionProperty()\n], GdsContainer.prototype, \"padding-block\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => {\n      const sign = v.startsWith(\"-\") ? \"neg\" : \"pos\";\n      const val = sign == \"pos\" ? `var(--gds-space-${v})` : `calc(var(--gds-space-${v.substring(1)}) * -1)`;\n      return v === \"auto\" ? \"auto\" : val;\n    },\n    styleTemplate: (_prop, values) => {\n      const transformValue = (v) => v === \"auto\" ? \"auto\" : `${v}`;\n      const top = transformValue(values[0]);\n      const right = values.length > 1 ? transformValue(values[1]) : top;\n      const bottom = values.length > 2 ? transformValue(values[2]) : top;\n      const left = values.length > 3 ? transformValue(values[3]) : right;\n      return `margin: ${top} ${right} ${bottom} ${left};`;\n    }\n  })\n], GdsContainer.prototype, \"margin\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"position\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"inset\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"overflow\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"height\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"max-height\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"min-height\", 2);\n__decorateClass([\n  styleExpressionProperty()\n], GdsContainer.prototype, \"block-size\", 2);\n__decorateClass([\n  styleExpressionProperty()\n], GdsContainer.prototype, \"min-block-size\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"width\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"max-width\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"min-width\", 2);\n__decorateClass([\n  styleExpressionProperty()\n], GdsContainer.prototype, \"inline-size\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"box-sizing\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"cursor\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"pointer-events\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"user-select\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"z-index\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"transform\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"transform-style\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"transition\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"transition-behavior\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => v\n  })\n], GdsContainer.prototype, \"animation\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => `${v}`,\n    styleTemplate: (prop, values) => {\n      const size = values[0];\n      const styleSize = `font-size: var(--gds-text-size-${size});`;\n      const styleLine = `line-height: var(--gds-text-line-height-${size});`;\n      return styleSize + styleLine;\n    }\n  })\n], GdsContainer.prototype, \"font-size\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    property: \"font-weight\",\n    valueTemplate: (v) => `var(--gds-text-weight-${v})`\n  })\n], GdsContainer.prototype, \"font-weight\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => `${v}`\n  })\n], GdsContainer.prototype, \"grid-column\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => `${v}`\n  })\n], GdsContainer.prototype, \"grid-row\", 2);\n__decorateClass([\n  styleExpressionProperty({\n    valueTemplate: (v) => `${v}`\n  })\n], GdsContainer.prototype, \"flex\", 2);\nGdsContainer = __decorateClass([\n  gdsCustomElement(\"gds-container\")\n], GdsContainer);\n\nexport {\n  GdsContainer\n};\n"],"names":[],"sourceRoot":""}