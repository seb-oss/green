"use strict";(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[429],{"./libs/angular/src/v-angular/button/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Alternative:()=>Alternative,Delete:()=>Delete,DeleteConfirm:()=>DeleteConfirm,Ghost:()=>Ghost,GhostDark:()=>GhostDark,Link:()=>Link,Primary:()=>Primary,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_angular_router_testing__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/router/fesm2022/testing.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_sebgroup_green_angular_src_v_angular_external_link__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/angular/src/v-angular/external-link/index.ts"),_button_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/angular/src/v-angular/button/button.component.ts");const getButtonText=type=>`${_button_component__WEBPACK_IMPORTED_MODULE_2__.i[type]} button`,__WEBPACK_DEFAULT_EXPORT__={title:"V-Angular/Button",component:_button_component__WEBPACK_IMPORTED_MODULE_2__.C,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.applicationConfig)({providers:[{provide:_angular_common__WEBPACK_IMPORTED_MODULE_3__.APP_BASE_HREF,useValue:"/"}]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule,_angular_router_testing__WEBPACK_IMPORTED_MODULE_4__.c],declarations:[_sebgroup_green_angular_src_v_angular_external_link__WEBPACK_IMPORTED_MODULE_1__.z]})],argTypes:{type:{options:["button","submit","reset","link"],control:{type:"select"}},buttonStyle:{table:{disable:!0}},clickAction:{table:{disable:!0}}}},Template=args=>({template:'\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>',styles:["\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }"],props:args}),Primary=Template.bind({});Primary.args={buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Primary,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Primary),small:!1,clickAction:console.log};const Secondary=Template.bind({});Secondary.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Secondary,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Secondary)};const Alternative=Template.bind({});Alternative.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Alternative,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Alternative)};const Delete=Template.bind({});Delete.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Delete,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Delete)};const DeleteConfirm=Template.bind({});DeleteConfirm.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.DeleteConfirm,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.DeleteConfirm)};const Ghost=Template.bind({});Ghost.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Ghost,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Ghost)};const GhostDark=Template.bind({});GhostDark.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.GhostDark,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.GhostDark)};const Link=Template.bind({});Link.args={...Primary.args,type:"link",href:"https://seb.se",buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Link,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Link)};const __namedExportsOrder=["Primary","Secondary","Alternative","Delete","DeleteConfirm","Ghost","GhostDark","Link"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Secondary.parameters?.docs?.source}}},Alternative.parameters={...Alternative.parameters,docs:{...Alternative.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Alternative.parameters?.docs?.source}}},Delete.parameters={...Delete.parameters,docs:{...Delete.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Delete.parameters?.docs?.source}}},DeleteConfirm.parameters={...DeleteConfirm.parameters,docs:{...DeleteConfirm.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...DeleteConfirm.parameters?.docs?.source}}},Ghost.parameters={...Ghost.parameters,docs:{...Ghost.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Ghost.parameters?.docs?.source}}},GhostDark.parameters={...GhostDark.parameters,docs:{...GhostDark.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...GhostDark.parameters?.docs?.source}}},Link.parameters={...Link.parameters,docs:{...Link.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Link.parameters?.docs?.source}}}}}]);