(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[4013],{"./libs/angular/src/lib/cell-table/cell-table.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'[role=rowheader] {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-bottom: 0.5rem;\n}\n\n[role=cell],\n[role=columnheader] {\n  flex: 1 1 0;\n  margin-bottom: 0.125rem;\n}\n\n.cell-table--row-wrapper {\n  border-top: 1px solid var(--gds-ref-pallet-base400);\n  display: flex;\n  padding: 1rem;\n}\n.cell-table--row-wrapper > div:first-child {\n  flex: 1 1 0;\n}\n.cell-table--row-wrapper.is-clickable {\n  cursor: pointer;\n}\n.cell-table--row-wrapper.is-clickable:hover {\n  background-color: var(--gds-ref-pallet-base100);\n}\n\n.cell-table--arrow-container {\n  flex: 0 0 auto;\n  width: 10px;\n}\n.cell-table--arrow-container [tabindex="0"]:focus {\n  outline: 2px solid var(--gds-ref-pallet-base800);\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./libs/angular/src/lib/cell-table/cell-table.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{I:()=>NggCellTableComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var cell_table_componentngResource=__webpack_require__("./libs/angular/src/lib/cell-table/cell-table.component.scss?ngResource"),cell_table_componentngResource_default=__webpack_require__.n(cell_table_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let NggCellTableComponent=class NggCellTableComponent{constructor(){this.items=new core.QueryList,this.overflowReverse=!1,this.headerList=[],this.rows=[],this.clickableRows=!1,this.clickLabel="View details",this.rowClicked=new core.EventEmitter,this.handleClickRow=value=>{this.clickableRows&&this.rowClicked.emit(value)},this.getValueTypeFromMain=()=>{const getMain=this.headerList.find((x=>x.main));return getMain&&getMain.valueType||""},this.getTableHeaderListValueFromNonMain=header=>header.valueType&&header.valueType||"",this.mainHeader=row=>{const getMain=this.headerList.find((x=>x.main));return row&&getMain?{value:row[getMain.tableKeySelector],valueType:getMain.valueType||"string",tableKeySelector:getMain.tableKeySelector}:{value:"-",valueType:"string",tableKeySelector:"-"}},this.headerNoneMain=headers=>this.overflowReverse?headers.filter((x=>!x.main)).reverse():headers.filter((x=>!x.main)),this.getTableKeySelector=row=>this.mainHeader(row).tableKeySelector+row.rowId}trackByrowId(_,b){return b.rowId}KeySelector(_,b){return b.tableKeySelector}static{this.propDecorators={items:[{type:core.ViewChildren,args:["items"]}],minWidth:[{type:core.Input}],overflowReverse:[{type:core.Input}],className:[{type:core.Input}],headerList:[{type:core.Input}],rows:[{type:core.Input}],clickableRows:[{type:core.Input}],clickLabel:[{type:core.Input}],rowClicked:[{type:core.Output}]}}};NggCellTableComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngg-cell-table",template:'<div #targetElement role="table" [ngClass]="className">\n  <div class="cell-table-table d-flex flex-column">\n    <div\n      *ngFor="let row of rows; trackBy: trackByrowId"\n      (click)="handleClickRow(row)"\n      class="cell-table--row-wrapper"\n      role="rowgroup"\n      [class.is-clickable]="clickableRows"\n    >\n      <div>\n        <div #items [class.overflow-reverse]="overflowReverse">\n          \x3c!-- Main header --\x3e\n          <div role="row">\n            <div\n              nggCellTableItem\n              [row]="mainHeader(row).value"\n              [valueType]="getValueTypeFromMain()"\n              [attr.valueType]="getValueTypeFromMain()"\n              [attr.id]="getTableKeySelector(row)"\n              role="rowheader"\n              aria-rowspan="3"\n              aria-colspan="3"\n            ></div>\n          </div>\n          <div role="row">\n            <div class="d-flex">\n              \x3c!-- Sub Header --\x3e\n              <div\n                nggCellTableItem\n                class="sub-header py-0 fw-bold"\n                [row]="header.label"\n                [valueType]="getTableHeaderListValueFromNonMain(header)"\n                role="columnheader"\n                *ngFor="\n                  let header of headerNoneMain(headerList);\n                  trackBy: KeySelector\n                "\n              ></div>\n            </div>\n          </div>\n\n          <div role="row">\n            \x3c!-- Sub Values --\x3e\n            <div class="d-flex">\n              <div\n                nggCellTableItem\n                class="sub-value py-0"\n                [row]="row[header.tableKeySelector]"\n                [valueType]="getTableHeaderListValueFromNonMain(header)"\n                [attr.valueType]="header.valueType"\n                role="cell"\n                *ngFor="\n                  let header of headerNoneMain(headerList);\n                  trackBy: KeySelector\n                "\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        *ngIf="clickableRows"\n        role="row"\n        class="d-grid align-items-center ms-4 me-4 cell-table--arrow-container"\n      >\n        <div role="cell">\n          <div\n            role="button"\n            [attr.aria-label]="clickLabel"\n            tabindex="0"\n            [attr.aria-describedby]="getTableKeySelector(row)"\n            (keydown.enter)="handleClickRow(row)"\n          >\n            <svg\n              data-prefix="far"\n              data-icon="chevron-right"\n              class="svg-inline--fa fa-chevron-right fa-w-10"\n              xmlns="http://www.w3.org/2000/svg"\n              viewBox="0 0 320 512"\n            >\n              <path\n                fill="currentColor"\n                d="M113.3 47.41l183.1 191.1c4.469 4.625 6.688 10.62 6.688 16.59s-2.219 11.97-6.688 16.59l-183.1 191.1c-9.152 9.594-24.34 9.906-33.9 .7187c-9.625-9.125-9.938-24.38-.7187-33.91l168-175.4L78.71 80.6c-9.219-9.5-8.906-24.78 .7187-33.91C88.99 37.5 104.2 37.82 113.3 47.41z"\n              ></path>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[cell_table_componentngResource_default()]})],NggCellTableComponent)},"./libs/angular/src/lib/cell-table/cell-table.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>cell_table_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),cell_table_component=__webpack_require__("./libs/angular/src/lib/cell-table/cell-table.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs");let CellTableItemComponent=class CellTableItemComponent{constructor(sanitizer){this.sanitizer=sanitizer,this.valueType="string",this.id="",this.getSignColor=value=>/[−-]/.test(String(value))?"text-danger":/[1-9]/.test(String(value))?"text-success":""}transformHTML(value){return value&&value.length?this.sanitizer.bypassSecurityTrustHtml(value):""}static{this.ctorParameters=()=>[{type:platform_browser.DomSanitizer}]}static{this.propDecorators={row:[{type:core.Input}],valueType:[{type:core.Input}],id:[{type:core.Input}]}}};CellTableItemComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"[nggCellTableItem]",template:"\n    <ng-container [ngSwitch]=\"valueType\">\n      <span *ngSwitchCase=\"'string'\">{{ row || '–' }}</span>\n      <span *ngSwitchCase=\"'number'\">{{ (row | number) || '–' }}</span>\n      <span *ngSwitchCase=\"'datetime'\">{{\n        (row | date: 'HH:mm:ss') || '–'\n      }}</span>\n      <span *ngSwitchCase=\"'date'\">{{\n        (row | date: 'YYYY-MM-dd') || '–'\n      }}</span>\n      <span\n        *ngSwitchCase=\"'custom-html'\"\n        [innerHtml]=\"transformHTML(row) || '–'\"\n      ></span>\n      <span *ngSwitchCase=\"'sign'\" [ngClass]=\"getSignColor(row)\">{{\n        row || '–'\n      }}</span>\n      <span *ngSwitchCase=\"'pct'\">{{ row || '–' }}</span>\n      <span *ngSwitchCase=\"'streamSign'\" [nggSlidingUnderline]=\"row\">{{\n        row || '–'\n      }}</span>\n      <span *ngSwitchDefault>–</span>\n    </ng-container>\n  "}),(0,tslib_es6.Sn)("design:paramtypes",[platform_browser.DomSanitizer])],CellTableItemComponent);let SlidingUnderlineDirective=class SlidingUnderlineDirective{constructor(element){this.element=element}ngOnInit(){this.element?.nativeElement&&(this.element.nativeElement.classList.add("slider"),this.element.nativeElement.addEventListener("animationend",(()=>{this.element.nativeElement.classList.remove("left","slider-positive","slider-negative")})))}ngOnChanges(changes){this.disabled||(changes.slidingUnderline&&changes.key&&!changes.slidingUnderline.isFirstChange()&&!changes?.key?.isFirstChange()?changes.key.currentValue===changes.key.previousValue&&this.addAnimation(changes.slidingUnderline.currentValue,changes.slidingUnderline.previousValue):changes.slidingUnderline&&!changes.slidingUnderline.isFirstChange()&&this.addAnimation(changes.slidingUnderline.currentValue,changes.slidingUnderline.previousValue))}addAnimation(current,previous){current>previous?this.element.nativeElement.classList.add("slider-positive"):this.element.nativeElement.classList.add("slider-negative"),this.element.nativeElement.classList.add("left")}static{this.ctorParameters=()=>[{type:core.ElementRef}]}static{this.propDecorators={nggSlidingUnderline:[{type:core.Input}],key:[{type:core.Input}],disabled:[{type:core.Input}]}}};SlidingUnderlineDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[nggSlidingUnderline]"}),(0,tslib_es6.Sn)("design:paramtypes",[core.ElementRef])],SlidingUnderlineDirective);let NggCellTableModule=class NggCellTableModule{};NggCellTableModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule],exports:[cell_table_component.I],declarations:[cell_table_component.I,CellTableItemComponent,SlidingUnderlineDirective]})],NggCellTableModule);const cell_table_stories={title:"Components/Cell Table",component:cell_table_component.I,decorators:[(0,dist.moduleMetadata)({imports:[NggCellTableModule]})],parameters:{componentIds:["components-cell-table"]},argTypes:{rows:{control:"object"},headerList:{control:"object"},className:{control:"text"},clickableRows:{control:"boolean"},clickLabel:{control:"text"}}},Default=(args=>({template:'\n      <ngg-cell-table [rows]="rows" [headerList]="headerList" [className]="className" [clickableRows]="clickableRows" [clickLabel]="clickLabel">\n      </ngg-cell-table>\n    ',props:args})).bind({});Default.args={rows:[{rowId:0,FullName:"<a href='#/sv/security/17921/ABB'><img class='pe-3 d-inline' src='https://content.seb.se/ssc/channels/savings-investments/financial-market-intra/assets/flags/se.svg' alt=''><span>ABB Ltd</span></a>",PreLastTradedAt:397.3,ChangePercent:"−1,39%",Change:5},{rowId:1,FullName:"<a href='#/sv/security/17921/ABB'><img class='pe-3 d-inline' src='https://content.seb.se/ssc/channels/savings-investments/financial-market-intra/assets/flags/se.svg' alt=''><span>H&M</span></a>",PreLastTradedAt:200.3,ChangePercent:"−1,39%",Change:5},{rowId:2,FullName:"<a href='#/sv/security/17921/ABB'><img class='pe-3 d-inline' src='https://content.seb.se/ssc/channels/savings-investments/financial-market-intra/assets/flags/se.svg' alt=''><span>SBB</span></a>",PreLastTradedAt:100.3,ChangePercent:"−1,39%",Change:5}],className:"cell-table-container d-block stacked-stock-list stacked-indent",headerList:[{tableKeySelector:"FullName",label:"Namn",valueType:"custom-html",main:!0},{tableKeySelector:"PreLastTradedAt",label:"Senast",valueType:"streamSign"},{tableKeySelector:"ChangePercent",label:"Utv. %",valueType:"sign"},{tableKeySelector:"Change",label:"Utv. (SEK)",valueType:"sign"}],clickableRows:!0,clickLabel:"View details"};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  return {\n    template: `\n      <ngg-cell-table [rows]="rows" [headerList]="headerList" [className]="className" [clickableRows]="clickableRows" [clickLabel]="clickLabel">\n      </ngg-cell-table>\n    `,\n    props: args\n  };\n}',...Default.parameters?.docs?.source}}}}}]);