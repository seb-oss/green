@use '../../tokens/shame' as tokens;
@use '../../common';
@use 'sass:map';

$color: var(--gds-sys-color-text-link);
$color-hover: var(--gds-sys-color-blue);
$color-visited: var(--gds-sys-color-blue-dark-2);
$color-dark: var(--gds-sys-color-text-primary);
$color-visited-dark: var(--gds-sys-color-text-secondary);
// TODO: Change to typography tokens generated from style dictionary
$font-weight: tokens.$font-weight-bold;
$outline-opacity: 0.35;

@mixin base {
  @include common.add-outline-focus-state();
  color: $color;
  font-weight: $font-weight;
  border: none;
  border-radius: 0.125rem;

  &:focus {
    &:not([aria-disabled]) {
      color: $color-hover;
    }
  }

  &.link-history:visited {
    color: $color-visited;
  }

  &.link-history:visited {
    color: $color-visited;
  }
}

@mixin disabled {
  font-weight: $font-weight;
  @include common.add-disable(false, true, false);
}

@mixin button {
  text-decoration: none;
}

@mixin underline {
  text-decoration: underline;
  text-underline-offset: 3px;

  &:hover {
    text-underline-offset: 2px;
    text-decoration-thickness: 2px;
  }

  &:active {
    text-underline-offset: 1px;
  }
}

@mixin icon {
  display: flex;
  align-items: center;
  gap: 10px;
  transition: color 468ms;
  transition-timing-function: cubic-bezier(0, 0.25, 0.5, 1);

  svg,
  [gds-element*='gds-icon'] {
    fill: none;
    height: 17px;
    transition: transform 0.2s ease-in-out;
    path {
      fill: currentColor;
    }
  }
}

// TODO: Convert this to a "Secondary link" and add full support for icons in the link component.
@mixin arrow {
  display: inline-flex;
  align-items: center;
  gap: 5px;
  color: $color-dark;
  font-weight: $font-weight;
  text-decoration: none;
  --arrow-transition: transform 0.2s ease-in-out;
  --arrow-translate: translate3d(5px, 0, 0);

  svg,
  [gds-element*='gds-icon'] {
    display: block;
    fill: none;
    height: 17px;
    transition: var(--arrow-transition);
    path {
      fill: currentColor;
    }
  }

  &.link:focus {
    color: $color-dark;
  }

  &:visited {
    color: $color-visited-dark;
  }

  &:hover svg,
  &:hover [gds-element*='gds-icon'] {
    transform: var(--arrow-translate);
  }

  @media (prefers-reduced-motion) {
    --arrow-transition: none;

    &:hover svg,
    &:hover [gds-element*='gds-icon'] {
      --arrow-translate: none;
    }
  }
}
