@use '../../tokens' as tokens;
@use '../../common';
@use 'sass:map';

@mixin reset {
  background-color: transparent;
  border: 0;
  cursor: pointer;
  font-family: inherit;
  padding: 0;
}

@mixin base {
  @include common.padding-horizontal(5);
  @include common.padding-vertical(4);
  @include common.add-border-radius();
  @include common.add-border();
  @include common.font-weight('medium');
  @include common.add-focus();
  & {
    min-height: 2.75rem;
    align-items: center;
    display: inline-flex;
    justify-content: center;
  }

  @include common.media-breakpoint-down('sm') {
    min-width: 100%;
  }

  @media screen and (-ms-high-contrast: active) {
    border: 2px solid currentcolor;
  }

  &.small {
    min-height: 2rem;
    padding: 0.4375rem 0.75rem;
    line-height: 1rem;
  }

  &.large {
    min-height: 4rem;
    padding: 1rem 1.5rem;
    font-size: 1.5rem;
    line-height: 2rem;
  }
}

@mixin secondary {
  @include common.add-focus();
  @include common.add-hover-active-state();
  & {
    background: transparent;
    border-color: var(--gds-sys-color-blue-dark-2);
    color: var(--gds-sys-color-blue-dark-2);
    --color: #{var(--gds-sys-color-blue-dark-2)};
  }

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(true, true, true);
  }
}

@mixin tertiary {
  @include common.add-focus();
  @include common.add-hover-active-state();
  & {
    background: transparent;
    border-color: transparent;
    color: var(--gds-sys-color-blue-dark-2);
    --color: #{var(--gds-sys-color-blue-dark-2)};
  }

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(true, true, true);
  }
}

@mixin primary {
  @include common.add-hover-active-state();
  & {
    background: var(--gds-sys-color-dark-blue-2);
    border-color: var(--gds-sys-color-blue-dark-2);
    color: var(--gds-sys-color-text-white);
    --color: #{var(--gds-sys-color-text-white)};
  }

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(true, true, true);
  }
}

@mixin ghost-dark() {
  $ghost-color: var(--gds-sys-color-base-800);
  @include common.add-hover-active-state($ghost-color, $ghost-color, true);
  background-color: transparent;
  border-color: $ghost-color;
  color: $ghost-color;
  --color: #{$ghost-color};

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(false, true, true);
  }
}

@mixin ghost-light() {
  --gds-sys-color-focus-outline: var(--gds-sys-color-white);
  @include common.add-hover-active-state(
    var(--gds-sys-color-white),
    var(--gds-sys-color-base-200),
    true,
    var(--gds-sys-color-text-primary),
    var(--gds-sys-color-text-primary)
  );

  & {
    background-color: transparent;
    border-color: var(--gds-sys-color-white);
    color: var(--gds-sys-color-white);
    --color: var(--gds-sys-color-white);
  }

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(false, true, true);
  }
}

@mixin icon() {
  background-color: transparent;
  border: 0.0625rem solid transparent;
  padding: 0.625rem;
  height: 2.75rem;
  width: 2.75rem;
  min-width: auto;
  --color: var(--gds-sys-color-base-800);

  .gds-form-group & {
    margin-top: -0.625rem;
  }

  &.small {
    height: 2rem;
    width: 2rem;
    padding: 0.4375rem;
    line-height: 1.125rem;
  }

  svg {
    height: 1rem;
    width: 1rem;
  }

  path,
  line,
  circle,
  rect,
  ellipse,
  polyline,
  text {
    fill: var(--gds-sys-color-base-800);
    stroke: var(--gds-sys-color-base-800);
    transition: all tokens.$transition-time;
  }

  &:hover,
  &.highlighted {
    background-color: rgba(0, 0, 0, 0.1);
    border-color: transparent;
  }

  &:active,
  &.highlighted:hover {
    background-color: rgba(0, 0, 0, 0.2);
    border-color: transparent;
  }
}

@mixin danger-bg {
  background: var(--gds-sys-color-dark-red-1);
  border-color: var(--gds-sys-color-dark-red-1);
  color: var(--gds-sys-color-text-white);
  --color: #{var(--gds-sys-color-text-white)};

  @include common.add-hover-active-state(
    var(--gds-sys-color-dark-red-1),
    var(--gds-sys-color-dark-red-1),
    var(--gds-sys-color-dark-red-1)
  );

  @include common.add-focus();

  &:disabled,
  &.disabled,
  &[aria-disabled='true'] {
    @include common.add-disable(
      var(--gds-sys-color-dark-red-1),
      var(--gds-sys-color-text-white),
      var(--gds-sys-color-dark-red-1)
    );
  }
}

@mixin danger-color {
  color: var(--gds-sys-color-dark-red-1);
  --color: #{var(--gds-sys-color-dark-red-1)};
  border-color: transparent;

  @include common.add-hover-active-state(
    var(--gds-sys-color-dark-red-1),
    var(--gds-sys-color-dark-red-1),
    var(--gds-sys-color-dark-red-1)
  );

  @include common.add-focus();
}
