// https://github.com/twbs/bootstrap/blob/main/scss/_utilities.scss

@use 'index' as tokens;

// stylelint-disable indentation

// Utilities

$utilities: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$utilities: map-merge((

      'align': (
        property: vertical-align,
        class: align,
        values: baseline top middle bottom text-bottom text-top
      ),


      'float': (
        responsive: true,
        property: float,
        values: (
          start: left,
          end: right,
          none: none,
        )
      ),



      'opacity': (
        property: opacity,
        values: (
          0: 0,
          25: 0.25,
          50: 0.5,
          75: 0.75,
          100: 1,
        )
      ),


      'overflow': (
        property: overflow,
        values: auto hidden visible scroll,
      ),


      'display': (
        responsive: true,
        print: true,
        property: display,
        class: d,
        values: inline inline-block block grid table table-row table-cell flex inline-flex none
      ),


      'shadow': (
        property: box-shadow,
        class: shadow,
        values: (
          null: tokens.$box-shadow,
          lg: tokens.$box-shadow-lg,
          none: none,
        )
      ),

      'border': (
        property: border,
        values: (
          null: tokens.$border-width solid tokens.$border-color,
          0: 0,
        )
      ),
      'border-top': (
        property: border-top,
        values: (
          null: tokens.$border-width solid tokens.$border-color,
          0: 0,
        )
      ),
      'border-end': (
        property: border-right,
        class: border-end,
        values: (
          null: tokens.$border-width solid tokens.$border-color,
          0: 0,
        )
      ),
      'border-bottom': (
        property: border-bottom,
        values: (
          null: tokens.$border-width solid tokens.$border-color,
          0: 0,
        )
      ),
      'border-start': (
        property: border-left,
        class: border-start,
        values: (
          null: tokens.$border-width solid tokens.$border-color,
          0: 0,
        )
      ),
      'border-color': (
        property: border-color,
        class: border,
        values: map-merge(tokens.$intent-colors, ('white': tokens.$white))
      ),
      'border-width': (
        property: border-width,
        class: border,
        values: tokens.$border-width
      ),

      'width': (
        property: width,
        class: w,
        values: (
          25: 25%,
          50: 50%,
          75: 75%,
          100: 100%,
          auto: auto
        )
      ),
      'max-width': (
        property: max-width,
        class: mw,
        values: (100: 100%)
      ),
      'viewport-width': (
        property: width,
        class: vw,
        values: (100: 100vw)
      ),
      'min-viewport-width': (
        property: min-width,
        class: min-vw,
        values: (100: 100vw)
      ),
      'height': (
        property: height,
        class: h,
        values: (
          25: 25%,
          50: 50%,
          75: 75%,
          100: 100%,
          auto: auto
        )
      ),
      'max-height': (
        property: max-height,
        class: mh,
        values: (100: 100%)
      ),
      'viewport-height': (
        property: height,
        class: vh,
        values: (100: 100vh)
      ),
      'min-viewport-height': (
        property: min-height,
        class: min-vh,
        values: (100: 100vh)
      ),



      'flex': (
        responsive: true,
        property: flex,
        values: (fill: 1 1 auto)
      ),
      'flex-direction': (
        responsive: true,
        property: flex-direction,
        class: flex,
        values: row column row-reverse column-reverse
      ),
      'flex-grow': (
        responsive: true,
        property: flex-grow,
        class: flex,
        values: (
          grow-0: 0,
          grow-1: 1,
        )
      ),
      'flex-shrink': (
        responsive: true,
        property: flex-shrink,
        class: flex,
        values: (
          shrink-0: 0,
          shrink-1: 1,
        )
      ),
      'flex-wrap': (
        responsive: true,
        property: flex-wrap,
        class: flex,
        values: wrap nowrap wrap-reverse
      ),
      'justify-content': (
        responsive: true,
        property: justify-content,
        values: (
          start: flex-start,
          end: flex-end,
          center: center,
          between: space-between,
          around: space-around,
          evenly: space-evenly,
        )
      ),
      'align-items': (
        responsive: true,
        property: align-items,
        values: (
          start: flex-start,
          end: flex-end,
          center: center,
          baseline: baseline,
          stretch: stretch,
        )
      ),
      'align-content': (
        responsive: true,
        property: align-content,
        values: (
          start: flex-start,
          end: flex-end,
          center: center,
          between: space-between,
          around: space-around,
          stretch: stretch,
        )
      ),
      'align-self': (
        responsive: true,
        property: align-self,
        values: (
          auto: auto,
          start: flex-start,
          end: flex-end,
          center: center,
          baseline: baseline,
          stretch: stretch,
        )
      ),
      'order': (
        responsive: true,
        property: order,
        values: (
          first: -1,
          0: 0,
          1: 1,
          2: 2,
          3: 3,
          4: 4,
          5: 5,
          last: 6,
        ),
      ),



      'margin': (
        responsive: true,
        property: margin,
        class: m,
        values: map-merge(tokens.$spacing, (auto: auto))
      ),
      'margin-x': (
        responsive: true,
        property: margin-right margin-left,
        class: mx,
        values: map-merge(tokens.$spacing, (auto: auto))
      ),
      'margin-y': (
        responsive: true,
        property: margin-top margin-bottom,
        class: my,
        values: map-merge(tokens.$spacing, (auto: auto))
      ),
      'margin-top': (
        responsive: true,
        property: margin-top,
        class: mt,
        values: map-merge(tokens.$spacing, (auto: auto))
      ),
      'margin-end': (
        responsive: true,
        property: margin-right,
        class: me,
        values: map-merge(tokens.$spacing, (auto: auto))
      ),
      'margin-bottom': (
        responsive: true,
        property: margin-bottom,
        class: mb,
        values: map-merge(tokens.$spacing, (auto: auto))
      ),
      'margin-start': (
        responsive: true,
        property: margin-left,
        class: ms,
        values: map-merge(tokens.$spacing, (auto: auto))
      ),

      'negative-margin': (
        responsive: true,
        property: margin,
        class: m,
        values: tokens.$negative-spacing
      ),
      'negative-margin-x': (
        responsive: true,
        property: margin-right margin-left,
        class: mx,
        values: tokens.$negative-spacing
      ),
      'negative-margin-y': (
        responsive: true,
        property: margin-top margin-bottom,
        class: my,
        values: tokens.$negative-spacing
      ),
      'negative-margin-top': (
        responsive: true,
        property: margin-top,
        class: mt,
        values: tokens.$negative-spacing
      ),
      'negative-margin-end': (
        responsive: true,
        property: margin-right,
        class: me,
        values: tokens.$negative-spacing
      ),
      'negative-margin-bottom': (
        responsive: true,
        property: margin-bottom,
        class: mb,
        values: tokens.$negative-spacing
      ),
      'negative-margin-start': (
        responsive: true,
        property: margin-left,
        class: ms,
        values: tokens.$negative-spacing
      ),

      'padding': (
        responsive: true,
        property: padding,
        class: p,
        values: tokens.$spacing
      ),
      'padding-x': (
        responsive: true,
        property: padding-right padding-left,
        class: px,
        values: tokens.$spacing
      ),
      'padding-y': (
        responsive: true,
        property: padding-top padding-bottom,
        class: py,
        values: tokens.$spacing
      ),
      'padding-top': (
        responsive: true,
        property: padding-top,
        class: pt,
        values: tokens.$spacing
      ),
      'padding-end': (
        responsive: true,
        property: padding-right,
        class: pe,
        values: tokens.$spacing
      ),
      'padding-bottom': (
        responsive: true,
        property: padding-bottom,
        class: pb,
        values: tokens.$spacing
      ),
      'padding-start': (
        responsive: true,
        property: padding-left,
        class: ps,
        values: tokens.$spacing
      ),



      'font-family': (
        property: font-family,
        class: font,
        values: (monospace: var(--#{tokens.$variable-prefix}font-monospace))
      ),
      'font-size': (
        rfs: true,
        property: font-size,
        class: fs,
        values: tokens.$font-sizes
      ),
      'font-style': (
        property: font-style,
        class: fst,
        values: italic normal
      ),
      'font-weight': (
        property: font-weight,
        class: fw,
        values: (
          light: tokens.$font-weight-light,
          lighter: tokens.$font-weight-lighter,
          normal: tokens.$font-weight-normal,
          bold: tokens.$font-weight-bold,
          bolder: tokens.$font-weight-bolder
        )
      ),
      'line-height': (
        property: line-height,
        class: lh,
        values: (
          1: 1,
          sm: tokens.$line-height-sm,
          base: tokens.$line-height-base,
          lg: tokens.$line-height-lg,
        )
      ),
      'text-align': (
        responsive: true,
        property: text-align,
        class: text,
        values: (
          start: left,
          end: right,
          center: center,
        )
      ),
      'text-decoration': (
        property: text-decoration,
        values: none underline line-through
      ),
      'text-transform': (
        property: text-transform,
        class: text,
        values: lowercase uppercase capitalize
      ),
      'white-space': (
        property: white-space,
        class: text,
        values: (
          wrap: normal,
          nowrap: nowrap,
        )
      ),
      'word-wrap': (
        property: word-wrap word-break,
        class: text,
        values: (break: break-word),
        rtl: false
      ),


      'color': (
        property: color,
        class: text,
        local-vars: (
          'text-opacity': 1
        ),
        values: map-merge(tokens.$extended-colors,
            (
              'reset': inherit,
            ))
      ),
      'text-opacity': (
        css-var: true,
        class: text-opacity,
        values: (
          25: 0.25,
          50: 0.5,
          75: 0.75,
          100: 1
        )
      ),


      'background-color': (
        property: background-color,
        class: bg,
        local-vars: (
          'bg-opacity': 1
        ),
        values: map-merge(tokens.$extended-colors,
            (
              'transparent': transparent
            ))
      ),
      'bg-opacity': (
        css-var: true,
        class: bg-opacity,
        values: (
          10: 0.1,
          25: 0.25,
          50: 0.5,
          75: 0.75,
          100: 1
        )
      ),

      'gradient': (
        property: background-image,
        class: bg,
        values: (gradient: var(--#{tokens.$variable-prefix}gradient))
      ),

      'user-select': (
        property: user-select,
        values: all auto none
      ),
      'pointer-events': (
        property: pointer-events,
        class: pe,
        values: none auto,
      ),


      'rounded': (
        property: border-radius,
        class: rounded,
        values: (
          null: tokens.$border-radius,
          0: 0,
          circle: 50%,
          pill: 50rem//tokens.$border-radius-pill
        )
      ),
      'rounded-top': (
        property: border-top-left-radius border-top-right-radius,
        class: rounded-top,
        values: (null: tokens.$border-radius)
      ),
      'rounded-end': (
        property: border-top-right-radius border-bottom-right-radius,
        class: rounded-end,
        values: (null: tokens.$border-radius)
      ),
      'rounded-bottom': (
        property: border-bottom-right-radius border-bottom-left-radius,
        class: rounded-bottom,
        values: (null: tokens.$border-radius)
      ),
      'rounded-start': (
        property: border-bottom-left-radius border-top-left-radius,
        class: rounded-start,
        values: (null: tokens.$border-radius)
      ),


      'visibility': (
        property: visibility,
        class: null,
        values: (
          visible: visible,
          invisible: hidden,
        )
      )

    ),
    $utilities);
