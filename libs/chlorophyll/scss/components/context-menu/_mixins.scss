@use '../../tokens/shame' as tokens;
@use '../button' as button;
@use '../../common';
@use 'sass:map';

$box-shadow: var(--sg-popover-box-shadow);
$z-index: tokens.$zindex-dropdown;
$color: tokens.$text-primary-color;
$border-color: map.get(tokens.$blue, 'light', 0);
$background: tokens.$form-control-bg;
$highlighted-background: hsl(var(--sg-hsl-blue-1));

@mixin context-menu {
  @include common.padding-horizontal(5);
  @include common.padding-vertical(4);
  @include common.add-border-radius();
  @include common.add-border();
  @include common.add-border-color();
  @include common.add-focus('');
  @include common.add-hover-state();
  background: $background;
  color: $color;
  min-height: 2.75rem;
  display: flex;
  flex-wrap: nowrap;
  justify-content: space-between;
  align-items: center;

  max-width: 100%;
  @include common.media-breakpoint-down('sm') {
    min-width: 100%;
  }

  > span {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  &::after {
    @include common.margin-horizontal(3);
    border-bottom: solid 2px map.get(tokens.$blue, 'light', 0);
    border-left: solid 2px map.get(tokens.$blue, 'light', 0);
    content: '';
    display: block;
    height: 0.75rem;
    width: 0.75rem;
    position: relative;
    top: -0.1875rem;
    transform: translate(75%, 0) rotate3d(0, 0, 1, -45deg) scale3d(1, 1, -1);
    transition: transform 300ms ease-in;
    flex-shrink: 0;
  }

  &:hover::after {
    border-color: currentColor;
  }
}
