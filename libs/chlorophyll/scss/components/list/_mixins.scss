@use '../../tokens/shame' as tokens;
@use '../../common';
@use 'sass:map';

$bullet-color: tokens.$heading-primary-color;
$check-icon-color: tokens.get(tokens.$green, 1);
$check-icon: common.str-replace(
  url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M435.848 83.466L172.804 346.51l-96.652-96.652c-4.686-4.686-12.284-4.686-16.971 0l-28.284 28.284c-4.686 4.686-4.686 12.284 0 16.971l133.421 133.421c4.686 4.686 12.284 4.686 16.971 0l299.813-299.813c4.686-4.686 4.686-12.284 0-16.971l-28.284-28.284c-4.686-4.686-12.284-4.686-16.97 0z' fill='#{$check-icon-color}'/%3E%3C/svg%3E"),
  '#',
  '%23'
) !default;
$table-caption-bg: tokens.$grey-400;
$_border-color: var(--sg-border-color);

@mixin base-list {
  @include common.padding-start(0);
  @include common.margin-vertical(0);
  display: flex;
  flex-direction: column;
  list-style: none;

  > li {
    @include common.padding-vertical(3);
    border: 0;
    display: block;
    position: relative;

    &::before {
      @include common.font-weight('medium');
      display: inline-block;
      left: 0;
      position: absolute;
      text-align: center;
    }
  }
}

@mixin bullet-list() {
  > li {
    @include common.padding-horizontal(7);

    &::before {
      @include common.margin-horizontal(4);
      background: $bullet-color;
      border-radius: 50%;
      content: '';
      height: 8px;
      margin-top: 0.375rem;
      width: 8px;
    }
  }
}

@mixin check-list() {
  > li {
    @include common.padding-horizontal(7);

    &::before {
      content: $check-icon;
      height: 1rem;
      left: 0.5rem;
      width: 1rem;
    }
  }
}

@mixin add-list-group() {
  > div {
    @include common.padding-vertical(3);
    @include common.padding-horizontal(5);
    @include common.add-border('bottom');
    @include common.add-border-color($_border-color);
    display: flex;
    justify-content: space-between;

    dt {
      flex: 1 1 auto;
    }

    dd {
      @include common.padding-start(3);
      @include common.font-weight('medium');
    }
  }
}

@mixin add-list-group-caption() {
  @include common.padding-horizontal(5);
  @include common.padding-vertical(3);
  font-size: 0.875rem;
  font-weight: 400;
  background: $table-caption-bg;
  display: flex;
}

@mixin ordered-list() {
  > li {
    @include common.padding-horizontal(7);
    counter-increment: list-order;

    &::before {
      content: counter(list-order);
      height: 1.5rem;
      width: 1.5rem;
    }
  }
}

@mixin add-value-list() {
  dt, dd {
    font-size: 1rem;
    font-weight: 400;
  }

  dd {
    font-weight: 500;
  }

  &:not(.gds-list--horizontal) dd {
    margin-block-end: 1rem;
  }

  &.gds-list--horizontal {
    display: grid;
    grid-template-columns: 1fr 1fr;

    dt, dd {
      padding: .5rem 0;
    }

    dt {
      text-align: start;
      justify-content: start;
    }

    dd {
      text-align: end;
      justify-content: end;
    }
  }

}

@mixin table-list() {
  @debug 'table-list mixin is deprecated, use the add-list-group mixin instead';
  @include add-list-group()
}

@mixin table-list-caption() {
  @debug 'table-list-caption mixin is deprecated, use the add-list-group-caption mixin instead';
  @include add-list-group-caption()
}
