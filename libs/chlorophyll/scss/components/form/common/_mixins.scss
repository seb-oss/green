@use '../../../common';
@use '../../../tokens';

/* base style for forms */
@mixin add-form {
  > * {
    @include common.margin-bottom(6);
  }
}

/* horizontal layout for forms */
@mixin horizontal-layout() {
  /* use flex layout on small screens and up, ie. stack on small screens (mobile devices) */
  @include common.media-breakpoint-up('sm') {
    display: flex;
  }
  /* inline child elements on small screens and up unless it's a label
  for form control, which should be positioned on top */
  > {
    *:not(label:not(.form-control)),
    *:not(.label:not(.form-control)) {
      @include common.media-breakpoint-up('sm') {
        @include common.margin-end(4);
        display: inline-flex !important;
      }
    }
  }

  // form group fieldset (groups of radio buttons or checkboxes)
  .form-group > {
    fieldset {
      @include common.margin-bottom(0);

      legend {
        @include common.padding(0);
      }

      .form-info {
        display: inline-flex;
      }
    }

    fieldset + .form-info {
      margin-top: 0.5rem;
    }

    input,
    button,
    button[aria-haspopup='listbox'] {
      @include common.margin-bottom(0);
    }
  }

  // vertically align siblings and adjust for missing label
  .form-group ~ {
    button,
    .form-control,
    .form-text {
      @include common.media-breakpoint-up('sm') {
        margin-bottom: auto;
        margin-top: 1.625rem;
      }
    }
  }

  .form-control {
    display: inline-flex;
    margin-inline-start: 0;
  }

  // hide form info as it's not positioned correctly
  &.was-validated .form-group label + .form-info,
  &.was-validated .form-group .label + .form-info {
    opacity: 0;
  }

  // place form info first
  .form-group label + .form-info,
  .form-group .label + .form-info {
    order: 1;
  }

  .form-text {
    @include common.padding-vertical(4);
  }
}

/* label for checkboxes and radio buttons */
@mixin add-form-control {
  @include common.padding-vertical(4);
  @include common.padding-horizontal(5);
  border: 1px solid transparent;
  border-radius: var(--gds-sys-shape-corner-medium);
  align-items: center;
  cursor: pointer;
  display: flex;
  flex-direction: row-reverse;
  font: inherit;
  justify-content: flex-end;
  position: relative;
  user-select: none;
  -webkit-user-select: none;
}

/* form group */
@mixin add-form-group() {
  display: flex;
  flex-direction: column;
  max-width: 100%;
  position: relative;
  width: 100%;

  &:not(:last-child) {
    @include common.margin-bottom(6);
  }

  > input:not(:last-child),
  > textarea:not(:last-child),
  > button:not(:last-child),
  button[aria-haspopup='listbox']:not(:last-child),
  .gds-select-wrapper {
    @include common.margin-bottom(3);
  }
}

@mixin add-form-item() {
  display: flex;
  flex-direction: column;
  max-width: 100%;
  position: relative;
  width: 100%;
  z-index: 0;

  &:not(:last-child) {
    margin-bottom: 1.5rem;
  }

  .gds-form-item__header {
    display: flex;

    .form-info {
      font-weight: normal;
    }

    button.icon.small {
      margin-top: -0.5rem;
      margin-right: -0.5rem;
    }
  }

  .gds-form-item__labels {
    flex: 1;
    margin-bottom: 0.5rem;

    .form-info {
      margin-bottom: 0;

      a:link:not(.button, [aria-disabled]) {
        color: tokens.$link-color;
      }
    }

    > * {
      width: 100%;
      display: block;
    }
  }

  .gds-form-item__expandable-info {
    overflow: hidden;
    font-size: 0.875rem;
    line-height: 1.25rem;
    transition: height tokens.$transition-time;

    > div {
      padding-bottom: 0.5rem;
    }
  }

  .gds-form-item__backdrop {
    position: absolute;
    inset: 0;
    background: var(--gds-ref-pallet-base100);
    border-radius: 2px;
    z-index: -1;
    margin: -1rem;
    opacity: 0;
    transition: all tokens.$transition-time;
    border: 1px solid transparent;

    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
  }

  &:has([aria-expanded='true']) .gds-form-item__backdrop {
    opacity: 1;
    border-radius: 0.25rem;
    border-color: var(--gds-ref-pallet-base600);
  }

  .gds-form-item__footer:not(:empty) {
    margin-top: 0.5rem;
  }
}

/* form text */
@mixin add-form-text() {
  border: solid transparent 1px; // correct vertical alignment
  min-height: 2.75rem;
  display: flex;
  align-items: center;
  font: inherit;
}

@mixin add-label() {
  &:is(label) {
    // Overriding bootstraps reset.scss for label
    margin-bottom: 0;
  }

  &.form-control {
    width: fit-content;
    // No support for :has( input[type="checkbox"]:focus-visible ) in FireFox so this is a fallback solution.
    @supports (-moz-appearance: none) {
      @include common.add-focus('within');
    }
  }

  &:not(.form-control) {
    @include common.font-weight('medium');
    width: 100%;
    line-height: 1.25rem;
  }

  & + input,
  & + textarea,
  fieldset & + div,
  & + button,
  & + .group-stepper,
  & + .stepper-wrapper,
  & + .group {
    margin-top: 0.5rem;
  }

  & + .form-info {
    margin-bottom: 0.5rem;
  }
}

@mixin add-form-info() {
  &:last-child {
    font-weight: 500;
  }
}
