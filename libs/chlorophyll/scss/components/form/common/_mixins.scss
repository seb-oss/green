@use '../../../common';

/* base style for forms */
@mixin add-form {
  > * {
    @include common.margin-bottom(6);
  }
}

/* horizontal layout for forms */
@mixin horizontal-layout() {
  /* use flex layout on small screens and up, ie. stack on small screens (mobile devices) */
  @include common.media-breakpoint-up('sm') {
    display: flex;
  }
  /* inline child elements on small screens and up unless it's a label
  for form control, which should be positioned on top */
  > {
    *:not(label:not(.form-control)),
    *:not(.label:not(.form-control)) {
      @include common.media-breakpoint-up('sm') {
        @include common.margin-end(4);
        display: inline-flex !important;
      }
    }
  }

  // form group fieldset (groups of radio buttons or checkboxes)
  .form-group > {
    fieldset {
      @include common.margin-bottom(0);
      @include common.media-breakpoint-up('sm') {
        margin-bottom: auto;
        margin-top: 1.625rem;
      }

      label.form-control:last-of-type,
      .label.form-control:last-of-type {
        padding-right: 0;
      }
    }

    input,
    button,
    button[aria-haspopup='listbox'] {
      @include common.margin-bottom(0);
    }

    .form-info {
      @include common.margin-top(3);
    }
  }

  // vertically align siblings and adjust for missing label
  .form-group ~ {
    button,
    .form-control,
    .form-text {
      @include common.media-breakpoint-up('sm') {
        margin-bottom: auto;
        margin-top: 1.625rem;
      }
    }
  }

  .form-control {
    display: inline-flex;
  }

  // hide form info as it's not positioned correctly
  &.was-validated .form-group label + .form-info,
  &.was-validated .form-group .label + .form-info {
    opacity: 0;
  }

  // place form info first
  .form-group label + .form-info,
  .form-group .label + .form-info {
    order: 1;
  }

  .form-text {
    @include common.padding-vertical(4);
  }
}

/* label for checkboxes and radio buttons */
@mixin add-form-control {
  @include common.padding-vertical(4);
  @include common.padding-end(4);
  align-items: center;
  cursor: pointer;
  display: flex;
  flex-direction: row-reverse;
  font: inherit;
  justify-content: flex-end;
  max-width: fit-content;
  max-width: -moz-fit-content;
  position: relative;
  user-select: none;
  -webkit-user-select: none;
  white-space: nowrap;
}

/* form group */
@mixin add-form-group() {
  display: flex;
  flex-direction: column;
  max-width: 100%;
  position: relative;
  width: 100%;
  @include common.media-breakpoint-up('sm') {
    @include common.margin-bottom(6);
    width: fit-content;
    width: -moz-fit-content;
  }

  > input,
  > textarea,
  > button,
  button[aria-haspopup='listbox'] {
    @include common.margin-bottom(3);
  }

  // label
  label:not(.form-control),
  .label:not(.form-control) {
    @include common.font-weight('medium');
    @include common.margin-bottom(3, true);
    display: block !important;
  }
}

/* form text */
@mixin add-form-text() {
  border: solid transparent 1px; // correct vertical alignment
  min-height: 2.75rem;
  display: flex;
  align-items: center;
  font: inherit;
}
