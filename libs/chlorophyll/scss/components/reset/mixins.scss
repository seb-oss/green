@use '../../tokens/shame' as tokens;
/* credits to: https://piccalil.li/blog/a-modern-css-reset/
(copied from node_modules/modern-css-reset 1.4.0)
with minor modifications as well as splitting in to mixins */

/* Box sizing rules */
@mixin _box-sizing() {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}

/* Remove default margin */
@mixin _reset-margins() {
  body,
  h1,
  h2,
  h3,
  h4,
  p,
  figure,
  blockquote,
  dl,
  dd {
    margin: 0;
  }
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
@mixin _reset-lists() {
  ul[role='list'],
  ol[role='list'] {
    list-style: none;
  }
}

/* Set core root defaults */
@mixin _scroll-behavior($selector: html) {
  #{$selector}:focus-within {
    scroll-behavior: smooth;
  }
}

/* Set core body defaults */
@mixin _body-default($selector: body) {
  #{$selector} {
    line-height: 1.125;
    @if ($selector == body) {
      min-height: 100vh;
    }
    text-rendering: optimizeLegibility;
    color: tokens.$text-primary-color;
    font-weight: tokens.$font-weight-normal;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
  }
}

/* A elements that don't have a class get default styles */
@mixin _link-default() {
  a:not([class]) {
    text-decoration-skip-ink: auto;
  }
}

/* Make images easier to work with */
@mixin _image-default() {
  img,
  picture {
    display: block;
    max-width: 100%;
  }
}

/* Inherit fonts for inputs and buttons */
@mixin _input-inherit() {
  input,
  button,
  textarea,
  select {
    appearance: none; /* remove shadow from iOS */
    font: inherit;
    margin: 0;
  }
}

/* Remove all animations and transitions for people that prefer not to see them */
@mixin _reduce-motion($selector: html) {
  @media (prefers-reduced-motion: reduce) {
    #{$selector}:focus-within {
      scroll-behavior: auto;
    }

    @if ($selector == html) {
      *,
      *::before,
      *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        scroll-behavior: auto !important;
        transition-duration: 0.01ms !important;
      }
    } @else {
      #{$selector} {
        *,
        *::before,
        *::after {
          animation-duration: 0.01ms !important;
          animation-iteration-count: 1 !important;
          scroll-behavior: auto !important;
          transition-duration: 0.01ms !important;
        }
      }
    }
  }
}
@mixin _default-font($bodySelector: body, $htmlSelector: html) {
  #{$htmlSelector} {
    font-size: tokens.$root-font-size;
  }
  #{$bodySelector} {
    font-family: tokens.$font-family-sans-serif;
    font-size: tokens.$base-font-size;
  }
}

@mixin reset($scope: null) {
  @if ($scope != null) {
    #{$scope} {
      // reset children in scope
      @include _box-sizing;
      @include _reset-margins;
      @include _reset-lists;
      @include _link-default;
      @include _image-default;
      @include _input-inherit;
      @include _reduce-motion;
    }
    // reset scope element (i.e. by default body)
    @include _default-font($scope);
    @include _reduce-motion($scope);
    @include _body-default($scope);
    @include _scroll-behavior($scope);
  } @else {
    @include _box-sizing;
    @include _reset-margins;
    @include _reset-lists;
    @include _scroll-behavior;
    @include _body-default;
    @include _link-default;
    @include _image-default;
    @include _input-inherit;
    @include _reduce-motion;
    @include _default-font;
  }
}
