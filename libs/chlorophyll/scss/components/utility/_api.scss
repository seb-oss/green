// https://github.com/twbs/bootstrap/blob/main/scss/utilities/_api.scss
@use '../../tokens';
@use '../../tokens/utilities';
@use '../../common';
@use '../../common/functions';

// Loop over each breakpoint
@each $breakpoint in map-keys(tokens.$grid-breakpoints) {

  // Generate media query if needed
  @include common.media-breakpoint-up($breakpoint) {
    $infix: common.breakpoint-infix($breakpoint, tokens.$grid-breakpoints);

    // Loop over each utility property
    @each $key, $utility in utilities.$utilities {
      // The utility can be disabled with `false`, thus check if the utility is a map first
      // Only proceed if responsive media queries are enabled or if it's the base media query
      @if type-of($utility) == 'map' and (map-get($utility, responsive) or $infix == '') {
        @include functions.generate-utility($utility, $infix);
      }
    }
  }
}

// Disable RFS for now
// RFS rescaling
/*@media (min-width: $rfs-mq-value) {
  @each $breakpoint in map-keys(tokens.$grid-breakpoints) {
    $infix: common.breakpoint-infix($breakpoint, tokens.$grid-breakpoints);

    @if (map-get(tokens.$grid-breakpoints, $breakpoint) < $rfs-breakpoint) {
      // Loop over each utility property
      @each $key, $utility in $utilities {
        // The utility can be disabled with `false`, thus check if the utility is a map first
        // Only proceed if responsive media queries are enabled or if it's the base media query
        @if type-of($utility) == "map" and map-get($utility, rfs) and (map-get($utility, responsive) or $infix == "") {
          @include functions.generate-utility($utility, $infix, true);
        }
      }
    }
  }
}*/


// Print utilities
@media print {
  @each $key, $utility in utilities.$utilities {
    // The utility can be disabled with `false`, thus check if the utility is a map first
    // Then check if the utility needs print styles
    @if type-of($utility) == 'map' and map-get($utility, print) == true {
      @include functions.generate-utility($utility, '-print');
    }
  }
}
