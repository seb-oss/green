@use '../../tokens/shame' as tokens;
@use '../../common';
@use 'sass:map';

$color: tokens.$link-color;
$color-hover: tokens.get(tokens.$blue, 1);
$color-visited: tokens.$link-color-visited;
$color-dark: tokens.$link-color-dark;
$color-visited-dark: tokens.$link-color-visited-dark;
$font-weight: tokens.$font-weight-bold;
$outline-opacity: 0.35;

$variants: (
  'info': (
    color: tokens.$intent-info-color,
    fadable-color: tokens.$intent-info-fadable-color,
  ),
  'success': (
    color: tokens.$intent-success-color,
    fadable-color: tokens.$intent-success-fadable-color,
  ),
  'warning': (
    color: tokens.$intent-warning-color,
    fadable-color: tokens.$intent-warning-fadable-color,
  ),
  'danger': (
    color: tokens.$intent-danger-color,
    fadable-color: tokens.$intent-danger-fadable-color,
  ),
);

@mixin base {
  @include common.add-outline-focus-state();
  color: $color;
  font-weight: $font-weight;
  border: none;

  &:focus {
    &:not([aria-disabled]) {
      color: $color-hover;
    }
  }

  &:not(.gds-link-icon__arrow:visited),
  &.link-history:visited {
    color: $color-visited;
  }

  &.link-history:visited {
    color: $color-visited;
  }
}

@mixin disabled {
  font-weight: $font-weight;
  @include common.add-disable(false, true, false);
}

@mixin button {
  text-decoration: none;
}

@mixin underline {
  text-decoration: underline;
  text-underline-offset: 3px;

  &:hover {
    text-underline-offset: 2px;
  }

  &:active {
    text-underline-offset: 1px;
  }
}

@mixin icon {
  display: flex;
  align-items: center;
  gap: 10px;
  transition: color 468ms;
  transition-timing-function: cubic-bezier(0, 0.25, 0.5, 1);

  svg {
    fill: none;
    height: 17px;
    transition: transform 0.2s ease-in-out;
    path {
      fill: currentColor;
    }
  }
}

@mixin arrow {
  display: flex;
  align-items: center;
  gap: 5px;
  color: $color-dark;
  font-weight: $font-weight;
  text-decoration: none;
  --arrow-transition: transform 0.2s ease-in-out;
  --arrow-translate: translate3d(5px, 0, 0);

  svg {
    fill: none;
    height: 17px;
    transition: var(--arrow-transition);
    path {
      fill: currentColor;
    }
  }

  &:visited {
    color: $color-visited-dark;
  }

  &:hover svg {
    transform: var(--arrow-translate);
  }

  @media (prefers-reduced-motion) {
    --arrow-transition: none;

    &:hover svg {
      --arrow-translate: none;
    }
  }
}

/* 

Mixin for link variants
Base on background color of parent element eg. white links on dark backgrounds etc. 

*/

@mixin variant($color, $outline-color) {
  a:link {
    @include common.add-outline-focus-state($outline-color);
  }
  a:link:not(.button, [aria-disabled]) {
    color: $color;
    text-decoration: none;
    &:hover,
    &:focus,
    &:visited {
      color: currentColor;
    }
  }
}
