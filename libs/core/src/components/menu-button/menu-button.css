@layer tokens, a11y, core, variants, sizes, sets, disabled;

@layer tokens {
  :host {
    --_gap: 4px;

    --_transition: var(--gds-sys-transition);

    --_padding-inline: var(--gds-sys-padding-inline);
    --_padding-block: var(--gds-sys-padding-block);

    --_border-radius: var(--gds-sys-border-radius);
    --_border-width: var(--gds-sys-border-width);
    --_border-style: var(--gds-sys-border-style);

    --_color-bg: var(--gds-sys-color-content-content);
    --_color-text: var(--gds-sys-color-content-content-inverse);
    --_color-border: var(--gds-sys-color-stroke-stroke);

    --_color-outline-alpha: 60%;
    --_color-outline: var(--_color-border);

    --_font-size: 1rem;
    --_font-weight: 400;
    --_line-height: 1.25;

    /* These state layer variables can be set to the correct state layer token in
    * the variant and set specific styles. It will be blended with `--_color-bg`
    * for the `background-color` rule. */
    --_state-layer-hover: var(--gds-sys-color-state-layers-state-black);
    --_state-layer-active: var(--gds-sys-color-state-layers-state-black-shade);

    contain: layout;
    display: inline-block;
    isolation: isolate;
    height:100%;
    max-width: 100%;
  }
}

@layer a11y {
  @media (prefers-color-scheme: dark) {
    /* TODO */
  }
  @media (prefers-reduced-motion: reduce) {
    :host {
      --_transition: none;
    }
  }
}

@layer core {
  button {
    align-items: center;

    background-color: var(--gds-color-transparen);
    block-size: 100%;

    border-color: var(--gds-color-transparen);
    border-style: none;
    border-bottom: solid 2px transparent;

    box-sizing: border-box;
    color: var(--text-primary-color);
    color-scheme: dark light;
    cursor: pointer;

    display: inline-flex;
    gap: var(--_gap);
    height: 100%;

    inline-size: 100%;
    justify-content: space-between;
    justify-items: center;
    outline-color: transparent;
    outline-offset: 2px;
    outline-style: solid;
    outline-width: 2px;
    padding-block: var(--_padding-block);
    padding-inline: var(--_padding-inline);
    position: relative;
    transition: var(--_transition);
    font-family: inherit;
    font-size: var(--_font-size);
    font-weight: var(--_font-weight);
    line-height: var(--_line-height);

    &:focus {
      outline-color: color-mix(in srgb,
        var(--_color-outline),
        transparent var(--_color-outline-alpha));

      &:not(:focus-visible) {
        outline-color: transparent;
      }
    }

    &:hover {
      background-color: #ddd;
      border-color: #ddd;
      border-bottom: solid 2px #85857A;
    }

    &:active {
      background-color: #ddd;
      border-color: #ddd;
    }

    &.selected {
      background-color: #F3F3F2;
      border-color: #F3F3F2;
      border-bottom: solid 2px #353531;
    }
    &.selected:hover {
      background-color: #ddd;
      border-color: #ddd;
      border-bottom: solid 2px #85857A;
    }

    slot:not([name]) {
      display: inline-block;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    
    @media (width <= 1024px) {
      flex-direction: column;
      line-height: 1.45;
      gap: 0;
      slot:not([name]) {
        order: 1;
      }
    }
    @media (width <= 568px) {
      flex-direction: column;
      line-height: 1.45;
      gap: 0;
      slot:not([name]) {
        order: 1;
      }
      slot {
        font-size: .75rem;
      }
    }
  }
  button.compactview {
    display: none;
    @media (width <= 568px) {
      display: inline-flex;
    }
  }
  button:hover ::slotted(berry-component) { 
    background-color: #85857A;
  }
  button.selected ::slotted(berry-component) { 
    background-color: green;
  }
  button slot[name] {
    display: block;
  }
}

@layer sizes {
  :host([size='small']) button {
    --_padding-inline: var(--gds-spacing-5);
    --_padding-block: var(--gds-spacing-3);
    --_size: 2rem;
    font-size: 0.875rem;
    padding-left: .1rem;
  }

  :host([size='medium']) button {
    --_padding-inline: var(--gds-spacing-5);
    --_padding-block: var(--gds-spacing-3);
    --_size: 2.5rem;
  }

  @media (width <= 1024px) {
    :host([size='medium']) button {
      padding: 0.9rem 1rem 0.4rem;
    }
  }

  @media (width <= 568px) {
    :host([size='medium']) button {
      padding: 0.7rem 0.7rem 0.7rem;
    }
  }

  :host([size='large']) button {
    --_padding-inline: var(--gds-spacing-5);
    --_padding-block: var(--gds-spacing-4);
    --_size: 3rem;
  }
}

@layer disabled {
  button:disabled {
    --_color-bg: var(--gds-sys-color-container-container-disabled);
    border-color: var(--_color-bg);
    color: var(--gds-sys-color-content-content-disabled);
    pointer-events: none;
  }
}