{"version":3,"file":"3238.f8973efa.iframe.bundle.js","mappings":";AAgdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAKA;;AAEA;AAIA;AAEA","sources":["webpack://green/./dist/libs/core/src/chunks/chunk.3UH6SDAW.js"],"sourcesContent":["import {\n  GdsFormControlElement\n} from \"./chunk.VA6TUMR2.js\";\nimport {\n  observeLightDOM\n} from \"./chunk.WM7HBMMV.js\";\nimport {\n  withLayoutChildProps,\n  withMarginProps,\n  withSizeXProps\n} from \"./chunk.TWXTKG4B.js\";\nimport {\n  TransitionalStyles\n} from \"./chunk.YMILMHLJ.js\";\nimport {\n  tokens\n} from \"./chunk.JGDT5WYO.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.QK3R23GV.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/button/button.ts\nimport { nothing as nothing2, unsafeCSS } from \"lit\";\nimport { property, query } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { when } from \"lit/directives/when.js\";\nimport { literal, html as staticHtml } from \"lit/static-html.js\";\n\n// libs/core/src/utils/directives/forward-attributes.ts\nimport {\n  Directive,\n  directive,\n  PartType\n} from \"lit/directive.js\";\nimport { nothing } from \"lit/html.js\";\nvar ForwardAttributesDirective = class extends Directive {\n  constructor(partInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.ELEMENT) {\n      throw new Error(\n        \"The `forwardAttributes` directive must be used in element bindings\"\n      );\n    }\n  }\n  render(_filter) {\n    return nothing;\n  }\n  update(part, [filter]) {\n    var _a;\n    const element = part.element;\n    const host = (_a = part.options) == null ? void 0 : _a.host;\n    Array.from(host.attributes).forEach((attr) => {\n      if (filter(attr)) {\n        element.setAttribute(attr.name.replace(\"gds-\", \"\"), attr.value);\n      }\n    });\n  }\n};\nvar forwardAttributes = directive(ForwardAttributesDirective);\n\n// libs/core/src/utils/helpers/strip-white-space.ts\nvar templateCache = /* @__PURE__ */ new WeakMap();\nfunction stripWhitespace(extendedTag) {\n  return (strings, ...values) => {\n    let modstrings = templateCache.get(strings);\n    if (!modstrings) {\n      modstrings = strings.map((s) => s.replace(/\\n[\\s]+</gm, \"<\"));\n      modstrings.raw = strings.raw;\n      templateCache.set(strings, modstrings);\n    }\n    return extendedTag(modstrings, ...values);\n  };\n}\n\n// libs/core/src/components/button/button.style.css?inline\nvar button_style_default = `@layer tokens, core, a11y, ranks, sizes, variants, disabled;\n\n@layer a11y {\n  @media (prefers-reduced-motion: reduce) {\n    .button {\n      transition: none;\n    }\n  }\n}\n\n@layer core {\n  :host {\n    display: inline-flex;\n    max-width: 100%;\n  }\n\n  .button {\n    --_block-size: var(--gds-space-3xl);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    border: none;\n    cursor: pointer;\n    block-size: var(--_block-size);\n    background-color: var(--gds-color-l3-background-primary);\n    color: var(--gds-color-l3-content-primary);\n    border-radius: var(--gds-space-max);\n    font-family: inherit;\n    font-size: var(--gds-text-size-detail-m);\n    line-height: var(--gds-text-line-height-detail-m);\n    font-weight: var(--gds-text-weight-book);\n    gap: var(--gds-space-s);\n    outline-color: transparent;\n    outline-offset: var(--gds-space-3xs);\n    outline-style: solid;\n    outline-width: var(--gds-space-3xs);\n    padding-block: var(--gds-space-s);\n    padding-inline: var(--gds-space-l);\n    position: relative;\n    text-decoration: none;\n    transition-property: color, border-colorm, background;\n    transition-duration: 0.2s;\n    flex: 1;\n\n    &:focus {\n      outline-color: var(--gds-color-l3-content-tertiary);\n\n      &:not(:focus-visible) {\n        outline-color: transparent;\n      }\n    }\n\n    @media (pointer: fine) {\n      &:hover {\n        background-color: color-mix(\n          in srgb,\n          var(--gds-color-l3-background-primary),\n          var(--gds-color-l3-states-dark-hover)\n        );\n      }\n    }\n\n    &:active {\n      background-color: color-mix(\n        in srgb,\n        var(--gds-color-l3-background-primary),\n        var(--gds-color-l3-states-dark-pressed)\n      );\n    }\n\n    &:not(.circle) slot:not([name]) {\n      display: block;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  }\n}\n\n/* High specificity */\n.button.circle {\n  aspect-ratio: 1 / 1;\n  padding: 0;\n  min-block-size: var(--_block-size);\n  min-inline-size: var(--_block-size);\n}\n\n.button:disabled {\n  pointer-events: none;\n  background-color: var(--gds-color-l3-background-disabled);\n  color: var(--gds-color-l3-content-disabled);\n}\n\n@layer ranks {\n  :host([rank*='secondary']) .button {\n    background-color: var(--gds-color-l3-background-secondary);\n    color: var(--gds-color-l3-content-tertiary);\n\n    @media (pointer: fine) {\n      &:hover {\n        background-color: color-mix(\n          in srgb,\n          var(--gds-color-l3-background-secondary),\n          var(--gds-color-l3-states-light-hover)\n        );\n      }\n    }\n\n    &:active {\n      background-color: color-mix(\n        in srgb,\n        var(--gds-color-l3-background-secondary),\n        var(--gds-color-l3-states-light-pressed)\n      );\n    }\n  }\n\n  :host([rank*='tertiary']) .button {\n    background-color: transparent;\n    color: var(--gds-color-l3-content-tertiary);\n\n    @media (pointer: fine) {\n      &:hover {\n        background-color: color-mix(\n          in srgb,\n          transparent,\n          var(--gds-color-l3-states-light-hover)\n        );\n      }\n    }\n\n    &:active {\n      background-color: color-mix(\n        in srgb,\n        transparent,\n        var(--gds-color-l3-states-light-pressed)\n      );\n    }\n  }\n}\n\n@layer sizes {\n  :host([size='xs']) .button {\n    --_block-size: var(--gds-space-l);\n    font-size: var(--gds-text-size-detail-s);\n    line-height: var(--gds-text-line-height-detail-s);\n    padding-inline: var(--gds-space-m);\n  }\n\n  :host([size='small']) .button {\n    --_block-size: var(--gds-space-xl);\n    font-size: var(--gds-text-size-detail-s);\n    line-height: var(--gds-text-line-height-detail-s);\n    padding-inline: var(--gds-space-m);\n  }\n\n  :host([size='medium']) .button {\n    --_block-size: var(--gds-space-2xl);\n    font-size: var(--gds-text-size-detail-m);\n    line-height: var(--gds-text-line-height-detail-m);\n  }\n}\n\n@layer variants {\n  .positive {\n    background-color: var(--gds-color-l3-background-positive);\n\n    &:focus {\n      outline-color: var(--gds-color-l3-content-positive);\n\n      &:not(:focus-visible) {\n        outline-color: transparent;\n      }\n    }\n\n    @media (pointer: fine) {\n      &:hover {\n        background-color: color-mix(\n          in srgb,\n          var(--gds-color-l3-background-positive),\n          var(--gds-color-l3-states-dark-hover)\n        );\n      }\n    }\n\n    &:active {\n      background-color: color-mix(\n        in srgb,\n        var(--gds-color-l3-background-positive),\n        var(--gds-color-l3-states-dark-pressed)\n      );\n    }\n\n    &.secondary {\n      background-color: var(--gds-color-l3-background-positive-secondary);\n      color: var(--gds-color-l3-content-positive);\n\n      @media (pointer: fine) {\n        &:hover {\n          background-color: color-mix(\n            in srgb,\n            var(--gds-color-l3-background-positive-secondary),\n            var(--gds-color-l3-states-positive-hover)\n          );\n        }\n      }\n\n      &:active {\n        background-color: color-mix(\n          in srgb,\n          var(--gds-color-l3-background-positive-secondary),\n          var(--gds-color-l3-states-positive-pressed)\n        );\n      }\n    }\n\n    &.tertiary {\n      background-color: transparent;\n      color: var(--gds-color-l3-content-positive);\n\n      @media (pointer: fine) {\n        &:hover {\n          background-color: color-mix(\n            in srgb,\n            transparent,\n            var(--gds-color-l3-states-positive-hover)\n          );\n        }\n      }\n\n      &:active {\n        background-color: color-mix(\n          in srgb,\n          transparent,\n          var(--gds-color-l3-states-positive-pressed)\n        );\n      }\n    }\n  }\n\n  .negative {\n    background-color: var(--gds-color-l3-background-negative);\n\n    &:focus {\n      outline-color: var(--gds-color-l3-content-negative);\n      &:not(:focus-visible) {\n        outline-color: transparent;\n      }\n    }\n\n    @media (pointer: fine) {\n      &:hover {\n        background-color: color-mix(\n          in srgb,\n          var(--gds-color-l3-background-negative),\n          var(--gds-color-l3-states-dark-hover)\n        );\n      }\n    }\n\n    &:active {\n      background-color: color-mix(\n        in srgb,\n        var(--gds-color-l3-background-negative),\n        var(--gds-color-l3-states-dark-pressed)\n      );\n    }\n\n    &.secondary {\n      background-color: var(--gds-color-l3-background-negative-secondary);\n      color: var(--gds-color-l3-content-negative);\n\n      @media (pointer: fine) {\n        &:hover {\n          background-color: color-mix(\n            in srgb,\n            var(--gds-color-l3-background-negative-secondary),\n            var(--gds-color-l3-states-negative-hover)\n          );\n        }\n      }\n\n      &:active {\n        background-color: color-mix(\n          in srgb,\n          var(--gds-color-l3-background-negative-secondary),\n          var(--gds-color-l3-states-negative-pressed)\n        );\n      }\n    }\n\n    &.tertiary {\n      background-color: transparent;\n      color: var(--gds-color-l3-content-negative);\n\n      @media (pointer: fine) {\n        &:hover {\n          background-color: color-mix(\n            in srgb,\n            transparent,\n            var(--gds-color-l3-states-negative-hover)\n          );\n        }\n      }\n\n      &:active {\n        background-color: color-mix(\n          in srgb,\n          transparent,\n          var(--gds-color-l3-states-negative-pressed)\n        );\n      }\n    }\n  }\n}\n`;\n\n// libs/core/src/components/button/button.ts\nvar ariaForwards = [\"aria-label\", \"aria-haspopup\", \"aria-expanded\"];\nvar html2 = stripWhitespace(html);\nvar _isIconButton, _isLink, isLink_get, _defaultRel, defaultRel_get, _mainSlotChange, _handleClick;\nvar Button = class extends GdsFormControlElement {\n  constructor() {\n    super();\n    __privateAdd(this, _isLink);\n    __privateAdd(this, _defaultRel);\n    this.disabled = false;\n    this.rank = \"primary\";\n    this.variant = \"neutral\";\n    this.size = \"medium\";\n    this.label = \"\";\n    this.href = \"\";\n    __privateAdd(this, _isIconButton, false);\n    // Check if the button is an icon button.\n    __privateAdd(this, _mainSlotChange, () => {\n      var _a, _b;\n      const assignedElements = (_b = (_a = this._mainSlot) == null ? void 0 : _a.assignedElements()) != null ? _b : [];\n      __privateSet(this, _isIconButton, assignedElements.length === 1 && assignedElements.some(\n        (element) => element.tagName.toLowerCase().startsWith(\"gds-icon\")\n      ));\n      this.requestUpdate();\n    });\n    __privateAdd(this, _handleClick, (e) => {\n      this.dispatchEvent(\n        new CustomEvent(\"gds-click\", {\n          bubbles: true,\n          composed: true,\n          detail: e\n        })\n      );\n      if (this.form && !__privateGet(this, _isLink, isLink_get)) {\n        if (this.type === \"submit\") {\n          this.form.requestSubmit();\n        } else if (this.type === \"reset\") {\n          this.form.reset();\n        }\n      }\n    });\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"none\");\n    TransitionalStyles.instance.apply(this, \"gds-button\");\n  }\n  render() {\n    const buttonClasses = {\n      button: true,\n      circle: __privateGet(this, _isIconButton),\n      icon: __privateGet(this, _isIconButton),\n      xs: this.size === \"xs\",\n      small: this.size === \"small\",\n      large: this.size === \"large\",\n      positive: this.variant === \"positive\",\n      negative: this.variant === \"negative\",\n      primary: this.rank === \"primary\",\n      secondary: this.rank === \"secondary\",\n      tertiary: this.rank === \"tertiary\"\n    };\n    const tag = __privateGet(this, _isLink, isLink_get) ? literal`a` : literal`button`;\n    return staticHtml`\n      <${tag}\n        class=${classMap(buttonClasses)}\n        type=\"${ifDefined(__privateGet(this, _isLink, isLink_get) ? void 0 : this.type)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=${this.label || nothing2}\n        href=${ifDefined(__privateGet(this, _isLink, isLink_get) ? this.href : void 0)}\n        target=${ifDefined(__privateGet(this, _isLink, isLink_get) ? this.target : void 0)}\n        rel=${ifDefined(__privateGet(this, _isLink, isLink_get) ? this.rel || __privateGet(this, _defaultRel, defaultRel_get) : void 0)}\n        download=${ifDefined(__privateGet(this, _isLink, isLink_get) ? this.download : void 0)}\n        part=\"_button\"\n        @click=\"${__privateGet(this, _handleClick)}\"\n        ${forwardAttributes(\n      (attr) => attr.name.startsWith(\"gds-aria\") || attr.name === \"gds-role\" || ariaForwards.includes(attr.name)\n    )}\n      >\n        <slot name=\"lead\"></slot>\n        <slot @slotchange=${__privateGet(this, _mainSlotChange)}></slot>\n        <slot name=\"trail\"></slot>\n        ${when(\n      !this._isUsingTransitionalStyles,\n      () => html2`<gds-ripple part=\"_ripple\"></gds-ripple>`\n    )}\n        </${tag}>\n        `;\n  }\n  _getValidityAnchor() {\n    return this._button;\n  }\n  _attributeChanged() {\n    this.requestUpdate();\n  }\n};\n_isIconButton = new WeakMap();\n_isLink = new WeakSet();\nisLink_get = function() {\n  return this.href.length > 0;\n};\n_defaultRel = new WeakSet();\ndefaultRel_get = function() {\n  return this.target === \"_blank\" ? \"noreferrer noopener\" : void 0;\n};\n_mainSlotChange = new WeakMap();\n_handleClick = new WeakMap();\nButton.styles = [tokens, unsafeCSS(button_style_default)];\n/**\n * @internal\n */\nButton.shadowRootOptions = {\n  mode: \"open\",\n  delegatesFocus: true\n};\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], Button.prototype, \"disabled\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Button.prototype, \"type\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Button.prototype, \"rank\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Button.prototype, \"variant\", 2);\n__decorateClass([\n  property({ reflect: true })\n], Button.prototype, \"size\", 2);\n__decorateClass([\n  property()\n], Button.prototype, \"label\", 2);\n__decorateClass([\n  property()\n], Button.prototype, \"href\", 2);\n__decorateClass([\n  property()\n], Button.prototype, \"target\", 2);\n__decorateClass([\n  property()\n], Button.prototype, \"rel\", 2);\n__decorateClass([\n  property()\n], Button.prototype, \"download\", 2);\n__decorateClass([\n  query(\"slot:not([name])\")\n], Button.prototype, \"_mainSlot\", 2);\n__decorateClass([\n  query(\".button\")\n], Button.prototype, \"_button\", 2);\n__decorateClass([\n  observeLightDOM({\n    attributes: true,\n    childList: false,\n    subtree: false,\n    characterData: false\n  })\n], Button.prototype, \"_attributeChanged\", 1);\nvar GdsButton = class extends withSizeXProps(\n  withMarginProps(withLayoutChildProps(Button))\n) {\n};\nGdsButton = __decorateClass([\n  gdsCustomElement(\"gds-button\")\n], GdsButton);\n\nexport {\n  forwardAttributes,\n  GdsButton\n};\n"],"names":[],"sourceRoot":""}