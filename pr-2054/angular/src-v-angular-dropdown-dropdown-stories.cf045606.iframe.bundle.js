"use strict";(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[3635],{"./libs/angular/src/v-angular/base-control-value-accessor/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>NggvBaseControlValueAccessorComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),jsverse_transloco=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js");let NggvBaseControlValueAccessorComponent=class NggvBaseControlValueAccessorComponent{set locked(value){this._locked=value,this.cdr.detectChanges()}get locked(){return this._locked}set required(value){this._required=value}get required(){if(void 0!==this._required)return this._required;if(this.ngControl?.control?.validator){const validator=this.ngControl?.control?.validator({});return Object.keys(validator??{}).some((key=>key.startsWith("required")))}}set invalid(value){this._invalid=value}get invalid(){return!0===this._invalid||!1===this._invalid?this._invalid:!!this.ngControl?.control?.invalid&&this.ngControl?.control?.touched}set valid(value){this._valid=value}get valid(){return!0===this._valid||!1===this._valid?this._valid:!!this.ngControl?.control?.valid&&this.ngControl?.control?.touched}set disabled(value){this._disabled=value}get disabled(){return!0===this._disabled||!1===this._disabled?this._disabled:!!this.ngControl?.control?.disabled}constructor(ngControl,translocoScope,cdr){this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.id=window.nggv?.nextId(),this.withErrorIcon=!1,this.descriptionIsVisible=!0,this.autofocus=!1,this._locked=void 0,this._required=void 0,this._invalid=void 0,this._valid=void 0,this.focused=!1,this._disabled=void 0,this.nggvFocus=new core.EventEmitter,this.nggvBlur=new core.EventEmitter,this._state=null,this.onChange=_=>{},this.onTouched=()=>{},this.onValidatorChange=()=>null,this._onDestroy$=new Subject.B,this.ngControl&&(this.ngControl.valueAccessor=this),this.translocoScope&&(this.scope=this.translocoScope.toString())}ngOnInit(){this.ngControl&&this.ngControl.control&&this.ngControl.control.setValidators(fesm2022_forms.k0.compose([this.ngControl.control.validator,this.validate])),this.reset?.pipe((0,takeUntil.Q)(this._onDestroy$)).subscribe({next:()=>{this.state=this.defaultValue,this.onChange(this.state),this.cdr.detectChanges()}})}ngAfterViewInit(){this.defaultValue=this.defaultValue??this.ngControl?.value}ngOnDestroy(){this._onDestroy$.next(!0),this._onDestroy$.complete()}detectChanges(){this.cdr.detectChanges()}onFocus(event){event.stopPropagation?event.stopPropagation():event.cancelBubble=!0,this.focused=!0,this.nggvFocus.emit(event)}onBlur(event){event.stopPropagation?event.stopPropagation():event.cancelBubble=!0,this.onTouched(),this.focused=!1,this.nggvBlur.emit(event)}setFocus(){this.inputRef&&this.inputRef.nativeElement.focus()}get state(){return this._state}set state(value){void 0===value&&(value=null),this._state=value}writeValue(value){this.state=value}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled,this.displayDisabledAsLocked&&(this.locked=isDisabled)}validate(_control){return null}registerOnValidatorChange(fn){this.onValidatorChange=fn}get firstError(){const errors=this.ngControl.errors;if(!errors)return null;const code=Object.keys(errors)[0];return{code,params:errors[code]}}static{this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ChangeDetectorRef}]}static{this.propDecorators={labelContentTpl:[{type:core.ContentChild,args:["labelTpl",{read:core.TemplateRef}]}],inputRef:[{type:core.ViewChild,args:["input",{read:core.ElementRef}]}],id:[{type:core.HostBinding,args:["attr.id"]},{type:core.Input}],name:[{type:core.Input}],label:[{type:core.Input}],role:[{type:core.Input}],value:[{type:core.Input}],error:[{type:core.Input}],errorList:[{type:core.Input}],withErrorIcon:[{type:core.Input}],description:[{type:core.Input}],descriptionIsVisible:[{type:core.Input}],autofocus:[{type:core.Input}],defaultValue:[{type:core.Input}],reset:[{type:core.Input}],optional:[{type:core.Input}],locked:[{type:core.Input}],displayDisabledAsLocked:[{type:core.Input}],required:[{type:core.Input}],invalid:[{type:core.Input}],valid:[{type:core.Input}],focused:[{type:core.Input}],disabled:[{type:core.Input}],nggvFocus:[{type:core.Output}],nggvBlur:[{type:core.Output}]}}};NggvBaseControlValueAccessorComponent=(0,tslib_es6.Cg)([(0,core.Injectable)(),(0,core.Component)({template:""}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],NggvBaseControlValueAccessorComponent);let NggvBaseControlValueAccessorModule=class NggvBaseControlValueAccessorModule{};NggvBaseControlValueAccessorModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[NggvBaseControlValueAccessorComponent],imports:[],exports:[NggvBaseControlValueAccessorComponent]})],NggvBaseControlValueAccessorModule)},"./libs/angular/src/v-angular/dropdown/dropdown.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ComboWithInput:()=>ComboWithInput,Disabled:()=>Disabled,Primary:()=>Primary,WithCustomSelectedTemplate:()=>WithCustomSelectedTemplate,WithCustomSelectedTemplateTypeahead:()=>WithCustomSelectedTemplateTypeahead,WithDisplayDisabledAsLocked:()=>WithDisplayDisabledAsLocked,WithError:()=>WithError,WithLockedInput:()=>WithLockedInput,WithOptionToggle:()=>WithOptionToggle,WithTypeAhead:()=>WithTypeAhead,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./dist/libs/core/src/components/icon/icons/triangle-exclamation.js");var _angular_common__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),rxjs__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),_sebgroup_green_angular_src_lib_shared__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/angular/src/lib/shared/index.ts"),_character_countdown_character_countdown_directive__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/angular/src/v-angular/character-countdown/character-countdown.directive.ts"),_core_core_utils__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./libs/angular/src/v-angular/core/core.utils.ts"),_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./libs/angular/src/v-angular/i18n/i18n.module.ts"),_input_input_component__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./libs/angular/src/v-angular/input/input.component.ts"),_tooltip_tooltip_directive__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./libs/angular/src/v-angular/tooltip/tooltip.directive.ts"),_dropdown_list_dropdown_list_component__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./libs/angular/src/v-angular/dropdown/dropdown-list/dropdown-list.component.ts"),_dropdown_component__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./libs/angular/src/v-angular/dropdown/dropdown.component.ts"),_typeahead_typeahead_highlight_typeahead_highlight_component__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead-highlight/typeahead-highlight.component.ts"),_typeahead_typeahead_input_typeahead_input_component__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead-input/typeahead-input.component.ts"),_typeahead_typeahead_directive__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead.directive.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"V-Angular/Dropdown",component:_dropdown_component__WEBPACK_IMPORTED_MODULE_9__.r,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_1__.applicationConfig)({providers:[(0,_angular_core__WEBPACK_IMPORTED_MODULE_13__.importProvidersFrom)(_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_5__.R),_core_core_utils__WEBPACK_IMPORTED_MODULE_4__.z]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_1__.moduleMetadata)({declarations:[_dropdown_list_dropdown_list_component__WEBPACK_IMPORTED_MODULE_8__.b,_input_input_component__WEBPACK_IMPORTED_MODULE_6__.o,_typeahead_typeahead_input_typeahead_input_component__WEBPACK_IMPORTED_MODULE_11__.x,_typeahead_typeahead_highlight_typeahead_highlight_component__WEBPACK_IMPORTED_MODULE_10__.X,_tooltip_tooltip_directive__WEBPACK_IMPORTED_MODULE_7__.X,_character_countdown_character_countdown_directive__WEBPACK_IMPORTED_MODULE_3__.q],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_14__.CommonModule,_sebgroup_green_angular_src_lib_shared__WEBPACK_IMPORTED_MODULE_2__.$M,_angular_forms__WEBPACK_IMPORTED_MODULE_15__.YN,_angular_forms__WEBPACK_IMPORTED_MODULE_15__.X1,_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_5__.R,_typeahead_typeahead_directive__WEBPACK_IMPORTED_MODULE_12__.d],schemas:[_angular_core__WEBPACK_IMPORTED_MODULE_13__.CUSTOM_ELEMENTS_SCHEMA]})]},options=[{key:"opt1",label:"label.defaultlabel",accountNumber:"345345"},{key:"opt6",label:"HÖR LUR TJO HEJ KOTLETT"},{key:"opt2",label:"This is a very long label that should over flow a smaller dropdown button"},{key:"opt3",label:"Option 3",disabled:!0},{key:"opt4",label:"Option 4"},{key:"opt5",label:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do"},{label:"Group",options:[{key:"group-opt1",label:null,accountNumber:"3453245"},{key:"group-opt2",label:"Option 2"},{key:"group-opt3",label:"Option 3"},{key:"group-opt4",label:"Option 4"}]}],Template=args=>{const ctrl=new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.hs(args.ngModel);ctrl.valueChanges.subscribe(console.log);return{template:'\n      <div>\n        <nggv-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [options]="options"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          [formControl]="formControl"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </nggv-dropdown>\n\n        <div style="margin-top: 1rem">\n          <button type="button" class="gds-button" (click)="disableFn()">Toggle disable control</button>\n        </div>\n      </div>',props:{...args,formControl:ctrl,disableFn:()=>{if(ctrl.disabled)return ctrl.enable();ctrl.disable()}}}},defaultArgs={required:!1,invalid:!1,label:"Field label",placeholder:"Placeholder text",description:"This. Is. A. Description.",ngModel:"opt2",options},Primary=Template.bind({});Primary.args={...defaultArgs};const Disabled=(args=>({template:'\n  <div>\n    <nggv-dropdown\n      [label]="label"\n      [placeholder]="placeholder"\n      [options]="options"\n      [required]="required"\n      [invalid]="invalid"\n      [disabled]="disabled"\n      [error]="error"\n    \n      [formControl]="formControl">\n\n      <ng-template #labelTpl>Custom Label</ng-template>\n\n      <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n    </nggv-dropdown>\n  </div>',props:{...args,formControl:new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.hs({value:""})}})).bind({});Disabled.args={...defaultArgs,disabled:!0};const WithError=Template.bind({});WithError.args={...defaultArgs,invalid:!0,error:"Error message"};const ComboWithInput=(args=>{const ctrl=new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.hs(args.ngModel);return ctrl.valueChanges.subscribe(console.log),{template:'\n      <div style="display: flex">\n        <nggv-dropdown\n          label="Dropdown"\n          [placeholder]="placeholder"\n          [options]="options"\n          [required]="true"\n          [invalid]="true"\n          error="This is a permanent error"\n          [formControl]="formControl">\n        </nggv-dropdown>\n        <nggv-input\n          label="Input"\n          [placeholder]="placeholder"\n          [required]="true"\n          style="margin-left: 0.25rem;"\n          [formControl]="formControl">\n        </nggv-input>\n      </div>\n      <div>\n        <nggv-dropdown\n          label="Dropdown 2"\n          [placeholder]="placeholder"\n          [options]="options"\n          [required]="true"\n          [invalid]="true"\n          error="This is a permanent error"\n          [formControl]="formControl">\n        </nggv-dropdown>\n      </div>\n      <div>\n        <nggv-input\n          label="Input 2"\n          [placeholder]="placeholder"\n          [required]="true"\n          style="margin-left: 0.25rem;"\n          [formControl]="formControl">\n        </nggv-input>\n      </div>',props:{...args,formControl:ctrl}}}).bind({});ComboWithInput.args={...defaultArgs};const WithOptionToggle=(args=>{const dropdownFc=new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.hs;dropdownFc.valueChanges.subscribe((value=>{console.log({value})}));args.options=options;return{template:'\n      <div>\n        <div style="display: flex">\n          <button class="gds-button" (click)="showAlt = !showAlt">Change options</button>\n          <button class="gds-button gds-button-alternative" (click)="resetFunc()">Reset to default</button>\n        </div>\n        <div>Value: {{ formControl.value }}</div>\n        <nggv-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [options]="options"\n          [required]="required"\n        \n          [formControl]="formControl">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </nggv-dropdown>\n      </div>',props:{...args,showAlt:false,formControl:dropdownFc,resetFunc:()=>{dropdownFc.reset("opt4")}}}}).bind({});WithOptionToggle.args={...defaultArgs,ngModel:"opt2",options};const WithCustomSelectedTemplate=(args=>{const accounts=[{label:"My own accounts",options:[{key:"se50000000001",label:null,accountNumber:"5000 00 000 01",accountName:"Savings account",balance:1e3,currency:"SEK"},{key:"se50000000002",label:null,accountNumber:"5000 00 000 02",accountName:"Foreign account",balance:100.5,currency:"USD"},{key:"se50000000003",label:null,accountNumber:"5000 00 000 03",accountName:"Account with a really long name",balance:2e3,currency:"SEK"},{key:"se50000000004",label:null,accountNumber:"5000 00 000 04",accountName:"Euro account with €€€",balance:100000000000.5,currency:"EUR"}]}],fc=new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.hs;return{template:'\n      <nggv-dropdown\n        [label]="label"\n        [placeholder]="placeholder"\n        [options]="options"\n        [required]="true"\n        [formControl]="formControl"\n        [locked]="locked"\n        [displayDisabledAsLocked]="displayDisabledAsLocked">\n\n        <ng-template let-item #groupLabelTpl>\n          <div style="background-color: salmon; padding-left: 1rem"><pre>My custom group label</pre></div>\n        </ng-template>\n\n        <ng-template let-selected #selectedTpl>\n          <div *ngIf="selected?.key" class="account-option">\n            <div class="account-option--label" style="font-weight: 500;">\n              <div>{{ selected?.accountName }}</div>\n              <div>{{ selected?.balance | number: \'1.2-2\':locale }} {{ selected?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>{{ selected?.accountNumber }}</div>\n              <div>Available amount</div>\n            </div>\n          </div>\n          <div *ngIf="!selected?.key" class="account-option" style="color: gray;">Select one</div>\n        </ng-template>\n        <ng-template let-option #optionTpl>\n          <div class="account-option">\n            <div class="account-option--label">\n              <div>{{ option?.accountName }}</div>\n              <div>{{ option?.balance | number: \'1.2-2\':locale }} {{ option?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>{{ option?.accountNumber }}</div>\n              <div></div>\n            </div>\n          </div>\n        </ng-template>\n\n      </nggv-dropdown>\n      <div style="margin-top: 1rem">\n        <button type="button" class="gds-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n      ',styles:["\n      ::ng-deep.nggv-field-dropdown__label::before {\n        margin: 0.5rem 0;\n      }\n      .account-option {\n        margin: 0.5rem 0;\n        padding-right: 0.5rem;\n        width: 350px;\n      }\n      ::ng-deep.gds-field-dropdown__options__label[aria-selected='false']:hover .account-option--number,\n      ::ng-deep.gds-field-dropdown__options__label[aria-selected='true']:hover .account-option--number,\n      ::ng-deep.gds-field-dropdown__options__label[aria-selected='true'] .account-option--number {\n        color: white;\n      }\n      .account-option--number,\n      .account-option--label {\n        padding-bottom: 0.25em;\n      }\n      .account-option--label {\n        display: flex;\n      }\n      .account-option--number {\n        line-height: 1;\n        font-size: 0.875em;\n        display: flex;\n        color: gray;\n      }\n      .account-option--label > * {\n        line-height: 1.5rem;\n      }\n      .account-option--number > *:first-child,\n      .account-option--label > *:first-child {\n        flex-grow: 2;\n        // flex-basis: 40%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .account-option--number > *:last-child,\n      .account-option--label > *:last-child {\n        flex-grow: 3;\n        display: flex;\n        justify-content: flex-end;\n      }"],props:{...args,formControl:fc,options:accounts,disableFn:()=>{if(fc.disabled)return fc.enable();fc.disable()}}}}).bind({});WithCustomSelectedTemplate.args={...defaultArgs,label:"Account selector",locked:!1,displayDisabledAsLocked:!0};const WithCustomSelectedTemplateTypeahead=(args=>{let filterPhrase="";const accounts=[{key:"se50000000001",label:null,accountNumber:"5000 00 000 01",accountName:"Savings account 2",balance:1e3,currency:"SEK"},{key:"se50000000002",label:null,accountNumber:"5000 00 000 02",accountName:"Foreign account 03",balance:100.5,currency:"USD"},{key:"se50000000003",label:null,accountNumber:"5000 00 000 03",accountName:"Account with a really long name",balance:2e3,currency:"SEK"},{key:"se50000000004",label:null,accountNumber:"5000 00 000 04",accountName:"Euro account with €€€",balance:100000000000.5,currency:"EUR"}],fc=new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.hs;return{template:'\n    Value: {{ formControl.value }}\n    Filter: {{ getFilterPhrase() }}\n      <nggv-dropdown\n        [label]="label"\n        [placeholder]="placeholder"\n        [options]="options"\n        [required]="true"\n        [formControl]="formControl"\n        [locked]="locked"\n        [displayDisabledAsLocked]="displayDisabledAsLocked"\n        [nggvTypeahead]="searchFunction"\n        [selectedFormatter]="selectedFormatter"\n        [resultFormatter]="resultFormatter"\n        [allowUnselect]="true"\n        [unselectLabel]="unselectLabel"\n        [emptyOptionLabel]="emptyOptionLabel"\n        (filterPhraseChange)="handlefilterPhraseChange($event)">\n\n        <ng-template let-selected #selectedTpl>\n          <div *ngIf="!!selected?.key" class="account-option">\n            <div class="account-option--label" style="font-weight: 500;">\n              <div>{{ selected?.accountName }}</div>\n              <div>{{ selected?.balance | number: \'1.2-2\':locale }} {{ selected?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>{{ selected?.accountNumber }}</div>\n              <div>Available amount</div>\n            </div>\n          </div>\n          <div *ngIf="!selected?.key" class="account-option" style="color: gray;">Select one</div>\n        </ng-template>\n\n        <ng-template let-option #optionTpl>\n          <div *ngIf="!option.key">\n            {{ (option?.label | transloco) || \'None\' }}\n          </div>\n          <div class="account-option" *ngIf="!!option.key">\n            <div class="account-option--label">\n              <div>\n                <nggv-typeahead-highlight [textContent]="option?.accountName" [textToHighlight]="getFilterPhrase()">\n                </nggv-typeahead-highlight>\n              </div>\n\n              <div>{{ option?.balance | number: \'1.2-2\':locale }} {{ option?.currency }}</div>\n            </div>\n            <div class="account-option--number">\n              <div>\n                <nggv-typeahead-highlight [textContent]="option?.accountNumber" [textToHighlight]="getFilterPhrase()">\n                </nggv-typeahead-highlight></div>\n              <div></div>\n            </div>\n          </div>\n        </ng-template>\n\n      </nggv-dropdown>\n      <div style="margin-top: 1rem">\n        <button type="button" class="gds-button" (click)="disableFn()">Toggle disable control</button>\n      </div>\n      ',styles:["\n      ::ng-deep.nggv-field-dropdown__label::before {\n        margin: 0.5rem 0;\n      }\n      .account-option {\n        margin: 0.5rem 0;\n        padding-right: 0.5rem;\n        width: 350px;\n      }\n      ::ng-deep.gds-field-dropdown__options__label[aria-selected='false']:hover .account-option--number,\n      ::ng-deep.gds-field-dropdown__options__label[aria-selected='true']:hover .account-option--number,\n      ::ng-deep.gds-field-dropdown__options__label[aria-selected='true'] .account-option--number {\n        color: white;\n      }\n      .account-option--number,\n      .account-option--label {\n        padding-bottom: 0.25em;\n      }\n      .account-option--label {\n        display: flex;\n      }\n      .account-option--number {\n        line-height: 1;\n        font-size: 0.875em;\n        display: flex;\n        color: gray;\n      }\n      .account-option--label > * {\n        line-height: 1.5rem;\n      }\n      .account-option--number > *:first-child,\n      .account-option--label > *:first-child {\n        flex-grow: 2;\n        // flex-basis: 40%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n      .account-option--number > *:last-child,\n      .account-option--label > *:last-child {\n        flex-grow: 3;\n        display: flex;\n        justify-content: flex-end;\n      }"],props:{...args,formControl:fc,options:accounts,unselectLabel:"Unselect",disableFn:()=>{if(fc.disabled)return fc.enable();fc.disable()},searchFunction:value$=>value$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_16__.B)(150),(0,rxjs__WEBPACK_IMPORTED_MODULE_17__.T)((inputValue=>accounts.filter((option=>option.accountName?.toUpperCase().includes(inputValue?.toUpperCase())||option.accountNumber?.replace(/\s/,"").includes(inputValue)))))),getFilterPhrase:function getFilterPhrase(){return filterPhrase},handlefilterPhraseChange:event=>{filterPhrase=event},selectedFormatter:account=>account?.accountName}}}).bind({});WithCustomSelectedTemplateTypeahead.args={...defaultArgs,label:"Account selector",locked:!1,displayDisabledAsLocked:!0};const WithLockedInput=Template.bind({});WithLockedInput.args={...Primary.args,ngModel:"opt2",locked:!0,description:void 0};const WithDisplayDisabledAsLocked=Template.bind({});WithDisplayDisabledAsLocked.args={...Primary.args,locked:!1,description:void 0,displayDisabledAsLocked:!0};const WithTypeAhead=(args=>{const ctrl=new _angular_forms__WEBPACK_IMPORTED_MODULE_15__.hs;return ctrl.valueChanges.subscribe(console.log),{template:'\n    Value: {{ formControl.value }}\n    <div>\n        <nggv-dropdown\n          [label]="label"\n          [formControl]="formControl"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n        \n          #dropdownElement\n          [options]="options"\n          [allowUnselect]="allowUnselect"\n          [unselectLabel]="unselectLabel"\n          [nggvTypeahead]="searchFunction"\n          [resultFormatter]="resultFormatter"\n          [selectedFormatter]="selectedFormatter"\n          [emptyOptionLabel]="emptyOptionLabel">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n        </nggv-dropdown>\n      </div>',styles:[""],props:{...args,formControl:ctrl,placeholder:"Choose",allowUnselect:!0,unselectLabel:"Unselect",emptyOptionLabel:"No matching options",searchFunction:value$=>value$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_16__.B)(300),(0,rxjs__WEBPACK_IMPORTED_MODULE_17__.T)((inputValue=>options.filter((option=>option.label?.replace(/\s/gm,"").toLocaleLowerCase().includes(inputValue?.replace(/\s/gm,"").toLocaleLowerCase()))))))}}}).bind({});WithTypeAhead.args={...defaultArgs};const __namedExportsOrder=["Primary","Disabled","WithError","ComboWithInput","WithOptionToggle","WithCustomSelectedTemplate","WithCustomSelectedTemplateTypeahead","WithLockedInput","WithDisplayDisabledAsLocked","WithTypeAhead"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"Template.bind({}) as any",...Primary.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"DisabledTemplate.bind({}) as any",...Disabled.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:"Template.bind({}) as any",...WithError.parameters?.docs?.source}}},ComboWithInput.parameters={...ComboWithInput.parameters,docs:{...ComboWithInput.parameters?.docs,source:{originalSource:"ComboTemplate.bind({}) as any",...ComboWithInput.parameters?.docs?.source}}},WithOptionToggle.parameters={...WithOptionToggle.parameters,docs:{...WithOptionToggle.parameters?.docs,source:{originalSource:"AltTemplate.bind({}) as any",...WithOptionToggle.parameters?.docs?.source}}},WithCustomSelectedTemplate.parameters={...WithCustomSelectedTemplate.parameters,docs:{...WithCustomSelectedTemplate.parameters?.docs,source:{originalSource:"CustomSelectedTemplate.bind({}) as any",...WithCustomSelectedTemplate.parameters?.docs?.source}}},WithCustomSelectedTemplateTypeahead.parameters={...WithCustomSelectedTemplateTypeahead.parameters,docs:{...WithCustomSelectedTemplateTypeahead.parameters?.docs,source:{originalSource:"CustomSelectedTemplateTypeahead.bind({}) as any",...WithCustomSelectedTemplateTypeahead.parameters?.docs?.source}}},WithLockedInput.parameters={...WithLockedInput.parameters,docs:{...WithLockedInput.parameters?.docs,source:{originalSource:'(args: any) => {\n  const ctrl = new UntypedFormControl(args.ngModel);\n  ctrl.valueChanges.subscribe(console.log);\n  const toggleDisableField = () => {\n    if (ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  return {\n    template: /*html*/`\n      <div>\n        <nggv-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [options]="options"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          [formControl]="formControl"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </nggv-dropdown>\n\n        <div style="margin-top: 1rem">\n          <button type="button" class="gds-button" (click)="disableFn()">Toggle disable control</button>\n        </div>\n      </div>`,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithLockedInput.parameters?.docs?.source}}},WithDisplayDisabledAsLocked.parameters={...WithDisplayDisabledAsLocked.parameters,docs:{...WithDisplayDisabledAsLocked.parameters?.docs,source:{originalSource:'(args: any) => {\n  const ctrl = new UntypedFormControl(args.ngModel);\n  ctrl.valueChanges.subscribe(console.log);\n  const toggleDisableField = () => {\n    if (ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  return {\n    template: /*html*/`\n      <div>\n        <nggv-dropdown\n          [label]="label"\n          [placeholder]="placeholder"\n          [description]="description | transloco"\n          [options]="options"\n          [required]="required"\n          [invalid]="invalid"\n          [error]="error"\n          [formControl]="formControl"\n          [locked]="locked"\n          [displayDisabledAsLocked]="displayDisabledAsLocked">\n\n          <ng-template #labelTpl>Custom Label</ng-template>\n\n          <ng-template let-option #optionTpl>{{option.label | transloco}} {{option.accountNumber}}</ng-template>\n\n        </nggv-dropdown>\n\n        <div style="margin-top: 1rem">\n          <button type="button" class="gds-button" (click)="disableFn()">Toggle disable control</button>\n        </div>\n      </div>`,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithDisplayDisabledAsLocked.parameters?.docs?.source}}},WithTypeAhead.parameters={...WithTypeAhead.parameters,docs:{...WithTypeAhead.parameters?.docs,source:{originalSource:"TypeaheadTemplate.bind({}) as any",...WithTypeAhead.parameters?.docs?.source}}}}}]);