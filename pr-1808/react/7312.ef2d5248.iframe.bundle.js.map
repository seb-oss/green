{"version":3,"file":"7312.ef2d5248.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;;AA+IA;;AAAA;;AAAA;AADA;AAAA;;;AAEA;;AADA;;AAAA;;;;;;;;;AAOA;;;;;;;;;;;;;ACrMA","sources":["webpack://green/./dist/libs/core/src/chunks/chunk.FVXKBQLW.js","webpack://green/./dist/libs/core/src/chunks/chunk.LH3DUZRS.js"],"sourcesContent":["import {\n  watchMediaQuery\n} from \"./chunk.WM7HBMMV.js\";\nimport {\n  TransitionalStyles\n} from \"./chunk.3PL54UIC.js\";\nimport {\n  watch\n} from \"./chunk.TYGMNHNO.js\";\nimport {\n  GdsElement\n} from \"./chunk.HMD2XFIL.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.MLXMQIEV.js\";\nimport {\n  __decorateClass,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/popover/popover.ts\nimport { localized, msg } from \"@lit/localize\";\nimport { unsafeCSS } from \"lit\";\nimport { property, query, state } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport {\n  autoUpdate,\n  computePosition,\n  flip,\n  offset\n} from \"@floating-ui/dom\";\n\n// libs/core/src/components/popover/popover.styles.ts\nimport { css } from \"lit\";\nvar style = css`\n  @layer base, reset, transitional-styles;\n  @layer base {\n    :host {\n      display: contents;\n    }\n\n    :host([open]) dialog {\n      opacity: 1;\n      box-sizing: border-box;\n      transform: translate3d(0, 0, 0);\n      visibility: visible;\n    }\n\n    dialog {\n      display: flex;\n      flex-direction: column;\n      inset: auto;\n      position: fixed;\n      overflow: hidden;\n      padding: 0px;\n      box-sizing: border-box;\n      right: 0;\n      margin: 0;\n      box-shadow:\n        0 0 0 1px rgba(0, 0, 0, 0.2),\n        0 1rem 28px rgba(0, 0, 0, 0.15);\n      border-width: 0;\n      border-radius: 0.5rem;\n    }\n\n    header {\n      display: none;\n    }\n\n    dialog:not(.has-backdrop)::backdrop {\n      background-color: transparent;\n      display: block;\n      position: fixed;\n    }\n  }\n`;\nvar popover_styles_default = style;\n\n// libs/core/src/components/popover/popover.ts\nvar _handleTriggerSlotChange, handleTriggerSlotChange_fn, _autoPositionCleanupFn, _isMobileViewport, _backdropEl, _handleCancel, _dispatchUiStateEvent, _handleCloseButton, _registerTriggerEvents, registerTriggerEvents_fn, _unregisterTriggerEvents, unregisterTriggerEvents_fn, _setupTriggerAttributes, setupTriggerAttributes_fn, _registerAutoPositioning, registerAutoPositioning_fn, _handleTriggerKeyDown, _handleTriggerClick, _focusFirstSlottedChild, _handleClickOutside;\nvar GdsPopover = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    __privateAdd(this, _handleTriggerSlotChange);\n    __privateAdd(this, _registerTriggerEvents);\n    __privateAdd(this, _unregisterTriggerEvents);\n    __privateAdd(this, _setupTriggerAttributes);\n    __privateAdd(this, _registerAutoPositioning);\n    this.open = false;\n    this.popupRole = \"dialog\";\n    this.label = void 0;\n    this.placement = \"bottom-start\";\n    this.disableMobileStyles = false;\n    this.calcMinWidth = (referenceEl) => `${referenceEl.offsetWidth}px`;\n    this.calcMaxWidth = (_referenceEl) => `auto`;\n    this.calcMinHeight = (_referenceEl) => `auto`;\n    this.calcMaxHeight = (_referenceEl) => `500px`;\n    this.nonmodal = false;\n    this.floatingUIMiddleware = [offset(8), flip()];\n    this._trigger = void 0;\n    this._anchor = void 0;\n    this._isVirtKbVisible = false;\n    // A function that removes the Floating UI auto positioning. This gets called when we switch to mobile view layout.\n    __privateAdd(this, _autoPositionCleanupFn, void 0);\n    __privateAdd(this, _isMobileViewport, false);\n    __privateAdd(this, _backdropEl, void 0);\n    __privateAdd(this, _handleCancel, () => {\n      this.open = false;\n      __privateGet(this, _dispatchUiStateEvent).call(this, \"cancel\");\n    });\n    __privateAdd(this, _dispatchUiStateEvent, (reason) => {\n      this.dispatchEvent(\n        new CustomEvent(\"gds-ui-state\", {\n          detail: { open: this.open, reason },\n          bubbles: false,\n          composed: false\n        })\n      );\n    });\n    __privateAdd(this, _handleCloseButton, (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n      this.open = false;\n      __privateGet(this, _dispatchUiStateEvent).call(this, \"close\");\n      setTimeout(() => {\n        var _a;\n        return (_a = this._trigger) == null ? void 0 : _a.focus();\n      }, 250);\n    });\n    /**\n     * ArrowDown or ArrowUp on the trigger element will trigger the popover by default, and escape will close it.\n     */\n    __privateAdd(this, _handleTriggerKeyDown, (e) => {\n      if (e.key === \"ArrowDown\" || e.key === \"ArrowUp\") {\n        e.preventDefault();\n        this.open = true;\n        __privateGet(this, _dispatchUiStateEvent).call(this, \"show\");\n      }\n      if (e.key === \"Escape\" && this.open) {\n        __privateGet(this, _handleCancel).call(this);\n      }\n    });\n    __privateAdd(this, _handleTriggerClick, (e) => {\n      e.preventDefault();\n      this.open = !this.open;\n      __privateGet(this, _dispatchUiStateEvent).call(this, this.open ? \"show\" : \"close\");\n    });\n    /**\n     * Move focus to the first slotted child.\n     */\n    __privateAdd(this, _focusFirstSlottedChild, () => {\n      var _a;\n      const firstSlottedChild = (_a = this._elDefaultSlot) == null ? void 0 : _a.assignedElements()[0];\n      this.updateComplete.then(() => {\n        firstSlottedChild == null ? void 0 : firstSlottedChild.focus();\n      });\n    });\n    __privateAdd(this, _handleClickOutside, (evt) => {\n      const e = evt;\n      const dialog = this._elDialog;\n      const isNotEnterKey = e.clientX > 0 || e.clientY > 0;\n      if (isNotEnterKey && dialog && this.open) {\n        const rect = dialog.getBoundingClientRect();\n        const isInDialog = rect.top <= e.clientY && e.clientY <= rect.top + rect.height && rect.left <= e.clientX && e.clientX <= rect.left + rect.width;\n        if (!isInDialog) {\n          this.open = false;\n          __privateGet(this, _dispatchUiStateEvent).call(this, \"close\");\n        }\n      }\n    });\n  }\n  _handleTriggerRefChanged() {\n    var _a;\n    (_a = this.triggerRef) == null ? void 0 : _a.then((el) => {\n      if (el)\n        this._trigger = el;\n    });\n  }\n  _handleAnchorRefChanged() {\n    var _a;\n    (_a = this.anchorRef) == null ? void 0 : _a.then((el) => {\n      if (el)\n        this._anchor = el;\n    });\n  }\n  _handleTriggerChanged() {\n    __privateMethod(this, _registerTriggerEvents, registerTriggerEvents_fn).call(this);\n    __privateMethod(this, _setupTriggerAttributes, setupTriggerAttributes_fn).call(this);\n  }\n  _handleAnchorChanged() {\n    __privateMethod(this, _registerAutoPositioning, registerAutoPositioning_fn).call(this);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    TransitionalStyles.instance.apply(this, \"gds-popover\");\n    __privateMethod(this, _registerTriggerEvents, registerTriggerEvents_fn).call(this);\n    this._handleOpenChange();\n    this.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Escape\" && this.open) {\n        __privateGet(this, _handleCancel).call(this);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    });\n    this.addEventListener(\"focusin\", (e) => {\n      const t = e.target;\n      if (t.tagName === \"INPUT\" || t.tagName === \"TEXTAREA\") {\n        this._isVirtKbVisible = true;\n      } else {\n        this._isVirtKbVisible = false;\n      }\n    });\n    this.addEventListener(\"blurin\", (_) => {\n      this._isVirtKbVisible = false;\n    });\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    __privateMethod(this, _unregisterTriggerEvents, unregisterTriggerEvents_fn).call(this);\n  }\n  render() {\n    return html`<slot\n        name=\"trigger\"\n        @slotchange=${__privateMethod(this, _handleTriggerSlotChange, handleTriggerSlotChange_fn)}\n      ></slot>\n      <div ?hidden=\"${!this.open}\">\n        <dialog\n          class=\"${classMap({\n      \"v-kb-visible\": this._isVirtKbVisible,\n      \"use-modal-in-mobile\": !this.disableMobileStyles,\n      \"has-backdrop\": Boolean(this.backdrop && this.backdrop === \"true\")\n    })}\"\n          aria-hidden=\"${String(!this.open)}\"\n          @close=${() => this.open && __privateGet(this, _handleCancel).call(this)}\n        >\n          <header>\n            <h2>${this.label}</h2>\n            <gds-button\n              @click=${__privateGet(this, _handleCloseButton)}\n              class=\"close\"\n              label=\"${msg(\"Close\")}\"\n              size=\"small\"\n              rank=\"tertiary\"\n            >\n              <gds-icon-cross-small></icon-cross-small>\n            </gds-button>\n          </header>\n          <slot></slot>\n        </dialog>\n      </div>`;\n  }\n  _handleOpenChange() {\n    const clickOutsideTarget = (this.nonmodal ? __privateGet(this, _backdropEl) : this._elDialog) || document;\n    this.updateComplete.then(() => {\n      var _a, _b, _c, _d;\n      (_a = this._trigger) == null ? void 0 : _a.setAttribute(\"aria-expanded\", String(this.open));\n      if (this.open) {\n        !this.nonmodal ? (_b = this._elDialog) == null ? void 0 : _b.showModal() : (_c = this._elDialog) == null ? void 0 : _c.setAttribute(\"open\", \"true\");\n        __privateGet(this, _focusFirstSlottedChild).call(this);\n        requestAnimationFrame(() => {\n          if (__privateGet(this, _backdropEl))\n            __privateGet(this, _backdropEl).show = true;\n        });\n        setTimeout(() => __privateGet(this, _focusFirstSlottedChild).call(this), 250);\n        setTimeout(\n          () => clickOutsideTarget.addEventListener(\n            \"click\",\n            __privateGet(this, _handleClickOutside)\n          ),\n          0\n        );\n      } else {\n        (_d = this._elDialog) == null ? void 0 : _d.close();\n        clickOutsideTarget.removeEventListener(\n          \"click\",\n          __privateGet(this, _handleClickOutside)\n        );\n        if (__privateGet(this, _backdropEl))\n          __privateGet(this, _backdropEl).show = false;\n      }\n    });\n  }\n  _handleBackdropChange() {\n    var _a;\n    const parentRoot = (_a = this.parentElement) == null ? void 0 : _a.getRootNode();\n    if (!this.backdrop || !parentRoot)\n      return;\n    __privateSet(this, _backdropEl, parentRoot.querySelector(this.backdrop));\n  }\n  _handleMobileLayout(matches) {\n    var _a, _b, _c, _d;\n    __privateSet(this, _isMobileViewport, matches);\n    if (matches && !this.disableMobileStyles) {\n      (_a = __privateGet(this, _autoPositionCleanupFn)) == null ? void 0 : _a.call(this);\n      (_b = this._elDialog) == null ? void 0 : _b.style.removeProperty(\"left\");\n      (_c = this._elDialog) == null ? void 0 : _c.style.removeProperty(\"top\");\n      (_d = this._elDialog) == null ? void 0 : _d.style.removeProperty(\"minWidth\");\n      this.updateComplete.then(() => {\n        var _a2;\n        if (this.open)\n          (_a2 = this._elDialog) == null ? void 0 : _a2.showModal();\n      });\n    } else {\n      this.updateComplete.then(() => {\n        __privateMethod(this, _registerAutoPositioning, registerAutoPositioning_fn).call(this);\n      });\n    }\n  }\n};\n_handleTriggerSlotChange = new WeakSet();\nhandleTriggerSlotChange_fn = function() {\n  if (this._elTriggerSlot && this._elTriggerSlot.assignedElements()[0]) {\n    this._trigger = this._elTriggerSlot.assignedElements()[0];\n    this._anchor = this._elTriggerSlot.assignedElements()[0];\n  }\n};\n_autoPositionCleanupFn = new WeakMap();\n_isMobileViewport = new WeakMap();\n_backdropEl = new WeakMap();\n_handleCancel = new WeakMap();\n_dispatchUiStateEvent = new WeakMap();\n_handleCloseButton = new WeakMap();\n_registerTriggerEvents = new WeakSet();\nregisterTriggerEvents_fn = function() {\n  var _a, _b;\n  (_a = this._trigger) == null ? void 0 : _a.addEventListener(\"keydown\", __privateGet(this, _handleTriggerKeyDown));\n  (_b = this._trigger) == null ? void 0 : _b.addEventListener(\"click\", __privateGet(this, _handleTriggerClick));\n};\n_unregisterTriggerEvents = new WeakSet();\nunregisterTriggerEvents_fn = function() {\n  var _a, _b, _c;\n  (_a = this._trigger) == null ? void 0 : _a.removeEventListener(\"keydown\", __privateGet(this, _handleTriggerKeyDown));\n  (_b = this._trigger) == null ? void 0 : _b.removeEventListener(\"click\", __privateGet(this, _handleTriggerClick));\n  (_c = __privateGet(this, _autoPositionCleanupFn)) == null ? void 0 : _c.call(this);\n};\n_setupTriggerAttributes = new WeakSet();\nsetupTriggerAttributes_fn = function() {\n  var _a;\n  if (this._trigger) {\n    (_a = this._trigger) == null ? void 0 : _a.setAttribute(\"aria-expanded\", String(this.open));\n    const focusableNodeNames = [\"A\", \"BUTTON\", \"INPUT\", \"TEXTAREA\"];\n    const isProbablyFocusable = this._trigger.nodeName.startsWith(\"GDS-\") || focusableNodeNames.includes(this._trigger.nodeName);\n    if (!isProbablyFocusable) {\n      this._trigger.setAttribute(\"tabindex\", \"0\");\n      this._trigger.setAttribute(\"role\", \"button\");\n    }\n    const ariaHasPopupAttr = this._trigger.nodeName.startsWith(\"GDS-\") ? \"gds-aria-haspopup\" : \"aria-haspopup\";\n    if (this._trigger.getAttribute(ariaHasPopupAttr) === null) {\n      this._trigger.setAttribute(ariaHasPopupAttr, this.popupRole);\n    }\n  }\n};\n_registerAutoPositioning = new WeakSet();\nregisterAutoPositioning_fn = function() {\n  if (!this._anchor || !this._elDialog) {\n    return;\n  }\n  const referenceEl = this._anchor;\n  const floatingEl = this._elDialog;\n  if (!referenceEl || !floatingEl || __privateGet(this, _isMobileViewport) && !this.disableMobileStyles)\n    return;\n  if (__privateGet(this, _autoPositionCleanupFn)) {\n    __privateGet(this, _autoPositionCleanupFn).call(this);\n  }\n  __privateSet(this, _autoPositionCleanupFn, autoUpdate(referenceEl, floatingEl, () => {\n    Object.assign(floatingEl.style, {\n      minWidth: this.calcMinWidth(referenceEl),\n      maxWidth: this.calcMaxWidth(referenceEl),\n      minHeight: this.calcMinHeight(referenceEl),\n      maxHeight: this.calcMaxHeight(referenceEl)\n    });\n    computePosition(referenceEl, floatingEl, {\n      placement: this.placement,\n      middleware: this.floatingUIMiddleware,\n      strategy: \"fixed\"\n    }).then(\n      ({ x, y }) => Object.assign(floatingEl.style, {\n        left: `${x}px`,\n        top: `${y}px`\n      })\n    );\n  }));\n};\n_handleTriggerKeyDown = new WeakMap();\n_handleTriggerClick = new WeakMap();\n_focusFirstSlottedChild = new WeakMap();\n_handleClickOutside = new WeakMap();\nGdsPopover.styles = unsafeCSS(popover_styles_default);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsPopover.prototype, \"open\", 2);\n__decorateClass([\n  property({ attribute: \"popup-role\" })\n], GdsPopover.prototype, \"popupRole\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsPopover.prototype, \"triggerRef\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsPopover.prototype, \"anchorRef\", 2);\n__decorateClass([\n  property()\n], GdsPopover.prototype, \"label\", 2);\n__decorateClass([\n  property()\n], GdsPopover.prototype, \"placement\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsPopover.prototype, \"disableMobileStyles\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsPopover.prototype, \"calcMinWidth\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsPopover.prototype, \"calcMaxWidth\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsPopover.prototype, \"calcMinHeight\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsPopover.prototype, \"calcMaxHeight\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], GdsPopover.prototype, \"nonmodal\", 2);\n__decorateClass([\n  property()\n], GdsPopover.prototype, \"backdrop\", 2);\n__decorateClass([\n  property({ attribute: false })\n], GdsPopover.prototype, \"floatingUIMiddleware\", 2);\n__decorateClass([\n  state()\n], GdsPopover.prototype, \"_trigger\", 2);\n__decorateClass([\n  state()\n], GdsPopover.prototype, \"_anchor\", 2);\n__decorateClass([\n  state()\n], GdsPopover.prototype, \"_isVirtKbVisible\", 2);\n__decorateClass([\n  query(\"slot:not([name])\")\n], GdsPopover.prototype, \"_elDefaultSlot\", 2);\n__decorateClass([\n  query('slot[name=\"trigger\"]')\n], GdsPopover.prototype, \"_elTriggerSlot\", 2);\n__decorateClass([\n  query(\"dialog\")\n], GdsPopover.prototype, \"_elDialog\", 2);\n__decorateClass([\n  watch(\"triggerRef\")\n], GdsPopover.prototype, \"_handleTriggerRefChanged\", 1);\n__decorateClass([\n  watch(\"anchorRef\")\n], GdsPopover.prototype, \"_handleAnchorRefChanged\", 1);\n__decorateClass([\n  watch(\"_trigger\")\n], GdsPopover.prototype, \"_handleTriggerChanged\", 1);\n__decorateClass([\n  watch(\"_anchor\")\n], GdsPopover.prototype, \"_handleAnchorChanged\", 1);\n__decorateClass([\n  watch(\"open\")\n], GdsPopover.prototype, \"_handleOpenChange\", 1);\n__decorateClass([\n  watch(\"backdrop\")\n], GdsPopover.prototype, \"_handleBackdropChange\", 1);\n__decorateClass([\n  watchMediaQuery(\"(max-width: 576px)\")\n], GdsPopover.prototype, \"_handleMobileLayout\", 1);\nGdsPopover = __decorateClass([\n  gdsCustomElement(\"gds-popover\"),\n  localized()\n], GdsPopover);\n\nexport {\n  GdsPopover\n};\n","import {\n  GdsElement\n} from \"./chunk.HMD2XFIL.js\";\nimport {\n  gdsCustomElement,\n  html\n} from \"./chunk.MLXMQIEV.js\";\nimport {\n  __decorateClass\n} from \"./chunk.SEHSDSX2.js\";\n\n// libs/core/src/components/popover/backdrop.ts\nimport { css } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nvar GdsBackdrop = class extends GdsElement {\n  constructor() {\n    super(...arguments);\n    this.show = false;\n  }\n  render() {\n    return html``;\n  }\n};\nGdsBackdrop.styles = css`\n    :host {\n      display: none;\n      position: fixed;\n      inset: 0;\n      background-color: rgba(0, 0, 0, 0.25);\n      width: 100%;\n      height: 100%;\n    }\n\n    :host([show]) {\n      display: block;\n    }\n  `;\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], GdsBackdrop.prototype, \"show\", 2);\nGdsBackdrop = __decorateClass([\n  gdsCustomElement(\"gds-backdrop\")\n], GdsBackdrop);\n\nexport {\n  GdsBackdrop\n};\n"],"names":[],"sourceRoot":""}