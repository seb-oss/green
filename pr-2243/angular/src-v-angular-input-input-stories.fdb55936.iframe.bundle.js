(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[7735],{"./libs/angular/src/v-angular/button/button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n:host {\n  --sg-border-radius: 0.25rem;\n  --sg-border-width: 1px;\n  --sg-border-color: #868686;\n  --gds-sys-color-focus-outline: #1a1a1a;\n}\n:host button,\n:host a {\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  font-family: inherit;\n  padding: 0;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  border-radius: var(--sg-border-radius);\n  border: solid var(--sg-border-width) var(--sg-border-color);\n  font-weight: 500;\n  min-height: 2.75rem;\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n  font-size: 1rem;\n  font-family: inherit;\n}\n:host button:focus:not(:focus-visible),\n:host a:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host button:focus, :host button:focus-visible,\n:host a:focus,\n:host a:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n@media (max-width: 35.98em) {\n  :host button,\n  :host a {\n    min-width: 100%;\n  }\n}\n@media screen and (-ms-high-contrast: active) {\n  :host button,\n  :host a {\n    border: 2px solid currentcolor;\n  }\n}\n:host button.small,\n:host a.small {\n  min-height: 2rem;\n  padding: 0.4375rem 0.75rem;\n  line-height: 1rem;\n}\n:host button.large,\n:host a.large {\n  min-height: 4rem;\n  padding: 1rem 1.5rem;\n  font-size: 1.5rem;\n  line-height: 2rem;\n}\n:host .primary {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: rgb(0, 122, 199);\n  border-color: rgb(0, 122, 199);\n  color: #fff;\n  --color: #fff;\n}\n:host .primary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host .primary[aria-selected=true], :host .primary:active, :host .primary.active, :host .primary.active:hover, :host .primary:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host .primary:focus-visible {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3 !important;\n}\n:host .primary:disabled, :host .primary.disabled, :host .primary[aria-disabled=true] {\n  background: var(--form-control-primary-bg-disabled) !important;\n  color: var(--text-primary-disabled-color) !important;\n  border-color: var(--border-primary-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .primary:disabled::placeholder, :host .primary.disabled::placeholder, :host .primary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .secondary {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: transparent;\n  border-color: rgb(0, 122, 199);\n  color: rgb(0, 122, 199);\n  --color: rgb(0, 122, 199);\n}\n:host .secondary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .secondary:focus, :host .secondary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .secondary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host .secondary[aria-selected=true], :host .secondary:active, :host .secondary.active, :host .secondary.active:hover, :host .secondary:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host .secondary:disabled, :host .secondary.disabled, :host .secondary[aria-disabled=true] {\n  background: var(--sg-form-control-bg-disabled) !important;\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .secondary:disabled::placeholder, :host .secondary.disabled::placeholder, :host .secondary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .tertiary {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: transparent;\n  border-color: transparent;\n  color: rgb(0, 122, 199);\n  --color: rgb(0, 122, 199);\n}\n:host .tertiary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .tertiary:focus, :host .tertiary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .tertiary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host .tertiary[aria-selected=true], :host .tertiary:active, :host .tertiary.active, :host .tertiary.active:hover, :host .tertiary:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host .tertiary:disabled, :host .tertiary.disabled, :host .tertiary[aria-disabled=true] {\n  background: var(--sg-form-control-bg-disabled) !important;\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .tertiary:disabled::placeholder, :host .tertiary.disabled::placeholder, :host .tertiary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .ghost-light {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  border-color: rgb(255, 255, 255);\n  color: rgb(255, 255, 255);\n  --color: rgb(255, 255, 255);\n}\n:host .ghost-light:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255);\n}\n:host .ghost-light[aria-selected=true], :host .ghost-light:active, :host .ghost-light.active, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255);\n}\n:host .ghost-light[aria-selected]:hover, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  opacity: 0.9;\n}\n:host .ghost-light:focus-visible {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255) !important;\n}\n:host .ghost-light:disabled, :host .ghost-light.disabled, :host .ghost-light[aria-disabled=true] {\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .ghost-light:disabled::placeholder, :host .ghost-light.disabled::placeholder, :host .ghost-light[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .ghost {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  border-color: rgb(51, 51, 51);\n  color: rgb(51, 51, 51);\n  --color: rgb(51, 51, 51);\n}\n:host .ghost:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(51, 51, 51);\n  color: rgb(255, 255, 255);\n  --background: rgb(51, 51, 51);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(51, 51, 51);\n}\n:host .ghost[aria-selected=true], :host .ghost:active, :host .ghost.active, :host .ghost.active:hover, :host .ghost:active:hover {\n  background-color: rgb(51, 51, 51);\n  color: rgb(255, 255, 255);\n  --background: rgb(51, 51, 51);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(51, 51, 51);\n}\n:host .ghost[aria-selected]:hover, :host .ghost.active:hover, :host .ghost:active:hover {\n  opacity: 0.9;\n}\n:host .ghost:focus-visible {\n  background-color: rgb(51, 51, 51);\n  color: rgb(255, 255, 255);\n  --background: rgb(51, 51, 51);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(51, 51, 51) !important;\n}\n:host .ghost:disabled, :host .ghost.disabled, :host .ghost[aria-disabled=true] {\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .ghost:disabled::placeholder, :host .ghost.disabled::placeholder, :host .ghost[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .danger.primary {\n  background: rgb(187, 0, 12);\n  border-color: rgb(187, 0, 12);\n  color: #fff;\n  --color: #fff;\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n}\n:host .danger.primary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(216, 26, 26);\n  color: rgb(255, 255, 255);\n  --background: rgb(216, 26, 26);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(216, 26, 26);\n}\n:host .danger.primary[aria-selected=true], :host .danger.primary:active, :host .danger.primary.active, :host .danger.primary.active:hover, :host .danger.primary:active:hover {\n  background-color: rgb(187, 0, 12);\n  color: rgb(255, 255, 255);\n  --background: rgb(187, 0, 12);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(187, 0, 12);\n}\n:host .danger.primary[aria-selected]:hover, :host .danger.primary.active:hover, :host .danger.primary:active:hover {\n  opacity: 0.9;\n}\n:host .danger.primary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .danger.primary:focus, :host .danger.primary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .danger.primary:disabled, :host .danger.primary.disabled, :host .danger.primary[aria-disabled=true] {\n  background: var(--form-control-primary-bg-disabled) !important;\n  color: var(--text-primary-disabled-color) !important;\n  border-color: var(--border-primary-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .danger.primary:disabled::placeholder, :host .danger.primary.disabled::placeholder, :host .danger.primary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .danger:not(.primary) {\n  color: rgb(187, 0, 12);\n  --color: rgb(187, 0, 12);\n  border-color: transparent;\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n}\n:host .danger:not(.primary):not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(216, 26, 26);\n  color: rgb(255, 255, 255);\n  --background: rgb(216, 26, 26);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(216, 26, 26);\n}\n:host .danger:not(.primary)[aria-selected=true], :host .danger:not(.primary):active, :host .danger:not(.primary).active, :host .danger:not(.primary).active:hover, :host .danger:not(.primary):active:hover {\n  background-color: rgb(187, 0, 12);\n  color: rgb(255, 255, 255);\n  --background: rgb(187, 0, 12);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(187, 0, 12);\n}\n:host .danger:not(.primary)[aria-selected]:hover, :host .danger:not(.primary).active:hover, :host .danger:not(.primary):active:hover {\n  opacity: 0.9;\n}\n:host .danger:not(.primary):focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .danger:not(.primary):focus, :host .danger:not(.primary):focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/checkbox/checkbox.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/* base style for forms */\n/* horizontal layout for forms */\n/* label for checkboxes and radio buttons */\n/* form group */\n/* form text */\n:host {\n  --gds-sys-color-surface: #fff;\n  --gds-ref-pallet-base200: #e8e8e8;\n  --gds-sys-color-base: #333;\n  --gds-sys-shape-corner-small: 0.125rem;\n  --gds-ref-pallet-base600: hsl(0, 0%, 53%);\n  --gds-sys-color-blue-dark-2: #007ac7;\n  --gds-sys-shape-corner-medium: 0.25rem;\n  --gds-comp-checkbox-container-height: 1rem;\n  --gds-comp-checkbox-container-width: 1rem;\n  --gds-comp-checkbox-container-color: var(--gds-sys-color-background-primary);\n  --gds-comp-checkbox-container-color-disabled: var(--gds-ref-pallet-base300);\n  --gds-comp-checkbox-border-color: var(--gds-ref-pallet-base900);\n  --gds-comp-checkbox-border-radius: var(--gds-sys-shape-corner-small);\n  --gds-comp-checkbox-hover-border-color: var(--gds-ref-pallet-base600);\n  --gds-comp-checkbox-container-color-selected: var(--gds-ref-pallet-base900);\n  --gds-comp-checkbox-border-color-selected: var(--gds-sys-color-text-inverted);\n  --gds-comp-checkbox-border-color-focus: var(--gds-sys-color-dark-blue-2);\n  /* Hide the browser\'s default checkbox */\n  /* Add focus to form-control field */\n  /* Style for custom checkbox */\n  /* Disabled state */\n}\n:host label.form-control input[type=checkbox] {\n  cursor: pointer;\n  height: 0;\n  opacity: 0;\n  position: absolute;\n  width: 0;\n  z-index: -1;\n}\n:host label.form-control {\n  align-items: flex-start;\n}\n:host label.form-control:has(input[type=checkbox]) {\n  padding: 0.6875rem 1rem 0.5625rem;\n}\n:host label.form-control:has(input[type=checkbox]:focus-visible):focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host label.form-control:has(input[type=checkbox]:focus-visible):focus, :host label.form-control:has(input[type=checkbox]:focus-visible):focus-within {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host label.form-control input[type=checkbox] ~ i {\n  margin-right: 0.75rem;\n  margin-top: 0.0625rem;\n  flex-shrink: 0;\n  box-shadow: inset 0 0 0 1px var(--gds-sys-color-text-primary);\n  position: relative;\n  border-radius: var(--gds-sys-shape-corner-small);\n  background-color: transparent;\n  flex: 0 0 auto;\n  height: 1rem;\n  width: 1rem;\n}\n:host label.form-control input[type=checkbox]:not(:checked):focus-visible ~ i {\n  box-shadow: inset 0 0 0 1px var(--gds-sys-color-base-900);\n}\n:host label.form-control:hover input[type=checkbox]:not(.disabled, :disabled, :checked, :indeterminate) ~ i {\n  background-color: var(--gds-sys-color-base-200);\n}\n:host label.form-control input[type=checkbox]:checked ~ i {\n  background-color: var(--gds-sys-color-base-900);\n}\n:host label.form-control input[type=checkbox]:indeterminate ~ i {\n  background-color: var(--gds-sys-color-base-900);\n}\n:host label.form-control input[type=checkbox]:indeterminate ~ i::after {\n  border-bottom: 2px solid var(--gds-sys-color-background-primary);\n  border-left: none;\n  transform: scale(1) rotate(0deg);\n  opacity: 1;\n}\n:host label.form-control:has(input[type=checkbox].is-invalid) {\n  border: 0.0625rem solid var(--gds-sys-color-text-error);\n  margin-bottom: 0.5rem;\n}\n:host .is-invalid label.form-control:has(input[type=checkbox].is-invalid) {\n  border: none;\n  margin: 0;\n}\n@supports (-moz-appearance: none) {\n  :host label.form-control.is-invalid {\n    border: 0.0625rem solid var(--gds-sys-color-text-error);\n    margin-bottom: 0.5rem;\n  }\n  :host .is-invalid label.form-control.is-invalid {\n    border: none;\n    margin: 0;\n  }\n}\n:host label.form-control input[type=checkbox]:disabled ~ i,\n:host label.form-control input[type=checkbox].disabled ~ i {\n  background: var(--sg-form-control-bg-disabled) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n  box-shadow: inset 0 0 0 1px var(--border-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled ~ i::placeholder,\n:host label.form-control input[type=checkbox].disabled ~ i::placeholder {\n  color: var(--text-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled:checked ~ i,\n:host label.form-control input[type=checkbox].disabled:checked ~ i {\n  background: var(--sg-form-control-bg-disabled) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n  box-shadow: inset 0 0 0 1px var(--border-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled:checked ~ i::placeholder,\n:host label.form-control input[type=checkbox].disabled:checked ~ i::placeholder {\n  color: var(--text-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled:checked ~ i:after,\n:host label.form-control input[type=checkbox].disabled:checked ~ i:after {\n  border-color: var(--border-disabled-color);\n}\n:host label.form-control input[type=checkbox]:disabled ~ span,\n:host label.form-control input[type=checkbox].disabled ~ span {\n  color: var(--text-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host label.form-control input[type=checkbox]:disabled ~ span::placeholder,\n:host label.form-control input[type=checkbox].disabled ~ span::placeholder {\n  color: var(--text-disabled-color);\n}\n:host label.form-control input[type=checkbox] ~ i::after {\n  content: "";\n  opacity: 0;\n  position: absolute;\n}\n:host label.form-control input[type=checkbox] ~ i::after {\n  border-bottom: 3px solid var(--gds-sys-color-text-inverted);\n  border-left: 3px solid var(--gds-sys-color-text-inverted);\n  height: 0.5rem;\n  width: 1rem;\n  left: 0;\n  top: 0.1875rem;\n  transform: scale(0.601) rotate(-45deg);\n  transform-origin: center;\n}\n:host label.form-control input[type=checkbox]:checked ~ i::after {\n  opacity: 1;\n}\n:host .form-control {\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  border: 1px solid transparent;\n  border-radius: var(--gds-sys-shape-corner-medium);\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row-reverse;\n  font: inherit;\n  justify-content: flex-end;\n  position: relative;\n  user-select: none;\n  -webkit-user-select: none;\n  line-height: 1.125rem;\n}\n:host .form-control:has(input:disabled) {\n  cursor: not-allowed;\n}\n:host .form-info {\n  font-weight: 500;\n  padding-left: 1rem;\n  margin-top: -0.25rem;\n}\n:host .form-info--error {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.5em;\n  color: #9f000a;\n}\n:host .form-info--error .error-icon {\n  margin-top: 0.128rem;\n  align-items: center;\n}\n:host i:after {\n  box-sizing: border-box;\n}\n:host.small label.form-control:has(input[type=checkbox]) {\n  line-height: 1rem;\n  font-size: 0.875rem;\n  padding: 0.38rem 0.5rem;\n}\n:host.small label.form-control:has(input[type=checkbox]) span {\n  margin-top: 0.125rem;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/info-circle/info-circle.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n}\n\nsvg {\n  display: block;\n  width: 1.5rem;\n  height: 1.5rem;\n}\n\n.gds-tooltip {\n  background-color: #1a1a1a;\n  color: #fff;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 0.5rem;\n  pointer-events: none;\n}\n.gds-tooltip__arrow-top {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  bottom: -1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  border-color: #1a1a1a transparent transparent;\n}\n.gds-tooltip__arrow-bottom {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  top: -1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  border-color: transparent transparent #1a1a1a;\n}\n.gds-tooltip__arrow-left {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  right: -1rem;\n  top: 50%;\n  transform: translateY(-50%);\n  border-color: transparent transparent transparent #1a1a1a;\n}\n.gds-tooltip__arrow-right {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  left: -1rem;\n  top: 50%;\n  transform: translateY(-50%);\n  border-color: transparent #1a1a1a transparent transparent;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./dist/libs/core/src/components/icon/icons/circle-info.component.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{w:()=>IconCircleInfo});var _chunks_chunk_QTSIPXV3_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./dist/libs/core/src/chunks/chunk.QTSIPXV3.js"),_scoping_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./dist/libs/core/src/utils/helpers/custom-element-scoping.js"),_icon_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./dist/libs/core/src/components/icon/icon.js");let IconCircleInfo=class extends _icon_js__WEBPACK_IMPORTED_MODULE_1__.M{};IconCircleInfo._regularSVG='<path d="M10.75 11H12L12 16.25M21.25 12C21.25 17.1086 17.1086 21.25 12 21.25C6.89137 21.25 2.75 17.1086 2.75 12C2.75 6.89137 6.89137 2.75 12 2.75C17.1086 2.75 21.25 6.89137 21.25 12Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M12 7.375C11.6548 7.375 11.375 7.65482 11.375 8C11.375 8.34518 11.6548 8.625 12 8.625C12.3452 8.625 12.625 8.34518 12.625 8C12.625 7.65482 12.3452 7.375 12 7.375Z" fill="currentColor" stroke="currentColor" stroke-width="0.25"/>',IconCircleInfo._solidSVG='<path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2ZM10 11C10 10.5858 10.3358 10.25 10.75 10.25H12C12.4142 10.25 12.75 10.5858 12.75 11L12.75 16.25C12.75 16.6642 12.4142 17 12 17C11.5858 17 11.25 16.6642 11.25 16.25L11.25 11.75H10.75C10.3358 11.75 10 11.4142 10 11ZM12 7.25C11.5858 7.25 11.25 7.58579 11.25 8C11.25 8.41421 11.5858 8.75 12 8.75C12.4142 8.75 12.75 8.41421 12.75 8C12.75 7.58579 12.4142 7.25 12 7.25Z" fill="currentColor"/>',IconCircleInfo._name="circle-info",IconCircleInfo._width=24,IconCircleInfo._height=24,IconCircleInfo._viewBox="0 0 24 24",IconCircleInfo=(0,_chunks_chunk_QTSIPXV3_js__WEBPACK_IMPORTED_MODULE_0__.Cc)([(0,_scoping_js__WEBPACK_IMPORTED_MODULE_2__.Y$)("gds-icon-circle-info")],IconCircleInfo)},"./libs/angular/src/v-angular/button/button.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{i:()=>ButtonStyle,C:()=>NggvButtonComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var NggvButtonComponent_1,ButtonStyle,button_componentngResource=__webpack_require__("./libs/angular/src/v-angular/button/button.component.scss?ngResource"),button_componentngResource_default=__webpack_require__.n(button_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),jsverse_transloco=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs"),base_control_value_accessor=__webpack_require__("./libs/angular/src/v-angular/base-control-value-accessor/index.ts");!function(ButtonStyle){ButtonStyle[ButtonStyle.Primary=0]="Primary",ButtonStyle[ButtonStyle.Secondary=1]="Secondary",ButtonStyle[ButtonStyle.Alternative=2]="Alternative",ButtonStyle[ButtonStyle.Delete=3]="Delete",ButtonStyle[ButtonStyle.DeleteConfirm=4]="DeleteConfirm",ButtonStyle[ButtonStyle.Ghost=5]="Ghost",ButtonStyle[ButtonStyle.GhostDark=6]="GhostDark",ButtonStyle[ButtonStyle.Link=7]="Link"}(ButtonStyle||(ButtonStyle={}));let NggvButtonComponent=class NggvButtonComponent extends base_control_value_accessor.E{static{NggvButtonComponent_1=this}constructor(ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.thook="button",this.type="button",this.buttonStyle="link"===this.type?ButtonStyle.Link:ButtonStyle.Primary,this.small=!1,this.external=!1,this.buttonClasses={},this.nggvClick=new core.EventEmitter}static buttonStyleClasses(type,small){return{small,primary:type===ButtonStyle.Primary||type===ButtonStyle.Delete,secondary:type===ButtonStyle.Secondary,tertiary:type===ButtonStyle.Alternative||type===ButtonStyle.Link,danger:type===ButtonStyle.Delete||type===ButtonStyle.DeleteConfirm,ghost:type===ButtonStyle.GhostDark,"ghost-light":type===ButtonStyle.Ghost}}ngOnInit(){super.ngOnInit(),this.href&&(this.external=/^\w+:\/\/.+$/.test(this.href)),this.buttonClasses=NggvButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small)}ngOnChanges(changes){(changes.buttonStyle||changes.small)&&(this.buttonClasses=NggvButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small))}onClick(event){this.disabled||this.nggvClick.emit(event)}static{this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ChangeDetectorRef}]}static{this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],type:[{type:core.Input}],buttonStyle:[{type:core.Input}],small:[{type:core.Input}],href:[{type:core.Input}],nggvClick:[{type:core.Output}]}}};NggvButtonComponent=NggvButtonComponent_1=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-button",template:'<button\n  #input\n  [ngClass]="buttonClasses"\n  [id]="id + \'-button\'"\n  [attr.name]="name"\n  [attr.value]="value"\n  [type]="type"\n  [autofocus]="autofocus"\n  [disabled]="disabled"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type !== \'link\'"\n>\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</button>\n\n<a\n  #input\n  [ngClass]="buttonClasses"\n  role="button"\n  [id]="id + \'-link\'"\n  [routerLink]="href"\n  [external]="external"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type === \'link\'"\n>\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</a>\n\n<ng-template #contentRef>\n  <ng-content></ng-content>\n</ng-template>\n',styles:[button_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],NggvButtonComponent)},"./libs/angular/src/v-angular/checkbox/checkbox.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{r:()=>NggvCheckboxComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var checkbox_componentngResource=__webpack_require__("./libs/angular/src/v-angular/checkbox/checkbox.component.scss?ngResource"),checkbox_componentngResource_default=__webpack_require__.n(checkbox_componentngResource),core=(__webpack_require__("./dist/libs/core/src/components/icon/icons/triangle-exclamation.js"),__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs")),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),jsverse_transloco=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs"),base_control_value_accessor=__webpack_require__("./libs/angular/src/v-angular/base-control-value-accessor/index.ts");let NggvCheckboxComponent=class NggvCheckboxComponent extends base_control_value_accessor.E{get isSmall(){return"small"===this.size}get isLarge(){return"large"===this.size}constructor(ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.thook="checkbox",this.size="large",this.optionalLabel="Optional",this.valueChange=new core.EventEmitter}onInputChange(event){event.stopPropagation(),this.disabled||(this.state=!this.state,this.onTouched(),this.onChange(this.state))}writeValue(value){super.writeValue(value===this.value)}registerOnChange(fn){this.onChange=checked=>{const output=checked?this.value:null;fn(output),this.valueChange.emit(output)}}static{this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ChangeDetectorRef}]}static{this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],isSmall:[{type:core.HostBinding,args:["class.small"]}],isLarge:[{type:core.HostBinding,args:["class.large"]}],size:[{type:core.Input}],optionalLabel:[{type:core.Input}],valueChange:[{type:core.Output}]}}};NggvCheckboxComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-checkbox",template:'\x3c!-- LOCKED INPUT --\x3e\n<div *ngIf="locked && state">\n  <div\n    [id]="id + \'-checkbox\'"\n    class="nggv-field--locked"\n    [attr.name]="name"\n    [attr.value]="value"\n  >\n    <ng-container *ngIf="!labelContentTpl">\n      {{ label }}\n    </ng-container>\n    <ng-template\n      *ngTemplateOutlet="labelContentTpl ?? null; context: { $implicit: value }"\n    ></ng-template>\n  </div>\n</div>\n\n\x3c!-- INPUT WRAPPER --\x3e\n<ng-container *ngIf="!locked">\n  <div>\n    \x3c!-- CHECKBOX FIELD --\x3e\n    <label\n      [id]="id + \'-label\'"\n      [attr.for]="id + \'-checkbox\'"\n      class="form-control"\n      *transloco="let t; read: scope"\n    >\n      <input\n        #input\n        type="checkbox"\n        [id]="id + \'-checkbox\'"\n        [attr.name]="name"\n        [attr.value]="value"\n        [attr.required]="required"\n        [disabled]="disabled"\n        [autofocus]="autofocus"\n        [attr.aria-label]="description"\n        [checked]="state"\n        (click)="$event.stopPropagation()"\n        (change)="onInputChange($event)"\n        (focus)="onFocus($event)"\n        (blur)="onBlur($event)"\n      />\n      \x3c!-- LABEL --\x3e\n      <ng-template\n        *ngTemplateOutlet="labelContentTpl || basicLabelContentTpl"\n      ></ng-template>\n      <ng-template #basicLabelContentTpl>\n        \x3c!-- to trigger css:empty if no label was added --\x3e\n        <ng-container *ngIf="label">\n          <span\n            *ngIf="\n              optional === true || (required !== true && optional !== false)\n            "\n            class="gds-field-label--optional"\n          >\n            ({{ t(\'label.optional\') }})\n          </span>\n          <span>{{ label }}</span>\n        </ng-container>\n      </ng-template>\n      <i></i>\n    </label>\n  </div>\n\n  \x3c!-- ERRORS --\x3e\n  <ng-container *transloco="let t; read: scope">\n    <div\n      class="form-info form-info--error"\n      [attr.for]="id + \'-checkbox\'"\n      *ngIf="invalid && (error || ngControl?.invalid)"\n    >\n      <span class="error-icon">\n        <gds-icon-triangle-exclamation\n          width="16"\n          height="16"\n          [solid]="true"\n          *nggCoreElement\n        ></gds-icon-triangle-exclamation>\n      </span>\n      <span\n        *ngIf="error; else errorsRef"\n        [attr.data-thook]="thook + \'-errorlabel\'"\n      >\n        {{ error }}\n      </span>\n      <ng-template #errorsRef>\n        <span\n          *ngIf="firstError as error"\n          [attr.data-thook]="thook + \'-errorlabel\'"\n        >\n          {{ t(\'error.field\' + error?.code, error?.params) }}\n        </span>\n      </ng-template>\n    </div>\n  </ng-container>\n\n  \x3c!-- CHILDREN --\x3e\n  <ng-content></ng-content>\n</ng-container>\n',styles:[checkbox_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],NggvCheckboxComponent)},"./libs/angular/src/v-angular/dropdown/typeahead/typeahead.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{d:()=>NggvTypeaheadDirective});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),lift=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),innerFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),identity=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js"),noop=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js"),args=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js");var input=__webpack_require__("./libs/angular/src/v-angular/input/index.ts"),dropdown_component=__webpack_require__("./libs/angular/src/v-angular/dropdown/dropdown.component.ts"),typeahead_dropdown_list_component=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead-dropdown-list/typeahead-dropdown-list.component.ts"),typeahead_input_component=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead-input/typeahead-input.component.ts");let NggvTypeaheadDirective=class NggvTypeaheadDirective{set nggvTypeahead(value){this.typeaheadFunction=value,this.inputSubscription$&&(this.inputSubscription$?.unsubscribe(),this.inputSubscription$=void 0,this.handleInputChanges())}onNggvInput(event){this.inputValue$.next(event)}get hostIsDropdown(){return!!this.hostDropdown}get defaultNullishOption(){return{key:null,label:this.unselectLabel||" "}}get emptyOption(){return{key:null,label:this.emptyOptionLabel||"label.nomatchingoptions",disabled:!0}}get localName(){return this.element.nativeElement.localName}constructor(viewContainerRef,element,hostDropdown,hostInput){this.viewContainerRef=viewContainerRef,this.element=element,this.hostDropdown=hostDropdown,this.hostInput=hostInput,this.allowUnselect=!0,this.filterPhraseChange=new core.EventEmitter,this.inputValue$=new Subject.B,this.onDestroy$=new Subject.B}ngOnInit(){this.handleInputChanges(),this.hostIsDropdown?this.createInput():this.createDropdownList()}ngOnDestroy(){this.onDestroy$.next(!0),this.onDestroy$.complete()}handleInputChanges(){this.inputSubscription$=this.inputValue$.pipe((0,takeUntil.Q)(this.onDestroy$),(0,distinctUntilChanged.F)(),(0,tap.M)((inputValue=>this.filterPhraseChange.emit(inputValue))),this.typeaheadFunction?this.typeaheadFunction:()=>(0,from.H)([]),function withLatestFrom(){for(var inputs=[],_i=0;_i<arguments.length;_i++)inputs[_i]=arguments[_i];var project=(0,args.ms)(inputs);return(0,lift.N)((function(source,subscriber){for(var len=inputs.length,otherValues=new Array(len),hasValue=inputs.map((function(){return!1})),ready=!1,_loop_1=function(i){(0,innerFrom.Tg)(inputs[i]).subscribe((0,OperatorSubscriber._)(subscriber,(function(value){otherValues[i]=value,ready||hasValue[i]||(hasValue[i]=!0,(ready=hasValue.every(identity.D))&&(hasValue=null))}),noop.l))},i=0;i<len;i++)_loop_1(i);source.subscribe((0,OperatorSubscriber._)(subscriber,(function(value){if(ready){var values=(0,tslib_es6.fX)([value],(0,tslib_es6.zs)(otherValues));subscriber.next(project?project.apply(void 0,(0,tslib_es6.fX)([],(0,tslib_es6.zs)(values))):values)}})))}))}(this.inputValue$)).subscribe((([filteredValues,input])=>this.setOptions(filteredValues,input))),this.inputValue$.next("")}createInput(){this.inputComponent=this.viewContainerRef.createComponent(typeahead_input_component.x),this.inputComponent.setInput("hostComponent",this.hostDropdown),this.inputComponent.setInput("selectedFormatter",this.selectedFormatter),this.inputComponent.setInput("resultFormatter",this.resultFormatter),this.inputComponent.instance.nggvInput.pipe((0,takeUntil.Q)(this.onDestroy$)).subscribe((inputValue=>this.inputValue$.next(inputValue)))}createDropdownList(){this.dropdownListComponent=this.viewContainerRef.createComponent(typeahead_dropdown_list_component.o),this.dropdownListComponent.setInput("hostComponent",this.hostInput)}setOptions(filteredValues,input){if(!filteredValues)return;const allowNullish=this.allowUnselect&&!input&&!(Object.keys(filteredValues[0]??{}).includes("key")&&null==filteredValues[0]?.key);if(0===filteredValues.length?filteredValues=[this.emptyOption]:allowNullish&&(filteredValues=[this.defaultNullishOption].concat(filteredValues)),this.hostIsDropdown)return this.hostDropdown.allowControlNullishOption=!1,this.hostDropdown.options=this.formatOptions(filteredValues),this.hostDropdown.textToHighlight=`${input||""}`,this.hostDropdown.onlyHandleDistinctChanges=!1,void this.hostDropdown.detectChanges();this.hostIsDropdown||(this.dropdownListComponent.setInput("options",this.formatOptions(filteredValues)),this.dropdownListComponent.setInput("textToHighlight",`${input||""}`))}formatOptions(options){return options?this.resultFormatter?options.map((value=>value?.label?this.resultFormatter?.(value):value)):options:[]}static{this.ctorParameters=()=>[{type:core.ViewContainerRef},{type:core.ElementRef},{type:dropdown_component.r,decorators:[{type:core.Optional},{type:core.Host}]},{type:input.o,decorators:[{type:core.Optional},{type:core.Host}]}]}static{this.propDecorators={nggvTypeahead:[{type:core.Input}],resultFormatter:[{type:core.Input}],selectedFormatter:[{type:core.Input}],allowUnselect:[{type:core.Input}],unselectLabel:[{type:core.Input}],emptyOptionLabel:[{type:core.Input}],filterPhraseChange:[{type:core.Output}],onNggvInput:[{type:core.HostListener,args:["nggvInput",["$event"]]}]}}};NggvTypeaheadDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"nggv-input[nggvTypeahead], nggv-dropdown[nggvTypeahead]",standalone:!0}),(0,tslib_es6.Sn)("design:paramtypes",[core.ViewContainerRef,core.ElementRef,dropdown_component.r,input.o])],NggvTypeaheadDirective)},"./libs/angular/src/v-angular/external-link/external-link.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>NggvExternalLinkDirective});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_router__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/router/fesm2022/router.mjs");let NggvExternalLinkDirective=class NggvExternalLinkDirective{constructor(link){this.link=link,this.external=!1}ngOnInit(){this.external&&(this.link.onClick=()=>(window.location.href=this.link.routerLink?.toString()||"",!1))}static{this.ctorParameters=()=>[{type:_angular_router__WEBPACK_IMPORTED_MODULE_0__.Wk}]}static{this.propDecorators={external:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}]}}};NggvExternalLinkDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({selector:"a[routerLink]"}),(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Sn)("design:paramtypes",[_angular_router__WEBPACK_IMPORTED_MODULE_0__.Wk])],NggvExternalLinkDirective)},"./libs/angular/src/v-angular/info-circle/info-circle.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{I:()=>NggvInfoCircleComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var info_circle_componentngResource=__webpack_require__("./libs/angular/src/v-angular/info-circle/info-circle.component.scss?ngResource"),info_circle_componentngResource_default=__webpack_require__.n(info_circle_componentngResource);__webpack_require__("./dist/libs/core/src/chunks/chunk.QTSIPXV3.js");__webpack_require__("./dist/libs/core/src/components/icon/icons/circle-info.component.js").w.define();var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let NggvInfoCircleComponent=class NggvInfoCircleComponent{constructor(){this.thook="info"}static{this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],info:[{type:core.Input}]}}};NggvInfoCircleComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-info-circle",template:'<svg [nggvTooltip]="info">\n  <path\n    d="M10.75 11H12L12 16.25M21.25 12C21.25 17.1086 17.1086 21.25 12 21.25C6.89137 21.25 2.75 17.1086 2.75 12C2.75 6.89137 6.89137 2.75 12 2.75C17.1086 2.75 21.25 6.89137 21.25 12Z"\n    stroke="currentColor"\n    stroke-width="1.5"\n    stroke-linecap="round"\n    stroke-linejoin="round"\n    fill="none"\n  />\n  <path\n    d="M11.375 8C11.375 8.34518 11.6548 8.625 12 8.625C12.3452 8.625 12.625 8.34518 12.625 8C12.625 7.65482 12.3452 7.375 12 7.375C11.6548 7.375 11.375 7.65482 11.375 8Z"\n    fill="currentColor"\n    stroke="currentColor"\n    stroke-width="0.25"\n  />\n</svg>\n',styles:[info_circle_componentngResource_default()]})],NggvInfoCircleComponent)},"./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{B:()=>debounceTime});var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),_util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function debounceTime(dueTime,scheduler){return void 0===scheduler&&(scheduler=_scheduler_async__WEBPACK_IMPORTED_MODULE_0__.E),(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.N)((function(source,subscriber){var activeTask=null,lastValue=null,lastTime=null,emit=function(){if(activeTask){activeTask.unsubscribe(),activeTask=null;var value=lastValue;lastValue=null,subscriber.next(value)}};function emitWhenIdle(){var targetTime=lastTime+dueTime,now=scheduler.now();if(now<targetTime)return activeTask=this.schedule(void 0,targetTime-now),void subscriber.add(activeTask);emit()}source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(value){lastValue=value,lastTime=scheduler.now(),activeTask||(activeTask=scheduler.schedule(emitWhenIdle,dueTime),subscriber.add(activeTask))}),(function(){emit(),subscriber.complete()}),void 0,(function(){lastValue=activeTask=null})))}))}},"./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{F:()=>distinctUntilChanged});var _util_identity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js"),_util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function distinctUntilChanged(comparator,keySelector){return void 0===keySelector&&(keySelector=_util_identity__WEBPACK_IMPORTED_MODULE_0__.D),comparator=null!=comparator?comparator:defaultCompare,(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.N)((function(source,subscriber){var previousKey,first=!0;source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(value){var currentKey=keySelector(value);!first&&comparator(previousKey,currentKey)||(first=!1,previousKey=currentKey,subscriber.next(value))})))}))}function defaultCompare(a,b){return a===b}},"./libs/angular/src/v-angular/input/input.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,WithCustomError:()=>WithCustomError,WithCustomErrorAndCountdown:()=>WithCustomErrorAndCountdown,WithCustomLabel:()=>WithCustomLabel,WithDisplayDisabledAsLocked:()=>WithDisplayDisabledAsLocked,WithFormControl:()=>WithFormControl,WithInputMask:()=>WithInputMask,WithLockedInput:()=>WithLockedInput,WithMaxLength:()=>WithMaxLength,WithPrefixAndOrSuffix:()=>WithPrefixAndOrSuffix,WithResetObservable:()=>WithResetObservable,WithTypeAhead:()=>WithTypeAhead,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./libs/angular/src/v-angular/core/core.globals.ts"),__webpack_require__("./dist/libs/core/src/components/icon/icons/triangle-exclamation.js");var _angular_common__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),_angular_router_testing__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__("./node_modules/@angular/router/fesm2022/testing.mjs"),_jsverse_transloco__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),rxjs__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),rxjs__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),rxjs__WEBPACK_IMPORTED_MODULE_27__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),rxjs__WEBPACK_IMPORTED_MODULE_28__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),rxjs__WEBPACK_IMPORTED_MODULE_29__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),_sebgroup_green_angular_src_lib_shared__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./libs/angular/src/lib/shared/index.ts"),_button_button_component__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./libs/angular/src/v-angular/button/button.component.ts"),_character_countdown_character_countdown_directive__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./libs/angular/src/v-angular/character-countdown/character-countdown.directive.ts"),_checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./libs/angular/src/v-angular/checkbox/checkbox.component.ts"),_core_core_utils__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./libs/angular/src/v-angular/core/core.utils.ts"),_dropdown_dropdown_list_dropdown_list_component__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./libs/angular/src/v-angular/dropdown/dropdown-list/dropdown-list.component.ts"),_dropdown_dropdown_component__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./libs/angular/src/v-angular/dropdown/dropdown.component.ts"),_dropdown_typeahead_typeahead_dropdown_list_typeahead_dropdown_list_component__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead-dropdown-list/typeahead-dropdown-list.component.ts"),_dropdown_typeahead_typeahead_highlight_typeahead_highlight_component__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead-highlight/typeahead-highlight.component.ts"),_dropdown_typeahead_typeahead_directive__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead.directive.ts"),_external_link_external_link_directive__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("./libs/angular/src/v-angular/external-link/external-link.directive.ts"),_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__("./libs/angular/src/v-angular/i18n/i18n.module.ts"),_info_circle_info_circle_component__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__("./libs/angular/src/v-angular/info-circle/info-circle.component.ts"),_input_mask__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__("./libs/angular/src/v-angular/input-mask/index.ts"),_tooltip_tooltip_directive__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__("./libs/angular/src/v-angular/tooltip/tooltip.directive.ts"),_input_component__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__("./libs/angular/src/v-angular/input/input.component.ts");let translocoServiceInstance;const __WEBPACK_DEFAULT_EXPORT__={title:"V-Angular/Input",component:_input_component__WEBPACK_IMPORTED_MODULE_18__.o,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_2__.applicationConfig)({providers:[(0,_angular_core__WEBPACK_IMPORTED_MODULE_20__.importProvidersFrom)(_i18n_i18n_module__WEBPACK_IMPORTED_MODULE_14__.R),{provide:_angular_core__WEBPACK_IMPORTED_MODULE_20__.APP_INITIALIZER,useFactory:function translocoStorybookInitializer(translocoService){return()=>{translocoServiceInstance=translocoService,translocoService.langChanges$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.F)()).subscribe()}},multi:!0,deps:[_jsverse_transloco__WEBPACK_IMPORTED_MODULE_21__.JO]},_core_core_utils__WEBPACK_IMPORTED_MODULE_7__.z]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_2__.moduleMetadata)({declarations:[_button_button_component__WEBPACK_IMPORTED_MODULE_4__.C,_dropdown_dropdown_component__WEBPACK_IMPORTED_MODULE_9__.r,_dropdown_dropdown_list_dropdown_list_component__WEBPACK_IMPORTED_MODULE_8__.b,_dropdown_typeahead_typeahead_dropdown_list_typeahead_dropdown_list_component__WEBPACK_IMPORTED_MODULE_10__.o,_dropdown_typeahead_typeahead_highlight_typeahead_highlight_component__WEBPACK_IMPORTED_MODULE_11__.X,_checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_6__.r,_tooltip_tooltip_directive__WEBPACK_IMPORTED_MODULE_17__.X,_info_circle_info_circle_component__WEBPACK_IMPORTED_MODULE_15__.I,_character_countdown_character_countdown_directive__WEBPACK_IMPORTED_MODULE_5__.q,_external_link_external_link_directive__WEBPACK_IMPORTED_MODULE_13__.z],imports:[_dropdown_typeahead_typeahead_directive__WEBPACK_IMPORTED_MODULE_12__.d,_angular_common__WEBPACK_IMPORTED_MODULE_22__.CommonModule,_angular_forms__WEBPACK_IMPORTED_MODULE_23__.X1,_angular_router_testing__WEBPACK_IMPORTED_MODULE_24__.c,_input_mask__WEBPACK_IMPORTED_MODULE_16__.xO.forRoot({inputSelector:"input",isAsync:!0}),_jsverse_transloco__WEBPACK_IMPORTED_MODULE_21__.Q8,_sebgroup_green_angular_src_lib_shared__WEBPACK_IMPORTED_MODULE_3__.$M],schemas:[_angular_core__WEBPACK_IMPORTED_MODULE_20__.CUSTOM_ELEMENTS_SCHEMA]})],argTypes:{size:{options:["large","small"],control:{type:"select",labels:{large:"Large",small:"Small"}}}}},Template=args=>({props:args}),TemplateWithFormControl=args=>{const ctrl=new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.hs(args.ngModel,[_angular_forms__WEBPACK_IMPORTED_MODULE_23__.k0.required,_angular_forms__WEBPACK_IMPORTED_MODULE_23__.k0.maxLength(12)]);ctrl.valueChanges.subscribe((val=>{console.log("input control value:",val),console.log({required:required()})}));const required=()=>{const error=ctrl.validator&&ctrl.validator({});return error&&error.required};return{template:'\n    <nggv-input\n      [label]="label"\n      [placeholder]="placeholder"\n      [description]="description"\n      [invalid]="invalid"\n      [valid]="valid"\n      [size]="size"\n      [required]="required"\n      [optional]="optional"\n      [locked]="locked"\n      [displayDisabledAsLocked]="displayDisabledAsLocked"\n      [formControl]="formControl">\n    </nggv-input>\n    <div style="margin-top: 1rem">\n      <button type="button" class="gds-button" (click)="disableFn()">Toggle disable control</button>\n    </div>\n    ',props:{...args,formControl:ctrl,disableFn:()=>{if(ctrl.disabled)return ctrl.enable();ctrl.disable()}}}},Primary=Template.bind({});Primary.args={label:"Field label",placeholder:"This is a placeholder value",ngModel:"textual value",description:"This is a field description",type:"text",autocomplete:"on",size:"large",required:void 0,optional:!1,disabled:!1,invalid:!1};const WithFormControl=TemplateWithFormControl.bind({});WithFormControl.args={...Primary.args,invalid:void 0,required:void 0,optional:void 0,valid:void 0};const TemplateWithError=args=>({props:{...args}}),WithCustomErrorAndCountdown=TemplateWithError.bind({});WithCustomErrorAndCountdown.args={...Primary.args,maxLength:25,showCharacterCountdown:!0,invalid:!0,error:"this is an error message"};const WithCustomError=TemplateWithError.bind({});WithCustomError.args={...Primary.args,invalid:!0,error:"Validation failed on server"};const WithCustomLabel=(args=>({template:'\n    <nggv-input [label]="label"\n      [disabled]="disabled"\n      [invalid]="invalid"\n      [size]="size"\n      [required]="required">\n      <ng-template #labelTpl>\n        My custom label template\n        <nggv-info-circle [info]="info"></nggv-info-circle>\n        <span>{{ text }}</span>\n      </ng-template>\n    </nggv-input>',props:args})).bind({});WithCustomLabel.args={...Primary.args,info:"Some info regarding the input maybe...",text:"And some more text"};const resetObservable$=new rxjs__WEBPACK_IMPORTED_MODULE_25__.c((subscriber=>{setInterval((()=>{subscriber.next()}),3e3)})),WithPrefixAndOrSuffix=(args=>({template:'\n  <h2>Prefix and/or suffix</h2>\n  <p>\n    Prefix and/or suffix demontrations with simple HTML-elements and with other components.\n  </p>\n  <hr>\n  <nggv-input label="Default"\n    type="text"\n    description="Default"\n    [size]="size"\n    [invalid]="invalid">\n  </nggv-input>\n  <nggv-input label="Prefix"\n    type="text"\n    description="Prefix with checkbox"\n    [size]="size"\n    [invalid]="invalid">\n    <nggv-checkbox\n      slot="prefix"\n      label="Selected"\n      [value]="true">\n    </nggv-checkbox>\n  </nggv-input>\n\n  <nggv-input label="Suffix"\n    type="text"\n    description="Suffix with simple text"\n    [size]="size"\n    [invalid]="invalid">\n    <label slot="suffix" class="suffix-prefix-padding">SEB</label>\n  </nggv-input>\n\n  <nggv-input label="Default (suffix)"\n    type="text"\n    description="Suffix (default placement) with button"\n    [size]="size"\n    [invalid]="invalid">\n    <nggv-button\n      class="suffix-prefix-padding"\n      [small]="true"\n      type="button">\n      SAVE\n    </nggv-button>\n  </nggv-input>\n\n  <nggv-input label="Large button with no padding (suffix)"\n  type="text"\n  description="Suffix (default placement) with button without padding"\n  [size]="size"\n  [invalid]="invalid">\n  <nggv-button\n  class="integrated-btn"\n    [small]="false"\n    type="button"\n    [buttonStyle]="2">\n    x\n  </nggv-button>\n</nggv-input>\n\n  <nggv-input label="Prefix and default (suffix)"\n    type="number"\n    description="Prefix with simple label and suffix (default) with dropdown"\n    [size]="size"\n    [invalid]="invalid">\n    <label slot="prefix" class="suffix-prefix-padding">Amount:</label>\n    <nggv-dropdown\n      placeholder="Currency"\n      [options]="[\n        { key: \'eur\', label: \'EUR\' },\n        { key: \'sek\', label: \'SEK\' },\n        { key: \'usd\', label: \'USD\' }\n      ]">\n    </nggv-dropdown>\n  </nggv-input>',props:args})).bind({});WithPrefixAndOrSuffix.args={...Primary.args,invalid:!1};const WithResetObservable=_args=>({template:'\n    <ng-container [formGroup]="formGroup">\n      <nggv-input label="Reset demo"\n        type="text"\n        formControlName="resetForm"\n        [description]="description"\n        [defaultValue]="defaultValue"\n        [reset]="resetObservable$"\n        [size]="size">\n      </nggv-input>\n    </ng-container>',props:{description:"I will reset every 3000ms",formGroup:new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.J3({resetForm:new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.hs("Annoying orange")}),resetObservable$}}),WithMaxLength=args=>{const formGroup=new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.J3({remittanceInformation:new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.hs("This is a test of handling if the text is longer than the max length input",_angular_forms__WEBPACK_IMPORTED_MODULE_23__.k0.maxLength(9))}),maxLength$=(0,rxjs__WEBPACK_IMPORTED_MODULE_26__.of)(10);formGroup.get("remittanceInformation")?.valueChanges.subscribe((val=>console.log(val)));return{template:'\n    <button (click)="show = !show">Toggle show/hide</button>\n    <button (click)="toggleLang()">Toggle lang</button>\n    <button (click)="setValue(\'another long value\')">Set form value</button>\n    <ng-container [formGroup]="formG">\n      <nggv-input *ngIf="show"\n        [label]="label"\n        [invalid]="invalid"\n        [maxLength]="maxLength$ | async"\n        [size]="size"\n        formControlName="remittanceInformation"\n        >\n        <ng-template #labelTpl>\n          My custom label template\n          <nggv-info-circle [info]="info"></nggv-info-circle>\n          <span>{{ text }}</span>\n        </ng-template>\n      </nggv-input>\n      <span>value: {{ formG.controls.remittanceInformation.value }}</span>\n    </ng-container>',props:{...args,description:"This is a field description",maxLength$,formG:formGroup,setValue:value=>formGroup.controls.remittanceInformation.setValue(value),toggleLang:()=>(()=>{const updateLang="sv"===translocoServiceInstance.getActiveLang()?"en":"sv";console.log("from:",translocoServiceInstance.getActiveLang(),"=>",updateLang),translocoServiceInstance.setActiveLang(updateLang)})(),show:!1}}};let dateFCValue="",emailFCValue="",currencyFCValue="",phoneFCValue="",licenseFCValue="",ipFCValue="";const WithInputMask=(args=>{const dateFC=new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.hs(dateFCValue,[_angular_forms__WEBPACK_IMPORTED_MODULE_23__.k0.required]),emailFC=new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.hs(emailFCValue),currencyFC=new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.hs(currencyFCValue),phoneFC=new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.hs(phoneFCValue),licenseFC=new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.hs(licenseFCValue),ipFC=new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.hs(ipFCValue),formGroup=new _angular_forms__WEBPACK_IMPORTED_MODULE_23__.J3({dateFC,emailFC,currencyFC,phoneFC,licenseFC,ipFC});dateFC?.valueChanges.subscribe((val=>dateFCValue=val)),emailFC?.valueChanges.subscribe((val=>emailFCValue=val)),currencyFC?.valueChanges.subscribe((val=>currencyFCValue=val)),phoneFC?.valueChanges.subscribe((val=>phoneFCValue=val)),licenseFC?.valueChanges.subscribe((val=>licenseFCValue=val)),ipFC?.valueChanges.subscribe((val=>ipFCValue=val));const dateInputMask=(0,_input_mask__WEBPACK_IMPORTED_MODULE_16__.Px)({alias:"datetime",inputFormat:"yyyy-mm-dd",parser:value=>{const values=value.split("-"),year=+values[0],month=+values[1]-1,day=+values[2];return new Date(year,month,day)}}),emailInputMask=(0,_input_mask__WEBPACK_IMPORTED_MODULE_16__.Px)({alias:"email"}),currencyInputMask=(0,_input_mask__WEBPACK_IMPORTED_MODULE_16__.Px)({alias:"numeric",groupSeparator:",",digits:2,digitsOptional:!1,prefix:"$ ",placeholder:"0",shortcuts:null}),phoneMask=(0,_input_mask__WEBPACK_IMPORTED_MODULE_16__.Px)("(999) 999-9999");return{template:'\n    <div class="container" [formGroup]="formGroup">\n      <div class="row">\n        <div class="column">\n          <h2>Date</h2>\n          <nggv-input\n            [inputMask]="dateInputMask"\n            formControlName="dateFC"\n            placeholder="yyyy-mm-dd"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.dateFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.dateFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.dateFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>E-mail</h2>\n          <nggv-input\n            [inputMask]="emailInputMask"\n            formControlName="emailFC"\n            placeholder="_@_._"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.emailFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.emailFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.emailFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>Currency</h2>\n          <nggv-input\n            [inputMask]="currencyInputMask"\n            formControlName="currencyFC"\n            placeholder="$ 0.00"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.currencyFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.currencyFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.currencyFC.errors | json }} </div>\n        </div>\n      </div>\n\n      <div class="row">\n        <div class="column">\n          <h2>Phone</h2>\n          <nggv-input\n            [inputMask]="phoneMask"\n            formControlName="phoneFC"\n            placeholder="(___) ___-____"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.phoneFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.phoneFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.phoneFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>License</h2>\n          <nggv-input\n            [inputMask]="licenseInputMask"\n            formControlName="licenseFC"\n            placeholder="___-___"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.licenseFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.licenseFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.licenseFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>IP address</h2>\n          <nggv-input\n            [inputMask]="ipAddressMask"\n            formControlName="ipFC"\n            placeholder="_._._._"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.ipFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.ipFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.ipFC.errors }} </div>\n        </div>\n      </div>\n    </div>\n    ',styles:['\n      * {\n        box-sizing: border-box;\n        width: 100%;\n      }\n\n      .column {\n        float: left;\n        width: 33.33%;\n        padding: 16px;\n        min-height: 150px;\n        max-height: 250px;\n      }\n\n      .row:after {\n        content: "";\n        display: table;\n        clear: both;\n      }\n    '],props:{formGroup,dateInputMask,emailInputMask,licenseInputMask:(0,_input_mask__WEBPACK_IMPORTED_MODULE_16__.Px)("[9-]AAA-999"),currencyInputMask,ipAddressMask:(0,_input_mask__WEBPACK_IMPORTED_MODULE_16__.Px)({alias:"ip"}),phoneMask,locked:args.locked}}}).bind({});WithInputMask.args={locked:!1};const WithLockedInput=Template.bind({});WithLockedInput.args={...Primary.args,locked:!0,description:void 0,label:"Bank charges"};const WithDisplayDisabledAsLocked=TemplateWithFormControl.bind({});WithDisplayDisabledAsLocked.args={...Primary.args,invalid:void 0,required:void 0,optional:void 0,valid:void 0,locked:!1,description:void 0,label:"Bank charges",displayDisabledAsLocked:!0};const WithTypeAhead=(args=>{const options=[{key:"hej",label:"Hej"},{key:"tja",label:"Tja"},{key:"hejsan",label:"Hejsan"},{key:"tjo",label:"Tjo"},{key:"tjena",label:"Tjena"}];return{template:'\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      \n    ',styles:["\n      nggv-dropdown-list {\n        width: 100%;\n      }\n    "],props:{...args,searchFunction:value$=>value$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_27__.B)(100),(0,rxjs__WEBPACK_IMPORTED_MODULE_28__.M)((x=>console.log("entered value in input: ",x))),(0,rxjs__WEBPACK_IMPORTED_MODULE_29__.T)((inputValue=>options.filter((option=>option.key.toUpperCase().includes(inputValue.toUpperCase())))))),selectedFormatter:value=>value.label.toUpperCase()}}}).bind({});WithTypeAhead.args={...Primary.args};const __namedExportsOrder=["Primary","WithFormControl","WithCustomErrorAndCountdown","WithCustomError","WithCustomLabel","WithPrefixAndOrSuffix","WithResetObservable","WithMaxLength","WithInputMask","WithLockedInput","WithDisplayDisabledAsLocked","WithTypeAhead"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: args\n})",...Primary.parameters?.docs?.source}}},WithFormControl.parameters={...WithFormControl.parameters,docs:{...WithFormControl.parameters?.docs,source:{originalSource:'(args: any) => {\n  const ctrl = new UntypedFormControl(args.ngModel, [Validators.required, Validators.maxLength(12)]);\n  ctrl.valueChanges.subscribe(val => {\n    console.log(\'input control value:\', val);\n    console.log({\n      required: required()\n    });\n  });\n  const toggleDisableField = () => {\n    if (ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  const required = () => {\n    const error = ctrl.validator && ctrl.validator(({} as AbstractControl));\n    return error && error.required;\n  };\n  return {\n    template: /*html*/`\n    <nggv-input\n      [label]="label"\n      [placeholder]="placeholder"\n      [description]="description"\n      [invalid]="invalid"\n      [valid]="valid"\n      [size]="size"\n      [required]="required"\n      [optional]="optional"\n      [locked]="locked"\n      [displayDisabledAsLocked]="displayDisabledAsLocked"\n      [formControl]="formControl">\n    </nggv-input>\n    <div style="margin-top: 1rem">\n      <button type="button" class="gds-button" (click)="disableFn()">Toggle disable control</button>\n    </div>\n    `,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithFormControl.parameters?.docs?.source}}},WithCustomErrorAndCountdown.parameters={...WithCustomErrorAndCountdown.parameters,docs:{...WithCustomErrorAndCountdown.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: {\n    ...args\n  }\n})",...WithCustomErrorAndCountdown.parameters?.docs?.source}}},WithCustomError.parameters={...WithCustomError.parameters,docs:{...WithCustomError.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: {\n    ...args\n  }\n})",...WithCustomError.parameters?.docs?.source}}},WithCustomLabel.parameters={...WithCustomLabel.parameters,docs:{...WithCustomLabel.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <nggv-input [label]="label"\n      [disabled]="disabled"\n      [invalid]="invalid"\n      [size]="size"\n      [required]="required">\n      <ng-template #labelTpl>\n        My custom label template\n        <nggv-info-circle [info]="info"></nggv-info-circle>\n        <span>{{ text }}</span>\n      </ng-template>\n    </nggv-input>`,\n  props: args\n})',...WithCustomLabel.parameters?.docs?.source}}},WithPrefixAndOrSuffix.parameters={...WithPrefixAndOrSuffix.parameters,docs:{...WithPrefixAndOrSuffix.parameters?.docs,source:{originalSource:'(args: NggvInputComponent & WithExtras & any) => ({\n  template: /*html*/`\n  <h2>Prefix and/or suffix</h2>\n  <p>\n    Prefix and/or suffix demontrations with simple HTML-elements and with other components.\n  </p>\n  <hr>\n  <nggv-input label="Default"\n    type="text"\n    description="Default"\n    [size]="size"\n    [invalid]="invalid">\n  </nggv-input>\n  <nggv-input label="Prefix"\n    type="text"\n    description="Prefix with checkbox"\n    [size]="size"\n    [invalid]="invalid">\n    <nggv-checkbox\n      slot="prefix"\n      label="Selected"\n      [value]="true">\n    </nggv-checkbox>\n  </nggv-input>\n\n  <nggv-input label="Suffix"\n    type="text"\n    description="Suffix with simple text"\n    [size]="size"\n    [invalid]="invalid">\n    <label slot="suffix" class="suffix-prefix-padding">SEB</label>\n  </nggv-input>\n\n  <nggv-input label="Default (suffix)"\n    type="text"\n    description="Suffix (default placement) with button"\n    [size]="size"\n    [invalid]="invalid">\n    <nggv-button\n      class="suffix-prefix-padding"\n      [small]="true"\n      type="button">\n      SAVE\n    </nggv-button>\n  </nggv-input>\n\n  <nggv-input label="Large button with no padding (suffix)"\n  type="text"\n  description="Suffix (default placement) with button without padding"\n  [size]="size"\n  [invalid]="invalid">\n  <nggv-button\n  class="integrated-btn"\n    [small]="false"\n    type="button"\n    [buttonStyle]="2">\n    x\n  </nggv-button>\n</nggv-input>\n\n  <nggv-input label="Prefix and default (suffix)"\n    type="number"\n    description="Prefix with simple label and suffix (default) with dropdown"\n    [size]="size"\n    [invalid]="invalid">\n    <label slot="prefix" class="suffix-prefix-padding">Amount:</label>\n    <nggv-dropdown\n      placeholder="Currency"\n      [options]="[\n        { key: \'eur\', label: \'EUR\' },\n        { key: \'sek\', label: \'SEK\' },\n        { key: \'usd\', label: \'USD\' }\n      ]">\n    </nggv-dropdown>\n  </nggv-input>`,\n  props: args\n})',...WithPrefixAndOrSuffix.parameters?.docs?.source}}},WithResetObservable.parameters={...WithResetObservable.parameters,docs:{...WithResetObservable.parameters?.docs,source:{originalSource:'(_args: NggvInputComponent & WithExtras & any) => {\n  const formGroup = new UntypedFormGroup({\n    resetForm: new UntypedFormControl(\'Annoying orange\')\n  });\n  return {\n    template: /*html*/`\n    <ng-container [formGroup]="formGroup">\n      <nggv-input label="Reset demo"\n        type="text"\n        formControlName="resetForm"\n        [description]="description"\n        [defaultValue]="defaultValue"\n        [reset]="resetObservable$"\n        [size]="size">\n      </nggv-input>\n    </ng-container>`,\n    props: {\n      description: `I will reset every ${resettime}ms`,\n      formGroup,\n      resetObservable$\n    }\n  };\n}',...WithResetObservable.parameters?.docs?.source}}},WithMaxLength.parameters={...WithMaxLength.parameters,docs:{...WithMaxLength.parameters?.docs,source:{originalSource:'(args: NggvInputComponent & WithExtras & any) => {\n  const formGroup = new UntypedFormGroup({\n    remittanceInformation: new UntypedFormControl(\'This is a test of handling if the text is longer than the max length input\', Validators.maxLength(9))\n  });\n  const maxLength$ = of(10);\n  formGroup.get(\'remittanceInformation\')?.valueChanges.subscribe(val => console.log(val));\n  const toggleLang = () => {\n    const updateLang = translocoServiceInstance.getActiveLang() === \'sv\' ? \'en\' : \'sv\';\n    console.log(\'from:\', translocoServiceInstance.getActiveLang(), \'=>\', updateLang);\n    translocoServiceInstance.setActiveLang(updateLang);\n  };\n  return {\n    template: /*html*/`\n    <button (click)="show = !show">Toggle show/hide</button>\n    <button (click)="toggleLang()">Toggle lang</button>\n    <button (click)="setValue(\'another long value\')">Set form value</button>\n    <ng-container [formGroup]="formG">\n      <nggv-input *ngIf="show"\n        [label]="label"\n        [invalid]="invalid"\n        [maxLength]="maxLength$ | async"\n        [size]="size"\n        formControlName="remittanceInformation"\n        >\n        <ng-template #labelTpl>\n          My custom label template\n          <nggv-info-circle [info]="info"></nggv-info-circle>\n          <span>{{ text }}</span>\n        </ng-template>\n      </nggv-input>\n      <span>value: {{ formG.controls.remittanceInformation.value }}</span>\n    </ng-container>`,\n    props: {\n      ...args,\n      description: \'This is a field description\',\n      maxLength$: maxLength$,\n      formG: formGroup,\n      setValue: (value: any) => formGroup.controls.remittanceInformation.setValue(value),\n      toggleLang: () => toggleLang(),\n      show: false\n    }\n  };\n}',...WithMaxLength.parameters?.docs?.source}}},WithInputMask.parameters={...WithInputMask.parameters,docs:{...WithInputMask.parameters?.docs,source:{originalSource:'(args: NggvInputComponent & WithExtras & any) => {\n  const dateFC = new UntypedFormControl(dateFCValue, [Validators.required]);\n  const emailFC = new UntypedFormControl(emailFCValue);\n  const currencyFC = new UntypedFormControl(currencyFCValue);\n  const phoneFC = new UntypedFormControl(phoneFCValue);\n  const licenseFC = new UntypedFormControl(licenseFCValue);\n  const ipFC = new UntypedFormControl(ipFCValue);\n  const formGroup = new UntypedFormGroup({\n    dateFC,\n    emailFC,\n    currencyFC,\n    phoneFC,\n    licenseFC,\n    ipFC\n  });\n  dateFC?.valueChanges.subscribe(val => dateFCValue = val);\n  emailFC?.valueChanges.subscribe(val => emailFCValue = val);\n  currencyFC?.valueChanges.subscribe(val => currencyFCValue = val);\n  phoneFC?.valueChanges.subscribe(val => phoneFCValue = val);\n  licenseFC?.valueChanges.subscribe(val => licenseFCValue = val);\n  ipFC?.valueChanges.subscribe(val => ipFCValue = val);\n  const dateInputMask = createMask<Date>({\n    alias: \'datetime\',\n    inputFormat: \'yyyy-mm-dd\',\n    parser: (value: string) => {\n      const values = value.split(\'-\');\n      const year = +values[0];\n      const month = +values[1] - 1;\n      const day = +values[2];\n      return new Date(year, month, day);\n    }\n  });\n  const emailInputMask = createMask({\n    alias: \'email\'\n  });\n  const currencyInputMask = createMask({\n    alias: \'numeric\',\n    groupSeparator: \',\',\n    digits: 2,\n    digitsOptional: false,\n    prefix: \'$ \',\n    placeholder: \'0\',\n    shortcuts: null\n  });\n  const phoneMask = createMask(\'(999) 999-9999\');\n  const licenseInputMask = createMask(\'[9-]AAA-999\');\n  const ipAddressMask = createMask({\n    alias: \'ip\'\n  });\n  return {\n    template: /*html*/`\n    <div class="container" [formGroup]="formGroup">\n      <div class="row">\n        <div class="column">\n          <h2>Date</h2>\n          <nggv-input\n            [inputMask]="dateInputMask"\n            formControlName="dateFC"\n            placeholder="yyyy-mm-dd"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.dateFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.dateFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.dateFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>E-mail</h2>\n          <nggv-input\n            [inputMask]="emailInputMask"\n            formControlName="emailFC"\n            placeholder="_@_._"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.emailFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.emailFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.emailFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>Currency</h2>\n          <nggv-input\n            [inputMask]="currencyInputMask"\n            formControlName="currencyFC"\n            placeholder="$ 0.00"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.currencyFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.currencyFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.currencyFC.errors | json }} </div>\n        </div>\n      </div>\n\n      <div class="row">\n        <div class="column">\n          <h2>Phone</h2>\n          <nggv-input\n            [inputMask]="phoneMask"\n            formControlName="phoneFC"\n            placeholder="(___) ___-____"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.phoneFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.phoneFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.phoneFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>License</h2>\n          <nggv-input\n            [inputMask]="licenseInputMask"\n            formControlName="licenseFC"\n            placeholder="___-___"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.licenseFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.licenseFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.licenseFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>IP address</h2>\n          <nggv-input\n            [inputMask]="ipAddressMask"\n            formControlName="ipFC"\n            placeholder="_._._._"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.ipFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.ipFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.ipFC.errors }} </div>\n        </div>\n      </div>\n    </div>\n    `,\n    styles: [/*css*/`\n      * {\n        box-sizing: border-box;\n        width: 100%;\n      }\n\n      .column {\n        float: left;\n        width: 33.33%;\n        padding: 16px;\n        min-height: 150px;\n        max-height: 250px;\n      }\n\n      .row:after {\n        content: "";\n        display: table;\n        clear: both;\n      }\n    `],\n    props: {\n      formGroup,\n      dateInputMask,\n      emailInputMask,\n      licenseInputMask,\n      currencyInputMask,\n      ipAddressMask,\n      phoneMask,\n      locked: args.locked\n    }\n  };\n}',...WithInputMask.parameters?.docs?.source}}},WithLockedInput.parameters={...WithLockedInput.parameters,docs:{...WithLockedInput.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: args\n})",...WithLockedInput.parameters?.docs?.source}}},WithDisplayDisabledAsLocked.parameters={...WithDisplayDisabledAsLocked.parameters,docs:{...WithDisplayDisabledAsLocked.parameters?.docs,source:{originalSource:'(args: any) => {\n  const ctrl = new UntypedFormControl(args.ngModel, [Validators.required, Validators.maxLength(12)]);\n  ctrl.valueChanges.subscribe(val => {\n    console.log(\'input control value:\', val);\n    console.log({\n      required: required()\n    });\n  });\n  const toggleDisableField = () => {\n    if (ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  const required = () => {\n    const error = ctrl.validator && ctrl.validator(({} as AbstractControl));\n    return error && error.required;\n  };\n  return {\n    template: /*html*/`\n    <nggv-input\n      [label]="label"\n      [placeholder]="placeholder"\n      [description]="description"\n      [invalid]="invalid"\n      [valid]="valid"\n      [size]="size"\n      [required]="required"\n      [optional]="optional"\n      [locked]="locked"\n      [displayDisabledAsLocked]="displayDisabledAsLocked"\n      [formControl]="formControl">\n    </nggv-input>\n    <div style="margin-top: 1rem">\n      <button type="button" class="gds-button" (click)="disableFn()">Toggle disable control</button>\n    </div>\n    `,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithDisplayDisabledAsLocked.parameters?.docs?.source}}},WithTypeAhead.parameters={...WithTypeAhead.parameters,docs:{...WithTypeAhead.parameters?.docs,source:{originalSource:'(args: any) => {\n  const options = [{\n    key: \'hej\',\n    label: \'Hej\'\n  }, {\n    key: \'tja\',\n    label: \'Tja\'\n  }, {\n    key: \'hejsan\',\n    label: \'Hejsan\'\n  }, {\n    key: \'tjo\',\n    label: \'Tjo\'\n  }, {\n    key: \'tjena\',\n    label: \'Tjena\'\n  }];\n  const searchFunction = (value$: Observable<string>) => value$.pipe(debounceTime(100), tap(x => console.log(\'entered value in input: \', x)), map(inputValue => options.filter(option => option.key.toUpperCase().includes(inputValue.toUpperCase()))));\n  return {\n    template: /*html*/`\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [size]="size"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n      \n    `,\n    styles: [/*css*/`\n      nggv-dropdown-list {\n        width: 100%;\n      }\n    `],\n    props: {\n      ...args,\n      searchFunction: searchFunction,\n      selectedFormatter: (value: {\n        key: string;\n        label: string;\n      }) => value.label.toUpperCase()\n    }\n  };\n}',...WithTypeAhead.parameters?.docs?.source}}}}}]);