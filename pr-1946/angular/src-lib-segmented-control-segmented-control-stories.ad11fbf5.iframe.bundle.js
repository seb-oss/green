"use strict";(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[3297],{"./libs/angular/src/lib/segmented-control/segmented-control.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WithRouter:()=>WithRouter,__namedExportsOrder:()=>__namedExportsOrder,default:()=>segmented_control_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),router=__webpack_require__("./node_modules/@angular/router/fesm2022/router.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js");let NggSegmentedControlComponent=class NggSegmentedControlComponent{static{this.propDecorators={$controls:[{type:core.Input}]}}};NggSegmentedControlComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngg-segmented-control",template:'\n    <div class="group">\n      <a\n        *ngFor="let control of $controls | async"\n        [routerLink]="control.url"\n        routerLinkActive="active"\n        class="button"\n        >{{ control.text }}</a\n      >\n    </div>\n  ',changeDetection:core.ChangeDetectionStrategy.OnPush})],NggSegmentedControlComponent);let OptionAComponent=class OptionAComponent{};OptionAComponent=(0,tslib_es6.Cg)([(0,core.Component)({template:' <p class="mt-4">Option A</p> '})],OptionAComponent);let OptionBComponent=class OptionBComponent{};OptionBComponent=(0,tslib_es6.Cg)([(0,core.Component)({template:' <p class="mt-4">Option B</p> '})],OptionBComponent);const segmented_control_stories={title:"Components/Segmented control",component:NggSegmentedControlComponent,parameters:{componentIds:["component-segmented-control"]},decorators:[(0,dist.moduleMetadata)({declarations:[OptionAComponent,OptionBComponent],imports:[common.CommonModule]}),(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(router.iI.forRoot([]))]}),(0,dist.componentWrapperDecorator)((story=>`${story}<router-outlet></router-outlet>`))]},WithRouter=()=>({props:{$controls:(0,of.of)([{text:"Option A",url:"/option-a"},{text:"Option B",url:"/option-b"}])}}),__namedExportsOrder=["WithRouter"];WithRouter.parameters={...WithRouter.parameters,docs:{...WithRouter.parameters?.docs,source:{originalSource:"() => ({\n  props: {\n    $controls: of([{\n      text: 'Option A',\n      url: '/option-a'\n    }, {\n      text: 'Option B',\n      url: '/option-b'\n    }])\n  }\n})",...WithRouter.parameters?.docs?.source}}}}}]);