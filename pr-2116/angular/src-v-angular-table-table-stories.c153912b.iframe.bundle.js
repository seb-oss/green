(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[2819],{"./libs/angular/src/v-angular/table/table.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/**\n * Do not edit directly\n * Generated on Thu, 06 Feb 2025 18:59:50 GMT\n */\n/* stylelint-disable max-nesting-depth */\n/**\n * Assert that a map is in ascending order\n * @mixin assert-ascending\n * @param {Map} $map - The map to check\n * @param {String} $map-name - The name of the map\n */\n/**\n * Assert that the first breakpoint in a map starts at zero\n * @mixin assert-starts-at-zero\n * @param {Map} $map - The map to check\n * @param {String} $map-name - The name of the map\n */\n/**\n * Check if a value is important\n * @function is-important\n * @param {Boolean} $important - Whether the value is important\n * @return {String} - \"!important\" if true, otherwise an empty string\n */\n/**\n * Replace a substring in a string\n * @function str-replace\n * @param {String} $string - The original string\n * @param {String} $search - The substring to replace\n * @param {String} $replace - The replacement string\n * @return {String} - The updated string\n */\n/**\n * Convert a map to its negative variant\n * @function negativify-map\n * @param {Map} $map - The map to convert\n * @return {Map} - The negative variant of the map\n */\n/**\n * Generate utility classes\n * @mixin generate-utility\n * @param {Map} $utility - Utility map\n * @param {String} $infix - Infix for class names\n * @param {Boolean} $is-rfs-media-query - Whether to use RFS media query\n */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * @function luminance\n * @param {Color} $color - The color to calculate luminance for\n * @return {Number} - The luminance value\n */\n/**\n * Calculate the contrast ratio between two colors.\n * @function color-contrast\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @return {Number} - The contrast ratio\n */\n/**\n * Remove the unit of a length\n * @function strip-unit\n * @param {Number} $number - Number to remove unit from\n * @return {Number} - Unitless number\n */\n/**\n * Validate font size\n * @function validate-font-size\n * @param {Number} $size - Font size to validate\n * @return {Number} - Validated font size in pixels\n */\n/**\n * Get ratio for WCAG level\n * @function get-ratio\n * @param {String} $level - WCAG level\n * @param {Number} $size - Font size\n * @param {Boolean} $bold - Is bold\n * @param {Boolean} $graphic - Is graphic\n * @return {Number} - Ratio value\n */\n/**\n * Determine if a color is light or dark\n * @function light-or-dark\n * @param {Color} $color - The color to check\n * @return {String} - \"light\" or \"dark\"\n */\n/**\n * Get the most legible color (black or white) for a given background color\n * @function most-legible-color\n * @param {Color} $color - The background color\n * @return {Color} - The most legible color\n */\n/**\n * Get the desired color combination for foreground and background colors\n * @function desired-color-combination\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Number} $offsetThreshold - Offset threshold\n * @param {Number} $ratio - Contrast ratio\n * @return {List} - List containing background and foreground colors\n */\n/**\n * @mixin desired-color-combination\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Number} $offsetThreshold - Offset threshold\n * @param {Number} $ratio - Contrast ratio\n */\n/**\n * Get an accessible color for a given foreground and background color\n * @function a11y-color\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {String} $level - WCAG level\n * @param {Number} $size - Font size\n * @param {Boolean} $bold - Is bold\n * @param {Boolean} $graphic - Is graphic\n * @param {Number} $maxOffset - Maximum offset\n * @param {Boolean} $darkMode - Is dark mode\n * @param {Number} $ratio - Contrast ratio\n * @return {Color} - Accessible color\n */\n/**\n * Get the maximum contrast color\n * @function max-contrast\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Color} $max - Maximum contrast color\n * @return {Color} - Maximum contrast color\n */\n/**\n * Get the RGB values of a color as a string\n * @function stripped-rgb\n * @param {Color} $color - The color\n * @return {String} - RGB values as a string\n */\n/**\n * Get the HSL values of a color as a string\n * @function stripped-hsl\n * @param {Color} $color - The color\n * @return {String} - HSL values as a string\n */\n/**\n * Convert a map of colors to a map of HSL values\n * @function hsl-map\n * @param {Map} $colors - Map of colors\n * @return {Map} - Map of HSL values\n */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/**\n * Breakpoint viewport sizes and media queries.\n *\n * Breakpoints are defined as a map of (name: minimum width), order from small to large:\n *\n *    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n *\n * The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n */\n/**\n * Name of the next breakpoint, or null for the last breakpoint.\n *\n *    >> breakpoint-next(sm)\n *    md\n *    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    md\n *    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n *    md\n */\n/**\n * Minimum breakpoint width. Null for the smallest (first) breakpoint.\n *\n *    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    576px\n */\n/**\n * Maximum breakpoint width.\n * The maximum value is reduced by 0.02px to work around the limitations of\n * `min-` and `max-` prefixes and viewports with fractional widths.\n * See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n * Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n * See https://bugs.webkit.org/show_bug.cgi?id=178261\n *\n *    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    767.98px\n */\n/**\n * Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n * Useful for making responsive utilities.\n *\n *    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    \"\"  (Returns a blank string)\n *    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    \"-sm\"\n */\n/**\n * Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n * Makes the @content apply to the given breakpoint and wider.\n */\n/**\n * Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n * Makes the @content apply to the given breakpoint and narrower.\n */\n/**\n * Media that spans multiple breakpoint widths.\n * Makes the @content apply between the min and max breakpoints\n */\n/**\n * Media between the breakpoint's minimum and maximum widths.\n * No minimum for the smallest breakpoint, and no maximum for the largest one.\n * Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n */\n/**\n * @mixin add-form\n * Base style for forms\n */\n/**\n * @mixin horizontal-layout\n * Horizontal layout for forms\n */\n/**\n * @mixin add-form-control\n * Label for checkboxes and radio buttons\n */\n/**\n * @mixin add-form-group\n * Form group\n */\n/**\n * @mixin add-form-item\n * Form item\n */\n/**\n * @mixin add-form-text\n * Form text\n */\n/**\n * @mixin add-label\n */\n/**\n * @mixin add-form-info\n */\n:host {\n  --gds-sys-color-blue: #41b0ee;\n  --gds-sys-color-dark-blue-1: #0092e1;\n  --gds-sys-color-dark-blue-2: #007ac7;\n  --gds-sys-color-green: #60cd18;\n  --gds-sys-color-dark-green-1: #45b400;\n  --gds-sys-color-dark-green-2: #308800;\n  --gds-sys-color-yellow: #ffc500;\n  --gds-sys-color-dark-yellow-1: #ffb400;\n  --gds-sys-color-dark-yellow-2: #f8a000;\n  --gds-sys-color-text-primary: #333333;\n  --gds-sys-color-text-secondary: #ababab;\n  --gds-sys-color-text-white: #ffffff;\n  --gds-sys-color-text-black: #333333;\n  --gds-sys-color-text-inverted: #ffffff;\n  --gds-sys-color-text-link: #0062bc;\n  --gds-sys-color-text-error: #9f000a;\n  --gds-sys-color-text-disabled: #adadad;\n  --gds-sys-color-red: #f03529;\n  --gds-sys-color-dark-red-1: #d81a1a;\n  --gds-sys-color-dark-red-2: #bb000c;\n  --gds-sys-color-purple: #673ab6;\n  --gds-sys-color-dark-purple-1: #4f2C99;\n  --gds-sys-color-dark-purple-2: #3f2587;\n  --gds-sys-color-white: #ffffff;\n  --gds-sys-color-black: #000000;\n  --gds-sys-color-background-primary: #ffffff;\n  --gds-sys-color-background-secondary: #eeeeee;\n  --gds-sys-color-base-100: #f8f8f8;\n  --gds-sys-color-base-200: #e9e9e9;\n  --gds-sys-color-base-300: #dedede;\n  --gds-sys-color-base-400: #cecece;\n  --gds-sys-color-base-500: #adadad;\n  --gds-sys-color-base-600: #868686;\n  --gds-sys-color-base-700: #494949;\n  --gds-sys-color-base-800: #333333;\n  --gds-sys-color-base-900: #1a1a1a;\n  --gds-sys-color-hover-10: rgba(255, 255, 255, 0.1);\n  --gds-sys-color-hover-20: rgba(255, 255, 255, 0.2);\n  --gds-sys-shape-corner-none: 0;\n  --gds-sys-shape-corner-small: 0.125rem;\n  --gds-sys-shape-corner-medium: 0.25rem;\n  --gds-sys-shape-corner-round: 50%;\n}\n\n::ng-deep .gds-table {\n  border-collapse: collapse;\n  border-bottom: 1px solid var(--gds-sys-color-base-600);\n  width: 100%;\n  border-bottom: none;\n  /**\n   * Hide the browser's default checkbox\n   */\n  /**\n   * Add focus to form-control field\n   */\n  /**\n   * Style for custom checkbox\n   */\n  /**\n   * Invalid state\n   */\n  /**\n   * Disabled state\n   */\n}\n::ng-deep .gds-table thead tr th {\n  border-top: 1px solid var(--gds-sys-color-base-600);\n  background: var(--gds-sys-color-base-800);\n  color: var(--gds-sys-color-background-primary);\n  padding: 0.3rem 0.5rem;\n  text-align: left;\n  font-weight: 500;\n}\n::ng-deep .gds-table thead tr th.icon-invert.gds-sortable .gds-table-sort::after {\n  margin-left: 0;\n  margin-right: 0.3rem;\n  order: -1;\n}\n::ng-deep .gds-table thead tr th .gds-table-sort {\n  color: inherit;\n  width: 100%;\n  text-align: left;\n  display: flex;\n  align-items: center;\n  border-radius: 0.125rem;\n  --gds-sys-color-focus-outline: var(\n    --gds-sys-color-background-primary\n  );\n}\n::ng-deep .gds-table thead tr th .gds-table-sort:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n::ng-deep .gds-table thead tr th .gds-table-sort:focus, ::ng-deep .gds-table thead tr th .gds-table-sort:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n::ng-deep .gds-table thead tr th[aria-sort] .gds-table-sort::after, ::ng-deep .gds-table thead tr th.gds-sortable .gds-table-sort::after {\n  content: \"\";\n  background: var(--gds-sys-color-base-500);\n  mask-image: url(\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20width='12'%20height='12'%20viewBox='0%200%2012%2012'%20fill='none'%3E%3Cpath%20d='M11.107%205.86147L10.6429%205.39741C10.5328%205.28726%2010.3546%205.28726%2010.2445%205.39741L6.60933%209.03257V1.03101C6.60933%200.876318%206.48276%200.749756%206.32808%200.749756H5.67183C5.51714%200.749756%205.39058%200.876318%205.39058%201.03101V9.03257L1.75542%205.39741C1.64526%205.28726%201.46714%205.28726%201.35698%205.39741L0.89292%205.86147C0.782764%205.97163%200.782764%206.14976%200.89292%206.25991L5.80073%2011.1677C5.91089%2011.2779%206.08901%2011.2779%206.19917%2011.1677L11.107%206.25991C11.2171%206.14976%2011.2171%205.97163%2011.107%205.86147Z'%20fill='%23ADADAD'/%3E%3C/svg%3E\");\n  mask-repeat: no-repeat;\n  mask-position: right;\n  width: 12px;\n  height: 12px;\n  margin-left: 0.3rem;\n}\n::ng-deep .gds-table thead tr th[aria-sort=ascending] .gds-table-sort::after {\n  background: var(--gds-sys-color-text-inverted);\n  transform: rotate(180deg);\n}\n::ng-deep .gds-table thead tr th[aria-sort=descending] .gds-table-sort::after {\n  background: var(--gds-sys-color-text-inverted);\n}\n::ng-deep .gds-table tbody tr td,\n::ng-deep .gds-table tbody tr th {\n  border-top: 1px solid var(--gds-sys-color-base-600);\n  padding: 0.6875rem 0.5rem;\n  vertical-align: top;\n}\n::ng-deep .gds-table tbody tr.collapsible ~ .sub-row {\n  display: none;\n}\n::ng-deep .gds-table tbody tr.collapsible.expanded ~ .sub-row.show {\n  display: table-row;\n}\n::ng-deep .gds-table tbody tr td.collapse-control, ::ng-deep .gds-table tbody tr td.select-control {\n  width: 15px;\n}\n::ng-deep .gds-table tbody tr td.collapse-control > .collapse-btn {\n  min-height: unset;\n  padding: 0;\n  background: transparent;\n}\n::ng-deep .gds-table tbody tr td.collapse-control > .collapse-btn > .icon-holder {\n  cursor: pointer;\n  width: 12px;\n}\n::ng-deep .gds-table tbody tr td.collapse-control > .collapse-btn > .icon-holder svg {\n  width: 12px;\n  fill: var(--gds-sys-color-text-primary);\n}\n::ng-deep .gds-table tbody tr td.collapse-control > .collapse-btn > .icon-holder svg[name=angle-right] {\n  width: 9px;\n}\n@media (max-width: 35.98em) {\n  ::ng-deep .gds-table.table-mobile {\n    width: 100%;\n    table-layout: fixed;\n    border-bottom: none;\n  }\n  ::ng-deep .gds-table.table-mobile thead {\n    position: sticky;\n    top: 0;\n    display: block;\n    background: var(--gds-sys-color-base-800);\n  }\n}\n@media (max-width: 35.98em) and (hover: none) and (pointer: coarse) {\n  ::ng-deep .gds-table.table-mobile thead {\n    display: table-header-group;\n  }\n}\n@media (max-width: 35.98em) {\n  ::ng-deep .gds-table.table-mobile thead tr {\n    display: flex;\n    overflow: auto;\n  }\n  ::ng-deep .gds-table.table-mobile thead tr::-webkit-scrollbar {\n    display: none;\n  }\n  ::ng-deep .gds-table.table-mobile thead tr th {\n    flex: auto;\n    text-align: left !important;\n    white-space: nowrap;\n  }\n  ::ng-deep .gds-table.table-mobile tbody tr {\n    display: flex;\n    flex-direction: column;\n    border-bottom: 1px solid var(--gds-sys-color-base-600);\n  }\n  ::ng-deep .gds-table.table-mobile tbody tr td {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-top: none !important;\n  }\n  ::ng-deep .gds-table.table-mobile tbody tr td::before {\n    content: attr(data-label);\n    font-weight: bold;\n  }\n}\n::ng-deep .gds-table .web-view {\n  display: table-cell;\n}\n::ng-deep .gds-table .mobile-view {\n  display: none;\n}\n::ng-deep .gds-table tr:hover td {\n  background-color: var(--gds-sys-color-base-100);\n}\n::ng-deep .gds-table .gds-table__numeric-col {\n  text-align: right;\n}\n::ng-deep .gds-table thead tr th.gds-table__numeric-col .gds-table-sort {\n  justify-content: end;\n}\n::ng-deep .gds-table th button {\n  background-color: rgba(0, 0, 0, 0);\n  border: 0;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  padding: 0;\n  cursor: pointer;\n}\n::ng-deep .gds-table tbody {\n  border-bottom: var(--sg-table-border-width) solid var(--sg-table-border-color);\n}\n::ng-deep .gds-table td {\n  cursor: pointer;\n}\n::ng-deep .gds-table tfoot {\n  border-top: 1px solid;\n  border-bottom: none;\n  font-weight: var(--sg-table-row-expand-font-weight, 500);\n}\n::ng-deep .gds-table tfoot ::ng-deep td {\n  padding: 0.6875rem 0.5rem;\n}\n::ng-deep .gds-table th.column__check {\n  height: vanilla-px-to-rem(32px);\n  width: vanilla-px-to-rem(40px);\n}\n::ng-deep .gds-table th.column__check div {\n  min-height: 100%;\n}\n::ng-deep .gds-table th.column__check input:checked + label::after {\n  top: 0.6rem;\n  display: inline;\n}\n::ng-deep .gds-table th.column__check label {\n  display: inline;\n  padding: 0;\n}\n::ng-deep .gds-table th.column__check label::before {\n  top: 0.55rem;\n}\n::ng-deep .gds-table td.column__check {\n  width: vanilla-px-to-rem(40px);\n}\n::ng-deep .gds-table td.column__check div {\n  min-height: unset;\n}\n::ng-deep .gds-table td.column__check label {\n  padding: 0;\n}\n::ng-deep .gds-table td.column__check label::before {\n  margin: 0;\n}\n::ng-deep .gds-table tr.row__expand {\n  background-color: var(--gds-sys-color-base-100);\n}\n::ng-deep .gds-table tr.row__expand .gds-item-field-wrap {\n  display: flex;\n  flex-wrap: nowrap;\n}\n::ng-deep .gds-table tr.row__expand .gds-item-field-wrap.no-sub-items {\n  padding-left: 1.5rem;\n}\n::ng-deep .gds-table tr.row__expand .gds-item-field-wrap .chevron-field {\n  width: 1.5rem;\n}\n::ng-deep .gds-table tr.row__expand .gds-item-field-wrap .chevron-field svg {\n  transition: transform 0.3s ease;\n}\n::ng-deep .gds-table tr.row__expand .gds-item-field-wrap .chevron-field[aria-expanded=true] svg {\n  transform: rotate(-180deg);\n}\n::ng-deep .gds-table tr.row__expand .gds-item-field-wrap .gds-item-field-text {\n  padding-left: 0.2rem;\n}\n::ng-deep .gds-table tr.row__expand .gds-item-field-wrap .gds-item-field-text .gds-item-field-extra-label {\n  font-weight: var(--sg-table-row-expand-font-weight-light, 400);\n}\n::ng-deep .gds-table tr.row__expand td {\n  font-weight: var(--sg-table-row-expand-font-weight, 500);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox] {\n  cursor: pointer;\n  height: 0;\n  opacity: 0;\n  position: absolute;\n  width: 0;\n  z-index: -1;\n}\n::ng-deep .gds-table label.gds-form-control {\n  align-items: flex-start;\n}\n::ng-deep .gds-table label.gds-form-control:has(input[type=checkbox]) {\n  padding: 0.6875rem 1rem 0.5625rem;\n}\n::ng-deep .gds-table label.gds-form-control:has(input[type=checkbox]:focus-visible):focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n::ng-deep .gds-table label.gds-form-control:has(input[type=checkbox]:focus-visible):focus, ::ng-deep .gds-table label.gds-form-control:has(input[type=checkbox]:focus-visible):focus-within {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox] ~ i {\n  margin-right: 0.75rem;\n  margin-top: 0.0625rem;\n  flex-shrink: 0;\n  box-shadow: inset 0 0 0 1px var(--gds-sys-color-text-primary);\n  position: relative;\n  border-radius: var(--gds-sys-shape-corner-small);\n  background-color: transparent;\n  flex: 0 0 auto;\n  height: 1rem;\n  width: 1rem;\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:not(:checked):focus-visible ~ i {\n  box-shadow: inset 0 0 0 1px var(--gds-sys-color-base-900);\n}\n::ng-deep .gds-table label.gds-form-control:hover input[type=checkbox]:not(.disabled, :disabled, :checked, :indeterminate) ~ i {\n  background-color: var(--gds-sys-color-base-200);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:checked ~ i {\n  background-color: var(--gds-sys-color-base-900);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:indeterminate ~ i {\n  background-color: var(--gds-sys-color-base-900);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:indeterminate ~ i::after {\n  border-bottom: 2px solid var(--gds-sys-color-background-primary);\n  box-sizing: border-box;\n  border-left: none;\n  transform: scale(1) rotate(0deg);\n  opacity: 1;\n}\n::ng-deep .gds-table label.gds-form-control:has(input[type=checkbox].is-invalid) {\n  border: 0.0625rem solid var(--gds-sys-color-text-error);\n  margin-bottom: 0.5rem;\n}\n::ng-deep .gds-table .is-invalid label.gds-form-control:has(input[type=checkbox].is-invalid) {\n  border: none;\n  margin: 0;\n}\n@supports (-moz-appearance: none) {\n  ::ng-deep .gds-table label.gds-form-control.is-invalid {\n    border: 0.0625rem solid var(--gds-sys-color-text-error);\n    margin-bottom: 0.5rem;\n  }\n  ::ng-deep .gds-table .is-invalid label.gds-form-control.is-invalid {\n    border: none;\n    margin: 0;\n  }\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:disabled ~ i,\n::ng-deep .gds-table label.gds-form-control input[type=checkbox].disabled ~ i {\n  background: var(--gds-sys-color-base-300) !important;\n  border-color: var(--gds-sys-color-text-disabled) !important;\n  cursor: not-allowed;\n  box-shadow: inset 0 0 0 1px var(--border-disabled-color);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:disabled ~ i::placeholder,\n::ng-deep .gds-table label.gds-form-control input[type=checkbox].disabled ~ i::placeholder {\n  color: var(--gds-sys-color-text-disabled);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:disabled:checked ~ i,\n::ng-deep .gds-table label.gds-form-control input[type=checkbox].disabled:checked ~ i {\n  background: var(--gds-sys-color-base-300) !important;\n  border-color: var(--gds-sys-color-text-disabled) !important;\n  cursor: not-allowed;\n  box-shadow: inset 0 0 0 1px var(--border-disabled-color);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:disabled:checked ~ i::placeholder,\n::ng-deep .gds-table label.gds-form-control input[type=checkbox].disabled:checked ~ i::placeholder {\n  color: var(--gds-sys-color-text-disabled);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:disabled:checked ~ i:after,\n::ng-deep .gds-table label.gds-form-control input[type=checkbox].disabled:checked ~ i:after {\n  border-color: var(--border-disabled-color);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:disabled ~ span,\n::ng-deep .gds-table label.gds-form-control input[type=checkbox].disabled ~ span {\n  color: var(--gds-sys-color-text-disabled) !important;\n  cursor: not-allowed;\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:disabled ~ span::placeholder,\n::ng-deep .gds-table label.gds-form-control input[type=checkbox].disabled ~ span::placeholder {\n  color: var(--gds-sys-color-text-disabled);\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox] ~ i::after {\n  box-sizing: border-box;\n  content: \"\";\n  opacity: 0;\n  position: absolute;\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox] ~ i::after {\n  border-bottom: 3px solid var(--gds-sys-color-text-inverted);\n  border-left: 3px solid var(--gds-sys-color-text-inverted);\n  height: 0.5rem;\n  width: 1rem;\n  left: 0;\n  top: 0.1875rem;\n  transform: scale(0.601) rotate(-45deg);\n  transform-origin: center;\n}\n::ng-deep .gds-table label.gds-form-control input[type=checkbox]:checked ~ i::after {\n  opacity: 1;\n}\n::ng-deep .gds-table .gds-field-checkbox-wrap .gds-form-control:has(input[type=checkbox]) {\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  border: 1px solid transparent;\n  border-radius: var(--gds-sys-shape-corner-medium);\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row-reverse;\n  font: inherit;\n  justify-content: flex-end;\n  position: relative;\n  user-select: none;\n  -webkit-user-select: none;\n  line-height: 1.125rem;\n  padding: 0;\n}\n::ng-deep .gds-table .gds-field-checkbox-wrap .gds-form-control:has(input[type=checkbox]):has(input:disabled) {\n  cursor: not-allowed;\n}\n::ng-deep .gds-table #thead-checkbox input[type=checkbox] ~ i {\n  box-shadow: inset 0 0 0 1px var(--gds-sys-color-text-inverted);\n  background-color: transparent;\n}\n::ng-deep .gds-table #thead-checkbox input[type=checkbox] ~ i:after {\n  box-sizing: border-box;\n}\n::ng-deep .gds-table #thead-checkbox:has(input[type=checkbox]:focus-visible):focus-within {\n  outline-color: var(--gds-sys-color-white);\n}\n::ng-deep .gds-table #thead-checkbox input[type=checkbox]:hover:not(:checked) ~ i {\n  box-shadow: inset 0 0 0 1px #ababab;\n}\n::ng-deep .gds-table #thead-checkbox input[type=checkbox]:hover:not(:checked) ~ i::after {\n  border-color: #ababab;\n}\n::ng-deep .gds-table #thead-checkbox input[type=checkbox]:hover:checked ~ i {\n  box-shadow: inset 0 0 0 1px #ababab;\n}\n::ng-deep .gds-table #thead-checkbox input[type=checkbox]:hover:checked ~ i::after {\n  border-color: #ababab;\n}\n\n@media screen and (max-width: 600px) {\n  .gds-table thead {\n    display: none;\n  }\n  .gds-table .row__expand td:not(:first-child) {\n    display: none;\n  }\n  .gds-table .row__expand td {\n    display: table-cell;\n  }\n  .gds-table .web-view {\n    display: none;\n  }\n  .gds-table .mobile-view {\n    display: flex;\n    align-items: center;\n  }\n  .gds-table .mobile-view .mobile-view-field-wrap {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    width: 100%;\n  }\n  .gds-table .mobile-view .mobile-view-field-wrap .mobile-view-field {\n    display: flex;\n    flex-direction: column;\n    padding-bottom: 0.3rem;\n  }\n  .gds-table .mobile-view .mobile-view-field-wrap .mobile-view-field:nth-child(2n+1) {\n    justify-self: start;\n    align-items: start;\n    text-align: start;\n  }\n  .gds-table .mobile-view .mobile-view-field-wrap .mobile-view-field:nth-child(2n) {\n    align-items: end;\n    justify-self: end;\n    text-align: end;\n  }\n  .gds-table .mobile-view .nav-chevron-field {\n    width: 1.5rem;\n    padding-left: 0.5rem;\n  }\n  .gds-table .mobile-view .nav-chevron-field svg {\n    transition: transform 0.3s ease;\n  }\n  .gds-table .mobile-view .nav-chevron-field[aria-expanded=true] svg {\n    transform: rotate(-90deg);\n  }\n  .gds-table .mobile-view .settings-field {\n    width: 1.5rem;\n    padding: 0 1rem;\n  }\n  .gds-table .mobile-view .settings-field svg {\n    transition: all 0.3s ease;\n  }\n  .gds-table .mobile-view .settings-field:hover svg {\n    fill: var(--gds-sys-color-blue-dark-2);\n  }\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/i18n/i18n.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>NggvI18nModule});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),jsverse_transloco=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs"),lastValueFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),delay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delay.js");const i18n_namespaceObject=JSON.parse('{"error.fieldinputmask":"Invalid value pattern","error.fieldrequired":"Field must have content","error.fieldmaxlength":"Field content should not be longer than {{requiredLength}} characters","label.defaultlabel":"Label","label.maxlength":"characters left","label.optional":"Optional","button_delete":"Delete","button_cancel":"Cancel","button_apply":"Apply","button_save":"Save","text_dialogue":"You can supply the content seen here either through the <code>[content]=\\"string\\"</code> property or</br>by passing children between the opening and closing tags <code>&lt;c-dialog&gt; ...children &lt;/c-dialog&gt;</code>"}');let NggvMissingHandler=class NggvMissingHandler{constructor(transpiler){this.transpiler=transpiler}handle(key,_,params){const keyWithoutLocale="."===key.charAt(2)?key.substring(3):key,withoutScope=keyWithoutLocale.replace(/^((?:\w+)(?<!label|heading|button|alt|link|title|href|fieldhelp|error|text|image|list)(?:\.))/,""),transpileParams={value:i18n_namespaceObject[keyWithoutLocale],params,translation:{},key:keyWithoutLocale};return this.transpiler.transpile(transpileParams)||withoutScope}static{this.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[jsverse_transloco.Rv]}]}]}};NggvMissingHandler=(0,tslib_es6.Cg)([(0,core.Injectable)(),(0,tslib_es6.Sn)("design:paramtypes",[Object])],NggvMissingHandler);const en={"error.fieldinputmask":"Invalid value pattern","error.fieldrequired":"Field must have content","error.fieldmaxlength":"Field content should not be longer than {{requiredLength}} characters","label.defaultlabel":"Label","label.maxlength":"characters left","label.optional":"Optional"},sv={"error.fieldinputmask":"Icke giltigt tecken mönster","error.fieldrequired":"Fältet får inte lämnas tomt","error.fieldmaxlength":"Fältinnehållet måste vara längre än {{requiredLength}} tecken","label.maxlength":"tecken kvar"};let NggvI18nModule=class NggvI18nModule{};NggvI18nModule=(0,tslib_es6.Cg)([(0,core.NgModule)({providers:[(0,jsverse_transloco.$o)({config:{availableLangs:["en","sv"],defaultLang:"en",reRenderOnLangChange:!0,prodMode:!(0,core.isDevMode)()},loader:class TranslocoInlineLoader{getTranslation(lang){return"sv"===lang?(0,lastValueFrom.s)((0,of.of)(sv).pipe((0,delay.c)(1500))):(0,lastValueFrom.s)((0,of.of)(en).pipe((0,delay.c)(500)))}}}),(0,jsverse_transloco.Li)(NggvMissingHandler)],exports:[jsverse_transloco.Q8]})],NggvI18nModule)},"./libs/angular/src/v-angular/i18n/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{RN:()=>i18n_module.R});var i18n_module=__webpack_require__("./libs/angular/src/v-angular/i18n/i18n.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),jsverse_transloco=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs");let TranslocoMockPipe=class TranslocoMockPipe{constructor(){this.transform=value=>value}};TranslocoMockPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"transloco"})],TranslocoMockPipe);let NggvI18nTestModule=class NggvI18nTestModule{};NggvI18nTestModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule],declarations:[TranslocoMockPipe],exports:[TranslocoMockPipe],providers:[{provide:jsverse_transloco.Rv,useClass:class TranslocoMockTranspiler{constructor(){this.transpile=(..._args)=>""}}},{provide:jsverse_transloco.mr,useClass:class TranslocoMockInterceptor{preSaveTranslation(translation,_lang){return translation}preSaveTranslationKey(_key,value,_lang){return value}}},{provide:jsverse_transloco.zo,useClass:class TranslocoMockStrategy{constructor(){this.getNextLangs=_failedLang=>""}}},{provide:jsverse_transloco.WZ,useClass:class TranslocoMockMissingHandler{constructor(){this.handle=(key,_,_params)=>key}},deps:[jsverse_transloco.Rv]}]})],NggvI18nTestModule)},"./node_modules/rxjs/dist/esm5/internal/lastValueFrom.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>lastValueFrom});var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/EmptyError.js");function lastValueFrom(source,config){var hasConfig="object"==typeof config;return new Promise((function(resolve,reject){var _value,_hasValue=!1;source.subscribe({next:function(value){_value=value,_hasValue=!0},error:reject,complete:function(){_hasValue?resolve(_value):hasConfig?resolve(config.defaultValue):reject(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__.G)}})}))}},"./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>combineLatest});var _Observable__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js"),_from__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),_util_identity__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js"),_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"),_util_args__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),_util_createObject__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/createObject.js"),_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js");function combineLatest(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var scheduler=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.lI)(args),resultSelector=(0,_util_args__WEBPACK_IMPORTED_MODULE_0__.ms)(args),_a=(0,_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__.D)(args),observables=_a.args,keys=_a.keys;if(0===observables.length)return(0,_from__WEBPACK_IMPORTED_MODULE_2__.H)([],scheduler);var result=new _Observable__WEBPACK_IMPORTED_MODULE_3__.c(function combineLatestInit(observables,scheduler,valueTransform){void 0===valueTransform&&(valueTransform=_util_identity__WEBPACK_IMPORTED_MODULE_5__.D);return function(subscriber){maybeSchedule(scheduler,(function(){for(var length=observables.length,values=new Array(length),active=length,remainingFirstValues=length,_loop_1=function(i){maybeSchedule(scheduler,(function(){var source=(0,_from__WEBPACK_IMPORTED_MODULE_2__.H)(observables[i],scheduler),hasFirstValue=!1;source.subscribe((0,_operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__._)(subscriber,(function(value){values[i]=value,hasFirstValue||(hasFirstValue=!0,remainingFirstValues--),remainingFirstValues||subscriber.next(valueTransform(values.slice()))}),(function(){--active||subscriber.complete()})))}),subscriber)},i=0;i<length;i++)_loop_1(i)}),subscriber)}}(observables,scheduler,keys?function(values){return(0,_util_createObject__WEBPACK_IMPORTED_MODULE_4__.e)(keys,values)}:_util_identity__WEBPACK_IMPORTED_MODULE_5__.D));return resultSelector?result.pipe((0,_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__.I)(resultSelector)):result}function maybeSchedule(scheduler,execute,subscription){scheduler?(0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__.N)(subscription,scheduler,execute):execute()}},"./node_modules/rxjs/dist/esm5/internal/observable/concat.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{x:()=>concat});var mergeAll=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js");var util_args=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/args.js"),from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js");function concat(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];return function concatAll(){return(0,mergeAll.U)(1)}()((0,from.H)(args,(0,util_args.lI)(args)))}},"./node_modules/rxjs/dist/esm5/internal/operators/catchError.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>catchError});var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js");function catchError(selector){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){var handledResult,innerSub=null,syncUnsub=!1;innerSub=source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__._)(subscriber,void 0,void 0,(function(err){handledResult=(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.Tg)(selector(err,catchError(selector)(source))),innerSub?(innerSub.unsubscribe(),innerSub=null,handledResult.subscribe(subscriber)):syncUnsub=!0}))),syncUnsub&&(innerSub.unsubscribe(),innerSub=null,handledResult.subscribe(subscriber))}))}},"./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{B:()=>debounceTime});var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),_util_lift__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js");function debounceTime(dueTime,scheduler){return void 0===scheduler&&(scheduler=_scheduler_async__WEBPACK_IMPORTED_MODULE_0__.E),(0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.N)((function(source,subscriber){var activeTask=null,lastValue=null,lastTime=null,emit=function(){if(activeTask){activeTask.unsubscribe(),activeTask=null;var value=lastValue;lastValue=null,subscriber.next(value)}};function emitWhenIdle(){var targetTime=lastTime+dueTime,now=scheduler.now();if(now<targetTime)return activeTask=this.schedule(void 0,targetTime-now),void subscriber.add(activeTask);emit()}source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(value){lastValue=value,lastTime=scheduler.now(),activeTask||(activeTask=scheduler.schedule(emitWhenIdle,dueTime),subscriber.add(activeTask))}),(function(){emit(),subscriber.complete()}),void 0,(function(){lastValue=activeTask=null})))}))}},"./node_modules/rxjs/dist/esm5/internal/operators/delay.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{c:()=>delay});var scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),concat=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/concat.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),lift=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),noop=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js");var mapTo=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mapTo.js"),mergeMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),innerFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");function delayWhen(delayDurationSelector,subscriptionDelay){return subscriptionDelay?function(source){return(0,concat.x)(subscriptionDelay.pipe((0,take.s)(1),function ignoreElements(){return(0,lift.N)((function(source,subscriber){source.subscribe((0,OperatorSubscriber._)(subscriber,noop.l))}))}()),source.pipe(delayWhen(delayDurationSelector)))}:(0,mergeMap.Z)((function(value,index){return(0,innerFrom.Tg)(delayDurationSelector(value,index)).pipe((0,take.s)(1),(0,mapTo.u)(value))}))}var timer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/timer.js");function delay(due,scheduler){void 0===scheduler&&(scheduler=scheduler_async.E);var duration=(0,timer.O)(due,scheduler);return delayWhen((function(){return duration}))}},"./node_modules/rxjs/dist/esm5/internal/operators/mapTo.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{u:()=>mapTo});var _map__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");function mapTo(value){return(0,_map__WEBPACK_IMPORTED_MODULE_0__.T)((function(){return value}))}},"./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{U:()=>mergeAll});var _mergeMap__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),_util_identity__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/identity.js");function mergeAll(concurrent){return void 0===concurrent&&(concurrent=1/0),(0,_mergeMap__WEBPACK_IMPORTED_MODULE_0__.Z)(_util_identity__WEBPACK_IMPORTED_MODULE_1__.D,concurrent)}},"./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Q:()=>takeUntil});var _util_lift__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),_observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js"),_util_noop__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js");function takeUntil(notifier){return(0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.N)((function(source,subscriber){(0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__.Tg)(notifier).subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__._)(subscriber,(function(){return subscriber.complete()}),_util_noop__WEBPACK_IMPORTED_MODULE_3__.l)),!subscriber.closed&&source.subscribe(subscriber)}))}},"./node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{D:()=>argsArgArrayOrObject});var isArray=Array.isArray,getPrototypeOf=Object.getPrototypeOf,objectProto=Object.prototype,getKeys=Object.keys;function argsArgArrayOrObject(args){if(1===args.length){var first_1=args[0];if(isArray(first_1))return{args:first_1,keys:null};if(function isPOJO(obj){return obj&&"object"==typeof obj&&getPrototypeOf(obj)===objectProto}(first_1)){var keys=getKeys(first_1);return{args:keys.map((function(key){return first_1[key]})),keys}}}return{args,keys:null}}},"./node_modules/rxjs/dist/esm5/internal/util/createObject.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function createObject(keys,values){return keys.reduce((function(result,key,i){return result[key]=values[i],result}),{})}__webpack_require__.d(__webpack_exports__,{e:()=>createObject})},"./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{I:()=>mapOneOrManyArgs});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_operators_map__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),isArray=Array.isArray;function mapOneOrManyArgs(fn){return(0,_operators_map__WEBPACK_IMPORTED_MODULE_1__.T)((function(args){return function callOrApply(fn,args){return isArray(args)?fn.apply(void 0,(0,tslib__WEBPACK_IMPORTED_MODULE_0__.fX)([],(0,tslib__WEBPACK_IMPORTED_MODULE_0__.zs)(args))):fn(args)}(fn,args)}))}},"./libs/angular/src/v-angular/table/table.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{GlobalSort:()=>GlobalSort,Primary:()=>Primary,Selectable:()=>Selectable,WithAppendedRows:()=>WithAppendedRows,WithExpandableRows:()=>WithExpandableRows,WithTemplateRef:()=>WithTemplateRef,__namedExportsOrder:()=>__namedExportsOrder,default:()=>table_stories});var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),jsverse_transloco=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),i18n=__webpack_require__("./libs/angular/src/v-angular/i18n/index.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var table_componentngResource=__webpack_require__("./libs/angular/src/v-angular/table/table.component.scss?ngResource"),table_componentngResource_default=__webpack_require__.n(table_componentngResource),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");let TableDirective=class TableDirective{constructor(){this.columnType="text",this.thook="table"}get numericColumn(){return"numeric"===this.columnType}get isSortable(){return!!this.sortable}get orderAscending(){return"asc"===this.sortOrder&&!!this.sortable}get orderDescending(){return"desc"===this.sortOrder&&!!this.sortable}get negativeValue(){return!isNaN(this.value)&&+this.value<0}static{this.propDecorators={columnType:[{type:core.Input}],sortable:[{type:core.Input}],sortOrder:[{type:core.Input}],value:[{type:core.Input}],thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],numericColumn:[{type:core.HostBinding,args:["class.gds-table__numeric-col"]}],isSortable:[{type:core.HostBinding,args:["class.gds-table__sortable-col"]}],orderAscending:[{type:core.HostBinding,args:["class.gds-table__sortable-col--asc"]}],orderDescending:[{type:core.HostBinding,args:["class.gds-table__sortable-col--desc"]}],negativeValue:[{type:core.HostBinding,args:["class.gds-table__negative-col"]}]}}};TableDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[columnType]"})],TableDirective);let TableTemplateDirective=class TableTemplateDirective{constructor(templateRef){this.templateRef=templateRef,this.tableColumnTarget="both"}static{this.ctorParameters=()=>[{type:core.TemplateRef}]}static{this.propDecorators={tableColumn:[{type:core.Input}],tableColumnTarget:[{type:core.Input}]}}};TableTemplateDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[tableColumn]"}),(0,tslib_es6.Sn)("design:paramtypes",[core.TemplateRef])],TableTemplateDirective);let TableFooterTemplateDirective=class TableFooterTemplateDirective{constructor(templateRef){this.templateRef=templateRef}static{this.ctorParameters=()=>[{type:core.TemplateRef}]}};TableFooterTemplateDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[tableFooter]"}),(0,tslib_es6.Sn)("design:paramtypes",[core.TemplateRef])],TableFooterTemplateDirective);let TableAppendableRowsTemplateDirective=class TableAppendableRowsTemplateDirective{constructor(templateRef){this.templateRef=templateRef}static{this.ctorParameters=()=>[{type:core.TemplateRef}]}};TableAppendableRowsTemplateDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[tableAppendableRows]"}),(0,tslib_es6.Sn)("design:paramtypes",[core.TemplateRef])],TableAppendableRowsTemplateDirective);let staticInitId=0;let TableComponent=class TableComponent{constructor(){this.ngvRowClick=new core.EventEmitter,this.ngvRowSelect=new core.EventEmitter,this.ngvOrderBy=new core.EventEmitter,this.rowId="id",this.hasRowSpan=_=>{},this.selectable=!0,this.expandable=!1,this.expandedByDefault=!0,this.subItemsProp="subItems",this.allowLocalSort=!1,this.thook="table-select-all",this.customRowTemplates=new Map,this.customHeaderTemplates=new Map,this.rowSelectors=new fesm2022_forms.J3({}),this.groupSelector=new fesm2022_forms.hs(!1),this.selected=[],this.subs=[]}ngOnChanges(changes){if((this.selectable||this.expandable)&&changes.tableData?.currentValue||(changes.selectable?.currentValue||changes.expandable?.currentValue)&&this.tableData){const wasChanged=this.registerSelectableRows(changes.tableData.currentValue);if(wasChanged&&!this.subs.length){const groupSelectorSub=this.groupValueSubscription,rowSelectorSub=this.rowValueSubscription;this.subs.push(groupSelectorSub,rowSelectorSub)}else wasChanged&&this.rowSelectors.updateValueAndValidity()}if(this.allowLocalSort&&(changes.tableData?.currentValue||changes.tableColumns?.currentValue)){const orderedByColumn=this.tableColumns?.find((el=>void 0!==el.order));orderedByColumn&&this.sortItemsBy(orderedByColumn)}}ngOnInit(){this.initId=staticInitId++}ngAfterContentInit(){this.customTemplates.length&&this.customTemplates.map((tableTemplate=>{["td","both"].includes(tableTemplate.tableColumnTarget)&&this.customRowTemplates.set(tableTemplate.tableColumn,tableTemplate.templateRef),["th","both"].includes(tableTemplate.tableColumnTarget)&&this.customHeaderTemplates.set(tableTemplate.tableColumn,tableTemplate.templateRef)})),this.appendedRowsTemplate&&(this.appendedRowsTemplateRef=this.appendedRowsTemplate.templateRef),this.customFooterTemplate&&(this.customFooterTemplateRef=this.customFooterTemplate.templateRef),this.expandedByDefault&&this.expandable&&this.tableData&&this.tableData.forEach((item=>{this.toggleRowToExpand(item[this.rowId])}))}ngOnDestroy(){this.subs.forEach((sub=>sub.unsubscribe()))}get groupValueSubscription(){return this.groupSelector.valueChanges.subscribe({next:value=>{const selectMap=new Map(Object.entries(this.rowSelectorsValue));selectMap.forEach(((_,key)=>selectMap.set(key,value)));const patchValue=function objectFromEntries(entryMap){const fromEntries={};for(const[key,value]of entryMap)fromEntries[key]=value;return fromEntries}(selectMap);this.rowSelectors.patchValue(patchValue)}})}get rowValueSubscription(){return this.rowSelectors.valueChanges.pipe((0,debounceTime.B)(0),(0,map.T)((val=>((propertyArray,object)=>{if(object instanceof Object)return propertyArray.reduce(((acc,curr)=>{return{...acc,[curr]:(obj=object,key=curr,obj[key])};var obj,key}),{});throw Error('The value for argument "object" must be an object')})(Object.keys(val).filter((key=>!0===val[key]&&this.rowSelectors.get(key)?.enabled)),val)))).subscribe({next:value=>{const numberOfSelected=Object.keys(value).length,allSelected=numberOfSelected>0&&numberOfSelected===Object.keys(this.rowSelectorsValue).length;this.groupSelector.setValue(allSelected,{emitEvent:!1}),this.selected=Object.keys(value),this.ngvRowSelect.emit(this.selected)}})}registerSelectableRows(tableData){if(!tableData)return!1;const dataRowIds=tableData.map((data=>data[this.rowId])),currentIds=Object.keys(this.rowSelectorsValue),newIds=dataRowIds.filter((id=>-1===currentIds.indexOf(id))),removedIds=currentIds.filter((id=>-1===dataRowIds.indexOf(id)));return newIds.length&&newIds.forEach((id=>{const ctrl=this.rowSelectors.registerControl(id,new fesm2022_forms.hs(!1));ctrl.disabled&&ctrl.enable()})),removedIds.length&&removedIds.forEach((id=>this.rowSelectors.get(id)?.disable())),newIds.length>0||removedIds.length>0}get rowSelectorsValue(){return this.rowSelectors.enabled?this.rowSelectors.value:{}}toggleSortOrderWithSpace(event,column){column.sortable&&(event.preventDefault(),this.toggleSortOrder(column))}toggleSortOrder(column){const currentlyOrderedBy=this.tableColumns?.find((el=>el!==column&&void 0!==el.order));currentlyOrderedBy&&delete currentlyOrderedBy.order,column.order="desc"===column.order?"asc":"desc",this.sortItemsBy(column)}sortItemsBy(column){var property;if(column.sortable&&(this.ngvOrderBy.emit({property:column.property,order:column.order}),this.allowLocalSort&&this.tableData))return this.tableData.sort("desc"===column.order?(property=column.property,(a,b)=>a[property]>b[property]?-1:a[property]<b[property]?1:0):(property=>(a,b)=>a[property]<b[property]?-1:a[property]>b[property]?1:0)(column.property))}propagateItemClick(item,preventDefaultEmit){preventDefaultEmit||this.ngvRowClick.emit(item),this.expandable&&item[this.subItemsProp]&&this.toggleRowToExpand(item[this.rowId])}getAriaLabel(column){const sortOrder="asc"===column.order?this.ariaLabelsOrderBy?.desc:this.ariaLabelsOrderBy?.asc;if(sortOrder)return column.ariaLabelSortable?.replace("{{sortOrder}}",sortOrder)}toggleRowToExpand(id){const row=this.rowSelectors.get(id);row?.setValue(!row.value)}static{this.propDecorators={customTemplates:[{type:core.ContentChildren,args:[TableTemplateDirective,{descendants:!0}]}],appendedRowsTemplate:[{type:core.ContentChild,args:[TableAppendableRowsTemplateDirective]}],customFooterTemplate:[{type:core.ContentChild,args:[TableFooterTemplateDirective]}],ngvRowClick:[{type:core.Output}],ngvRowSelect:[{type:core.Output}],ngvOrderBy:[{type:core.Output}],tableColumns:[{type:core.Input}],tableData:[{type:core.Input}],rowId:[{type:core.Input}],hasRowSpan:[{type:core.Input}],selectable:[{type:core.Input}],expandable:[{type:core.Input}],expandedByDefault:[{type:core.Input}],subItemsProp:[{type:core.Input}],allowLocalSort:[{type:core.Input}],thook:[{type:core.Input}],trThookFn:[{type:core.Input}],ariaLabelCheckboxTh:[{type:core.Input}],ariaLabelCheckboxTr:[{type:core.Input}],ariaLabelsOrderBy:[{type:core.Input}]}}};TableComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-table",template:'<ng-template #sortableThTemplate let-column>\n  <button class="gds-table-sort" *transloco="let t">\n    <ng-template #thButtonTemplate>\n      {{ t(column.label ?? \'\') }}\n    </ng-template>\n    <ng-container\n      *ngIf="\n        customHeaderTemplates.get(column.property) as thTemplate;\n        else thButtonTemplate\n      "\n    >\n      <ng-template\n        *ngTemplateOutlet="thTemplate || null; context: { $implicit: column }"\n      >\n      </ng-template>\n    </ng-container>\n  </button>\n</ng-template>\n\n<ng-template #notSortableThTemplate let-column>\n  <ng-template #defaultThTemplate>\n    <ng-container *transloco="let t">\n      {{ t(column.label ?? \'\') }}\n    </ng-container>\n  </ng-template>\n  <ng-container\n    *ngIf="\n      customHeaderTemplates.get(column.property) as thTemplate;\n      else defaultThTemplate\n    "\n  >\n    <ng-template\n      *ngTemplateOutlet="thTemplate || null; context: { $implicit: column }"\n    >\n    </ng-template>\n  </ng-container>\n</ng-template>\n<table class="gds-table" *transloco="let t">\n  \x3c!-- Table header --\x3e\n  <thead>\n    <tr>\n      \x3c!-- Checkbox column for header --\x3e\n      <th *ngIf="selectable" class="column__check">\n        <div class="gds-field-checkbox-wrap">\n          <label\n            [attr.for]="\'cb_header__\' + initId"\n            class="gds-form-control"\n            id="thead-checkbox"\n          >\n            <input\n              type="checkbox"\n              [formControl]="groupSelector"\n              [attr.aria-label]="ariaLabelCheckboxTh"\n              [attr.id]="\'cb_header__\' + initId"\n              [attr.data-thook]="thook"\n            />\n            <i></i>\n          </label>\n        </div>\n      </th>\n\n      \x3c!-- Other columns --\x3e\n      <th\n        *ngFor="let column of tableColumns"\n        [columnType]="column.valueType"\n        [sortable]="column.sortable"\n        [sortOrder]="column.order"\n        [thook]="\'column-header-\' + !!column.property"\n        (click)="toggleSortOrder(column)"\n        (keydown.space)="toggleSortOrderWithSpace($event, column)"\n        [attr.aria-label]="getAriaLabel(column)"\n        [attr.aria-sort]="column.order + \'ending\'"\n      >\n        <ng-container *ngIf="column.sortable">\n          <ng-container\n            *ngTemplateOutlet="\n              sortableThTemplate;\n              context: { $implicit: column, column: column }\n            "\n          >\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf="!column.sortable">\n          <ng-container\n            *ngTemplateOutlet="\n              notSortableThTemplate;\n              context: { $implicit: column, column: column }\n            "\n          >\n          </ng-container>\n        </ng-container>\n      </th>\n    </tr>\n  </thead>\n\n  \x3c!-- Table body --\x3e\n  <tbody [formGroup]="rowSelectors">\n    <ng-container *ngFor="let item of tableData; let i = index">\n      <tr\n        [class.row__expand]="expandable"\n        [attr.data-thook]="item | trThook: i : trThookFn"\n        [attr.data-hasrowspan]="hasRowSpan(item)"\n      >\n        \x3c!-- Checkbox column for row --\x3e\n        <td *ngIf="selectable" class="column__check">\n          <div class="gds-field-checkbox-wrap">\n            <label\n              [attr.for]="\'cb_row__\' + initId + \'_\' + i"\n              class="gds-form-control"\n            >\n              <input\n                *ngIf="rowSelectors.get(item[rowId])"\n                type="checkbox"\n                [formControlName]="item[rowId]"\n                [attr.aria-label]="ariaLabelCheckboxTr"\n                [attr.id]="\'cb_row__\' + initId + \'_\' + i"\n                [attr.data-thook]="\'row-select-\' + i"\n              />\n              <i></i>\n            </label>\n          </div>\n        </td>\n\n        \x3c!-- Other columns --\x3e\n        <td\n          *ngFor="let column of tableColumns; let i = index"\n          [columnType]="column.valueType"\n          [value]="item[column.property]"\n          (click)="propagateItemClick(item, column.preventDefaultClickEvent)"\n        >\n          <ng-container\n            *ngIf="expandable && i === 0; else nonExpandableTemplate"\n          >\n            <div\n              class="gds-item-field-wrap"\n              [ngClass]="{ \'no-sub-items\': item.subItems.length === 0 }"\n            >\n              <span\n                *ngIf="item.subItems.length > 0"\n                role="button"\n                tabindex="0"\n                class="chevron-field"\n                [attr.aria-expanded]="rowSelectors.get(item[rowId])?.value"\n              >\n                <svg\n                  width="20"\n                  height="20"\n                  viewBox="0 0 24 24"\n                  fill="none"\n                  xmlns="http://www.w3.org/2000/svg"\n                >\n                  <path\n                    d="M20 9L12 17L4 9"\n                    stroke="currentColor"\n                    stroke-width="1.6"\n                    stroke-linecap="round"\n                    stroke-linejoin="round"\n                  />\n                </svg>\n              </span>\n              <span class="gds-item-field-text">\n                {{ item[column.property] }} ({{ item.subItems.length }})\n                <div\n                  *ngIf="column.columnLabel"\n                  class="gds-item-field-extra-label"\n                >\n                  {{ item[column.columnLabel] }}\n                </div>\n              </span>\n            </div>\n          </ng-container>\n\n          <ng-template #nonExpandableTemplate>\n            <ng-container\n              *ngIf="\n                customRowTemplates.get(column.property) as tdTemplate;\n                else defaultTdTemplate\n              "\n            >\n              <ng-template\n                *ngTemplateOutlet="tdTemplate; context: { $implicit: item }"\n              >\n              </ng-template>\n            </ng-container>\n            <ng-template #defaultTdTemplate>\n              {{ item[column.property] }}\n            </ng-template>\n          </ng-template>\n        </td>\n      </tr>\n\n      \x3c!-- Expanded Sub Items --\x3e\n      <ng-container *ngIf="expandable && rowSelectors.get(item[rowId])?.value">\n        <tr *ngFor="let subItem of item[subItemsProp]">\n          <td\n            *ngFor="let column of tableColumns"\n            class="web-view"\n            [columnType]="column.valueType"\n            [value]="subItem[column.property]"\n            (click)="\n              propagateItemClick(subItem, column.preventDefaultClickEvent)\n            "\n          >\n            <ng-container\n              *ngIf="\n                customRowTemplates.get(column.property) as tdTemplate;\n                else defaultTdTemplate\n              "\n            >\n              <ng-template\n                *ngTemplateOutlet="tdTemplate; context: { $implicit: subItem }"\n              >\n              </ng-template>\n            </ng-container>\n            <ng-template #defaultTdTemplate>\n              {{ subItem[column.property] }}\n            </ng-template>\n          </td>\n\n          <td\n            class="mobile-view"\n            [attr.colspan]="tableColumns.length"\n            (click)="propagateItemClick(subItem)"\n          >\n            <dl class="mobile-view-field-wrap">\n              <ng-container *ngFor="let column of tableColumns">\n                <div\n                  *ngIf="!column.hidePropertyOnMobile"\n                  class="mobile-view-field"\n                  [columnType]="column.valueType"\n                  [value]="subItem[column.property]"\n                >\n                  <dt *ngIf="!column.hideLabelOnMobile">\n                    <ng-container *transloco="let t">\n                      {{ t(column.label ?? \'\') }}\n                    </ng-container>\n                  </dt>\n                  <dd\n                    [ngStyle]="\n                      column.boldTextOnMobile\n                        ? { \'font-weight\': \'500\' }\n                        : { \'font-weight\': \'400\' }\n                    "\n                  >\n                    <ng-container\n                      *ngIf="\n                        customRowTemplates.get(column.property) as tdTemplate;\n                        else defaultTdTemplate\n                      "\n                    >\n                      <ng-template\n                        *ngTemplateOutlet="\n                          tdTemplate;\n                          context: { $implicit: subItem }\n                        "\n                      ></ng-template>\n                    </ng-container>\n                    <ng-template #defaultTdTemplate>\n                      {{ subItem[column.property] }}\n                    </ng-template>\n                  </dd>\n                  <ng-content></ng-content>\n                </div>\n              </ng-container>\n            </dl>\n            <span\n              role="button"\n              tabindex="0"\n              class="nav-chevron-field"\n              [attr.aria-expanded]="rowSelectors.get(item[rowId])?.value"\n            >\n              <svg\n                width="20"\n                height="20"\n                viewBox="0 0 24 24"\n                fill="none"\n                xmlns="http://www.w3.org/2000/svg"\n              >\n                <path\n                  d="M20 9L12 17L4 9"\n                  stroke="currentColor"\n                  stroke-width="1.6"\n                  stroke-linecap="round"\n                  stroke-linejoin="round"\n                />\n              </svg>\n            </span>\n          </td>\n        </tr>\n      </ng-container>\n\n      \x3c!-- Custom appended rows --\x3e\n      <ng-container *ngIf="appendedRowsTemplateRef as trTemplate">\n        \x3c!-- Cannot infer trTemplate as TemplateRef therefore null --\x3e\n        <ng-container\n          *ngTemplateOutlet="trTemplate || null; context: { $implicit: item }"\n        >\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </tbody>\n\n  \x3c!-- Table footer --\x3e\n  <tfoot *ngIf="customFooterTemplateRef as trTemplate">\n    \x3c!-- Cannot infer trTemplate as TemplateRef therefore null --\x3e\n    <ng-container *ngTemplateOutlet="trTemplate || null"> </ng-container>\n  </tfoot>\n</table>\n',styles:[table_componentngResource_default()]})],TableComponent);const columns={primary:[{property:"name",label:"header.name",sortable:!0,ariaLabelSortable:"Activate to sort Name column in {{sortOrder}} order"},{property:"currency",label:"header.currency",sortable:!1,ariaLabelSortable:"Activate to sort Currency column in {{sortOrder}} order"},{property:"bookedBalance",label:"header.bookedbalance",valueType:"numeric",sortable:!1},{property:"datedBalance",label:"header.datedbalance",valueType:"numeric",sortable:!0},{property:"limit",label:"header.limit",valueType:"numeric",sortable:!0},{property:"unauthorizedUsage",label:"header.unauthorizedusage",valueType:"numeric",order:"desc",sortable:!0}],alt:[{property:"name",label:"header.name",sortable:!0},{property:"currency",label:"header.currency",sortable:!0},{property:"datedBalance",label:"header.datedbalance",valueType:"numeric",sortable:!0},{property:"status",label:"header.status",sortable:!0}],withExpandableRows:[{property:"name",label:"header.name",hideLabelOnMobile:!0,boldTextOnMobile:!0},{property:"status",label:"header.status",hideLabelOnMobile:!0,boldTextOnMobile:!0},{property:"currency",label:"header.currency",boldTextOnMobile:!0},{property:"bookedBalance",hidePropertyOnMobile:!0,label:"header.bookedbalance",valueType:"numeric"},{property:"datedBalance",label:"header.datedbalance",hidePropertyOnMobile:!0,valueType:"numeric"},{property:"limit",label:"header.limit",valueType:"numeric",boldTextOnMobile:!0},{property:"unauthorizedUsage",hidePropertyOnMobile:!0,label:"header.unauthorizedusage",valueType:"numeric"}]},mockedFooterData_totalBalance=((0,__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js").of)({"header.name":"Name","header.currency":"Ccy","header.status":"Booked status","header.bookedbalance":"Booked balance","header.datedbalance":"Value dated balance","header.limit":"Limit","header.unauthorizedusage":"Unauthorized usage"}),125e3);var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs");let TrThookPipe=class TrThookPipe{transform(value,index,thookFn){return null!=thookFn?thookFn(value):`table-row-${index}`}};TrThookPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"trThook",standalone:!0})],TrThookPipe);let NggvTableModule=class NggvTableModule{};NggvTableModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[TableComponent,TableDirective,TableTemplateDirective,TableFooterTemplateDirective,TableAppendableRowsTemplateDirective],imports:[common.CommonModule,fesm2022_forms.X1,jsverse_transloco.Q8,TrThookPipe],exports:[TableComponent,TableTemplateDirective,TableFooterTemplateDirective,TableAppendableRowsTemplateDirective]})],NggvTableModule);const table_stories={title:"V-Angular/Table",component:TableComponent,parameters:{layout:"padded"},decorators:[(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(i18n.RN)]}),(0,dist.moduleMetadata)({imports:[NggvTableModule,jsverse_transloco.Q8]})]},mockActions={ngvRowClick:value=>console.log("%cngvRowClick %o","color: darkcyan; font-weight: bold",value),ngvRowSelect:value=>console.log("%cngvRowSelect:","color: blue; font-weight: bold",value),ngvOrderBy:value=>console.log("%cngvOrderBy:","color: purple; font-weight: bold",value)},TableStory=args=>({template:'\n    <nggv-table\n      [selectable]="selectable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [allowLocalSort]="allowLocalSort"\n      [ariaLabelsOrderBy]="mockedAriaLabelsOrderBy"\n      rowId="id"\n      [trThookFn]="trThookFn"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n    </nggv-table>',props:args}),Primary=TableStory.bind({});Primary.args={tableData:[{id:"0",name:"Capitalized CPH ODFlex 160209",currency:"DKK",status:"Booked",bookedBalance:8e4,datedBalance:8e4,limit:2e3,unauthorizedUsage:3e4},{id:"1",name:"Capitalized CPH ODFlex 160209",currency:"GBP",status:"Waiting",bookedBalance:6e3,datedBalance:5e3,limit:1e3,unauthorizedUsage:5e3},{id:"2",name:"Capitalized CPH ODFlex 160209",currency:"USD",status:"Declined",bookedBalance:3e5,datedBalance:4e4,limit:8e4,unauthorizedUsage:0},{id:"3",name:"Shiny Curtain Super 3000",currency:"EUR",status:"Booked",bookedBalance:617e3,datedBalance:44400,limit:88e3,unauthorizedUsage:29},{id:"4",name:"Extra Strict 230517",currency:"AUD",status:"Waiting",bookedBalance:1003,datedBalance:898900,limit:4003,unauthorizedUsage:13}],rowId:"id",selectable:!1,allowLocalSort:!0,ngvRowClick:mockActions.ngvRowClick,ngvRowSelect:mockActions.ngvRowSelect,ngvOrderBy:mockActions.ngvOrderBy,tableColumns:columns.primary,ariaLabelsOrderBy:{asc:"Ascending",desc:"Descending"},trThookFn:void 0},Primary.parameters={docs:{source:{code:"\nimport { TableColumn } from '@sebgroup/nggv-table';\n\n@Component({\n  selector: 'app-table-implementation',\n  template: `\n    <nggv-table\n      [tableColumns]=\"tableColumns\"\n      [tableData]=\"tableData\"\n      rowId=\"id\"\n      (rowClicked)=\"rowClicked($event)\"\n      (rowsSelected)=\"rowsSelected($event)\">\n    </nggv-table>`\n})\nexport class TableImplementationComponent {\n  tableColumns: Array<TableColumn> = [\n    { property: 'name', label: 'Name', sortable: true },\n    { property: 'currency', label: 'Ccy', sortable: true },\n    { property: 'bookedBalance', label: 'Booked balance', valueType: 'numeric', sortable: true },\n    { property: 'datedBalance', label: 'Value dated balance', valueType: 'numeric', sortable: true },\n    { property: 'limit', label: 'Limit', valueType: 'numeric', sortable: true },\n    { property: 'unauthorizedUsage', label: 'Unauthorized usage', valueType: 'numeric', order: 'desc', sortable: true }\n  ];\n  tableData: Array<any> = [\n    { id: '0', name: 'Capitalized CPH ODFlex 160209', currency: 'DKK', status: 'Booked', bookedBalance: 80000, datedBalance: 80000, limit: 2000, unauthorizedUsage: 30000 },\n    { id: '1', name: 'Capitalized CPH ODFlex 160209', currency: 'GBP', status: 'Waiting', bookedBalance: 6000, datedBalance: 5000, limit: 1000, unauthorizedUsage: 5000 },\n    { id: '2', name: 'Capitalized CPH ODFlex 160209', currency: 'USD', status: 'Declined', bookedBalance: 300000, datedBalance: 40000, limit: 80000, unauthorizedUsage: 0 },\n    // ...\n  ];\n\n  rowClicked(event: any) {\n    console.log(value);\n  }\n\n  rowsSelected(event: any) {\n    console.log(value);\n  }\n}"}}};const Selectable=TableStory.bind({});Selectable.args={...Primary.args,selectable:!0,trThookFn:row=>(console.log("Using custom thook function"),`id_${row.id}_${row.currency}`)};const WithTemplateRef=(args=>({template:`\n    <nggv-table\n      [selectable]="selectable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [allowLocalSort]="allowLocalSort"\n      rowId="id"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n\n      \x3c!-- custom td template for status column --\x3e\n      <ng-template tableColumn="status" tableColumnTarget="td" let-status="$implicit.status">\n        <div class="gds-badge" [ngClass]="{\n          'gds-badge--error': status === 'Declined',\n          'gds-badge--success': status === 'Booked',\n          'gds-badge--info': status === 'Waiting'\n        }">{{ status }}</div>\n      </ng-template>\n\n      \x3c!-- custom th template for status column --\x3e\n      <ng-template tableColumn="status" tableColumnTarget="th" let-label="$implicit.label">\n        <div *transloco="let t" class="gds-badge gds-badge--info">\n          {{ t(label) }}\n        </div>\n      </ng-template>\n\n      \x3c!-- custom td template for datedBalance column --\x3e\n      <ng-template tableColumn="datedBalance" tableColumnTarget="td" let-datedBalance="$implicit.datedBalance">\n        {{ datedBalance | number:'4.2-2' }}\n      </ng-template>\n\n      \x3c!-- custom tfoot template for footer --\x3e\n      <ng-template tableFooter>\n        <tr>\n          <td colspan="2"></td>\n          <td class="gds-table__numeric-col">Total balance: {{ ${mockedFooterData_totalBalance} | number:'4.2-2' }}</td>\n          <td></td>\n        </tr>\n      </ng-template>\n\n    </nggv-table>`,props:args})).bind({});WithTemplateRef.args={...Primary.args,tableColumns:columns.alt},WithTemplateRef.parameters={docs:{source:{code:"\nimport { OnInit } from '@angular/core';\nimport { TableColumn } from '@sebgroup/nggv-table';\n\n@Component({\n  selector: 'app-table-implementation',\n  template: `\n    <nggv-table\n      [tableColumns]=\"tableColumns\"\n      [tableData]=\"tableData\"\n      rowId=\"id\"\n      (rowClicked)=\"rowClicked($event)\"\n      (rowsSelected)=\"rowsSelected($event)\">\n\n      \x3c!-- custom td-template for status column --\x3e\n      <ng-template tableColumn=\"status\" tableColumnTarget=\"td\" let-status=\"$implicit.status\">\n        <div class=\"gds-badge\" [ngClass]=\"{\n          'gds-badge--error': status === 'Declined',\n          'gds-badge--success': status === 'Booked',\n          'gds-badge--info': status === 'Waiting'\n        }\">{{ status }}</div>\n      </ng-template>\n\n      \x3c!-- custom th-template for status column --\x3e\n      <ng-template tableColumn=\"status\" tableColumnTarget=\"th\" let-label=\"$implicit.label\">\n        <div class=\"gds-badge gds-badge--info\">\n          {{ label }}\n        </div>\n      </ng-template>\n\n      \x3c!-- custom td-template for datedBalance column --\x3e\n      <ng-template tableColumn=\"datedBalance\" tableColumnTarget=\"td\" let-datedBalance=\"$implicit.datedBalance\">\n        {{ datedBalance | number:'4.2-2' }}\n      </ng-template>\n\n      \x3c!-- custom tfoot-template for footer --\x3e\n      <ng-template tableFooter>\n        <tr>\n          <td colspan=\"2\"></td>\n          <td class=\"gds-table__numeric-col\">Total balance: {{ totalBalance | number:'4.2-2' }}</td>\n          <td></td>\n        </tr>\n      </ng-template>\n\n    </nggv-table>`\n})\nexport class TableImplementationComponent implements OnInit {\n  tableColumns: Array<TableColumn>;\n  tableData: Array<any> = [\n    { id: '0', name: 'Capitalized CPH ODFlex 160209', currency: 'DKK', status: 'Booked', bookedBalance: 80000, datedBalance: 80000, limit: 2000, unauthorizedUsage: 30000 },\n    { id: '1', name: 'Capitalized CPH ODFlex 160209', currency: 'GBP', status: 'Waiting', bookedBalance: 6000, datedBalance: 5000, limit: 1000, unauthorizedUsage: 5000 },\n    { id: '2', name: 'Capitalized CPH ODFlex 160209', currency: 'USD', status: 'Declined', bookedBalance: 300000, datedBalance: 40000, limit: 80000, unauthorizedUsage: 0 },\n    // ...\n  ];\n\n  totalBalance: number = this.tableData.reduce((sum, item) => (sum + item.datedBalance), 0);\n\n  ngOnInit() {\n    this.tableColumns = [\n      { property: 'name', label: 'Name', sortable: true, columnLabel: 'status' },\n      { property: 'currency', label: 'Ccy', sortable: true },\n      { property: 'datedBalance', label: 'Value dated balance', valueType: 'numeric', sortable: true },\n      { property: 'status', label: 'Booked status', sortable: true }\n    ];\n  }\n\n  rowClicked(event: any) {\n    console.log(event);\n  }\n\n  rowsSelected(event: any) {\n    console.log(event);\n  }\n}"}}};const WithAppendedRows=(args=>({template:'\n    <nggv-table\n      [selectable]="selectable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [allowLocalSort]="allowLocalSort"\n      rowId="id"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n\n      \x3c!-- custom appended rows --\x3e\n      <ng-template tableAppendableRows let-errorMessages="$implicit.errorMessages">\n        <tr *ngFor="let errorMessage of errorMessages" style="color: red">\n          <td></td>\n          <td colspan="6">{{ errorMessage | uppercase }}</td>\n        </tr>\n      </ng-template>\n\n    </nggv-table>',props:args})).bind({});WithAppendedRows.args={rowId:Selectable.args.rowId,selectable:Selectable.args.selectable,allowLocalSort:Selectable.args.allowLocalSort,tableColumns:Selectable.args.tableColumns,ngvRowClick:mockActions.ngvRowClick,ngvRowSelect:mockActions.ngvRowSelect,ngvOrderBy:mockActions.ngvOrderBy,tableData:[{id:"0",name:"Capitalized CPH ODFlex 160209",currency:"DKK",status:"Booked",bookedBalance:8e4,datedBalance:8e4,limit:2e3,unauthorizedUsage:3e4,errorMessages:[]},{id:"1",name:"Capitalized CPH ODFlex 160209",currency:"GBP",status:"Waiting",bookedBalance:6e3,datedBalance:5e3,limit:1e3,unauthorizedUsage:5e3,errorMessages:["Invalid Amount"]},{id:"2",name:"Capitalized CPH ODFlex 160209",currency:"USD",status:"Declined",bookedBalance:3e5,datedBalance:4e4,limit:8e4,unauthorizedUsage:0,errorMessages:["Invalid Amount","Invalid Name"]}]},WithAppendedRows.parameters={docs:{source:{code:"\nimport { TableColumn } from '@sebgroup/nggv-table';\n\n@Component({\n  selector: 'app-table-implementation',\n  template: `\n    <nggv-table\n      [selectable]=\"selectable\"\n      [tableColumns]=\"tableColumns\"\n      [tableData]=\"tableData\"\n      [allowLocalSort]=\"allowLocalSort\"\n      rowId=\"id\"\n      (ngvRowClick)=\"ngvRowClick($event)\"\n      (ngvRowSelect)=\"ngvRowSelect($event)\"\n      (ngvOrderBy)=\"ngvOrderBy($event)\">\n\n      \x3c!-- custom appended rows --\x3e\n      <ng-template tableAppendableRows let-errorMessages=\"$implicit.errorMessages\">\n        <tr *ngFor=\"let errorMessage of errorMessages\" style=\"color: red\">\n          <td></td>\n          <td colspan=\"6\">{{ errorMessage | uppercase }}</td>\n        </tr>\n      </ng-template>\n\n    </nggv-table>`\n})\nexport class TableImplementationComponent {\n  tableColumns: Array<TableColumn> = [\n    { property: 'name', label: 'Name', sortable: true },\n    { property: 'currency', label: 'Ccy', sortable: true },\n    { property: 'bookedBalance', label: 'Booked balance', valueType: 'numeric', sortable: true },\n    { property: 'datedBalance', label: 'Value dated balance', valueType: 'numeric', sortable: true },\n    { property: 'limit', label: 'Limit', valueType: 'numeric', sortable: true },\n    { property: 'unauthorizedUsage', label: 'Unauthorized usage', valueType: 'numeric', order: 'desc', sortable: true }\n  ];\n  tableData: Array<any> = [\n    { id: '0', name: 'Capitalized CPH ODFlex 160209', currency: 'DKK', status: 'Booked', bookedBalance: 80000, datedBalance: 80000, limit: 2000, unauthorizedUsage: 30000, errorMessages: [] },\n    { id: '1', name: 'Capitalized CPH ODFlex 160209', currency: 'GBP', status: 'Waiting', bookedBalance: 6000, datedBalance: 5000, limit: 1000, unauthorizedUsage: 5000, errorMessages: ['Invalid Amount'] },\n    { id: '2', name: 'Capitalized CPH ODFlex 160209', currency: 'USD', status: 'Declined', bookedBalance: 300000, datedBalance: 40000, limit: 80000, unauthorizedUsage: 0, errorMessages: ['Invalid Amount', 'Invalid Name'] },\n    // ...\n  ];\n\n  rowClicked(event: any) {\n    console.log(value);\n  }\n\n  rowsSelected(event: any) {\n    console.log(value);\n  }\n}"}}};const WithExpandableRows=(args=>({template:'\n    <nggv-table\n      rowId="id"\n      [selectable]="selectable"\n      [expandable]="expandable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [subItemsProp]="\'subItems\'"\n      [allowLocalSort]="allowLocalSort"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n        \x3c!-- custom td template for bookedBalance column --\x3e\n        <ng-template tableColumn="bookedBalance" tableColumnTarget="td" let-bookedBalance="$implicit.bookedBalance">\n          {{ bookedBalance | number:\'1.2-2\' }}\n        </ng-template>\n        \x3c!-- custom td template for datedBalance column --\x3e\n        <ng-template tableColumn="datedBalance" tableColumnTarget="td" let-datedBalance="$implicit.datedBalance">\n          {{ datedBalance | number:\'1.2-2\' }}\n        </ng-template>\n        \x3c!-- custom td template for limit column --\x3e\n        <ng-template tableColumn="limit" tableColumnTarget="td" let-limit="$implicit.limit">\n          {{ limit | number:\'1.2-2\' }}\n        </ng-template>\n        \x3c!-- custom td template for unauthorizedUsage column --\x3e\n        <ng-template tableColumn="unauthorizedUsage" tableColumnTarget="td" let-unauthorizedUsage="$implicit.unauthorizedUsage">\n          {{ unauthorizedUsage | number:\'1.2-2\' }}\n        </ng-template>\n    </nggv-table>',props:args})).bind({});WithExpandableRows.args={rowId:"id",subItemsProp:"subItems",selectable:!1,expandable:!0,tableColumns:columns.withExpandableRows,tableData:[{id:"0",name:"Parent item DKK 111",currency:"",status:"",bookedBalance:9600,datedBalance:10500,limit:300,unauthorizedUsage:3500,subItems:[{id:"0",name:"Chlild item DKK 111",currency:"DKK",status:"Booked",bookedBalance:8e3,datedBalance:8e3,limit:200,unauthorizedUsage:3e3},{id:"1",name:"Chlild item DKK 111",currency:"DKK",status:"Waiting",bookedBalance:1600,datedBalance:2500,limit:100,unauthorizedUsage:500}]},{id:"1",name:"Parent item EUR 222",currency:"",status:"",bookedBalance:0,datedBalance:0,limit:0,unauthorizedUsage:0,subItems:[]},{id:"2",name:"Parent item USD 333",currency:"",status:"",bookedBalance:6300,datedBalance:7200,limit:650,unauthorizedUsage:2300,subItems:[{id:"0",name:"Chlild item USD 333",currency:"USD",status:"Booked",bookedBalance:4e3,datedBalance:4e3,limit:500,unauthorizedUsage:1e3},{id:"1",name:"Chlild item USD 333",currency:"USD",status:"Waiting",bookedBalance:2300,datedBalance:3200,limit:150,unauthorizedUsage:1300}]}],ngvRowClick:mockActions.ngvRowClick},WithExpandableRows.parameters={docs:{source:{code:"\nimport { TableColumn } from '@sebgroup/nggv-table';\n\n@Component({\n  selector: 'app-table-implementation',\n  template: `\n    <nggv-table\n      rowId=\"id\"\n      [expandable]=\"expandable\"\n      [expandedByDefault]=\"expandedByDefault\"\n      [selectable]=\"false\"\n      [subItemsProp]=\"'subItems'\"\n      [tableColumns]=\"tableColumns\"\n      [tableData]=\"tableData\"\n      (ngvRowClick)=\"ngvRowClick($event)\"\n    >\n    </nggv-table>`\n})\nexport class TableImplementationComponent {\n  tableColumns: Array<TableColumn> = [\n    { property: 'name', label: 'Name' },\n    { property: 'currency', label: 'Ccy' },\n    { property: 'status', label: 'Status' },\n    { property: 'bookedBalance', label: 'Booked balance', valueType: 'numeric' },\n    { property: 'datedBalance', label: 'Value dated balance', valueType: 'numeric' },\n    { property: 'limit', label: 'Limit', valueType: 'numeric' },\n    { property: 'unauthorizedUsage', label: 'Unauthorized usage', valueType: 'numeric' }\n  ];\n  tableData: Array<any> = [\n    { id: '111', name: 'Capitalized CPH ODFlex 160209', currency: '', status: '', bookedBalance: 80000, datedBalance: 80000, limit: 2000, unauthorizedUsage: 30000, subItems: [\n      { id: '001', name: 'Child CPH ODFlex 111', currency: 'DKK', status: 'Booked', bookedBalance: 80000, datedBalance: 80000, limit: 2000, unauthorizedUsage: 30000 },\n      { id: '011', name: 'Child CPH ODFlex 111', currency: 'GBP', status: 'Waiting', bookedBalance: 6000, datedBalance: 5000, limit: 1000, unauthorizedUsage: 5000 }\n    ] },\n    { id: '222', name: 'Capitalized CPH ODFlex 160209', currency: '', status: '', bookedBalance: 6000, datedBalance: 5000, limit: 1000, unauthorizedUsage: 5000, subItems: [] },\n    { id: '333', name: 'Capitalized CPH ODFlex 160209', currency: '', status: '', bookedBalance: 300000, datedBalance: 40000, limit: 80000, unauthorizedUsage: 0, subItems: [\n      { id: '003', name: 'Child CPH ODFlex 333', currency: 'DKK', status: 'Booked', bookedBalance: 80000, datedBalance: 80000, limit: 2000, unauthorizedUsage: 30000 },\n      { id: '013', name: 'Child CPH ODFlex 333', currency: 'GBP', status: 'Waiting', bookedBalance: 6000, datedBalance: 5000, limit: 1000, unauthorizedUsage: 5000 }\n    ] }\n    // ...\n  ];\n\n  rowClicked(event: any) {\n    this.tableData = this.tableData.map((item) => {\n      if (item.id === event.id) {\n        item.expanded = !item.expanded;\n      }\n      return item;\n    });\n  }\n}"}}};const GlobalSort=(args=>{const tableData=[...args.tableData];return{template:'\n    <nggv-table\n      [selectable]="selectable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [allowLocalSort]="allowLocalSort"\n      rowId="id"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n    </nggv-table>',props:{...args,ngvOrderBy:value=>(value=>{console.log("Using custom sort function");const{property,order}=value;"asc"===order?tableData.sort(((a,b)=>a[property]>b[property]?1:-1)):tableData.sort(((a,b)=>a[property]>b[property]?-1:1))})(value),tableData}}}).bind({});GlobalSort.args={...Primary.args,allowLocalSort:!1};const __namedExportsOrder=["Primary","Selectable","WithTemplateRef","WithAppendedRows","WithExpandableRows","GlobalSort"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'args => ({\n  template: /*html*/`\n    <nggv-table\n      [selectable]="selectable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [allowLocalSort]="allowLocalSort"\n      [ariaLabelsOrderBy]="mockedAriaLabelsOrderBy"\n      rowId="id"\n      [trThookFn]="trThookFn"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n    </nggv-table>`,\n  props: args\n})',...Primary.parameters?.docs?.source}}},Selectable.parameters={...Selectable.parameters,docs:{...Selectable.parameters?.docs,source:{originalSource:'args => ({\n  template: /*html*/`\n    <nggv-table\n      [selectable]="selectable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [allowLocalSort]="allowLocalSort"\n      [ariaLabelsOrderBy]="mockedAriaLabelsOrderBy"\n      rowId="id"\n      [trThookFn]="trThookFn"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n    </nggv-table>`,\n  props: args\n})',...Selectable.parameters?.docs?.source}}},WithTemplateRef.parameters={...WithTemplateRef.parameters,docs:{...WithTemplateRef.parameters?.docs,source:{originalSource:'args => ({\n  template: /*html*/`\n    <nggv-table\n      [selectable]="selectable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [allowLocalSort]="allowLocalSort"\n      rowId="id"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n\n      \x3c!-- custom td template for status column --\x3e\n      <ng-template tableColumn="status" tableColumnTarget="td" let-status="$implicit.status">\n        <div class="gds-badge" [ngClass]="{\n          \'gds-badge--error\': status === \'Declined\',\n          \'gds-badge--success\': status === \'Booked\',\n          \'gds-badge--info\': status === \'Waiting\'\n        }">{{ status }}</div>\n      </ng-template>\n\n      \x3c!-- custom th template for status column --\x3e\n      <ng-template tableColumn="status" tableColumnTarget="th" let-label="$implicit.label">\n        <div *transloco="let t" class="gds-badge gds-badge--info">\n          {{ t(label) }}\n        </div>\n      </ng-template>\n\n      \x3c!-- custom td template for datedBalance column --\x3e\n      <ng-template tableColumn="datedBalance" tableColumnTarget="td" let-datedBalance="$implicit.datedBalance">\n        {{ datedBalance | number:\'4.2-2\' }}\n      </ng-template>\n\n      \x3c!-- custom tfoot template for footer --\x3e\n      <ng-template tableFooter>\n        <tr>\n          <td colspan="2"></td>\n          <td class="gds-table__numeric-col">Total balance: {{ ${mockedFooterData.totalBalance} | number:\'4.2-2\' }}</td>\n          <td></td>\n        </tr>\n      </ng-template>\n\n    </nggv-table>`,\n  props: args\n})',...WithTemplateRef.parameters?.docs?.source}}},WithAppendedRows.parameters={...WithAppendedRows.parameters,docs:{...WithAppendedRows.parameters?.docs,source:{originalSource:'args => ({\n  template: /*html*/`\n    <nggv-table\n      [selectable]="selectable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [allowLocalSort]="allowLocalSort"\n      rowId="id"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n\n      \x3c!-- custom appended rows --\x3e\n      <ng-template tableAppendableRows let-errorMessages="$implicit.errorMessages">\n        <tr *ngFor="let errorMessage of errorMessages" style="color: red">\n          <td></td>\n          <td colspan="6">{{ errorMessage | uppercase }}</td>\n        </tr>\n      </ng-template>\n\n    </nggv-table>`,\n  props: args\n})',...WithAppendedRows.parameters?.docs?.source}}},WithExpandableRows.parameters={...WithExpandableRows.parameters,docs:{...WithExpandableRows.parameters?.docs,source:{originalSource:'args => ({\n  template: /*html*/`\n    <nggv-table\n      rowId="id"\n      [selectable]="selectable"\n      [expandable]="expandable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [subItemsProp]="\'subItems\'"\n      [allowLocalSort]="allowLocalSort"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n        \x3c!-- custom td template for bookedBalance column --\x3e\n        <ng-template tableColumn="bookedBalance" tableColumnTarget="td" let-bookedBalance="$implicit.bookedBalance">\n          {{ bookedBalance | number:\'1.2-2\' }}\n        </ng-template>\n        \x3c!-- custom td template for datedBalance column --\x3e\n        <ng-template tableColumn="datedBalance" tableColumnTarget="td" let-datedBalance="$implicit.datedBalance">\n          {{ datedBalance | number:\'1.2-2\' }}\n        </ng-template>\n        \x3c!-- custom td template for limit column --\x3e\n        <ng-template tableColumn="limit" tableColumnTarget="td" let-limit="$implicit.limit">\n          {{ limit | number:\'1.2-2\' }}\n        </ng-template>\n        \x3c!-- custom td template for unauthorizedUsage column --\x3e\n        <ng-template tableColumn="unauthorizedUsage" tableColumnTarget="td" let-unauthorizedUsage="$implicit.unauthorizedUsage">\n          {{ unauthorizedUsage | number:\'1.2-2\' }}\n        </ng-template>\n    </nggv-table>`,\n  props: args\n})',...WithExpandableRows.parameters?.docs?.source}}},GlobalSort.parameters={...GlobalSort.parameters,docs:{...GlobalSort.parameters?.docs,source:{originalSource:'args => {\n  // is never reassigned. Use \'const\' instead  prefer-const\n  const tableData = [...args.tableData];\n  const filterData = (value: any) => {\n    console.log(\'Using custom sort function\');\n    const {\n      property,\n      order\n    } = value;\n    if (order === \'asc\') {\n      tableData.sort((a: any, b: any) => a[property] > b[property] ? 1 : -1);\n    } else {\n      tableData.sort((a: any, b: any) => a[property] > b[property] ? -1 : 1);\n    }\n  };\n  return {\n    template: /*html*/`\n    <nggv-table\n      [selectable]="selectable"\n      [tableColumns]="tableColumns"\n      [tableData]="tableData"\n      [allowLocalSort]="allowLocalSort"\n      rowId="id"\n      (ngvRowClick)="ngvRowClick($event)"\n      (ngvRowSelect)="ngvRowSelect($event)"\n      (ngvOrderBy)="ngvOrderBy($event)">\n    </nggv-table>`,\n    props: {\n      ...args,\n      ngvOrderBy: (value?: any) => filterData(value),\n      tableData: tableData\n    }\n  };\n}',...GlobalSort.parameters?.docs?.source}}}}}]);