(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[389],{"./libs/angular/src/v-angular/card/card.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'/**\n * Do not edit directly\n * Generated on Thu, 06 Feb 2025 18:59:50 GMT\n */\n/* stylelint-disable max-nesting-depth */\n/**\n * Assert that a map is in ascending order\n * @mixin assert-ascending\n * @param {Map} $map - The map to check\n * @param {String} $map-name - The name of the map\n */\n/**\n * Assert that the first breakpoint in a map starts at zero\n * @mixin assert-starts-at-zero\n * @param {Map} $map - The map to check\n * @param {String} $map-name - The name of the map\n */\n/**\n * Check if a value is important\n * @function is-important\n * @param {Boolean} $important - Whether the value is important\n * @return {String} - "!important" if true, otherwise an empty string\n */\n/**\n * Replace a substring in a string\n * @function str-replace\n * @param {String} $string - The original string\n * @param {String} $search - The substring to replace\n * @param {String} $replace - The replacement string\n * @return {String} - The updated string\n */\n/**\n * Convert a map to its negative variant\n * @function negativify-map\n * @param {Map} $map - The map to convert\n * @return {Map} - The negative variant of the map\n */\n/**\n * Generate utility classes\n * @mixin generate-utility\n * @param {Map} $utility - Utility map\n * @param {String} $infix - Infix for class names\n * @param {Boolean} $is-rfs-media-query - Whether to use RFS media query\n */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * @function luminance\n * @param {Color} $color - The color to calculate luminance for\n * @return {Number} - The luminance value\n */\n/**\n * Calculate the contrast ratio between two colors.\n * @function color-contrast\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @return {Number} - The contrast ratio\n */\n/**\n * Remove the unit of a length\n * @function strip-unit\n * @param {Number} $number - Number to remove unit from\n * @return {Number} - Unitless number\n */\n/**\n * Validate font size\n * @function validate-font-size\n * @param {Number} $size - Font size to validate\n * @return {Number} - Validated font size in pixels\n */\n/**\n * Get ratio for WCAG level\n * @function get-ratio\n * @param {String} $level - WCAG level\n * @param {Number} $size - Font size\n * @param {Boolean} $bold - Is bold\n * @param {Boolean} $graphic - Is graphic\n * @return {Number} - Ratio value\n */\n/**\n * Determine if a color is light or dark\n * @function light-or-dark\n * @param {Color} $color - The color to check\n * @return {String} - "light" or "dark"\n */\n/**\n * Get the most legible color (black or white) for a given background color\n * @function most-legible-color\n * @param {Color} $color - The background color\n * @return {Color} - The most legible color\n */\n/**\n * Get the desired color combination for foreground and background colors\n * @function desired-color-combination\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Number} $offsetThreshold - Offset threshold\n * @param {Number} $ratio - Contrast ratio\n * @return {List} - List containing background and foreground colors\n */\n/**\n * @mixin desired-color-combination\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Number} $offsetThreshold - Offset threshold\n * @param {Number} $ratio - Contrast ratio\n */\n/**\n * Get an accessible color for a given foreground and background color\n * @function a11y-color\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {String} $level - WCAG level\n * @param {Number} $size - Font size\n * @param {Boolean} $bold - Is bold\n * @param {Boolean} $graphic - Is graphic\n * @param {Number} $maxOffset - Maximum offset\n * @param {Boolean} $darkMode - Is dark mode\n * @param {Number} $ratio - Contrast ratio\n * @return {Color} - Accessible color\n */\n/**\n * Get the maximum contrast color\n * @function max-contrast\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Color} $max - Maximum contrast color\n * @return {Color} - Maximum contrast color\n */\n/**\n * Get the RGB values of a color as a string\n * @function stripped-rgb\n * @param {Color} $color - The color\n * @return {String} - RGB values as a string\n */\n/**\n * Get the HSL values of a color as a string\n * @function stripped-hsl\n * @param {Color} $color - The color\n * @return {String} - HSL values as a string\n */\n/**\n * Convert a map of colors to a map of HSL values\n * @function hsl-map\n * @param {Map} $colors - Map of colors\n * @return {Map} - Map of HSL values\n */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/**\n * Breakpoint viewport sizes and media queries.\n *\n * Breakpoints are defined as a map of (name: minimum width), order from small to large:\n *\n *    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n *\n * The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n */\n/**\n * Name of the next breakpoint, or null for the last breakpoint.\n *\n *    >> breakpoint-next(sm)\n *    md\n *    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    md\n *    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n *    md\n */\n/**\n * Minimum breakpoint width. Null for the smallest (first) breakpoint.\n *\n *    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    576px\n */\n/**\n * Maximum breakpoint width.\n * The maximum value is reduced by 0.02px to work around the limitations of\n * `min-` and `max-` prefixes and viewports with fractional widths.\n * See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n * Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n * See https://bugs.webkit.org/show_bug.cgi?id=178261\n *\n *    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    767.98px\n */\n/**\n * Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n * Useful for making responsive utilities.\n *\n *    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    ""  (Returns a blank string)\n *    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    "-sm"\n */\n/**\n * Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n * Makes the @content apply to the given breakpoint and wider.\n */\n/**\n * Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n * Makes the @content apply to the given breakpoint and narrower.\n */\n/**\n * Media that spans multiple breakpoint widths.\n * Makes the @content apply between the min and max breakpoints\n */\n/**\n * Media between the breakpoint\'s minimum and maximum widths.\n * No minimum for the smallest breakpoint, and no maximum for the largest one.\n * Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n */\n:host {\n  --gds-sys-color-blue: #41b0ee;\n  --gds-sys-color-dark-blue-1: #0092e1;\n  --gds-sys-color-dark-blue-2: #007ac7;\n  --gds-sys-color-green: #60cd18;\n  --gds-sys-color-dark-green-1: #45b400;\n  --gds-sys-color-dark-green-2: #308800;\n  --gds-sys-color-yellow: #ffc500;\n  --gds-sys-color-dark-yellow-1: #ffb400;\n  --gds-sys-color-dark-yellow-2: #f8a000;\n  --gds-sys-color-text-primary: #333333;\n  --gds-sys-color-text-secondary: #ababab;\n  --gds-sys-color-text-white: #ffffff;\n  --gds-sys-color-text-black: #333333;\n  --gds-sys-color-text-inverted: #ffffff;\n  --gds-sys-color-text-link: #0062bc;\n  --gds-sys-color-text-error: #9f000a;\n  --gds-sys-color-text-disabled: #adadad;\n  --gds-sys-color-red: #f03529;\n  --gds-sys-color-dark-red-1: #d81a1a;\n  --gds-sys-color-dark-red-2: #bb000c;\n  --gds-sys-color-purple: #673ab6;\n  --gds-sys-color-dark-purple-1: #4f2C99;\n  --gds-sys-color-dark-purple-2: #3f2587;\n  --gds-sys-color-white: #ffffff;\n  --gds-sys-color-black: #000000;\n  --gds-sys-color-background-primary: #ffffff;\n  --gds-sys-color-background-secondary: #eeeeee;\n  --gds-sys-color-base-100: #f8f8f8;\n  --gds-sys-color-base-200: #e9e9e9;\n  --gds-sys-color-base-300: #dedede;\n  --gds-sys-color-base-400: #cecece;\n  --gds-sys-color-base-500: #adadad;\n  --gds-sys-color-base-600: #868686;\n  --gds-sys-color-base-700: #494949;\n  --gds-sys-color-base-800: #333333;\n  --gds-sys-color-base-900: #1a1a1a;\n  --gds-sys-color-hover-10: rgba(255, 255, 255, 0.1);\n  --gds-sys-color-hover-20: rgba(255, 255, 255, 0.2);\n  background-clip: border-box;\n  background: var(--gds-sys-color-background-primary);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 0px 12px 0px rgba(0, 0, 0, 0.1019607843);\n  color: var(--gds-sys-color-text-primary);\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n}\n:host > header {\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n  margin-block-end: 1rem;\n}\n:host > header .close {\n  margin: -0.5rem -0.5rem -0.5rem 0.5rem;\n}\n:host > *:not(header, footer) {\n  flex: 1 1 auto;\n}\n:host > footer {\n  margin-top: 0.75rem;\n}\n@media (min-width: 36em) {\n  :host > footer {\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n@media (max-width: 35.98em) {\n  :host > footer button:not(.link) + button,\n  :host > footer button:not(.link) + .button,\n  :host > footer .button:not(.link) + button,\n  :host > footer .button:not(.link) + .button {\n    margin-top: 0.75rem;\n  }\n}\n@media (min-width: 36em) {\n  :host > footer button:not(.link) + button,\n  :host > footer button:not(.link) + .button,\n  :host > footer .button:not(.link) + button,\n  :host > footer .button:not(.link) + .button {\n    margin-left: 0.75rem;\n  }\n}\n:host:has(.card-row), :host:has(.card-row) {\n  display: table;\n  width: inherit;\n  box-sizing: border-box;\n}\n:host ::ng-deep .card-row {\n  display: table-row;\n}\n:host ::ng-deep .card-row * {\n  padding-bottom: 0.5rem;\n}\n:host ::ng-deep .card-row:last-child * {\n  padding-bottom: 0;\n}\n:host ::ng-deep .card-row.divider * {\n  border-top: 1px solid #d8d8d8;\n  padding-top: 0.375rem;\n}\n:host ::ng-deep .card-column {\n  display: table-cell;\n  text-align: start;\n}\n:host ::ng-deep .card-column:first-child {\n  text-align: start;\n}\n:host ::ng-deep .card-column:not(:first-child):not(:last-child) {\n  text-align: center;\n}\n:host ::ng-deep .card-column:last-child {\n  text-align: end;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./libs/angular/src/v-angular/card/card.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Divider:()=>Divider,WithColumns:()=>WithColumns,__namedExportsOrder:()=>__namedExportsOrder,default:()=>card_stories});var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),card_componentngResource=__webpack_require__("./libs/angular/src/v-angular/card/card.component.scss?ngResource"),card_componentngResource_default=__webpack_require__.n(card_componentngResource);let NggvCardComponent=class NggvCardComponent{};NggvCardComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-card",template:" <ng-content></ng-content> ",styles:[card_componentngResource_default()]})],NggvCardComponent);const card_stories={title:"V-Angular/Card",component:NggvCardComponent,decorators:[(0,dist.moduleMetadata)({imports:[common.CommonModule],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]}),(0,dist.componentWrapperDecorator)((story=>`<div style="width: 20rem">${story}</div>`))]},Basic=(()=>({template:"\n    <nggv-card>\n      Basic card\n    </nggv-card>"})).bind({}),WithColumns=(()=>({template:'\n    <nggv-card>\n      <div class="card-row">\n        <div class="card-column"> Column 1 </div>\n        <div class="card-column"> Column 2 </div>\n        <div class="card-column"> Column 3 </div>\n        <div class="card-column"> Column 4 </div>\n      </div>\n    </nggv-card>'})).bind({}),Divider=(()=>({template:'\n    <nggv-card>\n      <div class="card-row">\n        <div class="card-column"> <b>Expenses</b> </div>\n        <div class="card-column"></div>\n      </div>\n      <div class="card-row">\n        <div class="card-column"> Food </div>\n        <div class="card-column"> 11,00 € </div>\n      </div>\n      <div class="card-row">\n        <div class="card-column"> Bus tickets </div>\n        <div class="card-column"> 22,00 € </div>\n      </div>\n      <div class="card-row divider">\n        <div class="card-column"> Sum </div>\n        <div class="card-column"> 33,00 € </div>\n      </div>\n    </nggv-card>'})).bind({}),__namedExportsOrder=["Basic","WithColumns","Divider"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"() => ({\n  template: /*html*/`\n    <nggv-card>\n      Basic card\n    </nggv-card>`\n})",...Basic.parameters?.docs?.source}}},WithColumns.parameters={...WithColumns.parameters,docs:{...WithColumns.parameters?.docs,source:{originalSource:'() => ({\n  template: /*html*/`\n    <nggv-card>\n      <div class="card-row">\n        <div class="card-column"> Column 1 </div>\n        <div class="card-column"> Column 2 </div>\n        <div class="card-column"> Column 3 </div>\n        <div class="card-column"> Column 4 </div>\n      </div>\n    </nggv-card>`\n})',...WithColumns.parameters?.docs?.source}}},Divider.parameters={...Divider.parameters,docs:{...Divider.parameters?.docs,source:{originalSource:'() => ({\n  template: /*html*/`\n    <nggv-card>\n      <div class="card-row">\n        <div class="card-column"> <b>Expenses</b> </div>\n        <div class="card-column"></div>\n      </div>\n      <div class="card-row">\n        <div class="card-column"> Food </div>\n        <div class="card-column"> 11,00 € </div>\n      </div>\n      <div class="card-row">\n        <div class="card-column"> Bus tickets </div>\n        <div class="card-column"> 22,00 € </div>\n      </div>\n      <div class="card-row divider">\n        <div class="card-column"> Sum </div>\n        <div class="card-column"> 33,00 € </div>\n      </div>\n    </nggv-card>`\n})',...Divider.parameters?.docs?.source}}}}}]);