"use strict";(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[429],{"./libs/angular/src/v-angular/base-control-value-accessor/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>NggvBaseControlValueAccessorComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),jsverse_transloco=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs"),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js");let NggvBaseControlValueAccessorComponent=class NggvBaseControlValueAccessorComponent{set locked(value){this._locked=value,this.cdr.detectChanges()}get locked(){return this._locked}set required(value){this._required=value}get required(){if(void 0!==this._required)return this._required;if(this.ngControl?.control?.validator){const validator=this.ngControl?.control?.validator({});return Object.keys(validator??{}).some((key=>key.startsWith("required")))}}set invalid(value){this._invalid=value}get invalid(){return!0===this._invalid||!1===this._invalid?this._invalid:!!this.ngControl?.control?.invalid&&this.ngControl?.control?.touched}set valid(value){this._valid=value}get valid(){return!0===this._valid||!1===this._valid?this._valid:!!this.ngControl?.control?.valid&&this.ngControl?.control?.touched}set disabled(value){this._disabled=value}get disabled(){return!0===this._disabled||!1===this._disabled?this._disabled:!!this.ngControl?.control?.disabled}constructor(ngControl,translocoScope,cdr){this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.id=window.nggv?.nextId(),this.withErrorIcon=!1,this.descriptionIsVisible=!0,this.autofocus=!1,this._locked=void 0,this._required=void 0,this._invalid=void 0,this._valid=void 0,this.focused=!1,this._disabled=void 0,this.nggvFocus=new core.EventEmitter,this.nggvBlur=new core.EventEmitter,this._state=null,this.onChange=_=>{},this.onTouched=()=>{},this.onValidatorChange=()=>null,this._onDestroy$=new Subject.B,this.ngControl&&(this.ngControl.valueAccessor=this),this.translocoScope&&(this.scope=this.translocoScope.toString())}ngOnInit(){this.ngControl&&this.ngControl.control&&this.ngControl.control.setValidators(fesm2022_forms.k0.compose([this.ngControl.control.validator,this.validate])),this.reset?.pipe((0,takeUntil.Q)(this._onDestroy$)).subscribe({next:()=>{this.state=this.defaultValue,this.onChange(this.state),this.cdr.detectChanges()}})}ngAfterViewInit(){this.defaultValue=this.defaultValue??this.ngControl?.value}ngOnDestroy(){this._onDestroy$.next(!0),this._onDestroy$.complete()}detectChanges(){this.cdr.detectChanges()}onFocus(event){event.stopPropagation?event.stopPropagation():event.cancelBubble=!0,this.focused=!0,this.nggvFocus.emit(event)}onBlur(event){event.stopPropagation?event.stopPropagation():event.cancelBubble=!0,this.onTouched(),this.focused=!1,this.nggvBlur.emit(event)}setFocus(){this.inputRef&&this.inputRef.nativeElement.focus()}get state(){return this._state}set state(value){void 0===value&&(value=null),this._state=value}writeValue(value){this.state=value}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled,this.displayDisabledAsLocked&&(this.locked=isDisabled)}validate(_control){return null}registerOnValidatorChange(fn){this.onValidatorChange=fn}get firstError(){const errors=this.ngControl.errors;if(!errors)return null;const code=Object.keys(errors)[0];return{code,params:errors[code]}}static{this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ChangeDetectorRef}]}static{this.propDecorators={labelContentTpl:[{type:core.ContentChild,args:["labelTpl",{read:core.TemplateRef}]}],lockedTpl:[{type:core.ContentChild,args:["lockedTpl",{read:core.TemplateRef}]}],inputRef:[{type:core.ViewChild,args:["input",{read:core.ElementRef}]}],id:[{type:core.HostBinding,args:["attr.id"]},{type:core.Input}],name:[{type:core.Input}],label:[{type:core.Input}],role:[{type:core.Input}],value:[{type:core.Input}],error:[{type:core.Input}],errorList:[{type:core.Input}],withErrorIcon:[{type:core.Input}],description:[{type:core.Input}],descriptionIsVisible:[{type:core.Input}],autofocus:[{type:core.Input}],defaultValue:[{type:core.Input}],reset:[{type:core.Input}],optional:[{type:core.Input}],locked:[{type:core.Input}],displayDisabledAsLocked:[{type:core.Input}],required:[{type:core.Input}],invalid:[{type:core.Input}],valid:[{type:core.Input}],focused:[{type:core.Input}],disabled:[{type:core.Input}],nggvFocus:[{type:core.Output}],nggvBlur:[{type:core.Output}]}}};NggvBaseControlValueAccessorComponent=(0,tslib_es6.Cg)([(0,core.Injectable)(),(0,core.Component)({template:""}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],NggvBaseControlValueAccessorComponent);let NggvBaseControlValueAccessorModule=class NggvBaseControlValueAccessorModule{};NggvBaseControlValueAccessorModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[NggvBaseControlValueAccessorComponent],imports:[],exports:[NggvBaseControlValueAccessorComponent]})],NggvBaseControlValueAccessorModule)},"./libs/angular/src/v-angular/external-link/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>external_link_directive.z,r:()=>NggvExternalLinkDirectiveModule});var external_link_directive=__webpack_require__("./libs/angular/src/v-angular/external-link/external-link.directive.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let NggvExternalLinkDirectiveModule=class NggvExternalLinkDirectiveModule{};NggvExternalLinkDirectiveModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[external_link_directive.z],imports:[common.CommonModule],exports:[external_link_directive.z]})],NggvExternalLinkDirectiveModule)},"./libs/angular/src/v-angular/button/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Alternative:()=>Alternative,Delete:()=>Delete,DeleteConfirm:()=>DeleteConfirm,Ghost:()=>Ghost,GhostDark:()=>GhostDark,Link:()=>Link,Primary:()=>Primary,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_angular_router_testing__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/router/fesm2022/testing.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_sebgroup_green_angular_src_v_angular_external_link__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/angular/src/v-angular/external-link/index.ts"),_button_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/angular/src/v-angular/button/button.component.ts");const getButtonText=type=>`${_button_component__WEBPACK_IMPORTED_MODULE_2__.i[type]} button`,__WEBPACK_DEFAULT_EXPORT__={title:"V-Angular/Button",component:_button_component__WEBPACK_IMPORTED_MODULE_2__.C,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.applicationConfig)({providers:[{provide:_angular_common__WEBPACK_IMPORTED_MODULE_3__.APP_BASE_HREF,useValue:"/"}]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule,_angular_router_testing__WEBPACK_IMPORTED_MODULE_4__.c],declarations:[_sebgroup_green_angular_src_v_angular_external_link__WEBPACK_IMPORTED_MODULE_1__.z]})],argTypes:{type:{options:["button","submit","reset","link"],control:{type:"select"}},buttonStyle:{table:{disable:!0}},clickAction:{table:{disable:!0}}}},Template=args=>({template:'\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>',styles:["\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }"],props:args}),Primary=Template.bind({});Primary.args={buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Primary,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Primary),small:!1,clickAction:console.log};const Secondary=Template.bind({});Secondary.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Secondary,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Secondary)};const Alternative=Template.bind({});Alternative.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Alternative,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Alternative)};const Delete=Template.bind({});Delete.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Delete,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Delete)};const DeleteConfirm=Template.bind({});DeleteConfirm.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.DeleteConfirm,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.DeleteConfirm)};const Ghost=Template.bind({});Ghost.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Ghost,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Ghost)};const GhostDark=Template.bind({});GhostDark.args={...Primary.args,buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.GhostDark,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.GhostDark)};const Link=Template.bind({});Link.args={...Primary.args,type:"link",href:"https://seb.se",buttonStyle:_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Link,text:getButtonText(_button_component__WEBPACK_IMPORTED_MODULE_2__.i.Link)};const __namedExportsOrder=["Primary","Secondary","Alternative","Delete","DeleteConfirm","Ghost","GhostDark","Link"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Secondary.parameters?.docs?.source}}},Alternative.parameters={...Alternative.parameters,docs:{...Alternative.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Alternative.parameters?.docs?.source}}},Delete.parameters={...Delete.parameters,docs:{...Delete.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Delete.parameters?.docs?.source}}},DeleteConfirm.parameters={...DeleteConfirm.parameters,docs:{...DeleteConfirm.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...DeleteConfirm.parameters?.docs?.source}}},Ghost.parameters={...Ghost.parameters,docs:{...Ghost.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Ghost.parameters?.docs?.source}}},GhostDark.parameters={...GhostDark.parameters,docs:{...GhostDark.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...GhostDark.parameters?.docs?.source}}},Link.parameters={...Link.parameters,docs:{...Link.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <div class="button-wrapper button-wrapper--{{ text }}">\n      <nggv-button\n        [small]="small"\n        [type]="type || \'button\'"\n        [href]="href"\n        [disabled]="disabled"\n        [buttonStyle]="buttonStyle"\n        (nggvClick)="clickAction(text + \' clicked!\')">\n        {{ text }}\n      </nggv-button>\n    </div>`,\n  styles: [`\n    .button-wrapper {\n      display: flex;\n      justify-content: center;\n      padding: 2rem 0;\n    }\n    .button-wrapper--Ghost {\n      background-color: #673ab6;\n    }\n    .button-wrapper--GhostDark {\n      background-color: #ffc500;\n    }`],\n  props: args\n})',...Link.parameters?.docs?.source}}}}}]);