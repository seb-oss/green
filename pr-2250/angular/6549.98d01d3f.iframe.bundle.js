(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[6549],{"./libs/angular/src/v-angular/button/button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'/**\n * Do not edit directly\n * Generated on Thu, 06 Feb 2025 18:59:50 GMT\n */\n/* stylelint-disable max-nesting-depth */\n/**\n * Assert that a map is in ascending order\n * @mixin assert-ascending\n * @param {Map} $map - The map to check\n * @param {String} $map-name - The name of the map\n */\n/**\n * Assert that the first breakpoint in a map starts at zero\n * @mixin assert-starts-at-zero\n * @param {Map} $map - The map to check\n * @param {String} $map-name - The name of the map\n */\n/**\n * Check if a value is important\n * @function is-important\n * @param {Boolean} $important - Whether the value is important\n * @return {String} - "!important" if true, otherwise an empty string\n */\n/**\n * Replace a substring in a string\n * @function str-replace\n * @param {String} $string - The original string\n * @param {String} $search - The substring to replace\n * @param {String} $replace - The replacement string\n * @return {String} - The updated string\n */\n/**\n * Convert a map to its negative variant\n * @function negativify-map\n * @param {Map} $map - The map to convert\n * @return {Map} - The negative variant of the map\n */\n/**\n * Generate utility classes\n * @mixin generate-utility\n * @param {Map} $utility - Utility map\n * @param {String} $infix - Infix for class names\n * @param {Boolean} $is-rfs-media-query - Whether to use RFS media query\n */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * @function luminance\n * @param {Color} $color - The color to calculate luminance for\n * @return {Number} - The luminance value\n */\n/**\n * Calculate the contrast ratio between two colors.\n * @function color-contrast\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @return {Number} - The contrast ratio\n */\n/**\n * Remove the unit of a length\n * @function strip-unit\n * @param {Number} $number - Number to remove unit from\n * @return {Number} - Unitless number\n */\n/**\n * Validate font size\n * @function validate-font-size\n * @param {Number} $size - Font size to validate\n * @return {Number} - Validated font size in pixels\n */\n/**\n * Get ratio for WCAG level\n * @function get-ratio\n * @param {String} $level - WCAG level\n * @param {Number} $size - Font size\n * @param {Boolean} $bold - Is bold\n * @param {Boolean} $graphic - Is graphic\n * @return {Number} - Ratio value\n */\n/**\n * Determine if a color is light or dark\n * @function light-or-dark\n * @param {Color} $color - The color to check\n * @return {String} - "light" or "dark"\n */\n/**\n * Get the most legible color (black or white) for a given background color\n * @function most-legible-color\n * @param {Color} $color - The background color\n * @return {Color} - The most legible color\n */\n/**\n * Get the desired color combination for foreground and background colors\n * @function desired-color-combination\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Number} $offsetThreshold - Offset threshold\n * @param {Number} $ratio - Contrast ratio\n * @return {List} - List containing background and foreground colors\n */\n/**\n * @mixin desired-color-combination\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Number} $offsetThreshold - Offset threshold\n * @param {Number} $ratio - Contrast ratio\n */\n/**\n * Get an accessible color for a given foreground and background color\n * @function a11y-color\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {String} $level - WCAG level\n * @param {Number} $size - Font size\n * @param {Boolean} $bold - Is bold\n * @param {Boolean} $graphic - Is graphic\n * @param {Number} $maxOffset - Maximum offset\n * @param {Boolean} $darkMode - Is dark mode\n * @param {Number} $ratio - Contrast ratio\n * @return {Color} - Accessible color\n */\n/**\n * Get the maximum contrast color\n * @function max-contrast\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Color} $max - Maximum contrast color\n * @return {Color} - Maximum contrast color\n */\n/**\n * Get the RGB values of a color as a string\n * @function stripped-rgb\n * @param {Color} $color - The color\n * @return {String} - RGB values as a string\n */\n/**\n * Get the HSL values of a color as a string\n * @function stripped-hsl\n * @param {Color} $color - The color\n * @return {String} - HSL values as a string\n */\n/**\n * Convert a map of colors to a map of HSL values\n * @function hsl-map\n * @param {Map} $colors - Map of colors\n * @return {Map} - Map of HSL values\n */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/**\n * Breakpoint viewport sizes and media queries.\n *\n * Breakpoints are defined as a map of (name: minimum width), order from small to large:\n *\n *    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n *\n * The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n */\n/**\n * Name of the next breakpoint, or null for the last breakpoint.\n *\n *    >> breakpoint-next(sm)\n *    md\n *    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    md\n *    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n *    md\n */\n/**\n * Minimum breakpoint width. Null for the smallest (first) breakpoint.\n *\n *    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    576px\n */\n/**\n * Maximum breakpoint width.\n * The maximum value is reduced by 0.02px to work around the limitations of\n * `min-` and `max-` prefixes and viewports with fractional widths.\n * See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n * Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n * See https://bugs.webkit.org/show_bug.cgi?id=178261\n *\n *    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    767.98px\n */\n/**\n * Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n * Useful for making responsive utilities.\n *\n *    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    ""  (Returns a blank string)\n *    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    "-sm"\n */\n/**\n * Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n * Makes the @content apply to the given breakpoint and wider.\n */\n/**\n * Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n * Makes the @content apply to the given breakpoint and narrower.\n */\n/**\n * Media that spans multiple breakpoint widths.\n * Makes the @content apply between the min and max breakpoints\n */\n/**\n * Media between the breakpoint\'s minimum and maximum widths.\n * No minimum for the smallest breakpoint, and no maximum for the largest one.\n * Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n */\n:host {\n  --gds-sys-color-blue: #41b0ee;\n  --gds-sys-color-dark-blue-1: #0092e1;\n  --gds-sys-color-dark-blue-2: #007ac7;\n  --gds-sys-color-green: #60cd18;\n  --gds-sys-color-dark-green-1: #45b400;\n  --gds-sys-color-dark-green-2: #308800;\n  --gds-sys-color-yellow: #ffc500;\n  --gds-sys-color-dark-yellow-1: #ffb400;\n  --gds-sys-color-dark-yellow-2: #f8a000;\n  --gds-sys-color-text-primary: #333333;\n  --gds-sys-color-text-secondary: #ababab;\n  --gds-sys-color-text-white: #ffffff;\n  --gds-sys-color-text-black: #333333;\n  --gds-sys-color-text-inverted: #ffffff;\n  --gds-sys-color-text-link: #0062bc;\n  --gds-sys-color-text-error: #9f000a;\n  --gds-sys-color-text-disabled: #adadad;\n  --gds-sys-color-red: #f03529;\n  --gds-sys-color-dark-red-1: #d81a1a;\n  --gds-sys-color-dark-red-2: #bb000c;\n  --gds-sys-color-purple: #673ab6;\n  --gds-sys-color-dark-purple-1: #4f2C99;\n  --gds-sys-color-dark-purple-2: #3f2587;\n  --gds-sys-color-white: #ffffff;\n  --gds-sys-color-black: #000000;\n  --gds-sys-color-background-primary: #ffffff;\n  --gds-sys-color-background-secondary: #eeeeee;\n  --gds-sys-color-base-100: #f8f8f8;\n  --gds-sys-color-base-200: #e9e9e9;\n  --gds-sys-color-base-300: #dedede;\n  --gds-sys-color-base-400: #cecece;\n  --gds-sys-color-base-500: #adadad;\n  --gds-sys-color-base-600: #868686;\n  --gds-sys-color-base-700: #494949;\n  --gds-sys-color-base-800: #333333;\n  --gds-sys-color-base-900: #1a1a1a;\n  --gds-sys-color-hover-10: rgba(255, 255, 255, 0.1);\n  --gds-sys-color-hover-20: rgba(255, 255, 255, 0.2);\n}\n:host button,\n:host a {\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  font-family: inherit;\n  padding: 0;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  border-radius: 0.25rem;\n  border: solid 1px var(--gds-sys-color-base-600);\n  font-weight: 500;\n  box-sizing: border-box;\n  font-size: 1rem;\n  font-family: inherit;\n}\n:host button:focus:not(:focus-visible),\n:host a:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host button:focus, :host button:focus-visible,\n:host a:focus,\n:host a:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host button,\n:host a {\n  min-height: 2.75rem;\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n}\n@media (max-width: 35.98em) {\n  :host button,\n  :host a {\n    min-width: 100%;\n  }\n}\n@media screen and (-ms-high-contrast: active) {\n  :host button,\n  :host a {\n    border: 2px solid currentcolor;\n  }\n}\n:host button.small,\n:host a.small {\n  min-height: 2rem;\n  height: 2rem;\n  padding: 0.4375rem 0.75rem;\n  font-size: 0.875rem;\n  line-height: 1rem;\n}\n:host button.large,\n:host a.large {\n  min-height: 4rem;\n  padding: 1rem 1.5rem;\n  font-size: 1.5rem;\n  line-height: 2rem;\n}\n:host .primary {\n  transition: all var(--gds-sys-transition), outline-offset 0s, outline-width 0s;\n}\n:host .primary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background: var(--gds-sys-color-dark-blue-1);\n  color: var(--gds-sys-color-text-white);\n  --background: var(--gds-sys-color-dark-blue-1);\n  --color: var(--gds-sys-color-text-white);\n  border-color: var(--gds-sys-color-dark-blue-1);\n}\n:host .primary[aria-selected=true], :host .primary:active, :host .primary.active, :host .primary.active:hover, :host .primary:active:hover {\n  background: var(--gds-sys-color-dark-blue-2);\n  color: var(--gds-sys-color-text-white);\n  --background: $bg;\n  --color: $color;\n  border-color: var(--gds-sys-color-dark-blue-2);\n}\n:host .primary {\n  background: var(--gds-sys-color-dark-blue-2);\n  border-color: var(--gds-sys-color-dark-blue-2);\n  color: var(--gds-sys-color-text-white);\n  --color: var(--gds-sys-color-text-white);\n}\n:host .primary:disabled, :host .primary.disabled, :host .primary[aria-disabled=true] {\n  background: var(--gds-sys-color-base-300) !important;\n  color: var(--gds-sys-color-text-disabled) !important;\n  border-color: var(--gds-sys-color-text-disabled) !important;\n  cursor: not-allowed;\n}\n:host .primary:disabled::placeholder, :host .primary.disabled::placeholder, :host .primary[aria-disabled=true]::placeholder {\n  color: var(--gds-sys-color-text-disabled);\n}\n:host .secondary {\n  transition: all var(--gds-sys-transition), outline-offset 0s, outline-width 0s;\n}\n:host .secondary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .secondary:focus, :host .secondary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .secondary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background: var(--gds-sys-color-dark-blue-1);\n  color: var(--gds-sys-color-text-white);\n  --background: var(--gds-sys-color-dark-blue-1);\n  --color: var(--gds-sys-color-text-white);\n  border-color: var(--gds-sys-color-dark-blue-1);\n}\n:host .secondary[aria-selected=true], :host .secondary:active, :host .secondary.active, :host .secondary.active:hover, :host .secondary:active:hover {\n  background: var(--gds-sys-color-dark-blue-2);\n  color: var(--gds-sys-color-text-white);\n  --background: $bg;\n  --color: $color;\n  border-color: var(--gds-sys-color-dark-blue-2);\n}\n:host .secondary {\n  background: transparent;\n  border-color: var(--gds-sys-color-dark-blue-2);\n  color: var(--gds-sys-color-dark-blue-2);\n  --color: var(--gds-sys-color-dark-blue-2);\n}\n:host .secondary:disabled, :host .secondary.disabled, :host .secondary[aria-disabled=true] {\n  background: var(--gds-sys-color-base-300) !important;\n  color: var(--gds-sys-color-text-disabled) !important;\n  border-color: var(--gds-sys-color-text-disabled) !important;\n  cursor: not-allowed;\n}\n:host .secondary:disabled::placeholder, :host .secondary.disabled::placeholder, :host .secondary[aria-disabled=true]::placeholder {\n  color: var(--gds-sys-color-text-disabled);\n}\n:host .tertiary {\n  transition: all var(--gds-sys-transition), outline-offset 0s, outline-width 0s;\n}\n:host .tertiary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .tertiary:focus, :host .tertiary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .tertiary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background: var(--gds-sys-color-dark-blue-1);\n  color: var(--gds-sys-color-text-white);\n  --background: var(--gds-sys-color-dark-blue-1);\n  --color: var(--gds-sys-color-text-white);\n  border-color: var(--gds-sys-color-dark-blue-1);\n}\n:host .tertiary[aria-selected=true], :host .tertiary:active, :host .tertiary.active, :host .tertiary.active:hover, :host .tertiary:active:hover {\n  background: var(--gds-sys-color-dark-blue-2);\n  color: var(--gds-sys-color-text-white);\n  --background: $bg;\n  --color: $color;\n  border-color: var(--gds-sys-color-dark-blue-2);\n}\n:host .tertiary {\n  background: transparent;\n  border-color: transparent;\n  color: var(--gds-sys-color-dark-blue-2);\n  --color: var(--gds-sys-color-dark-blue-2);\n}\n:host .tertiary:disabled, :host .tertiary.disabled, :host .tertiary[aria-disabled=true] {\n  background: var(--gds-sys-color-base-300) !important;\n  color: var(--gds-sys-color-text-disabled) !important;\n  border-color: var(--gds-sys-color-text-disabled) !important;\n  cursor: not-allowed;\n}\n:host .tertiary:disabled::placeholder, :host .tertiary.disabled::placeholder, :host .tertiary[aria-disabled=true]::placeholder {\n  color: var(--gds-sys-color-text-disabled);\n}\n:host .ghost-light {\n  --gds-sys-color-focus-outline: var(--gds-sys-color-white);\n  transition: all var(--gds-sys-transition), outline-offset 0s, outline-width 0s;\n}\n:host .ghost-light:not(:disabled, .disabled, [aria-disabled]):hover {\n  background: var(--gds-sys-color-white);\n  color: var(--gds-sys-color-text-primary);\n  --background: var(--gds-sys-color-white);\n  --color: var(--gds-sys-color-text-primary);\n  border-color: var(--gds-sys-color-white);\n}\n:host .ghost-light[aria-selected=true], :host .ghost-light:active, :host .ghost-light.active, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  background: var(--gds-sys-color-base-200);\n  color: var(--gds-sys-color-text-primary);\n  --background: $bg;\n  --color: $color;\n  border-color: var(--gds-sys-color-base-200);\n}\n:host .ghost-light[aria-selected]:hover, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  opacity: 0.9;\n}\n:host .ghost-light {\n  background-color: transparent;\n  border-color: var(--gds-sys-color-white);\n  color: var(--gds-sys-color-white);\n  --color: var(--gds-sys-color-white);\n}\n:host .ghost-light:disabled, :host .ghost-light.disabled, :host .ghost-light[aria-disabled=true] {\n  color: var(--gds-sys-color-text-disabled) !important;\n  border-color: var(--gds-sys-color-text-disabled) !important;\n  cursor: not-allowed;\n}\n:host .ghost-light:disabled::placeholder, :host .ghost-light.disabled::placeholder, :host .ghost-light[aria-disabled=true]::placeholder {\n  color: var(--gds-sys-color-text-disabled);\n}\n:host .ghost {\n  transition: all var(--gds-sys-transition), outline-offset 0s, outline-width 0s;\n  background-color: transparent;\n  border-color: var(--gds-sys-color-base-800);\n  color: var(--gds-sys-color-base-800);\n  --color: var(--gds-sys-color-base-800);\n}\n:host .ghost:not(:disabled, .disabled, [aria-disabled]):hover {\n  background: var(--gds-sys-color-base-800);\n  color: var(--gds-sys-color-text-white);\n  --background: var(--gds-sys-color-base-800);\n  --color: var(--gds-sys-color-text-white);\n  border-color: var(--gds-sys-color-base-800);\n}\n:host .ghost[aria-selected=true], :host .ghost:active, :host .ghost.active, :host .ghost.active:hover, :host .ghost:active:hover {\n  background: var(--gds-sys-color-base-800);\n  color: var(--gds-sys-color-text-white);\n  --background: $bg;\n  --color: $color;\n  border-color: var(--gds-sys-color-base-800);\n}\n:host .ghost[aria-selected]:hover, :host .ghost.active:hover, :host .ghost:active:hover {\n  opacity: 0.9;\n}\n:host .ghost:disabled, :host .ghost.disabled, :host .ghost[aria-disabled=true] {\n  color: var(--gds-sys-color-text-disabled) !important;\n  border-color: var(--gds-sys-color-text-disabled) !important;\n  cursor: not-allowed;\n}\n:host .ghost:disabled::placeholder, :host .ghost.disabled::placeholder, :host .ghost[aria-disabled=true]::placeholder {\n  color: var(--gds-sys-color-text-disabled);\n}\n:host .danger.primary {\n  background: var(--gds-sys-color-dark-red-1);\n  border-color: var(--gds-sys-color-dark-red-1);\n  color: var(--gds-sys-color-text-white);\n  --color: var(--gds-sys-color-text-white);\n  transition: all var(--gds-sys-transition), outline-offset 0s, outline-width 0s;\n}\n:host .danger.primary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background: var(--gds-sys-color-dark-red-1);\n  color: var(--gds-sys-color-text-white);\n  --background: var(--gds-sys-color-dark-red-1);\n  --color: var(--gds-sys-color-text-white);\n  border-color: var(--gds-sys-color-dark-red-1);\n}\n:host .danger.primary[aria-selected=true], :host .danger.primary:active, :host .danger.primary.active, :host .danger.primary.active:hover, :host .danger.primary:active:hover {\n  background: var(--gds-sys-color-dark-red-1);\n  color: var(--gds-sys-color-text-white);\n  --background: $bg;\n  --color: $color;\n  border-color: var(--gds-sys-color-dark-red-1);\n}\n:host .danger.primary[aria-selected]:hover, :host .danger.primary.active:hover, :host .danger.primary:active:hover {\n  opacity: 0.9;\n}\n:host .danger.primary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .danger.primary:focus, :host .danger.primary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .danger.primary:disabled, :host .danger.primary.disabled, :host .danger.primary[aria-disabled=true] {\n  background: var(--gds-sys-color-background-primary) !important;\n  color: var(--gds-sys-color-text-white) !important;\n  border-color: var(--gds-sys-color-dark-red-1) !important;\n  cursor: not-allowed;\n}\n:host .danger.primary:disabled::placeholder, :host .danger.primary.disabled::placeholder, :host .danger.primary[aria-disabled=true]::placeholder {\n  color: var(--gds-sys-color-text-disabled);\n}\n:host .danger:not(.primary) {\n  color: var(--gds-sys-color-dark-red-1);\n  --color: var(--gds-sys-color-dark-red-1);\n  border-color: transparent;\n  transition: all var(--gds-sys-transition), outline-offset 0s, outline-width 0s;\n}\n:host .danger:not(.primary):not(:disabled, .disabled, [aria-disabled]):hover {\n  background: var(--gds-sys-color-dark-red-1);\n  color: var(--gds-sys-color-text-white);\n  --background: var(--gds-sys-color-dark-red-1);\n  --color: var(--gds-sys-color-text-white);\n  border-color: var(--gds-sys-color-dark-red-1);\n}\n:host .danger:not(.primary)[aria-selected=true], :host .danger:not(.primary):active, :host .danger:not(.primary).active, :host .danger:not(.primary).active:hover, :host .danger:not(.primary):active:hover {\n  background: var(--gds-sys-color-dark-red-1);\n  color: var(--gds-sys-color-text-white);\n  --background: $bg;\n  --color: $color;\n  border-color: var(--gds-sys-color-dark-red-1);\n}\n:host .danger:not(.primary)[aria-selected]:hover, :host .danger:not(.primary).active:hover, :host .danger:not(.primary):active:hover {\n  opacity: 0.9;\n}\n:host .danger:not(.primary):focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .danger:not(.primary):focus, :host .danger:not(.primary):focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/button/button.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{i:()=>ButtonStyle,C:()=>NggvButtonComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var NggvButtonComponent_1,ButtonStyle,button_componentngResource=__webpack_require__("./libs/angular/src/v-angular/button/button.component.scss?ngResource"),button_componentngResource_default=__webpack_require__.n(button_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),jsverse_transloco=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs"),base_control_value_accessor=__webpack_require__("./libs/angular/src/v-angular/base-control-value-accessor/index.ts");!function(ButtonStyle){ButtonStyle[ButtonStyle.Primary=0]="Primary",ButtonStyle[ButtonStyle.Secondary=1]="Secondary",ButtonStyle[ButtonStyle.Alternative=2]="Alternative",ButtonStyle[ButtonStyle.Delete=3]="Delete",ButtonStyle[ButtonStyle.DeleteConfirm=4]="DeleteConfirm",ButtonStyle[ButtonStyle.Ghost=5]="Ghost",ButtonStyle[ButtonStyle.GhostDark=6]="GhostDark",ButtonStyle[ButtonStyle.Link=7]="Link"}(ButtonStyle||(ButtonStyle={}));let NggvButtonComponent=class NggvButtonComponent extends base_control_value_accessor.E{static{NggvButtonComponent_1=this}constructor(ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.thook="button",this.type="button",this.buttonStyle="link"===this.type?ButtonStyle.Link:ButtonStyle.Primary,this.small=!1,this.external=!1,this.buttonClasses={},this.nggvClick=new core.EventEmitter}static buttonStyleClasses(type,small){return{small,primary:type===ButtonStyle.Primary||type===ButtonStyle.Delete,secondary:type===ButtonStyle.Secondary,tertiary:type===ButtonStyle.Alternative||type===ButtonStyle.Link,danger:type===ButtonStyle.Delete||type===ButtonStyle.DeleteConfirm,ghost:type===ButtonStyle.GhostDark,"ghost-light":type===ButtonStyle.Ghost}}ngOnInit(){super.ngOnInit(),this.href&&(this.external=/^\w+:\/\/.+$/.test(this.href)),this.buttonClasses=NggvButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small)}ngOnChanges(changes){(changes.buttonStyle||changes.small)&&(this.buttonClasses=NggvButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small))}onClick(event){this.disabled||this.nggvClick.emit(event)}static{this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ChangeDetectorRef}]}static{this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],type:[{type:core.Input}],buttonStyle:[{type:core.Input}],small:[{type:core.Input}],href:[{type:core.Input}],nggvClick:[{type:core.Output}]}}};NggvButtonComponent=NggvButtonComponent_1=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-button",template:'<button\n  #input\n  [ngClass]="buttonClasses"\n  [id]="id + \'-button\'"\n  [attr.name]="name"\n  [attr.value]="value"\n  [type]="type"\n  [autofocus]="autofocus"\n  [disabled]="disabled"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type !== \'link\'"\n>\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</button>\n\n<a\n  #input\n  [ngClass]="buttonClasses"\n  role="button"\n  [id]="id + \'-link\'"\n  [routerLink]="href"\n  [external]="external"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type === \'link\'"\n>\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</a>\n\n<ng-template #contentRef>\n  <ng-content></ng-content>\n</ng-template>\n',styles:[button_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],NggvButtonComponent)},"./libs/angular/src/v-angular/external-link/external-link.directive.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>NggvExternalLinkDirective});var tslib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_router__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/router/fesm2022/router.mjs");let NggvExternalLinkDirective=class NggvExternalLinkDirective{constructor(link){this.link=link,this.external=!1}ngOnInit(){this.external&&(this.link.onClick=()=>(window.location.href=this.link.routerLink?.toString()||"",!1))}static{this.ctorParameters=()=>[{type:_angular_router__WEBPACK_IMPORTED_MODULE_0__.Wk}]}static{this.propDecorators={external:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input}]}}};NggvExternalLinkDirective=(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive)({selector:"a[routerLink]"}),(0,tslib__WEBPACK_IMPORTED_MODULE_2__.Sn)("design:paramtypes",[_angular_router__WEBPACK_IMPORTED_MODULE_0__.Wk])],NggvExternalLinkDirective)}}]);