"use strict";(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[7495],{"./libs/angular/src/lib/context-menu/context-menu.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>NggContextMenuComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),context_menu_component=__webpack_require__("./dist/libs/core/src/components/context-menu/context-menu.component.js"),listbox_trans_styles=(__webpack_require__("./dist/libs/core/src/chunks/chunk.QU3DSPNU.js"),__webpack_require__("./dist/libs/core/src/primitives/listbox/listbox.trans.styles.js")),transitional_styles=__webpack_require__("./dist/libs/core/src/utils/transitional-styles/transitional-styles.js"),button_trans_styles=__webpack_require__("./dist/libs/core/src/components/button/button.trans.styles.js"),popover_trans_styles=__webpack_require__("./dist/libs/core/src/components/popover/popover.trans.styles.js");const context_menu_trans_styles_scss='/* stylelint-disable max-nesting-depth */\n/**\n * Assert that a map is in ascending order\n * @mixin assert-ascending\n * @param {Map} $map - The map to check\n * @param {String} $map-name - The name of the map\n */\n/**\n * Assert that the first breakpoint in a map starts at zero\n * @mixin assert-starts-at-zero\n * @param {Map} $map - The map to check\n * @param {String} $map-name - The name of the map\n */\n/**\n * Check if a value is important\n * @function is-important\n * @param {Boolean} $important - Whether the value is important\n * @return {String} - "!important" if true, otherwise an empty string\n */\n/**\n * Replace a substring in a string\n * @function str-replace\n * @param {String} $string - The original string\n * @param {String} $search - The substring to replace\n * @param {String} $replace - The replacement string\n * @return {String} - The updated string\n */\n/**\n * Convert a map to its negative variant\n * @function negativify-map\n * @param {Map} $map - The map to convert\n * @return {Map} - The negative variant of the map\n */\n/**\n * Generate utility classes\n * @mixin generate-utility\n * @param {Map} $utility - Utility map\n * @param {String} $infix - Infix for class names\n * @param {Boolean} $is-rfs-media-query - Whether to use RFS media query\n */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * @function luminance\n * @param {Color} $color - The color to calculate luminance for\n * @return {Number} - The luminance value\n */\n/**\n * Calculate the contrast ratio between two colors.\n * @function color-contrast\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @return {Number} - The contrast ratio\n */\n/**\n * Remove the unit of a length\n * @function strip-unit\n * @param {Number} $number - Number to remove unit from\n * @return {Number} - Unitless number\n */\n/**\n * Validate font size\n * @function validate-font-size\n * @param {Number} $size - Font size to validate\n * @return {Number} - Validated font size in pixels\n */\n/**\n * Get ratio for WCAG level\n * @function get-ratio\n * @param {String} $level - WCAG level\n * @param {Number} $size - Font size\n * @param {Boolean} $bold - Is bold\n * @param {Boolean} $graphic - Is graphic\n * @return {Number} - Ratio value\n */\n/**\n * Determine if a color is light or dark\n * @function light-or-dark\n * @param {Color} $color - The color to check\n * @return {String} - "light" or "dark"\n */\n/**\n * Get the most legible color (black or white) for a given background color\n * @function most-legible-color\n * @param {Color} $color - The background color\n * @return {Color} - The most legible color\n */\n/**\n * Get the desired color combination for foreground and background colors\n * @function desired-color-combination\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Number} $offsetThreshold - Offset threshold\n * @param {Number} $ratio - Contrast ratio\n * @return {List} - List containing background and foreground colors\n */\n/**\n * @mixin desired-color-combination\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Number} $offsetThreshold - Offset threshold\n * @param {Number} $ratio - Contrast ratio\n */\n/**\n * Get an accessible color for a given foreground and background color\n * @function a11y-color\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {String} $level - WCAG level\n * @param {Number} $size - Font size\n * @param {Boolean} $bold - Is bold\n * @param {Boolean} $graphic - Is graphic\n * @param {Number} $maxOffset - Maximum offset\n * @param {Boolean} $darkMode - Is dark mode\n * @param {Number} $ratio - Contrast ratio\n * @return {Color} - Accessible color\n */\n/**\n * Get the maximum contrast color\n * @function max-contrast\n * @param {Color} $fg - Foreground color\n * @param {Color} $bg - Background color\n * @param {Color} $max - Maximum contrast color\n * @return {Color} - Maximum contrast color\n */\n/**\n * Get the RGB values of a color as a string\n * @function stripped-rgb\n * @param {Color} $color - The color\n * @return {String} - RGB values as a string\n */\n/**\n * Get the HSL values of a color as a string\n * @function stripped-hsl\n * @param {Color} $color - The color\n * @return {String} - HSL values as a string\n */\n/**\n * Convert a map of colors to a map of HSL values\n * @function hsl-map\n * @param {Map} $colors - Map of colors\n * @return {Map} - Map of HSL values\n */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/**\n * Breakpoint viewport sizes and media queries.\n *\n * Breakpoints are defined as a map of (name: minimum width), order from small to large:\n *\n *    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n *\n * The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n */\n/**\n * Name of the next breakpoint, or null for the last breakpoint.\n *\n *    >> breakpoint-next(sm)\n *    md\n *    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    md\n *    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n *    md\n */\n/**\n * Minimum breakpoint width. Null for the smallest (first) breakpoint.\n *\n *    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    576px\n */\n/**\n * Maximum breakpoint width.\n * The maximum value is reduced by 0.02px to work around the limitations of\n * `min-` and `max-` prefixes and viewports with fractional widths.\n * See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n * Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n * See https://bugs.webkit.org/show_bug.cgi?id=178261\n *\n *    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    767.98px\n */\n/**\n * Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n * Useful for making responsive utilities.\n *\n *    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    ""  (Returns a blank string)\n *    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n *    "-sm"\n */\n/**\n * Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n * Makes the @content apply to the given breakpoint and wider.\n */\n/**\n * Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n * Makes the @content apply to the given breakpoint and narrower.\n */\n/**\n * Media that spans multiple breakpoint widths.\n * Makes the @content apply between the min and max breakpoints\n */\n/**\n * Media between the breakpoint\'s minimum and maximum widths.\n * No minimum for the smallest breakpoint, and no maximum for the largest one.\n * Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n */\n@layer base, reset, transitional-styles;\n@layer transitional-styles {\n  @layer _base, _overrides;\n  :host {\n    display: inline-block;\n  }\n  @layer _base {\n    button {\n      background-color: transparent;\n      border: 0;\n      cursor: pointer;\n      font-family: inherit;\n      padding: 0;\n      padding-left: 1rem;\n      padding-right: 1rem;\n      padding-bottom: 0.75rem;\n      padding-top: 0.75rem;\n      border-radius: 0.25rem;\n      border: solid 1px var(--gds-sys-color-base-600);\n      font-weight: 500;\n      background-color: transparent;\n      border: 0.0625rem solid transparent;\n      padding: 0.625rem;\n      height: 2.75rem;\n      width: 2.75rem;\n      min-width: auto;\n      --color: var(--gds-sys-color-base-800);\n    }\n    button:focus:not(:focus-visible) {\n      box-shadow: none;\n      outline: 0;\n    }\n    button:focus, button:focus-visible {\n      outline-color: var(--gds-sys-color-focus-outline);\n      outline-style: solid;\n      outline-width: 0.125rem;\n      outline-offset: 0.125rem;\n    }\n    button {\n      min-height: 2.75rem;\n      align-items: center;\n      display: inline-flex;\n      justify-content: center;\n    }\n    @media (max-width: 35.98em) {\n      button {\n        min-width: 100%;\n      }\n    }\n    @media screen and (-ms-high-contrast: active) {\n      button {\n        border: 2px solid currentcolor;\n      }\n    }\n    button.small {\n      min-height: 2rem;\n      height: 2rem;\n      padding: 0.4375rem 0.75rem;\n      font-size: 0.875rem;\n      line-height: 1rem;\n    }\n    button.large {\n      min-height: 4rem;\n      padding: 1rem 1.5rem;\n      font-size: 1.5rem;\n      line-height: 2rem;\n    }\n    .gds-form-group button {\n      margin-top: -0.625rem;\n    }\n    button.small {\n      height: 2rem;\n      width: 2rem;\n      padding: 0.4375rem;\n      line-height: 1.125rem;\n    }\n    button svg {\n      height: 1rem;\n      width: 1rem;\n    }\n    button path,\n    button line,\n    button circle,\n    button rect,\n    button ellipse,\n    button polyline,\n    button text {\n      fill: var(--gds-sys-color-base-800);\n      stroke: var(--gds-sys-color-base-800);\n      transition: all var(--gds-sys-transition);\n    }\n    button:hover, button.highlighted {\n      background-color: rgba(0, 0, 0, 0.1);\n      border-color: transparent;\n    }\n    button:active, button.highlighted:hover {\n      background-color: rgba(0, 0, 0, 0.2);\n      border-color: transparent;\n    }\n  }\n  @layer _overrides {\n    button {\n      border-color: transparent;\n      color: var(--gds-sys-color-base-800);\n      display: flex;\n      gap: 0.5rem;\n      line-height: 0.75;\n      padding-inline: 0.4375rem;\n      width: auto;\n    }\n    button.highlighted {\n      background-color: var(--gds-sys-color-base-300);\n    }\n  }\n}';function register(){transitional_styles.n.instance.register("gds-context-menu",context_menu_trans_styles_scss.toString()),popover_trans_styles.k(),listbox_trans_styles.k(),button_trans_styles.k()}let NggContextMenuComponent=class NggContextMenuComponent{constructor(elementRef){this.elementRef=elementRef,this.direction="ltr",this.menuItems=[],this.menuItemTemplate=null,this.menuAnchorTemplate=null,this.contextMenuItemClicked=new core.EventEmitter,this.isActive=!1,context_menu_component.Hx.define(),register()}get placement(){return"ltr"===this.direction?"bottom-start":"bottom-end"}open(){this.isActive?this.close():this.isActive=!0}close(){this.isActive=!1}onItemClick(item){this.contextMenuItemClicked.emit(item),this.close()}static{this.ctorParameters=()=>[{type:core.ElementRef}]}static{this.propDecorators={direction:[{type:core.Input}],menuItems:[{type:core.Input}],menuItemTemplate:[{type:core.Input}],menuAnchorTemplate:[{type:core.Input}],contextMenuItemClicked:[{type:core.Output}],popover:[{type:core.ViewChild,args:["contextMenuPopover"]}],anchor:[{type:core.ViewChild,args:["contextMenuAnchor"]}]}}};NggContextMenuComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"ngg-context-menu",template:'<gds-context-menu\n  *nggCoreElement\n  data-testid="context-menu"\n  [placement]="placement"\n  [open]="isActive"\n>\n  <div style="display: contents" slot="trigger">\n    <ng-container\n      [ngTemplateOutlet]="menuAnchorTemplate ?? defaultButtonTemplate"\n    >\n    </ng-container>\n  </div>\n  <ng-container *ngFor="let menuItem of menuItems">\n    <gds-menu-item *nggCoreElement (click)="onItemClick(menuItem)">\n      <ng-container\n        [ngTemplateOutlet]="menuItemTemplate ?? defaultMenuItemTemplate"\n        [ngTemplateOutletContext]="{ $implicit: menuItem }"\n      >\n      </ng-container>\n    </gds-menu-item>\n  </ng-container>\n</gds-context-menu>\n\n<ng-template #defaultMenuItemTemplate let-menuItem>\n  <span>{{ menuItem.label }}</span>\n</ng-template>\n\n<ng-template #defaultButtonTemplate>\n  <i class="sg-icon sg-icon-ellipsis">Open context menu</i>\n</ng-template>\n'}),(0,tslib_es6.Sn)("design:paramtypes",[core.ElementRef])],NggContextMenuComponent)},"./libs/angular/src/lib/context-menu/context-menu.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomTemplateDefault:()=>CustomTemplateDefault,Default:()=>Default,PositionRelative:()=>PositionRelative,RightToLeft:()=>RightToLeft,WithLabel:()=>WithLabel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>context_menu_stories});var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),context_menu_component=__webpack_require__("./libs/angular/src/lib/context-menu/context-menu.component.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),shared=__webpack_require__("./libs/angular/src/lib/shared/index.ts"),custom_element_scoping=__webpack_require__("./dist/libs/core/src/utils/helpers/custom-element-scoping.js");let NggContextMenuModule=class NggContextMenuModule{};NggContextMenuModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[context_menu_component.s],imports:[common.CommonModule,shared.$M],exports:[context_menu_component.s],providers:[{provide:shared.Gp,useValue:{getScopedTagName:custom_element_scoping.Eq}}],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]})],NggContextMenuModule);const context_menu_stories={title:"Components/Context Menu",component:context_menu_component.s,decorators:[(0,dist.moduleMetadata)({imports:[common.CommonModule,platform_browser.BrowserModule,animations.BrowserAnimationsModule,NggContextMenuModule]})],parameters:{componentIds:["component-context-menu"]}},Template=args=>({component:context_menu_component.s,props:args,template:'\n  <div style="display:flex;justify-content:space-between">\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n  </div>\n  '}),Default=Template.bind({});Default.args={direction:"ltr",menuItems:[{label:"Option 1",value:"option1"},{label:"Option 2",value:"option2"},{label:"Option 3",value:"option3"}]};const WithLabel=(args=>({component:context_menu_component.s,props:args,template:'\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems" [menuAnchorTemplate]="menuAnchorTemplate">\n    </ngg-context-menu>\n\n    <ng-template #menuAnchorTemplate>\n        Menu\n        <i class="sg-icon sg-icon-ellipsis"></i>\n    </ng-template>\n    '})).bind({});WithLabel.args={direction:"rtl",menuItems:[{label:"Key 1",value:"option1"},{label:"Key 2",value:"option2"},{label:"Key 3",value:"option3"}]};const RightToLeft=Template.bind({});RightToLeft.args={direction:"rtl",menuItems:[{label:"Key 1",value:"option1"},{label:"Key 2",value:"option2"},{label:"Key 3",value:"option3"}]};const CustomTemplateDefault=(args=>({component:context_menu_component.s,props:args,template:'\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems" [menuItemTemplate]="menuItemTemplate" [menuAnchorTemplate]="menuAnchorTemplate">\n    </ngg-context-menu>\n\n    <ng-template #menuAnchorTemplate>\n      <div>\n        <span>Click me!</span>\n      </div>\n    </ng-template>\n\n    <ng-template #menuItemTemplate let-menuItem>\n      <div\n        style="display: flex; justify-content: space-between; align-items: center; min-width: 7rem;"\n        [style.color]="(menuItem.value === \'delete\') ? \'#9F000A\' : \'inherit\'"\n      >\n        {{ menuItem.label }}\n        <svg *ngIf="menuItem.value === \'delete\'" width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">\n          <path d="M13.375 17.5H14.125C14.2245 17.5 14.3198 17.4605 14.3902 17.3902C14.4605 17.3198 14.5 17.2245 14.5 17.125V10.375C14.5 10.2755 14.4605 10.1802 14.3902 10.1098C14.3198 10.0395 14.2245 10 14.125 10H13.375C13.2755 10 13.1802 10.0395 13.1098 10.1098C13.0395 10.1802 13 10.2755 13 10.375V17.125C13 17.2245 13.0395 17.3198 13.1098 17.3902C13.1802 17.4605 13.2755 17.5 13.375 17.5ZM18.5 7H15.9247L14.8622 5.22813C14.7288 5.00594 14.5402 4.82209 14.3147 4.69449C14.0892 4.56688 13.8344 4.49988 13.5753 4.5H10.4247C10.1657 4.49998 9.91106 4.56704 9.68566 4.69464C9.46025 4.82224 9.27172 5.00603 9.13844 5.22813L8.07531 7H5.5C5.36739 7 5.24021 7.05268 5.14645 7.14645C5.05268 7.24022 5 7.36739 5 7.5V8C5 8.13261 5.05268 8.25979 5.14645 8.35355C5.24021 8.44732 5.36739 8.5 5.5 8.5H6V19C6 19.3978 6.15804 19.7794 6.43934 20.0607C6.72064 20.342 7.10218 20.5 7.5 20.5H16.5C16.8978 20.5 17.2794 20.342 17.5607 20.0607C17.842 19.7794 18 19.3978 18 19V8.5H18.5C18.6326 8.5 18.7598 8.44732 18.8536 8.35355C18.9473 8.25979 19 8.13261 19 8V7.5C19 7.36739 18.9473 7.24022 18.8536 7.14645C18.7598 7.05268 18.6326 7 18.5 7ZM10.37 6.09094C10.3867 6.06312 10.4104 6.04012 10.4386 6.02418C10.4669 6.00824 10.4988 5.99991 10.5312 6H13.4688C13.5011 5.99996 13.533 6.00832 13.5612 6.02426C13.5894 6.04019 13.613 6.06317 13.6297 6.09094L14.1753 7H9.82469L10.37 6.09094ZM16.5 19H7.5V8.5H16.5V19ZM9.875 17.5H10.625C10.7245 17.5 10.8198 17.4605 10.8902 17.3902C10.9605 17.3198 11 17.2245 11 17.125V10.375C11 10.2755 10.9605 10.1802 10.8902 10.1098C10.8198 10.0395 10.7245 10 10.625 10H9.875C9.77554 10 9.68016 10.0395 9.60984 10.1098C9.53951 10.1802 9.5 10.2755 9.5 10.375V17.125C9.5 17.2245 9.53951 17.3198 9.60984 17.3902C9.68016 17.4605 9.77554 17.5 9.875 17.5Z" fill="#9F000A"/>\n        </svg>\n      </div>\n    </ng-template>\n    '})).bind({});CustomTemplateDefault.args={direction:"rtl",menuItems:[{label:"Key 1",value:"option1"},{label:"Key 2",value:"option2"},{label:"Delete",value:"delete"}]};const PositionRelative=(args=>({component:context_menu_component.s,props:args,template:'\n  <div style="position: relative; width: 50%; margin: 20px auto;">\n    <div style="display:flex;justify-content:space-between;">\n      <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n      <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n      <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n    </div>\n  </div>\n  '})).bind({});PositionRelative.args={direction:"ltr",menuItems:[{label:"Option 1",value:"option1"},{label:"Option 2",value:"option2"},{label:"Option 3",value:"option3"}]};const __namedExportsOrder=["Default","WithLabel","RightToLeft","CustomTemplateDefault","PositionRelative"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => ({\n  component: NggContextMenuComponent,\n  props: args,\n  template: `\n  <div style="display:flex;justify-content:space-between">\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n  </div>\n  `\n})',...Default.parameters?.docs?.source}}},WithLabel.parameters={...WithLabel.parameters,docs:{...WithLabel.parameters?.docs,source:{originalSource:'args => ({\n  component: NggContextMenuComponent,\n  props: args,\n  template: `\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems" [menuAnchorTemplate]="menuAnchorTemplate">\n    </ngg-context-menu>\n\n    <ng-template #menuAnchorTemplate>\n        Menu\n        <i class="sg-icon sg-icon-ellipsis"></i>\n    </ng-template>\n    `\n})',...WithLabel.parameters?.docs?.source}}},RightToLeft.parameters={...RightToLeft.parameters,docs:{...RightToLeft.parameters?.docs,source:{originalSource:'args => ({\n  component: NggContextMenuComponent,\n  props: args,\n  template: `\n  <div style="display:flex;justify-content:space-between">\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n  </div>\n  `\n})',...RightToLeft.parameters?.docs?.source}}},CustomTemplateDefault.parameters={...CustomTemplateDefault.parameters,docs:{...CustomTemplateDefault.parameters?.docs,source:{originalSource:'args => ({\n  component: NggContextMenuComponent,\n  props: args,\n  template: `\n    <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems" [menuItemTemplate]="menuItemTemplate" [menuAnchorTemplate]="menuAnchorTemplate">\n    </ngg-context-menu>\n\n    <ng-template #menuAnchorTemplate>\n      <div>\n        <span>Click me!</span>\n      </div>\n    </ng-template>\n\n    <ng-template #menuItemTemplate let-menuItem>\n      <div\n        style="display: flex; justify-content: space-between; align-items: center; min-width: 7rem;"\n        [style.color]="(menuItem.value === \'delete\') ? \'#9F000A\' : \'inherit\'"\n      >\n        {{ menuItem.label }}\n        <svg *ngIf="menuItem.value === \'delete\'" width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">\n          <path d="M13.375 17.5H14.125C14.2245 17.5 14.3198 17.4605 14.3902 17.3902C14.4605 17.3198 14.5 17.2245 14.5 17.125V10.375C14.5 10.2755 14.4605 10.1802 14.3902 10.1098C14.3198 10.0395 14.2245 10 14.125 10H13.375C13.2755 10 13.1802 10.0395 13.1098 10.1098C13.0395 10.1802 13 10.2755 13 10.375V17.125C13 17.2245 13.0395 17.3198 13.1098 17.3902C13.1802 17.4605 13.2755 17.5 13.375 17.5ZM18.5 7H15.9247L14.8622 5.22813C14.7288 5.00594 14.5402 4.82209 14.3147 4.69449C14.0892 4.56688 13.8344 4.49988 13.5753 4.5H10.4247C10.1657 4.49998 9.91106 4.56704 9.68566 4.69464C9.46025 4.82224 9.27172 5.00603 9.13844 5.22813L8.07531 7H5.5C5.36739 7 5.24021 7.05268 5.14645 7.14645C5.05268 7.24022 5 7.36739 5 7.5V8C5 8.13261 5.05268 8.25979 5.14645 8.35355C5.24021 8.44732 5.36739 8.5 5.5 8.5H6V19C6 19.3978 6.15804 19.7794 6.43934 20.0607C6.72064 20.342 7.10218 20.5 7.5 20.5H16.5C16.8978 20.5 17.2794 20.342 17.5607 20.0607C17.842 19.7794 18 19.3978 18 19V8.5H18.5C18.6326 8.5 18.7598 8.44732 18.8536 8.35355C18.9473 8.25979 19 8.13261 19 8V7.5C19 7.36739 18.9473 7.24022 18.8536 7.14645C18.7598 7.05268 18.6326 7 18.5 7ZM10.37 6.09094C10.3867 6.06312 10.4104 6.04012 10.4386 6.02418C10.4669 6.00824 10.4988 5.99991 10.5312 6H13.4688C13.5011 5.99996 13.533 6.00832 13.5612 6.02426C13.5894 6.04019 13.613 6.06317 13.6297 6.09094L14.1753 7H9.82469L10.37 6.09094ZM16.5 19H7.5V8.5H16.5V19ZM9.875 17.5H10.625C10.7245 17.5 10.8198 17.4605 10.8902 17.3902C10.9605 17.3198 11 17.2245 11 17.125V10.375C11 10.2755 10.9605 10.1802 10.8902 10.1098C10.8198 10.0395 10.7245 10 10.625 10H9.875C9.77554 10 9.68016 10.0395 9.60984 10.1098C9.53951 10.1802 9.5 10.2755 9.5 10.375V17.125C9.5 17.2245 9.53951 17.3198 9.60984 17.3902C9.68016 17.4605 9.77554 17.5 9.875 17.5Z" fill="#9F000A"/>\n        </svg>\n      </div>\n    </ng-template>\n    `\n})',...CustomTemplateDefault.parameters?.docs?.source}}},PositionRelative.parameters={...PositionRelative.parameters,docs:{...PositionRelative.parameters?.docs,source:{originalSource:'args => ({\n  component: NggContextMenuComponent,\n  props: args,\n  template: `\n  <div style="position: relative; width: 50%; margin: 20px auto;">\n    <div style="display:flex;justify-content:space-between;">\n      <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n      <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n      <ngg-context-menu #ctx [direction]="direction" [menuItems]="menuItems"></ngg-context-menu>\n    </div>\n  </div>\n  `\n})',...PositionRelative.parameters?.docs?.source}}}}}]);