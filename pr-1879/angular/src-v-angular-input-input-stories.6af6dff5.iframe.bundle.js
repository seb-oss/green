(self.webpackChunkgreen=self.webpackChunkgreen||[]).push([[7735],{"./libs/angular/src/v-angular/button/button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n:host button,\n:host a {\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  font-family: inherit;\n  padding: 0;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  border-radius: var(--sg-border-radius);\n  border: solid var(--sg-border-width) var(--sg-border-color);\n  font-weight: 500;\n  min-height: 2.75rem;\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n}\n:host button:focus:not(:focus-visible),\n:host a:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host button:focus, :host button:focus-visible,\n:host a:focus,\n:host a:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n@media (max-width: 35.98em) {\n  :host button,\n  :host a {\n    min-width: 100%;\n  }\n}\n@media screen and (-ms-high-contrast: active) {\n  :host button,\n  :host a {\n    border: 2px solid currentcolor;\n  }\n}\n:host button.small,\n:host a.small {\n  min-height: 2rem;\n  padding: 0.4375rem 0.75rem;\n  line-height: 1rem;\n}\n:host button.large,\n:host a.large {\n  min-height: 4rem;\n  padding: 1rem 1.5rem;\n  font-size: 1.5rem;\n  line-height: 2rem;\n}\n:host .primary {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: rgb(0, 122, 199);\n  border-color: rgb(0, 122, 199);\n  color: #fff;\n  --color: #fff;\n}\n:host .primary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host .primary[aria-selected=true], :host .primary:active, :host .primary.active, :host .primary.active:hover, :host .primary:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host .primary:focus-visible {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3 !important;\n}\n:host .primary:disabled, :host .primary.disabled, :host .primary[aria-disabled=true] {\n  background: var(--form-control-primary-bg-disabled) !important;\n  color: var(--text-primary-disabled-color) !important;\n  border-color: var(--border-primary-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .primary:disabled::placeholder, :host .primary.disabled::placeholder, :host .primary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .secondary {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: transparent;\n  border-color: rgb(0, 122, 199);\n  color: rgb(0, 122, 199);\n  --color: rgb(0, 122, 199);\n}\n:host .secondary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .secondary:focus, :host .secondary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .secondary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host .secondary[aria-selected=true], :host .secondary:active, :host .secondary.active, :host .secondary.active:hover, :host .secondary:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host .secondary:disabled, :host .secondary.disabled, :host .secondary[aria-disabled=true] {\n  background: var(--sg-form-control-bg-disabled) !important;\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .secondary:disabled::placeholder, :host .secondary.disabled::placeholder, :host .secondary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .tertiary {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: transparent;\n  border-color: transparent;\n  color: rgb(0, 122, 199);\n  --color: rgb(0, 122, 199);\n}\n:host .tertiary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .tertiary:focus, :host .tertiary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .tertiary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host .tertiary[aria-selected=true], :host .tertiary:active, :host .tertiary.active, :host .tertiary.active:hover, :host .tertiary:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host .tertiary:disabled, :host .tertiary.disabled, :host .tertiary[aria-disabled=true] {\n  background: var(--sg-form-control-bg-disabled) !important;\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .tertiary:disabled::placeholder, :host .tertiary.disabled::placeholder, :host .tertiary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .ghost-light {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  border-color: rgb(255, 255, 255);\n  color: rgb(255, 255, 255);\n  --color: rgb(255, 255, 255);\n}\n:host .ghost-light:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255);\n}\n:host .ghost-light[aria-selected=true], :host .ghost-light:active, :host .ghost-light.active, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255);\n}\n:host .ghost-light[aria-selected]:hover, :host .ghost-light.active:hover, :host .ghost-light:active:hover {\n  opacity: 0.9;\n}\n:host .ghost-light:focus-visible {\n  background-color: rgb(255, 255, 255);\n  color: black;\n  --background: rgb(255, 255, 255);\n  --color: black;\n  border-color: rgb(255, 255, 255) !important;\n}\n:host .ghost-light:disabled, :host .ghost-light.disabled, :host .ghost-light[aria-disabled=true] {\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .ghost-light:disabled::placeholder, :host .ghost-light.disabled::placeholder, :host .ghost-light[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .ghost {\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  border-color: rgb(51, 51, 51);\n  color: rgb(51, 51, 51);\n  --color: rgb(51, 51, 51);\n}\n:host .ghost:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(51, 51, 51);\n  color: rgb(255, 255, 255);\n  --background: rgb(51, 51, 51);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(51, 51, 51);\n}\n:host .ghost[aria-selected=true], :host .ghost:active, :host .ghost.active, :host .ghost.active:hover, :host .ghost:active:hover {\n  background-color: rgb(51, 51, 51);\n  color: rgb(255, 255, 255);\n  --background: rgb(51, 51, 51);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(51, 51, 51);\n}\n:host .ghost[aria-selected]:hover, :host .ghost.active:hover, :host .ghost:active:hover {\n  opacity: 0.9;\n}\n:host .ghost:focus-visible {\n  background-color: rgb(51, 51, 51);\n  color: rgb(255, 255, 255);\n  --background: rgb(51, 51, 51);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(51, 51, 51) !important;\n}\n:host .ghost:disabled, :host .ghost.disabled, :host .ghost[aria-disabled=true] {\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .ghost:disabled::placeholder, :host .ghost.disabled::placeholder, :host .ghost[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .danger.primary {\n  background: rgb(187, 0, 12);\n  border-color: rgb(187, 0, 12);\n  color: #fff;\n  --color: #fff;\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n}\n:host .danger.primary:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(216, 26, 26);\n  color: rgb(255, 255, 255);\n  --background: rgb(216, 26, 26);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(216, 26, 26);\n}\n:host .danger.primary[aria-selected=true], :host .danger.primary:active, :host .danger.primary.active, :host .danger.primary.active:hover, :host .danger.primary:active:hover {\n  background-color: rgb(187, 0, 12);\n  color: rgb(255, 255, 255);\n  --background: rgb(187, 0, 12);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(187, 0, 12);\n}\n:host .danger.primary[aria-selected]:hover, :host .danger.primary.active:hover, :host .danger.primary:active:hover {\n  opacity: 0.9;\n}\n:host .danger.primary:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .danger.primary:focus, :host .danger.primary:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host .danger.primary:disabled, :host .danger.primary.disabled, :host .danger.primary[aria-disabled=true] {\n  background: var(--form-control-primary-bg-disabled) !important;\n  color: var(--text-primary-disabled-color) !important;\n  border-color: var(--border-primary-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host .danger.primary:disabled::placeholder, :host .danger.primary.disabled::placeholder, :host .danger.primary[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host .danger:not(.primary) {\n  color: rgb(187, 0, 12);\n  --color: rgb(187, 0, 12);\n  border-color: transparent;\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n}\n:host .danger:not(.primary):not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: rgb(216, 26, 26);\n  color: rgb(255, 255, 255);\n  --background: rgb(216, 26, 26);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(216, 26, 26);\n}\n:host .danger:not(.primary)[aria-selected=true], :host .danger:not(.primary):active, :host .danger:not(.primary).active, :host .danger:not(.primary).active:hover, :host .danger:not(.primary):active:hover {\n  background-color: rgb(187, 0, 12);\n  color: rgb(255, 255, 255);\n  --background: rgb(187, 0, 12);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(187, 0, 12);\n}\n:host .danger:not(.primary)[aria-selected]:hover, :host .danger:not(.primary).active:hover, :host .danger:not(.primary):active:hover {\n  opacity: 0.9;\n}\n:host .danger:not(.primary):focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host .danger:not(.primary):focus, :host .danger:not(.primary):focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/dropdown/dropdown-list/dropdown-list.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/** \n  * @deprecated in favor of Grouped list component\n  */\n/** \n  * @deprecated in favor of Grouped list component\n  */\n:host {\n  position: absolute;\n  bottom: 0;\n  transform: translateY(calc(100% + 0.5rem));\n  z-index: var(--sg-z-index-dropdown);\n}\n:host .hidden {\n  visibility: hidden;\n  display: none;\n}\n:host ul[role=menu] [role=menuitem] {\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  cursor: pointer;\n}\n:host ul[role=menu] [role=menuitem]:hover, :host ul[role=menu] [role=menuitem]:focus-visible {\n  background-color: var(--gds-ref-pallet-base200);\n}\n:host ul[role=menu] [role=menuitem]:active {\n  background-color: var(--gds-ref-pallet-base300);\n}\n:host ul[role=menu] [role=menuitem]:focus {\n  outline-color: #000;\n  outline-offset: -0.25rem;\n}\n:host ul[role=listbox] {\n  --z-index: var(--sg-z-index-popover);\n  background-color: var(--sg-popover-background);\n  flex-direction: column;\n  justify-content: flex-end;\n  inset: auto;\n  z-index: var(--z-index);\n  box-shadow: var(--sg-popover-box-shadow);\n  color: var(--text-primary-color);\n  padding: 0;\n  max-height: 500px;\n  overflow-y: auto;\n  padding-bottom: 0;\n  border: solid var(--sg-border-width) var(--sg-border-color);\n  --border-color: var(--text-primary-color);\n  --sg-border-color: var(--text-primary-color);\n  border-radius: var(--sg-border-radius);\n}\n:host ul[role=listbox] [role=option] {\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  line-height: 1.25;\n  cursor: pointer;\n}\n:host ul[role=listbox] [role=option]:hover, :host ul[role=listbox] [role=option]:focus-visible {\n  background-color: var(--grey-400);\n}\n:host ul[role=listbox] [role=option]:active {\n  background-color: var(--grey-400);\n}\n:host ul[role=listbox] [role=option]:focus {\n  outline-color: #000;\n  outline-offset: -0.25rem;\n}\n:host ul[role=listbox] [role=option].active.sg-highlighted, :host ul[role=listbox] [role=option][aria-selected=true] {\n  background: var(--grey-1000);\n  color: #fff;\n}\n:host ul[role=listbox] .group ul {\n  list-style-type: none;\n  padding: 0;\n}\n:host ul[role=listbox] .group:hover {\n  color: inherit;\n  background-color: inherit;\n}\n:host .sg-fieldset-container {\n  overflow-y: auto;\n}\n:host .sg-fieldset-container fieldset[role=listbox][aria-multiselectable=true] [role=option] {\n  display: flex;\n  width: 100%;\n}\n:host .sg-fieldset-container fieldset[role=listbox][aria-multiselectable=true] [role=option].active.sg-highlighted input[type=checkbox] ~ i {\n  border-color: #007ac7 !important;\n  box-shadow: 0 0 0.25em 0.0625em #41b0ee;\n  outline-color: transparent;\n  outline-style: solid;\n}\n:host .gds-dropdown__options {\n  padding-left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  display: none;\n}\n:host .gds-dropdown__options > li {\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n  border: 0;\n  display: block;\n  position: relative;\n}\n:host .gds-dropdown__options > li::before {\n  font-weight: 500;\n  display: inline-block;\n  left: 0;\n  position: absolute;\n  text-align: center;\n}\n:host .gds-dropdown__options-expanded {\n  display: block;\n}\n:host .gds-dropdown__options__label:hover,\n:host .gds-dropdown__options__label:focus-visible,\n:host .gds-dropdown__options__label[aria-focus=true] {\n  background-color: var(--grey-400);\n}\n:host .gds-dropdown__options__label:active {\n  background-color: var(--grey-500);\n}\n:host .gds-dropdown__options__label:focus-visible {\n  outline-color: #000;\n  outline-offset: -0.25rem;\n}\n:host .gds-dropdown__options__label[aria-hidden=true] {\n  display: none;\n}\n:host .gds-dropdown__options__label[highlighted] {\n  color: #fff;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/dropdown/dropdown.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/* rules for groups of checkboxes and radio buttons*/\n:host label {\n  display: block;\n  font-weight: 500;\n  line-height: 1.25rem;\n  margin-bottom: 0.5rem;\n  width: 100%;\n}\n:host .description {\n  margin-bottom: 0.5rem;\n  line-height: 1.25rem;\n  width: 100%;\n}\n:host button {\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  font-family: inherit;\n  padding: 0;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  border-radius: var(--sg-border-radius);\n  border: solid var(--sg-border-width) var(--sg-border-color);\n  font-weight: 500;\n  min-height: 2.75rem;\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1), outline-offset 0s, outline-width 0s;\n  background: transparent;\n  border-color: rgb(0, 122, 199);\n  color: rgb(0, 122, 199);\n  --color: rgb(0, 122, 199);\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  font-family: inherit;\n  padding: 0;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  border-radius: var(--sg-border-radius);\n  border: solid var(--sg-border-width) var(--sg-border-color);\n  --border-color: var(--grey-800);\n  --sg-border-color: var(--grey-800);\n  background: var(--sg-form-control-bg);\n  color: var(--text-primary-color);\n  min-height: 2.75rem;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 100%;\n  font-size: inherit;\n  font-weight: normal;\n  line-height: 1.125;\n  margin-bottom: 0.5rem;\n  margin-top: 0.5rem;\n  width: 100%;\n}\n:host button:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host button:focus, :host button:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n@media (max-width: 35.98em) {\n  :host button {\n    min-width: 100%;\n  }\n}\n@media screen and (-ms-high-contrast: active) {\n  :host button {\n    border: 2px solid currentcolor;\n  }\n}\n:host button.small {\n  min-height: 2rem;\n  padding: 0.4375rem 0.75rem;\n  line-height: 1rem;\n}\n:host button.large {\n  min-height: 4rem;\n  padding: 1rem 1.5rem;\n  font-size: 1.5rem;\n  line-height: 2rem;\n}\n:host button:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host button:focus, :host button:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host button:not(:disabled, .disabled, [aria-disabled]):hover {\n  background-color: #199be3;\n  color: rgb(255, 255, 255);\n  --background: #199be3;\n  --color: rgb(255, 255, 255);\n  border-color: #199be3;\n}\n:host button[aria-selected=true], :host button:active, :host button.active, :host button.active:hover, :host button:active:hover {\n  background-color: rgb(0, 122, 199);\n  color: rgb(255, 255, 255);\n  --background: rgb(0, 122, 199);\n  --color: rgb(255, 255, 255);\n  border-color: rgb(0, 122, 199);\n}\n:host button:disabled, :host button.disabled, :host button[aria-disabled=true] {\n  background: var(--sg-form-control-bg-disabled) !important;\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host button:disabled::placeholder, :host button.disabled::placeholder, :host button[aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host button:focus, :host button:focus {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n@media (max-width: 35.98em) {\n  :host button {\n    min-width: 100%;\n  }\n}\n:host button:not(:disabled, .disabled, [aria-disabled]):hover {\n  --background: var(--grey-400);\n  --color: var(--grey-1000);\n  background-color: var(--grey-400);\n  color: var(--grey-1000);\n  border-color: var(--grey-1000);\n}\n:host button > span {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n:host button::after {\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  border-bottom: solid 2px var(--text-primary-color);\n  border-left: solid 2px var(--text-primary-color);\n  content: "";\n  display: block;\n  height: 0.5rem;\n  width: 0.5rem;\n  position: relative;\n  top: -0.15rem;\n  transform: translate(75%, 0) rotate3d(0, 0, 1, -45deg) scale3d(1, 1, -1);\n  transition: transform 300ms ease-in;\n  flex-shrink: 0;\n}\n:host button[aria-expanded=true]::after {\n  transform: translate(75%, 6px) rotate3d(0, 0, 1, -45deg) scale3d(-1, -1, 1);\n}\n:host button:hover::after {\n  border-color: currentColor;\n}\n:host button.small {\n  font-size: 0.875rem;\n}\n:host button:hover {\n  background: var(--grey-400);\n}\n:host .dropdown {\n  width: 100%;\n  position: relative;\n}\n:host .dropdown nggv-dropdown-list {\n  width: 100%;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/dropdown/typeahead/typeahead-dropdown-list/typeahead-dropdown-list.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: flex;\n  width: 100%;\n  position: relative;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/dropdown/typeahead/typeahead-input/typeahead-input.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: calc(100% - 2.625em);\n}\n:host .input-wrapper {\n  border: none;\n  box-shadow: none;\n}\n:host .input-wrapper.expanded {\n  display: flex;\n}\n:host .input-wrapper.expanded .input-group input.sdv-field {\n  height: 100%;\n  width: 100%;\n  min-height: unset;\n  margin-left: 1px;\n  border: none;\n  box-shadow: none;\n}\n:host .input-wrapper.collapsed {\n  display: none;\n}\n:host .input-wrapper .input-group {\n  width: 100%;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/info-circle/info-circle.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: block;\n}\n\nsvg {\n  display: block;\n  width: 1.5rem;\n  height: 1.5rem;\n}\n\n.gds-tooltip {\n  background-color: #1a1a1a;\n  color: #fff;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 0.5rem;\n  pointer-events: none;\n}\n.gds-tooltip__arrow-top {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  bottom: -1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  border-color: #1a1a1a transparent transparent;\n}\n.gds-tooltip__arrow-bottom {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  top: -1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  border-color: transparent transparent #1a1a1a;\n}\n.gds-tooltip__arrow-left {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  right: -1rem;\n  top: 50%;\n  transform: translateY(-50%);\n  border-color: transparent transparent transparent #1a1a1a;\n}\n.gds-tooltip__arrow-right {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border: 0.5rem solid transparent;\n  left: -1rem;\n  top: 50%;\n  transform: translateY(-50%);\n  border-color: transparent #1a1a1a transparent transparent;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/input/input.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'/* stylelint-disable max-nesting-depth */\n/* stylelint-enable max-nesting-depth */\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/**\n* @deprecated\n* Use `add-focus` instead\n*/\n/** add background color, color and border-color to element when it has focus-visible i.e. tab focus */\n/* rules for groups of checkboxes and radio buttons*/\n/* base style for forms */\n/* horizontal layout for forms */\n/* label for checkboxes and radio buttons */\n/* form group */\n/* form text */\n:host.gds-form-item {\n  display: flex;\n  flex-direction: column;\n  max-width: 100%;\n  position: relative;\n  width: 100%;\n  z-index: 0;\n}\n:host.gds-form-item:not(:last-child) {\n  margin-bottom: 1.5rem;\n}\n:host.gds-form-item .gds-form-item__header {\n  display: flex;\n}\n:host.gds-form-item .gds-form-item__header .form-info {\n  font-weight: normal;\n}\n:host.gds-form-item .gds-form-item__header button.icon.small {\n  margin-top: -0.5rem;\n  margin-right: -0.5rem;\n}\n:host.gds-form-item .gds-form-item__labels {\n  flex: 1;\n  margin-bottom: 0.5rem;\n}\n:host.gds-form-item .gds-form-item__labels .form-info {\n  margin-bottom: 0;\n}\n:host.gds-form-item .gds-form-item__labels .form-info a:link:not(.button, [aria-disabled]) {\n  color: rgb(0, 98, 188);\n}\n:host.gds-form-item .gds-form-item__labels > * {\n  width: 100%;\n  display: block;\n}\n:host.gds-form-item .gds-form-item__expandable-info {\n  overflow: hidden;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  transition: height 0.3s cubic-bezier(0.23, 1, 0.32, 1);\n}\n:host.gds-form-item .gds-form-item__expandable-info > div {\n  padding-bottom: 0.5rem;\n}\n:host.gds-form-item .gds-form-item__backdrop {\n  position: absolute;\n  inset: 0;\n  background: var(--gds-ref-pallet-base100);\n  border-radius: 2px;\n  z-index: -1;\n  margin: -1rem;\n  opacity: 0;\n  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);\n  border: 1px solid transparent;\n}\n@media (prefers-reduced-motion: reduce) {\n  :host.gds-form-item .gds-form-item__backdrop {\n    transition: none;\n  }\n}\n:host.gds-form-item:has([aria-expanded=true]) .gds-form-item__backdrop {\n  opacity: 1;\n  border-radius: 0.25rem;\n  border-color: var(--gds-ref-pallet-base600);\n}\n:host.gds-form-item .gds-form-item__footer:not(:empty) {\n  margin-top: 0.5rem;\n  display: flex;\n  column-gap: 1rem;\n}\n:host.gds-form-item .gds-form-item__footer:not(:empty) > span {\n  font-weight: 500;\n}\n:host .hide-if-empty:empty {\n  display: none;\n}\n:host input:not([type]),\n:host input[type=date],\n:host input[type=datetime],\n:host input[type=datetime-local],\n:host input[type=email],\n:host input[type=month],\n:host input[type=number],\n:host input[type=password],\n:host input[type=search],\n:host input[type=tel],\n:host input[type=text],\n:host input[type=time],\n:host input[type=url],\n:host input[type=week] {\n  padding-left: 1rem;\n  padding-right: 1rem;\n  padding-bottom: 0.75rem;\n  padding-top: 0.75rem;\n  border-radius: var(--sg-border-radius);\n  border: solid var(--sg-border-width) var(--sg-border-color);\n  --border-color: var(--sg-border-color);\n  background-color: var(--sg-form-control-bg);\n  color: var(--sg-text-primary);\n  min-height: 2.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n:host input:not([type]):focus:not(:focus-visible),\n:host input[type=date]:focus:not(:focus-visible),\n:host input[type=datetime]:focus:not(:focus-visible),\n:host input[type=datetime-local]:focus:not(:focus-visible),\n:host input[type=email]:focus:not(:focus-visible),\n:host input[type=month]:focus:not(:focus-visible),\n:host input[type=number]:focus:not(:focus-visible),\n:host input[type=password]:focus:not(:focus-visible),\n:host input[type=search]:focus:not(:focus-visible),\n:host input[type=tel]:focus:not(:focus-visible),\n:host input[type=text]:focus:not(:focus-visible),\n:host input[type=time]:focus:not(:focus-visible),\n:host input[type=url]:focus:not(:focus-visible),\n:host input[type=week]:focus:not(:focus-visible) {\n  box-shadow: none;\n  outline: 0;\n}\n:host input:not([type]):focus, :host input:not([type]):focus-visible,\n:host input[type=date]:focus,\n:host input[type=date]:focus-visible,\n:host input[type=datetime]:focus,\n:host input[type=datetime]:focus-visible,\n:host input[type=datetime-local]:focus,\n:host input[type=datetime-local]:focus-visible,\n:host input[type=email]:focus,\n:host input[type=email]:focus-visible,\n:host input[type=month]:focus,\n:host input[type=month]:focus-visible,\n:host input[type=number]:focus,\n:host input[type=number]:focus-visible,\n:host input[type=password]:focus,\n:host input[type=password]:focus-visible,\n:host input[type=search]:focus,\n:host input[type=search]:focus-visible,\n:host input[type=tel]:focus,\n:host input[type=tel]:focus-visible,\n:host input[type=text]:focus,\n:host input[type=text]:focus-visible,\n:host input[type=time]:focus,\n:host input[type=time]:focus-visible,\n:host input[type=url]:focus,\n:host input[type=url]:focus-visible,\n:host input[type=week]:focus,\n:host input[type=week]:focus-visible {\n  outline-color: var(--gds-sys-color-focus-outline);\n  outline-style: solid;\n  outline-width: 0.125rem;\n  outline-offset: 0.125rem;\n}\n:host input:not([type]).small,\n:host input[type=date].small,\n:host input[type=datetime].small,\n:host input[type=datetime-local].small,\n:host input[type=email].small,\n:host input[type=month].small,\n:host input[type=number].small,\n:host input[type=password].small,\n:host input[type=search].small,\n:host input[type=tel].small,\n:host input[type=text].small,\n:host input[type=time].small,\n:host input[type=url].small,\n:host input[type=week].small {\n  min-height: 2rem;\n  padding: 0.25rem 0.75rem;\n  line-height: 1rem;\n}\n@media screen and (-ms-high-contrast: active) {\n  :host input:not([type]),\n  :host input[type=date],\n  :host input[type=datetime],\n  :host input[type=datetime-local],\n  :host input[type=email],\n  :host input[type=month],\n  :host input[type=number],\n  :host input[type=password],\n  :host input[type=search],\n  :host input[type=tel],\n  :host input[type=text],\n  :host input[type=time],\n  :host input[type=url],\n  :host input[type=week] {\n    border: 2px solid currentcolor;\n  }\n}\n:host input:not([type]):disabled, :host input:not([type]).disabled, :host input:not([type])[aria-disabled=true],\n:host input[type=date]:disabled,\n:host input[type=date].disabled,\n:host input[type=date][aria-disabled=true],\n:host input[type=datetime]:disabled,\n:host input[type=datetime].disabled,\n:host input[type=datetime][aria-disabled=true],\n:host input[type=datetime-local]:disabled,\n:host input[type=datetime-local].disabled,\n:host input[type=datetime-local][aria-disabled=true],\n:host input[type=email]:disabled,\n:host input[type=email].disabled,\n:host input[type=email][aria-disabled=true],\n:host input[type=month]:disabled,\n:host input[type=month].disabled,\n:host input[type=month][aria-disabled=true],\n:host input[type=number]:disabled,\n:host input[type=number].disabled,\n:host input[type=number][aria-disabled=true],\n:host input[type=password]:disabled,\n:host input[type=password].disabled,\n:host input[type=password][aria-disabled=true],\n:host input[type=search]:disabled,\n:host input[type=search].disabled,\n:host input[type=search][aria-disabled=true],\n:host input[type=tel]:disabled,\n:host input[type=tel].disabled,\n:host input[type=tel][aria-disabled=true],\n:host input[type=text]:disabled,\n:host input[type=text].disabled,\n:host input[type=text][aria-disabled=true],\n:host input[type=time]:disabled,\n:host input[type=time].disabled,\n:host input[type=time][aria-disabled=true],\n:host input[type=url]:disabled,\n:host input[type=url].disabled,\n:host input[type=url][aria-disabled=true],\n:host input[type=week]:disabled,\n:host input[type=week].disabled,\n:host input[type=week][aria-disabled=true] {\n  background: var(--sg-form-control-bg-disabled) !important;\n  color: var(--text-disabled-color) !important;\n  border-color: var(--border-disabled-color) !important;\n  cursor: not-allowed;\n}\n:host input:not([type]):disabled::placeholder, :host input:not([type]).disabled::placeholder, :host input:not([type])[aria-disabled=true]::placeholder,\n:host input[type=date]:disabled::placeholder,\n:host input[type=date].disabled::placeholder,\n:host input[type=date][aria-disabled=true]::placeholder,\n:host input[type=datetime]:disabled::placeholder,\n:host input[type=datetime].disabled::placeholder,\n:host input[type=datetime][aria-disabled=true]::placeholder,\n:host input[type=datetime-local]:disabled::placeholder,\n:host input[type=datetime-local].disabled::placeholder,\n:host input[type=datetime-local][aria-disabled=true]::placeholder,\n:host input[type=email]:disabled::placeholder,\n:host input[type=email].disabled::placeholder,\n:host input[type=email][aria-disabled=true]::placeholder,\n:host input[type=month]:disabled::placeholder,\n:host input[type=month].disabled::placeholder,\n:host input[type=month][aria-disabled=true]::placeholder,\n:host input[type=number]:disabled::placeholder,\n:host input[type=number].disabled::placeholder,\n:host input[type=number][aria-disabled=true]::placeholder,\n:host input[type=password]:disabled::placeholder,\n:host input[type=password].disabled::placeholder,\n:host input[type=password][aria-disabled=true]::placeholder,\n:host input[type=search]:disabled::placeholder,\n:host input[type=search].disabled::placeholder,\n:host input[type=search][aria-disabled=true]::placeholder,\n:host input[type=tel]:disabled::placeholder,\n:host input[type=tel].disabled::placeholder,\n:host input[type=tel][aria-disabled=true]::placeholder,\n:host input[type=text]:disabled::placeholder,\n:host input[type=text].disabled::placeholder,\n:host input[type=text][aria-disabled=true]::placeholder,\n:host input[type=time]:disabled::placeholder,\n:host input[type=time].disabled::placeholder,\n:host input[type=time][aria-disabled=true]::placeholder,\n:host input[type=url]:disabled::placeholder,\n:host input[type=url].disabled::placeholder,\n:host input[type=url][aria-disabled=true]::placeholder,\n:host input[type=week]:disabled::placeholder,\n:host input[type=week].disabled::placeholder,\n:host input[type=week][aria-disabled=true]::placeholder {\n  color: var(--text-disabled-color);\n}\n:host input:not([type]):hover,\n:host input[type=date]:hover,\n:host input[type=datetime]:hover,\n:host input[type=datetime-local]:hover,\n:host input[type=email]:hover,\n:host input[type=month]:hover,\n:host input[type=number]:hover,\n:host input[type=password]:hover,\n:host input[type=search]:hover,\n:host input[type=tel]:hover,\n:host input[type=text]:hover,\n:host input[type=time]:hover,\n:host input[type=url]:hover,\n:host input[type=week]:hover {\n  background-color: var(--gds-ref-pallet-base100);\n}\n:host input[type=number] {\n  -moz-appearance: textfield;\n}\n:host input[type=number]::-webkit-outer-spin-button, :host input[type=number]::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n:host input {\n  width: 100%;\n}\n:host .gds-input-wrapper {\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  transition: all 200ms ease-in-out, outline-offset 0s, outline-width 0s;\n}\n:host .gds-input-wrapper::before {\n  background: transparent;\n  border-radius: 0 0 4px 4px;\n  clip-path: inset(4px 0 0 0);\n  content: "";\n  display: block;\n  height: 4px;\n  position: absolute;\n  transition: 300ms ease-in-out;\n  width: 100%;\n}\n:host .gds-input-wrapper:before {\n  bottom: 0;\n}\n.is-invalid :host .gds-input-wrapper {\n  color: var(--intent-danger-background);\n  opacity: 1;\n}\n.is-invalid :host .gds-input-wrapper::before {\n  background: var(--intent-danger-background);\n  clip-path: inset(1px 0 0 0);\n}\n:host label:is(label),\n:host .label:is(label),\n:host legend:is(label) {\n  margin-bottom: 0;\n}\n:host label.form-control,\n:host .label.form-control,\n:host legend.form-control {\n  width: -moz-fit-content;\n  width: fit-content;\n}\n@supports (-moz-appearance: none) {\n  :host label.form-control:focus:not(:focus-visible),\n  :host .label.form-control:focus:not(:focus-visible),\n  :host legend.form-control:focus:not(:focus-visible) {\n    box-shadow: none;\n    outline: 0;\n  }\n  :host label.form-control:focus, :host label.form-control:focus-within,\n  :host .label.form-control:focus,\n  :host .label.form-control:focus-within,\n  :host legend.form-control:focus,\n  :host legend.form-control:focus-within {\n    outline-color: var(--gds-sys-color-focus-outline);\n    outline-style: solid;\n    outline-width: 0.125rem;\n    outline-offset: 0.125rem;\n  }\n}\n:host label:not(.form-control),\n:host .label:not(.form-control),\n:host legend:not(.form-control) {\n  font-weight: 500;\n  width: 100%;\n  line-height: 1.25rem;\n}\n:host label + input, :host label + textarea, fieldset :host label + div, :host label + button, :host label + .group-stepper, :host label + .stepper-wrapper, :host label + .group,\n:host .label + input,\n:host .label + textarea,\nfieldset :host .label + div,\n:host .label + button,\n:host .label + .group-stepper,\n:host .label + .stepper-wrapper,\n:host .label + .group,\n:host legend + input,\n:host legend + textarea,\nfieldset :host legend + div,\n:host legend + button,\n:host legend + .group-stepper,\n:host legend + .stepper-wrapper,\n:host legend + .group {\n  margin-top: 0.5rem;\n}\n:host label + .form-info,\n:host .label + .form-info,\n:host legend + .form-info {\n  margin-bottom: 0.5rem;\n}\n:host .form-info {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  width: 100%;\n}\n:host .gds-form-item__footer .form-info {\n  font-weight: 500;\n}\n:host .gds-form-item__footer .form-info--error {\n  color: var(--intent-danger-background, #9f000a);\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/angular/src/v-angular/input/input.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,WithCustomError:()=>WithCustomError,WithCustomErrorAndCountdown:()=>WithCustomErrorAndCountdown,WithCustomLabel:()=>WithCustomLabel,WithDisplayDisabledAsLocked:()=>WithDisplayDisabledAsLocked,WithFormControl:()=>WithFormControl,WithInputMask:()=>WithInputMask,WithLockedInput:()=>WithLockedInput,WithMaxLength:()=>WithMaxLength,WithPrefixAndOrSuffix:()=>WithPrefixAndOrSuffix,WithResetObservable:()=>WithResetObservable,WithTypeAhead:()=>WithTypeAhead,__namedExportsOrder:()=>__namedExportsOrder,default:()=>input_stories}),"undefined"==typeof window||window.nggv||(window.nggv={ids:{default:-1},nextId(namespace="default"){let id=this.ids[namespace]||0;return"number"==typeof this.ids[namespace]&&id++,this.ids[namespace]=id,"default"===namespace?`nggv-${id}`:`nggv-${namespace}-${id}`}});__webpack_require__("./dist/libs/core/src/components/icon/icons/triangle-exclamation.js");var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),testing=__webpack_require__("./node_modules/@angular/router/fesm2022/testing.mjs"),distinctUntilChanged=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js"),observable_of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),debounceTime=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),jsverse_transloco=__webpack_require__("./node_modules/@jsverse/transloco/fesm2022/jsverse-transloco.mjs"),shared=__webpack_require__("./libs/angular/src/lib/shared/index.ts"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var NgvButtonComponent_1,ButtonStyle,button_componentngResource=__webpack_require__("./libs/angular/src/v-angular/button/button.component.scss?ngResource"),button_componentngResource_default=__webpack_require__.n(button_componentngResource),base_control_value_accessor=__webpack_require__("./libs/angular/src/v-angular/base-control-value-accessor/index.ts");!function(ButtonStyle){ButtonStyle[ButtonStyle.Primary=0]="Primary",ButtonStyle[ButtonStyle.Secondary=1]="Secondary",ButtonStyle[ButtonStyle.Alternative=2]="Alternative",ButtonStyle[ButtonStyle.Delete=3]="Delete",ButtonStyle[ButtonStyle.DeleteConfirm=4]="DeleteConfirm",ButtonStyle[ButtonStyle.Ghost=5]="Ghost",ButtonStyle[ButtonStyle.GhostDark=6]="GhostDark",ButtonStyle[ButtonStyle.Link=7]="Link"}(ButtonStyle||(ButtonStyle={}));let NgvButtonComponent=class NgvButtonComponent extends base_control_value_accessor.n{static{NgvButtonComponent_1=this}constructor(ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.thook="button",this.type="button",this.buttonStyle="link"===this.type?ButtonStyle.Link:ButtonStyle.Primary,this.small=!1,this.external=!1,this.buttonClasses={},this.nggvClick=new core.EventEmitter}static buttonStyleClasses(type,small){return{small,primary:type===ButtonStyle.Primary||type===ButtonStyle.Delete,secondary:type===ButtonStyle.Secondary,tertiary:type===ButtonStyle.Alternative||type===ButtonStyle.Link,danger:type===ButtonStyle.Delete||type===ButtonStyle.DeleteConfirm,ghost:type===ButtonStyle.GhostDark,"ghost-light":type===ButtonStyle.Ghost}}ngOnInit(){super.ngOnInit(),this.href&&(this.external=/^\w+:\/\/.+$/.test(this.href)),this.buttonClasses=NgvButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small)}ngOnChanges(changes){(changes.buttonStyle||changes.small)&&(this.buttonClasses=NgvButtonComponent_1.buttonStyleClasses(this.buttonStyle,this.small))}onClick(event){this.disabled||this.nggvClick.emit(event)}static{this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ChangeDetectorRef}]}static{this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],type:[{type:core.Input}],buttonStyle:[{type:core.Input}],small:[{type:core.Input}],href:[{type:core.Input}],nggvClick:[{type:core.Output}]}}};NgvButtonComponent=NgvButtonComponent_1=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-button",template:'<button\n  #input\n  [ngClass]="buttonClasses"\n  [id]="id + \'-button\'"\n  [attr.name]="name"\n  [attr.value]="value"\n  [type]="type"\n  [autofocus]="autofocus"\n  [disabled]="disabled"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type !== \'link\'"\n>\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</button>\n\n<a\n  #input\n  [ngClass]="buttonClasses"\n  role="button"\n  [id]="id + \'-link\'"\n  [routerLink]="href"\n  [external]="external"\n  [attr.aria-label]="description"\n  (click)="onClick($event)"\n  (focus)="onFocus($event)"\n  (blur)="onBlur($event)"\n  *ngIf="type === \'link\'"\n>\n  <ng-container *ngTemplateOutlet="contentRef"></ng-container>\n</a>\n\n<ng-template #contentRef>\n  <ng-content></ng-content>\n</ng-template>\n',styles:[button_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],NgvButtonComponent);var character_countdown_directive=__webpack_require__("./libs/angular/src/v-angular/character-countdown/character-countdown.directive.ts");let DropdownUtils=class DropdownUtils{flattenOptions(options,mustHaveLabel){return options?options.reduce(((acc,current)=>this.isGroup(current)?acc.concat(this.flattenOptions(current.options,mustHaveLabel)):(current.disabled||mustHaveLabel&&!current.label||acc.push(current),acc)),[]):[]}isGroup(option){return"options"in option}};DropdownUtils=(0,tslib_es6.Cg)([(0,core.Injectable)()],DropdownUtils);const dropdown_list_componentngResource_namespaceObject='<ng-container *transloco="let t; read: scope">\n  <ul\n    class="gds-dropdown__options card options gds-reset"\n    [class.gds-dropdown__options-expanded]="expanded"\n    role="listbox"\n    tabindex="-1"\n    [attr.data-thook]="thook + \'-options\'"\n    [attr.aria-labelledby]="id + \'-label\'"\n    [attr.aria-activedescendant]="\n      state ? id + \'-option-\' + state?.key : undefined\n    "\n  >\n    <ng-container *ngFor="let item of options">\n      \x3c!-- OPTION --\x3e\n      <ng-container *ngIf="!isGroup(item)">\n        <ng-template\n          *ngTemplateOutlet="listItemTemplate; context: { $implicit: item }"\n        ></ng-template>\n      </ng-container>\n\n      \x3c!-- OPTION GROUP --\x3e\n      <li\n        class="gds-dropdown__options__label group"\n        [attr.data-thook]="thook + \'-option-group\'"\n        *ngIf="isGroup(item)"\n      >\n        <div class="sdv-list__label">{{ t(item.label) }}</div>\n        <ul [attr.aria-disabled]="item.disabled">\n          <ng-container *ngFor="let option of castGroup(item).options">\n            <ng-template\n              *ngTemplateOutlet="\n                listItemTemplate;\n                context: { $implicit: option }\n              "\n            ></ng-template>\n          </ng-container>\n        </ul>\n      </li>\n    </ng-container>\n  </ul>\n\n  \x3c!-- TEMPLATE --\x3e\n  <ng-template #listItemTemplate let-option>\n    <li\n      #optionRefs\n      *ngIf="!optionContentTpl"\n      tabindex="-1"\n      [id]="id + \'-option-\' + option.key"\n      class="gds-dropdown__options__label option"\n      role="option"\n      #liElem\n      [attr.data-thook]="thook + \'-option-\' + option.key"\n      [attr.aria-disabled]="option.disabled"\n      [attr.aria-selected]="\n        option.key === selectedValue?.key && !!selectedValue?.key\n      "\n      [attr.aria-focus]="option.key === state?.key && !option.disabled"\n      [nggvTooltip]="isOverflow(liElem) ? t(option.label) : undefined"\n      (click)="updateState(option, $event)"\n    >\n      <ng-template\n        *ngTemplateOutlet="\n          basicOptionContentTpl;\n          context: { $implicit: option }\n        "\n      >\n      </ng-template>\n    </li>\n    \x3c!-- Checking overflow on custom templates do not work skip adding nggvToolTip if custom template is provided --\x3e\n    <li\n      #optionRefs\n      *ngIf="!!optionContentTpl"\n      tabindex="-1"\n      [id]="id + \'-option-\' + option.key"\n      class="gds-dropdown__options__label option"\n      role="option"\n      #liElem\n      [attr.data-thook]="thook + \'-option-\' + option.key"\n      [attr.aria-disabled]="option.disabled"\n      [attr.aria-selected]="\n        option.key === selectedValue?.key && !!selectedValue?.key\n      "\n      [attr.aria-focus]="option.key === state?.key && !option.disabled"\n      (click)="updateState(option, $event)"\n    >\n      <ng-template\n        *ngTemplateOutlet="optionContentTpl; context: { $implicit: option }"\n      >\n      </ng-template>\n    </li>\n  </ng-template>\n\n  <ng-template #basicOptionContentTpl let-option>\n    <nggv-typeahead-highlight\n      *ngIf="!!textToHighlight"\n      [textToHighlight]="textToHighlight"\n      [textContent]="t(option.label)"\n    >\n    </nggv-typeahead-highlight>\n    <ng-container *ngIf="!textToHighlight">\n      {{ t(option.label) }}\n    </ng-container>\n  </ng-template>\n</ng-container>\n';var dropdown_list_componentngResource=__webpack_require__("./libs/angular/src/v-angular/dropdown/dropdown-list/dropdown-list.component.scss?ngResource"),dropdown_list_componentngResource_default=__webpack_require__.n(dropdown_list_componentngResource),Subject=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subject.js"),scroll_into_view_if_needed_dist=__webpack_require__("./node_modules/scroll-into-view-if-needed/dist/index.js");let NgvDropdownListComponent=class NgvDropdownListComponent{set expanded(state){this.setExpanded(state)}get expanded(){return this._expanded}constructor(translocoScope){this.translocoScope=translocoScope,this.scrollOffset=24,this.id=window.nggv?.nextId(),this.thook="dropdown",this.selectedValueChanged=new core.EventEmitter,this.closed=new core.EventEmitter,this.activeIndex=-1,this.dropdownUtils=new DropdownUtils,this._expanded=!1,this.closed$=new Subject.B,this.translocoScope&&(this.scope=this.translocoScope.toString())}ngOnInit(){this.state&&(this.activeIndex=this.options.findIndex((option=>option.key===this.state.key)))}ngOnChanges(changes){changes.state&&!changes.state.firstChange&&(this.selectedValue=changes.state.currentValue),changes.options?.currentValue?.length&&this.expanded&&this.refreshSelectedOption()}isGroup(option){return"options"in option}updateState(option,event){option.disabled||(this.selectedValue=option,this.state=option,this.selectedValueChanged.emit(option),this.setExpanded(!1),event.stopPropagation())}setExpanded(expanded=!0){this._expanded=expanded,expanded?this.refreshSelectedOption():(this.closed$.next(!0),this.onClickSubscription?.unsubscribe())}refreshSelectedOption(){const options=this.dropdownUtils.flattenOptions(this.options,!this.optionContentTpl);this.activeIndex=this.getActiveIndex(),this.state=options[this.activeIndex],this.scrollToResult(this.state)}getActiveIndex(){if(this.selectedValue&&null!=this.selectedValue?.key){const selectedIndex=this.dropdownUtils.flattenOptions(this.options,!this.optionContentTpl).findIndex((option=>null!=option.key&&option.key===this.selectedValue?.key));if(selectedIndex>-1)return selectedIndex}return this.dropdownUtils.flattenOptions(this.options,!this.optionContentTpl).findIndex((option=>null!=option.key))}isOverflow(elem){return elem.offsetWidth<elem.scrollWidth}castGroup(group){return group}onKeyDown(event){switch(event.key){case"Enter":case"ArrowUp":case"ArrowDown":return event.preventDefault(),event.stopPropagation(),!1}return!0}onKeyUp(event){if(!this.expanded)return;const options=this.dropdownUtils.flattenOptions(this.options,!this.optionContentTpl);let option;switch(event.key){case"Escape":this.setExpanded(!1),this.closed.emit();break;case"Enter":option=options[this.activeIndex],this.updateState(option,event);break;case"Home":this.activeIndex=0,option=options[this.activeIndex],this.state=option,this.scrollToResult(option);break;case"ArrowUp":this.activeIndex>0?this.activeIndex--:0===this.activeIndex&&(this.activeIndex=options.length-1),option=options[this.activeIndex],this.state=option,this.scrollToResult(option);break;case"ArrowDown":options.length>this.activeIndex+1?this.activeIndex++:this.activeIndex===options.length-1&&(this.activeIndex=0),option=options[this.activeIndex],this.state=option,this.scrollToResult(option);break;case"End":this.activeIndex=options.length-1,option=options[this.activeIndex],this.state=option,this.scrollToResult(option)}}scrollToResult(option){if(!this.optionRefs||!option)return;const optionRef=this.optionRefs.find((li=>li.nativeElement.id===this.id+"-option-"+option.key)),offset=this.scrollOffset;if(optionRef){let delta=window.scrollY||document.documentElement.scrollTop;setTimeout((()=>{(0,scroll_into_view_if_needed_dist.A)(optionRef.nativeElement,{scrollMode:"if-needed",block:"nearest"}),delta-=window.scrollY||document.documentElement.scrollTop,delta&&window.scrollBy(0,delta>0?-offset:offset)}),0)}}static{this.ctorParameters=()=>[{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]}]}static{this.propDecorators={expanded:[{type:core.Input}],state:[{type:core.Input}],scrollOffset:[{type:core.Input}],optionContentTpl:[{type:core.Input}],optionRefs:[{type:core.ViewChildren,args:["optionRefs"]}],id:[{type:core.HostBinding,args:["attr.id"]},{type:core.Input}],thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],options:[{type:core.Input}],textToHighlight:[{type:core.Input}],selectedValueChanged:[{type:core.Output}],closed:[{type:core.Output}],onKeyDown:[{type:core.HostListener,args:["document:keydown",["$event"]]}],onKeyUp:[{type:core.HostListener,args:["document:keyup",["$event"]]}]}}};NgvDropdownListComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-dropdown-list",template:dropdown_list_componentngResource_namespaceObject,styles:[dropdown_list_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[Object])],NgvDropdownListComponent);var dropdown_componentngResource=__webpack_require__("./libs/angular/src/v-angular/dropdown/dropdown.component.scss?ngResource"),dropdown_componentngResource_default=__webpack_require__.n(dropdown_componentngResource),fromEvent=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js");let NgvDropdownComponent=class NgvDropdownComponent extends base_control_value_accessor.n{set options(value){this._options=value;const nullishOption=this.dropdownUtils.flattenOptions(value,!1).find((option=>null==option.key));if(this.required||nullishOption||!this.allowControlNullishOption||(this._options=[this.defaultNullishOption].concat(this._options)),1===value.length&&this.required&&this.selectOnSingleOption){const onlyOption=this.dropdownUtils.flattenOptions(value,!1)[0];return void this.updateModel(onlyOption)}const matchingOption=this.dropdownUtils.flattenOptions(value,!1).find((option=>option.key==this.ngControl?.value));(this.allowControlNullishOption||matchingOption)&&this.writeValue(this.ngControl?.value)}get options(){return this._options}get defaultNullishOption(){return{key:null,label:this.placeholder??" "}}constructor(ngControl,translocoScope,cdr,dropdownUtils){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.dropdownUtils=dropdownUtils,this.thook="dropdown",this.scrollOffset=24,this.allowControlNullishOption=!0,this.selectOnSingleOption=!0,this.expandedChange=new core.EventEmitter,this.expanded=!1,this.activeIndex=-1,this.keyEvent={},this._options=[]}ngOnChanges(changes){if(void 0!==changes.required?.currentValue){const isRequired=changes.required.currentValue,hasNullishOption=null==this.dropdownUtils.flattenOptions(this._options,!1)[0]?.key;if(isRequired&&hasNullishOption&&this.allowControlNullishOption)return void(this._options=this._options.slice(1));if(!isRequired&&!hasNullishOption&&this.allowControlNullishOption)return void(this._options=[this.defaultNullishOption].concat(this._options))}}ngOnDestroy(){this.onClickSubscription?.unsubscribe()}writeValue(value){const options=this.dropdownUtils.flattenOptions(this._options,!1);this.state=options.find((option=>option.key===value))}onSelectChange(option){option.disabled||(this.updateModel(option),this.setExpanded(!1))}onKeyUp(event){this.keyEvent=event}subscribeToOutsideClickEvent(){this.onClickSubscription=(0,fromEvent.R)(document,"click").subscribe({next:event=>{this.expanded&&!this.inputRef?.nativeElement.contains(event.target)&&(this.toggleDropdown(),this.onClickSubscription?.unsubscribe())}})}updateModel(value){this.state=value,this.onChange(value.key)}toggleDropdown(){this.setExpanded(!this.expanded),this.cdr.detectChanges()}setExpanded(state=!0){this.expanded=state,this.expandedChange.emit(this.expanded),this.expanded&&this.subscribeToOutsideClickEvent(),this.expanded||this.onTouched()}castOption(option){return option}castGroup(group){return group}isOption(option){return!("options"in option)}static{this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ChangeDetectorRef},{type:DropdownUtils}]}static{this.propDecorators={selectedContentTpl:[{type:core.ContentChild,args:["selectedTpl",{read:core.TemplateRef}]}],optionContentTpl:[{type:core.ContentChild,args:["optionTpl",{read:core.TemplateRef}]}],thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],placeholder:[{type:core.Input}],options:[{type:core.Input}],scrollOffset:[{type:core.Input}],allowControlNullishOption:[{type:core.Input}],textToHighlight:[{type:core.Input}],selectOnSingleOption:[{type:core.Input}],expandedChange:[{type:core.Output}],onKeyUp:[{type:core.HostListener,args:["keyup",["$event"]]}]}}};NgvDropdownComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-dropdown",template:'\x3c!-- LABEL --\x3e\n<ng-container *transloco="let t; read: scope">\n  <label [id]="id + \'-label\'" class="sdv-field-label hide-if-empty" [attr.for]="id + \'-toggle\'">\n    <ng-template\n      *ngTemplateOutlet="labelContentTpl || basicLabelContentTpl"\n    ></ng-template>\n    <ng-template #basicLabelContentTpl>\n      \x3c!-- to trigger css:empty if no label was added --\x3e\n      <ng-container *ngIf="label">\n        {{ label }}\n        <span\n          *ngIf="optional === true || (required !== true && optional !== false)"\n          class="sdv-field-label--optional"\n        >\n          ({{ t(\'label.optional\') }})\n        </span>\n      </ng-container>\n    </ng-template>\n  </label>\n\n  \x3c!-- DESCRIPTION --\x3e\n  <div class="description">{{ description }}</div>\n\n  \x3c!-- LOCKED INPUT --\x3e\n  <ng-container *ngIf="locked">\n    <div\n      [id]="id + \'-input\'"\n      class="nggv-field--locked"\n      [attr.name]="name"\n      [attr.value]="state"\n      [attr.role]="role"\n      [attr.aria-labelledby]="id + \'-label \' + id + \'-input\'"\n    >\n      <span *ngIf="!state" class="unset-state">-</span>\n      <ng-container *ngIf="state">\n        <ng-template\n          *ngTemplateOutlet="\n            selectedContentTpl || defaultSelectedContentTpl;\n            context: { $implicit: state }\n          "\n        >\n        </ng-template>\n      </ng-container>\n    </div>\n  </ng-container>\n\n  \x3c!-- INPUT --\x3e\n  <ng-container *ngIf="!locked">\n    <div #input [id]="id + \'-input\'" class="dropdown">\n      <button\n        [id]="id + \'-toggle\'"\n        [disabled]="disabled"\n        type="button"\n        class="nggv-field-dropdown__label toggle"\n        [class.nggv-field--error]="invalid"\n        aria-haspopup="listbox"\n        [attr.data-thook]="thook + \'-toggle\'"\n        [attr.aria-expanded]="expanded"\n        [attr.aria-labelledby]="id + \'-label \' + id + \'-toggle\'"\n        (click)="toggleDropdown()"\n      >\n        <ng-template\n          *ngTemplateOutlet="\n            selectedContentTpl || defaultSelectedContentTpl;\n            context: { $implicit: state }\n          "\n        >\n        </ng-template>\n      </button>\n\n      <nggv-dropdown-list\n        #dropDownList\n        [options]="options"\n        [scrollOffset]="scrollOffset"\n        [state]="state"\n        [expanded]="expanded"\n        [optionContentTpl]="optionContentTpl"\n        [textToHighlight]="textToHighlight"\n        (selectedValueChanged)="onSelectChange($event)"\n      >\n      </nggv-dropdown-list>\n    </div>\n    \x3c!-- ERRORS --\x3e\n    <label\n      class="sdv-field-notice sdv-field-notice--error"\n      [attr.for]="id + \'-input\'"\n      *ngIf="invalid && (error || ngControl?.invalid)"\n    >\n      <span *ngIf="error; else errorsRef">{{ error }}</span>\n      <ng-template #errorsRef>\n        <span *ngIf="firstError as error">\n          {{ t(\'error.field\' + error?.code, error?.params) }}\n        </span>\n      </ng-template>\n    </label>\n\n    \x3c!-- CHILDREN --\x3e\n    <ng-content></ng-content>\n  </ng-container>\n\n  <ng-template #defaultSelectedContentTpl let-state>\n    \x3c!-- eslint-disable-next-line @angular-eslint/template/eqeqeq --\x3e\n    {{ state?.key != null && state?.label ? t(state.label) : placeholder }}\n  </ng-template>\n</ng-container>\n',styles:[dropdown_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef,DropdownUtils])],NgvDropdownComponent);var typeahead_dropdown_list_componentngResource=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead-dropdown-list/typeahead-dropdown-list.component.scss?ngResource"),typeahead_dropdown_list_componentngResource_default=__webpack_require__.n(typeahead_dropdown_list_componentngResource),takeUntil=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js");var input_componentngResource=__webpack_require__("./libs/angular/src/v-angular/input/input.component.scss?ngResource"),input_componentngResource_default=__webpack_require__.n(input_componentngResource);let NgvInputComponent=class NgvInputComponent extends base_control_value_accessor.n{set minLength(length){this._minlength=length}set minlength(length){this._minlength=length}get minlength(){return this._minlength}set maxLength(length){this._maxlength=length,this.writeValue(this.state)}get maxlength(){return this._maxlength}set maxlength(length){this._maxlength=length,this.writeValue(this.state)}set showCharacterCountdown(option){this._showCharacterCountDown=option}get showCharacterCountdown(){return this._showCharacterCountDown&&this.hasMaxLength}set inputMask(newInputMask){this.hideInput$.next(!0),this.cdr.detectChanges(),this._inputMask=newInputMask,setTimeout((()=>{this.hideInput$.next(!1),this.cdr.detectChanges()}),200)}get inputMask(){return this._inputMask}get control(){return this.ngControl?.control??this._formControl}get hasMaxLength(){return!!this.maxlength&&this.maxlength!==Number.MAX_SAFE_INTEGER}constructor(ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.class="gds-form-item",this.thook="input",this.type="text",this.autocomplete="on",this.readonly=!1,this.email=!1,this.min=0,this.max=Number.MAX_SAFE_INTEGER,this.step=1,this._maxlength=Number.MAX_SAFE_INTEGER,this._minlength=0,this._showCharacterCountDown=!0,this.pattern="",this.debounceTime=500,this.badgeText="",this.nggvInput=new core.EventEmitter,this._formControl=new fesm2022_forms.hs,this.hideInput$=new Subject.B,this.inputChange$=new Subject.B,this._destroy$=new Subject.B}ngOnInit(){super.ngOnInit(),this.inputChange$.pipe((0,takeUntil.Q)(this._destroy$),(0,debounceTime.B)(this.debounceTime)).subscribe((inputValue=>{this.nggvInput.emit(inputValue)}))}ngOnDestroy(){this._destroy$.next(!0),this._destroy$.complete()}writeValue(value){value?.length&&value.length>this.maxlength&&this.control.touched?(this.state=this.cutTextAfterMaxLength(value),value.length!==this.state.length&&this.onChange(this.state)):this.state=value,this.cdr.detectChanges()}cutTextAfterMaxLength(value){return"string"==typeof value?value.substring(0,this.maxlength):value}onInput(event){event.stopPropagation(),this.disabled||(this.state=event.target.value,this.onChange(this.state),this.inputChange$.next(this.state))}static{this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ChangeDetectorRef}]}static{this.propDecorators={class:[{type:core.HostBinding,args:["class"]}],thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],type:[{type:core.Input}],placeholder:[{type:core.Input}],autocomplete:[{type:core.Input}],readonly:[{type:core.Input}],email:[{type:core.Input}],min:[{type:core.Input}],max:[{type:core.Input}],step:[{type:core.Input}],minLength:[{type:core.Input}],minlength:[{type:core.Input}],maxLength:[{type:core.Input}],maxlength:[{type:core.Input}],showCharacterCountdown:[{type:core.Input}],pattern:[{type:core.Input}],debounceTime:[{type:core.Input}],badgeText:[{type:core.Input}],inputMask:[{type:core.Input}],nggvInput:[{type:core.Output}]}}};NgvInputComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-input",template:'\x3c!-- LABEL --\x3e\n<label\n  [id]="id + \'-label\'"\n  class="sdv-field-label hide-if-empty"\n  [attr.for]="id + \'-input\'"\n  *transloco="let t; read: scope"\n>\n  <ng-template\n    *ngTemplateOutlet="labelContentTpl || basicLabelContentTpl"\n  ></ng-template>\n  <ng-template #basicLabelContentTpl>\n    \x3c!-- to trigger css:empty if no label was added --\x3e\n    <ng-container *ngIf="label">\n      {{ label }}\n      <span\n        *ngIf="optional === true || (required !== true && optional !== false)"\n        class="sdv-field-label--optional"\n      >\n        ({{ t(\'label.optional\') }})\n      </span>\n    </ng-container>\n  </ng-template>\n</label>\n\n\x3c!-- DESCRIPTION --\x3e\n<div class="form-info description hide-if-empty" *ngIf="descriptionIsVisible">\n  {{ description }}\n</div>\n\n\x3c!-- LOCKED INPUT --\x3e\n<ng-container *ngIf="locked">\n  <div\n    [id]="id + \'-input\'"\n    class="nggv-field--locked"\n    [attr.name]="name"\n    [attr.value]="state"\n    [attr.role]="role"\n  >\n    <span *ngIf="!state" class="unset-state">-</span>\n    <ng-container *ngIf="state">\n      <ng-container *ngIf="!inputMask">\n        {{ state }}\n      </ng-container>\n      <ng-container *ngIf="!!inputMask">\n        {{ state | nggvInputMaskFormat: inputMask }}\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-container>\n\n\x3c!-- INPUT WRAPPER --\x3e\n<ng-container *ngIf="!locked">\n  <div class="gds-input-wrapper" [class.nggv-field--error]="invalid">\n    <div class="input-group-prefix hide-if-empty">\n      <ng-content select="[slot=\'prefix\']"></ng-content>\n    </div>\n\n    \x3c!-- INPUT FIELD --\x3e\n    <div class="input-group" *ngIf="!inputMask">\n      <input\n        #input\n        [id]="id + \'-input\'"\n        class="sdv-field"\n        [attr.type]="type"\n        [attr.name]="name"\n        [attr.required]="required"\n        [attr.email]="email"\n        [attr.aria-describedby]="id + \'-message\'"\n        [min]="min"\n        [max]="max"\n        [step]="step"\n        [attr.maxlength]="maxlength"\n        [attr.minlength]="minlength"\n        [pattern]="pattern"\n        title=""\n        [disabled]="disabled"\n        [autocomplete]="autocomplete"\n        [autofocus]="autofocus"\n        [readOnly]="readonly"\n        [attr.role]="role"\n        [attr.placeholder]="placeholder"\n        [attr.aria-label]="description"\n        [value]="state"\n        (input)="onInput($event)"\n        (focus)="onFocus($event)"\n        (blur)="onBlur($event)"\n      />\n    </div>\n\n    \x3c!-- INPUT FIELD WITH MASK --\x3e\n    <div\n      class="input-group"\n      *ngIf="!!inputMask && (hideInput$ | async) === false"\n    >\n      <input\n        #input\n        [id]="id + \'-input\'"\n        class="sdv-field"\n        autocomplete="off"\n        [attr.name]="name"\n        [attr.required]="required"\n        [readOnly]="readonly"\n        [attr.role]="role"\n        [attr.placeholder]="placeholder"\n        [attr.aria-label]="description"\n        [attr.aria-describedby]="id + \'-message\'"\n        [nggvInputMask]="inputMask"\n        title=""\n        [formControl]="control"\n      />\n    </div>\n\n    <div class="input-group-suffix hide-if-empty">\n      <ng-content select="[slot=\'suffix\']"></ng-content>\n      <ng-content></ng-content>\n    </div>\n  </div>\n\n  \x3c!-- ERRORS --\x3e\n  <div\n    class="gds-form-item__footer error-wrapper"\n    *transloco="let t; read: scope"\n  >\n    <span\n      class="form-info form-info--error"\n      [attr.for]="id + \'-input\'"\n      *ngIf="\n        invalid &&\n        (error || ngControl?.invalid) &&\n        (!errorList || !errorList.length)\n      "\n    >\n      <ng-container *ngIf="withErrorIcon"\n        ><gds-icon-triangle-exclamation\n          width="16" height="16"\n          *nggCoreElement\n        ></gds-icon-triangle-exclamation>\n      </ng-container>\n      <span\n        *ngIf="error; else errorsRef"\n        [attr.data-thook]="thook + \'-errorlabel\'"\n        >{{ error }}</span\n      >\n      <ng-template #errorsRef>\n        <span\n          *ngIf="firstError as error"\n          [attr.data-thook]="thook + \'-errorlabel\'"\n        >\n          {{ t(\'error.field\' + error?.code, error?.params) }}\n        </span>\n      </ng-template>\n    </span>\n\n    <ng-container *ngIf="!inputMask && hasMaxLength && showCharacterCountdown">\n      <span\n        *nggvCharacterCountdown="\n          maxlength;\n          currentLength: (inputRef?.nativeElement?.value ?? \'\').length;\n          charactersLeft as charactersLeft\n        "\n        class="form-info"\n        style="text-align: right"\n      >\n        {{ charactersLeft }} {{ t(\'label.maxlength\') }}\n      </span>\n    </ng-container>\n  </div>\n</ng-container>\n',styles:[input_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,Object,core.ChangeDetectorRef])],NgvInputComponent);let NggCharacterCountdownDirectiveModule=class NggCharacterCountdownDirectiveModule{};NggCharacterCountdownDirectiveModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[character_countdown_directive.q],imports:[common.CommonModule],exports:[character_countdown_directive.q]})],NggCharacterCountdownDirectiveModule);var i18n=__webpack_require__("./libs/angular/src/v-angular/i18n/index.ts"),inputmask=__webpack_require__("./node_modules/inputmask/dist/inputmask.js"),inputmask_default=__webpack_require__.n(inputmask);const InputmaskStatic=inputmask_default().default||inputmask_default();let InputMaskFormatPipe=class InputMaskFormatPipe{transform(value,options){return value?InputmaskStatic.format(value,options):value}};InputMaskFormatPipe=(0,tslib_es6.Cg)([(0,core.Pipe)({name:"nggvInputMaskFormat"})],InputMaskFormatPipe);class InputMaskConfig{constructor(){this.isAsync=!1,this.inputSelector="input"}}const INPUT_MASK_CONFIG=new core.InjectionToken("InputMaskConfig"),InputmaskConstructor=inputmask_default().default||inputmask_default();let NgvInputMaskDirective=class NgvInputMaskDirective{constructor(ngControl,config,platformId,elementRef,renderer,ngZone){this.ngControl=ngControl,this.platformId=platformId,this.elementRef=elementRef,this.renderer=renderer,this.ngZone=ngZone,this.nggvInputMask={},this.defaultInputMaskConfig=new InputMaskConfig,this.onInput=_=>{},this.onTouched=_=>{},this.validate=control=>control.value&&this.inputMaskPlugin&&!this.inputMaskPlugin.isValid()?{invalidformat:!0}:null,this.ngControl&&(this.ngControl.valueAccessor=this),this.setNativeInputElement(config)}onKeyUp(event){["Delete","Backspace"].includes(event.key)&&this.elementRef.nativeElement.dispatchEvent(new Event("input",{bubbles:!0,cancelable:!0}))}ngOnInit(){this.control&&(this.control.setValidators(this.control.validator?[this.control.validator,this.validate]:[this.validate]),this.control.updateValueAndValidity())}ngOnDestroy(){this.inputMaskPlugin?.remove(),this.mutationObserver?.disconnect()}initInputMask(){!(0,common.isPlatformServer)(this.platformId)&&this.nativeInputElement&&Object.keys(this.nggvInputMask).length&&(this.inputMaskPlugin=this.ngZone.runOutsideAngular((()=>new InputmaskConstructor(this.inputMaskOptions).mask(this.nativeInputElement))),this.control&&setTimeout((()=>{this.control.updateValueAndValidity()})))}ngAfterViewInit(){this.initInputMask()}get inputMaskOptions(){const{parser,...options}=this.nggvInputMask;return options}writeValue(value){this.nativeInputElement&&this.renderer.setProperty(this.nativeInputElement,"value",value??"")}registerOnChange(fn){this.onInput=value=>{const parser=this.nggvInputMask?.parser,newValue=parser&&value?parser(value):value;fn(newValue)}}registerOnTouched(fn){this.onTouched=fn}setDisabledState(disabled){this.nativeInputElement&&this.renderer.setProperty(this.nativeInputElement,"disabled",disabled)}get control(){return this.ngControl?.control}setNativeInputElement(config){"INPUT"===this.elementRef.nativeElement.tagName?this.nativeInputElement=this.elementRef.nativeElement:(this.defaultInputMaskConfig={...this.defaultInputMaskConfig,...config},this.defaultInputMaskConfig.isAsync?(this.mutationObserver=new MutationObserver((mutationsList=>{for(const mutation of mutationsList)if("childList"===mutation.type){const nativeInputElement=this.elementRef.nativeElement.querySelector(this.defaultInputMaskConfig.inputSelector);nativeInputElement&&(this.nativeInputElement=nativeInputElement,this.mutationObserver?.disconnect(),this.initInputMask())}})),this.mutationObserver.observe(this.elementRef.nativeElement,{childList:!0,subtree:!0})):this.nativeInputElement=this.elementRef.nativeElement.querySelector(this.defaultInputMaskConfig.inputSelector))}static{this.ctorParameters=()=>[{type:fesm2022_forms.vO,decorators:[{type:core.Optional},{type:core.Self}]},{type:InputMaskConfig,decorators:[{type:core.Inject,args:[INPUT_MASK_CONFIG]}]},{type:String,decorators:[{type:core.Inject,args:[core.PLATFORM_ID]}]},{type:core.ElementRef},{type:core.Renderer2},{type:core.NgZone}]}static{this.propDecorators={nggvInputMask:[{type:core.Input}],onInput:[{type:core.HostListener,args:["input",["$event.target.value"]]}],onTouched:[{type:core.HostListener,args:["blur",["$event.target.value"]]}],onKeyUp:[{type:core.HostListener,args:["keyup",["$event"]]}]}}};var NgvInputMaskModule_1;NgvInputMaskDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[nggvInputMask]"}),(0,tslib_es6.Sn)("design:paramtypes",[fesm2022_forms.vO,InputMaskConfig,String,core.ElementRef,core.Renderer2,core.NgZone])],NgvInputMaskDirective);let NgvInputMaskModule=NgvInputMaskModule_1=class NgvInputMaskModule{static forRoot(config){return{ngModule:NgvInputMaskModule_1,providers:[{provide:INPUT_MASK_CONFIG,useValue:config}]}}};NgvInputMaskModule=NgvInputMaskModule_1=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[NgvInputMaskDirective,InputMaskFormatPipe],exports:[NgvInputMaskDirective,InputMaskFormatPipe],providers:[{provide:INPUT_MASK_CONFIG,useClass:InputMaskConfig}]})],NgvInputMaskModule);const createMask=options=>"string"==typeof options?{mask:options}:options;let NgvInputModule=class NgvInputModule{};NgvInputModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[NgvInputComponent],imports:[common.CommonModule,i18n.g3,NgvInputMaskModule,fesm2022_forms.X1,NggCharacterCountdownDirectiveModule,shared.$M],exports:[NgvInputComponent],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]})],NgvInputModule);let NgvTypeaheadDropdownListComponent=class NgvTypeaheadDropdownListComponent extends NgvDropdownListComponent{constructor(translocoScope,element){super(translocoScope),this.translocoScope=translocoScope,this.element=element,this._destroy$=new Subject.B}ngOnInit(){this.handleSelectedValueChanges(),this.handleFocusChanges()}ngOnDestroy(){this._destroy$.next(!0),this._destroy$.complete()}subscribeToOutsideClickEvent(){this.onClickSubscription=(0,fromEvent.R)(document,"click").pipe((0,takeUntil.Q)(this._destroy$)).subscribe({next:event=>{!this.expanded||this.element.nativeElement.contains(event.target)||this.hostComponent.inputRef?.nativeElement.contains(event.target)||(this.setExpanded(!1),this.onClickSubscription?.unsubscribe())}})}handleSelectedValueChanges(){this.selectedValueChanged.pipe((0,takeUntil.Q)(this._destroy$)).subscribe((selected=>{this.hostComponent.inputRef&&(this.hostComponent.state=`${this.formatSelected(selected)}`)}))}handleFocusChanges(){this.hostComponent.nggvFocus.asObservable().pipe((0,takeUntil.Q)(this._destroy$)).subscribe((()=>{this.state||this.hostComponent.nggvInput.emit(""),this.setExpanded(!0),this.subscribeToOutsideClickEvent()}))}formatSelected(value){return null==value?.key?"":this.selectedFormatter?this.selectedFormatter(value)??"":value.label??""}static{this.ctorParameters=()=>[{type:void 0,decorators:[{type:core.SkipSelf},{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ElementRef}]}static{this.propDecorators={hostComponent:[{type:core.Input}],resultFormatter:[{type:core.Input}],selectedFormatter:[{type:core.Input}]}}};NgvTypeaheadDropdownListComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-typeahead-dropdown-list",template:dropdown_list_componentngResource_namespaceObject,styles:[typeahead_dropdown_list_componentngResource_default(),dropdown_list_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[Object,core.ElementRef])],NgvTypeaheadDropdownListComponent);var from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),withLatestFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js");var typeahead_input_componentngResource=__webpack_require__("./libs/angular/src/v-angular/dropdown/typeahead/typeahead-input/typeahead-input.component.scss?ngResource"),typeahead_input_componentngResource_default=__webpack_require__.n(typeahead_input_componentngResource);let NgvTypeaheadInputComponent=class NgvTypeaheadInputComponent extends NgvInputComponent{get dropdownButton(){return this.hostComponent.inputRef?.nativeElement}constructor(element,renderer2,ngControl,translocoScope,cdr){super(ngControl,translocoScope,cdr),this.element=element,this.renderer2=renderer2,this.ngControl=ngControl,this.translocoScope=translocoScope,this.cdr=cdr,this.expanded=!1,super.ngOnInit()}ngOnInit(){this.autocomplete="off",this.debounceTime=0,this.hostComponent.selectOnSingleOption=!1,this.moveInput(),this.handleExpandedChange()}onKeyUp(event){"Space"===event.code&&event.preventDefault()}moveInput(){setTimeout((()=>{this.dropdownButton&&(this.renderer2.appendChild(this.dropdownButton.querySelector("button"),this.element.nativeElement),this.buttonHeight=this.dropdownButton.getBoundingClientRect().height||32)}),0)}handleExpandedChange(){this.hostComponent.expandedChange.pipe((0,takeUntil.Q)(this._destroy$)).subscribe((state=>{if(this.expanded=state,this.expanded){setTimeout((()=>this.setFocus()));const formattedValue=`${this.formatSelected(this.hostComponent.state)}`;this.setInput(formattedValue,!1)}else this.setInput("",!0)}))}formatSelected(value){return null==value?.key?"":this.selectedFormatter?this.selectedFormatter(value)??"":value.label??""}setInput(input,triggerFilter){this.state=input,triggerFilter&&(this.onChange(this.state),this.inputChange$.next(this.state))}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2},{type:fesm2022_forms.vO,decorators:[{type:core.Self},{type:core.Optional}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[jsverse_transloco.Lt]}]},{type:core.ChangeDetectorRef}]}static{this.propDecorators={hostComponent:[{type:core.Input}],resultFormatter:[{type:core.Input}],selectedFormatter:[{type:core.Input}],onKeyUp:[{type:core.HostListener,args:["document:keyup",["$event"]]}]}}};NgvTypeaheadInputComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-typeahead-input",template:'<ng-container>\n  <div\n    class="input-wrapper"\n    [ngClass]="{ expanded: expanded, collapsed: !expanded }"\n    [ngStyle]="{ \'height.px\': buttonHeight }"\n    (click)="$event.stopPropagation()"\n  >\n    \x3c!-- INPUT FIELD --\x3e\n    <div class="input-group">\n      <input\n        #input\n        [id]="id + \'-input\'"\n        class="sdv-field"\n        [attr.type]="type"\n        [attr.name]="name"\n        [attr.required]="required"\n        [attr.email]="email"\n        [min]="min"\n        [max]="max"\n        [step]="step"\n        [attr.maxlength]="maxlength"\n        [attr.minlength]="minlength"\n        [pattern]="pattern"\n        [disabled]="disabled"\n        [autocomplete]="autocomplete"\n        [autofocus]="autofocus"\n        [readOnly]="readonly"\n        [attr.role]="role"\n        [attr.placeholder]="placeholder"\n        [attr.aria-label]="description"\n        [value]="state"\n        (input)="onInput($event)"\n        (focus)="onFocus($event)"\n        (blur)="onBlur($event)"\n      />\n    </div>\n  </div>\n</ng-container>\n',styles:[typeahead_input_componentngResource_default()]}),(0,tslib_es6.Sn)("design:paramtypes",[core.ElementRef,core.Renderer2,fesm2022_forms.vO,Object,core.ChangeDetectorRef])],NgvTypeaheadInputComponent);let NgvTypeaheadDirective=class NgvTypeaheadDirective{set nggvTypeahead(value){this.typeaheadFunction=value,this.inputSubscription$&&(this.inputSubscription$?.unsubscribe(),this.inputSubscription$=void 0,this.handleInputChanges())}onNgvInput(event){this.inputValue$.next(event)}get hostIsDropdown(){return!!this.hostDropdown}get defaultNullishOption(){return{key:null,label:this.unselectLabel||" "}}get emptyOption(){return{key:null,label:"label.nomatchingoptions",disabled:!0}}get localName(){return this.element.nativeElement.localName}constructor(viewContainerRef,element,hostDropdown,hostInput){this.viewContainerRef=viewContainerRef,this.element=element,this.hostDropdown=hostDropdown,this.hostInput=hostInput,this.allowUnselect=!0,this.filterPhraseChange=new core.EventEmitter,this.inputValue$=new Subject.B,this.onDestroy$=new Subject.B}ngOnInit(){this.handleInputChanges(),this.inputValue$.next(""),this.hostIsDropdown?this.createInput():this.createDropdownList()}ngOnDestroy(){this.onDestroy$.next(!0),this.onDestroy$.complete()}handleInputChanges(){this.inputSubscription$=this.inputValue$.pipe((0,takeUntil.Q)(this.onDestroy$),(0,distinctUntilChanged.F)(),(0,tap.M)((inputValue=>this.filterPhraseChange.emit(inputValue))),this.typeaheadFunction?this.typeaheadFunction:()=>(0,from.H)([]),(0,withLatestFrom.E)(this.inputValue$)).subscribe((([filteredValues,input])=>this.setOptions(filteredValues,input)))}createInput(){this.inputComponent=this.viewContainerRef.createComponent(NgvTypeaheadInputComponent),this.inputComponent.setInput("hostComponent",this.hostDropdown),this.inputComponent.setInput("selectedFormatter",this.selectedFormatter),this.inputComponent.setInput("resultFormatter",this.resultFormatter),this.inputComponent.instance.nggvInput.pipe((0,takeUntil.Q)(this.onDestroy$)).subscribe((inputValue=>this.inputValue$.next(inputValue)))}createDropdownList(){this.dropdownListComponent=this.viewContainerRef.createComponent(NgvTypeaheadDropdownListComponent),this.dropdownListComponent.setInput("hostComponent",this.hostInput)}setOptions(filteredValues,input){if(!filteredValues)return;const allowNullish=this.allowUnselect&&!input&&!(Object.keys(filteredValues[0]).includes("key")&&null==filteredValues[0].key);if(0===filteredValues.length?filteredValues=[this.emptyOption]:allowNullish&&(filteredValues=[this.defaultNullishOption].concat(filteredValues)),this.hostIsDropdown)return this.hostDropdown.allowControlNullishOption=!1,this.hostDropdown.options=this.formatOptions(filteredValues),this.hostDropdown.textToHighlight=`${input||""}`,void this.hostDropdown.detectChanges();this.hostIsDropdown||(this.dropdownListComponent.setInput("options",this.formatOptions(filteredValues)),this.dropdownListComponent.setInput("textToHighlight",`${input||""}`))}formatOptions(options){return options?this.resultFormatter?options.map((value=>value?.label?this.resultFormatter?.(value):value)):options:[]}static{this.ctorParameters=()=>[{type:core.ViewContainerRef},{type:core.ElementRef},{type:NgvDropdownComponent,decorators:[{type:core.Optional},{type:core.Host}]},{type:NgvInputComponent,decorators:[{type:core.Optional},{type:core.Host}]}]}static{this.propDecorators={nggvTypeahead:[{type:core.Input}],resultFormatter:[{type:core.Input}],selectedFormatter:[{type:core.Input}],allowUnselect:[{type:core.Input}],unselectLabel:[{type:core.Input}],filterPhraseChange:[{type:core.Output}],onNgvInput:[{type:core.HostListener,args:["nggvInput",["$event"]]}]}}};NgvTypeaheadDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"nggv-input[nggvTypeahead], nggv-dropdown[nggvTypeahead]",standalone:!0}),(0,tslib_es6.Sn)("design:paramtypes",[core.ViewContainerRef,core.ElementRef,NgvDropdownComponent,NgvInputComponent])],NgvTypeaheadDirective);var router=__webpack_require__("./node_modules/@angular/router/fesm2022/router.mjs");let NgvExternalLinkDirective=class NgvExternalLinkDirective{constructor(link){this.link=link,this.external=!1}ngOnInit(){this.external&&(this.link.onClick=()=>(window.location.href=this.link.commands[0],!1))}static{this.ctorParameters=()=>[{type:router.Wk}]}static{this.propDecorators={external:[{type:core.Input}]}}};NgvExternalLinkDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"a[routerLink]"}),(0,tslib_es6.Sn)("design:paramtypes",[router.Wk])],NgvExternalLinkDirective);var i18n_module=__webpack_require__("./libs/angular/src/v-angular/i18n/i18n.module.ts");var info_circle_componentngResource=__webpack_require__("./libs/angular/src/v-angular/info-circle/info-circle.component.scss?ngResource"),info_circle_componentngResource_default=__webpack_require__.n(info_circle_componentngResource),chunk_K6WND5FJ=__webpack_require__("./dist/libs/core/src/chunks/chunk.K6WND5FJ.js"),chunk_MLXMQIEV=__webpack_require__("./dist/libs/core/src/chunks/chunk.MLXMQIEV.js"),chunk_SEHSDSX2=__webpack_require__("./dist/libs/core/src/chunks/chunk.SEHSDSX2.js"),IconCircleInfo=class extends chunk_K6WND5FJ.M{};IconCircleInfo._regularSVG='<path d="M10.75 11H12L12 16.25M21.25 12C21.25 17.1086 17.1086 21.25 12 21.25C6.89137 21.25 2.75 17.1086 2.75 12C2.75 6.89137 6.89137 2.75 12 2.75C17.1086 2.75 21.25 6.89137 21.25 12Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path d="M11.375 8C11.375 8.34518 11.6548 8.625 12 8.625C12.3452 8.625 12.625 8.34518 12.625 8C12.625 7.65482 12.3452 7.375 12 7.375C11.6548 7.375 11.375 7.65482 11.375 8Z" fill="currentColor" stroke="currentColor" stroke-width="0.25"/>',IconCircleInfo._solidSVG='<path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2ZM10 11C10 10.5858 10.3358 10.25 10.75 10.25H12C12.4142 10.25 12.75 10.5858 12.75 11L12.75 16.25C12.75 16.6642 12.4142 17 12 17C11.5858 17 11.25 16.6642 11.25 16.25L11.25 11.75H10.75C10.3358 11.75 10 11.4142 10 11ZM12 7.25C11.5858 7.25 11.25 7.58579 11.25 8C11.25 8.41421 11.5858 8.75 12 8.75C12.4142 8.75 12.75 8.41421 12.75 8C12.75 7.58579 12.4142 7.25 12 7.25Z" fill="currentColor"/>',IconCircleInfo._name="circle-info",IconCircleInfo=(0,chunk_SEHSDSX2.Cc)([(0,chunk_MLXMQIEV.Y$)("gds-icon-circle-info")],IconCircleInfo);__webpack_require__("./dist/libs/core/src/chunks/chunk.LQSWYCMZ.js"),__webpack_require__("./dist/libs/core/src/chunks/chunk.WVKINQII.js");let NgvInfoCircleComponent=class NgvInfoCircleComponent{constructor(){this.thook="info"}static{this.propDecorators={thook:[{type:core.HostBinding,args:["attr.data-thook"]},{type:core.Input}],info:[{type:core.Input}]}}};var NgvTooltipDirective_1;NgvInfoCircleComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"nggv-info-circle",template:'<svg [nggvTooltip]="info">\n  <path\n    d="M10.75 11H12L12 16.25M21.25 12C21.25 17.1086 17.1086 21.25 12 21.25C6.89137 21.25 2.75 17.1086 2.75 12C2.75 6.89137 6.89137 2.75 12 2.75C17.1086 2.75 21.25 6.89137 21.25 12Z"\n    stroke="currentColor"\n    stroke-width="1.5"\n    stroke-linecap="round"\n    stroke-linejoin="round"\n    fill="none"\n  />\n  <path\n    d="M11.375 8C11.375 8.34518 11.6548 8.625 12 8.625C12.3452 8.625 12.625 8.34518 12.625 8C12.625 7.65482 12.3452 7.375 12 7.375C11.6548 7.375 11.375 7.65482 11.375 8Z"\n    fill="currentColor"\n    stroke="currentColor"\n    stroke-width="0.25"\n  />\n</svg>\n',styles:[info_circle_componentngResource_default()]})],NgvInfoCircleComponent);let NgvTooltipDirective=class NgvTooltipDirective{static{NgvTooltipDirective_1=this}static shouldUpdate(change){return change&&!change.firstChange&&change.previousValue!==change.currentValue}constructor(anchorElementRef,renderer){this.anchorElementRef=anchorElementRef,this.renderer=renderer,this.thook="tooltip",this.placement="top",this.shown=!1,this.offset=10,this.resizeThrottle=50,this.maxWidth=343,this.nggvShow=new core.EventEmitter,this.nggvHide=new core.EventEmitter,this.timeout=0,this.anchorElement=this.anchorElementRef.nativeElement,this.parentElement=document.body}ngAfterViewInit(){setTimeout((()=>this.shown?this.show(!0):this.hide(!0)))}ngOnChanges(changes){(NgvTooltipDirective_1.shouldUpdate(changes.nggvTooltip)||NgvTooltipDirective_1.shouldUpdate(changes.placement)||NgvTooltipDirective_1.shouldUpdate(changes.thook))&&(this.shown?this.show(!0):this.hide(!0)),NgvTooltipDirective_1.shouldUpdate(changes.shown)&&(this.shown?this.show():this.hide()),NgvTooltipDirective_1.shouldUpdate(changes.offset)&&this.updatePosition()}ngOnDestroy(){this.hide(!0)}onMouseEnter(){this.show()}onMouseLeave(){this.hide()}resize(){this.timeout||(this.timeout=window.setTimeout((()=>{this.timeout=0,this.updatePosition()}),this.resizeThrottle))}show(recreate=!1){this.nggvTooltip&&0!==this.nggvTooltip.length&&(recreate||!this.tooltipElement?(this.hide(!0),this.create(this.nggvTooltip)):this.renderer.appendChild(this.parentElement,this.tooltipElement),this.updatePosition(),this.shown=!0,this.nggvShow.emit(this.tooltipElement))}hide(destroy=!1){this.tooltipElement&&(this.parentElement.contains(this.tooltipElement)&&this.renderer.removeChild(this.parentElement,this.tooltipElement),destroy&&this.destroy(),this.shown=!1,this.nggvHide.emit(this.tooltipElement))}create(text){this.tooltipElement=this.renderer.createElement("div"),this.renderer.addClass(this.tooltipElement,"gds-tooltip"),this.renderer.setAttribute(this.tooltipElement,"data-thook",this.thook),this.renderer.setAttribute(this.tooltipElement,"role","tooltip"),this.tooltipId&&this.renderer.setAttribute(this.tooltipElement,"id",this.tooltipId),this.renderer.setStyle(this.tooltipElement,"position","absolute"),this.renderer.setStyle(this.tooltipElement,"z-index","1040"),this.renderer.setStyle(this.tooltipElement,"border-radius",".25rem"),this.renderer.setStyle(this.tooltipElement,"padding",".5rem 1rem");const relativeMaxWidth=this.pxToRem(this.maxWidth);this.renderer.setStyle(this.tooltipElement,"max-width",relativeMaxWidth),this.renderer.appendChild(this.tooltipElement,this.renderer.createText(text)),this.renderer.appendChild(this.parentElement,this.tooltipElement),this.arrowElement=this.renderer.createElement("div"),this.renderer.addClass(this.arrowElement,`gds-tooltip__arrow-${this.placement}`),this.renderer.appendChild(this.tooltipElement,this.arrowElement)}destroy(){this.tooltipElement=void 0,this.arrowElement=void 0}updatePosition(){if(!this.tooltipElement||!this.arrowElement)return;const scrollPos=window.pageYOffset||document.documentElement.scrollTop||this.parentElement.scrollTop||0,anchorRect=this.anchorElement.getBoundingClientRect(),tooltipRect=this.tooltipElement.getBoundingClientRect(),arrowRect=this.arrowElement.getBoundingClientRect();switch(this.placement){case"top":this.alignVertical(!0,scrollPos,anchorRect,tooltipRect.width,tooltipRect.height,arrowRect.width);break;case"bottom":this.alignVertical(!1,scrollPos,anchorRect,tooltipRect.width,tooltipRect.height,arrowRect.width);break;case"left":this.alignHorizontal(!0,scrollPos,anchorRect,tooltipRect.height);break;case"right":this.alignHorizontal(!1,scrollPos,anchorRect,tooltipRect.height);break;default:return}}alignVertical(above,scrollPos,anchor,tooltipWidth,tooltipHeight,arrowWidth){const width=this.parentElement.clientWidth,anchorMidX=anchor.left+anchor.width/2,tooltip={},arrow={};tooltip.top=above?anchor.top-tooltipHeight-this.offset+scrollPos:anchor.bottom+this.offset+scrollPos,anchorMidX<width/2?(tooltip.left=Math.max(0,anchorMidX-tooltipWidth/2),arrow.left=anchorMidX-tooltip.left):(tooltip.right=Math.max(0,width-(anchorMidX+tooltipWidth/2)),arrow.right=width-anchorMidX-tooltip.right-arrowWidth),this.setStyle(tooltip,arrow)}alignHorizontal(before,scrollPos,anchor,tooltipHeight){const width=this.parentElement.clientWidth,tooltip={top:anchor.top+(anchor.height-tooltipHeight)/2+scrollPos},arrow={top:tooltipHeight/2};before?tooltip.right=width-anchor.left+this.offset:tooltip.left=anchor.right+this.offset,this.setStyle(tooltip,arrow)}setStyle(tooltip,arrow){Object.entries(tooltip).forEach((([prop,value])=>{const position=this.pxToRem(value);this.renderer.setStyle(this.tooltipElement,prop,position)})),Object.entries(arrow).forEach((([prop,value])=>{const position=this.pxToRem(value);this.renderer.setStyle(this.arrowElement,prop,position)}))}pxToRem(value){const fontSizePx=window?.getComputedStyle(this.parentElement)?.getPropertyValue("font-size"),fontSizeNumberMatch=fontSizePx?.match(/\d{1,}/);return`${value/(fontSizeNumberMatch?+fontSizeNumberMatch[0]:16)}rem`}static{this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}]}static{this.propDecorators={nggvTooltip:[{type:core.Input}],thook:[{type:core.Input}],placement:[{type:core.Input}],shown:[{type:core.Input}],offset:[{type:core.Input}],resizeThrottle:[{type:core.Input}],tooltipId:[{type:core.Input}],maxWidth:[{type:core.Input}],nggvShow:[{type:core.Output}],nggvHide:[{type:core.Output}],onMouseEnter:[{type:core.HostListener,args:["mouseenter"]},{type:core.HostListener,args:["focus"]}],onMouseLeave:[{type:core.HostListener,args:["mouseleave"]},{type:core.HostListener,args:["blur"]},{type:core.HostListener,args:["keyup.escape"]}],resize:[{type:core.HostListener,args:["window:resize"]}]}}};NgvTooltipDirective=NgvTooltipDirective_1=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[nggvTooltip]"}),(0,tslib_es6.Sn)("design:paramtypes",[core.ElementRef,core.Renderer2])],NgvTooltipDirective);let translocoServiceInstance;const input_stories={title:"V-Angular/Input",component:NgvInputComponent,decorators:[(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(i18n_module.g),{provide:core.APP_INITIALIZER,useFactory:function translocoStorybookInitializer(translocoService){return()=>{translocoServiceInstance=translocoService,translocoService.langChanges$.pipe((0,distinctUntilChanged.F)()).subscribe()}},multi:!0,deps:[jsverse_transloco.JO]},DropdownUtils]}),(0,dist.moduleMetadata)({declarations:[NgvButtonComponent,NgvDropdownComponent,NgvDropdownListComponent,NgvTypeaheadDropdownListComponent,NgvTooltipDirective,NgvInfoCircleComponent,character_countdown_directive.q,NgvExternalLinkDirective],imports:[NgvTypeaheadDirective,common.CommonModule,fesm2022_forms.X1,testing.c,NgvInputMaskModule.forRoot({inputSelector:"input",isAsync:!0}),jsverse_transloco.Q8,shared.$M],schemas:[core.CUSTOM_ELEMENTS_SCHEMA]})]},Template=args=>({props:args}),TemplateWithFormControl=args=>{const ctrl=new fesm2022_forms.hs(args.ngModel,[fesm2022_forms.k0.required,fesm2022_forms.k0.maxLength(12)]);ctrl.valueChanges.subscribe((val=>{console.log("input control value:",val),console.log({required:required()})}));const required=()=>{const error=ctrl.validator&&ctrl.validator({});return error&&error.required};return{template:'\n    <nggv-input\n      [label]="label"\n      [placeholder]="placeholder"\n      [description]="description"\n      [invalid]="invalid"\n      [valid]="valid"\n      [required]="required"\n      [optional]="optional"\n      [locked]="locked"\n      [displayDisabledAsLocked]="displayDisabledAsLocked"\n      [formControl]="formControl"\n      [withErrorIcon]="withErrorIcon">\n    </nggv-input>\n    <div style="margin-top: 1rem">\n      <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n    </div>\n    ',props:{...args,formControl:ctrl,disableFn:()=>{if(ctrl.disabled)return ctrl.enable();ctrl.disable()}}}},Primary=Template.bind({});Primary.args={label:"Field label",placeholder:"This is a placeholder value",ngModel:"textual value",description:"This is a field description",type:"text",autocomplete:"on",required:void 0,optional:!1,disabled:!1,invalid:!1,withErrorIcon:!0};const WithFormControl=TemplateWithFormControl.bind({});WithFormControl.args={...Primary.args,invalid:void 0,required:void 0,optional:void 0,valid:void 0};const TemplateWithError=args=>({props:{...args}}),WithCustomErrorAndCountdown=TemplateWithError.bind({});WithCustomErrorAndCountdown.args={...Primary.args,maxlength:25,showCharacterCountdown:!0,invalid:!0,error:"this is an error message",badgeText:"SEB"};const WithCustomError=TemplateWithError.bind({});WithCustomError.args={...Primary.args,invalid:!0,error:"Validation failed on server",withErrorIcon:!0};const WithCustomLabel=(args=>({template:'\n    <nggv-input [label]="label"\n      [disabled]="disabled"\n      [invalid]="invalid"\n      [required]="required">\n      <ng-template #labelTpl>\n        <i>{{ customLabelText }}</i>\n        <nggv-info-circle [info]="info"></nggv-info-circle>\n        <span>{{ text }}</span>\n      </ng-template>\n    </nggv-input>',props:args})).bind({});WithCustomLabel.args={...Primary.args,info:"Some info regarding the input maybe...",text:"And some more text"};const resetObservable$=new Observable.c((subscriber=>{setInterval((()=>{subscriber.next()}),3e3)})),WithPrefixAndOrSuffix=(args=>({styles:[".suffix-prefix-padding{ padding: 0.75em }"],template:'\n  <h2>Prefix and/or suffix</h2>\n  <p>\n    Prefix and/or suffix demontrations with simple HTML-elements and with other components.\n  </p>\n  <hr>\n  <nggv-input label="Default"\n    type="text"\n    description="Default"\n    [invalid]="invalid">\n  </nggv-input>\n  \x3c!--<nggv-input label="Prefix"\n    type="text"\n    description="Prefix with checkbox"\n    [invalid]="invalid">\n    <nggv-checkbox\n      slot="prefix"\n      label="Selected"\n      [value]="true">\n    </nggv-checkbox>\n  </nggv-input> --\x3e\n\n  <nggv-input label="Suffix"\n    type="text"\n    description="Suffix with simple text"\n    [invalid]="invalid">\n    <label slot="suffix" class="suffix-prefix-padding">SEB</label>\n  </nggv-input>\n\n  <nggv-input label="Default (suffix)"\n    type="text"\n    description="Suffix (default placement) with button"\n    [invalid]="invalid">\n    <nggv-button\n      class="suffix-prefix-padding"\n      [small]="true"\n      type="button">\n      SAVE\n    </nggv-button>\n  </nggv-input>\n\n  <nggv-input label="Large button with no padding (suffix)"\n  type="text"\n  description="Suffix (default placement) with button without padding"\n  [invalid]="invalid">\n  <nggv-button\n  class="integrated-btn"\n    [small]="false"\n    type="button"\n    [buttonStyle]="2">\n    x\n  </nggv-button>\n</nggv-input>\n\n  <nggv-input label="Prefix and default (suffix)"\n    type="number"\n    description="Prefix with simple label and suffix (default) with dropdown"\n    [invalid]="invalid">\n    <label slot="prefix" class="suffix-prefix-padding">Amount:</label>\n    <nggv-dropdown\n      placeholder="Currency"\n      [options]="[\n        { key: \'eur\', label: \'EUR\' },\n        { key: \'sek\', label: \'SEK\' },\n        { key: \'usd\', label: \'USD\' }\n      ]">\n    </nggv-dropdown>\n  </nggv-input>',props:args})).bind({});WithPrefixAndOrSuffix.args={...Primary.args,invalid:!1};const WithResetObservable=_args=>({template:'\n    <ng-container [formGroup]="formGroup">\n      <nggv-input label="Reset demo"\n        type="text"\n        formControlName="resetForm"\n        [description]="description"\n        [defaultValue]="defaultValue"\n        [reset]="resetObservable$">\n      </nggv-input>\n    </ng-container>',props:{description:"I will reset every 3000ms",formGroup:new fesm2022_forms.J3({resetForm:new fesm2022_forms.hs("Annoying orange")}),resetObservable$}}),WithMaxLength=args=>{const formGroup=new fesm2022_forms.J3({remittanceInformation:new fesm2022_forms.hs("This is a test of handling if the text is longer than the max length input",fesm2022_forms.k0.maxLength(9))}),maxLength$=(0,observable_of.of)(10);formGroup.get("remittanceInformation")?.valueChanges.subscribe((val=>console.log(val)));return{template:'\n    <button (click)="show = !show">Toggle show/hide</button>\n    <button (click)="toggleLang()">Toggle lang</button>\n    <button (click)="setValue(\'another long value\')">Set form value</button>\n    <ng-container [formGroup]="formG">\n      <nggv-input *ngIf="show"\n        [label]="label"\n        [invalid]="invalid"\n        [maxLength]="maxLength$ | async"\n        formControlName="remittanceInformation"\n        >\n        <ng-template #labelTpl>\n          <i>{{ customLabelText }}</i>\n          <nggv-info-circle [info]="info"></nggv-info-circle>\n          <span>{{ text }}</span>\n        </ng-template>\n      </nggv-input>\n      <span>value: {{ formG.controls.remittanceInformation.value }}</span>\n    </ng-container>',props:{...args,description:"This is a field description",maxLength$,formG:formGroup,setValue:value=>formGroup.controls.remittanceInformation.setValue(value),toggleLang:()=>(()=>{const updateLang="sv"===translocoServiceInstance.getActiveLang()?"en":"sv";console.log("from:",translocoServiceInstance.getActiveLang(),"=>",updateLang),translocoServiceInstance.setActiveLang(updateLang)})(),show:!1}}};let dateFCValue="",emailFCValue="",currencyFCValue="",phoneFCValue="",licenseFCValue="",ipFCValue="";const WithInputMask=(args=>{const dateFC=new fesm2022_forms.hs(dateFCValue,[fesm2022_forms.k0.required]),emailFC=new fesm2022_forms.hs(emailFCValue),currencyFC=new fesm2022_forms.hs(currencyFCValue),phoneFC=new fesm2022_forms.hs(phoneFCValue),licenseFC=new fesm2022_forms.hs(licenseFCValue),ipFC=new fesm2022_forms.hs(ipFCValue),formGroup=new fesm2022_forms.J3({dateFC,emailFC,currencyFC,phoneFC,licenseFC,ipFC});dateFC?.valueChanges.subscribe((val=>dateFCValue=val)),emailFC?.valueChanges.subscribe((val=>emailFCValue=val)),currencyFC?.valueChanges.subscribe((val=>currencyFCValue=val)),phoneFC?.valueChanges.subscribe((val=>phoneFCValue=val)),licenseFC?.valueChanges.subscribe((val=>licenseFCValue=val)),ipFC?.valueChanges.subscribe((val=>ipFCValue=val));const dateInputMask=createMask({alias:"datetime",inputFormat:"yyyy-mm-dd",parser:value=>{const values=value.split("-"),year=+values[0],month=+values[1]-1,day=+values[2];return new Date(year,month,day)}}),emailInputMask=createMask({alias:"email"}),currencyInputMask=createMask({alias:"numeric",groupSeparator:",",digits:2,digitsOptional:!1,prefix:"$ ",placeholder:"0",shortcuts:null}),phoneMask=createMask("(999) 999-9999");return{template:'\n    <div class="container" [formGroup]="formGroup">\n      <div class="row">\n        <div class="column">\n          <h2>Date</h2>\n          <nggv-input\n            [inputMask]="dateInputMask"\n            formControlName="dateFC"\n            placeholder="yyyy-mm-dd"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.dateFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.dateFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.dateFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>E-mail</h2>\n          <nggv-input\n            [inputMask]="emailInputMask"\n            formControlName="emailFC"\n            placeholder="_@_._"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.emailFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.emailFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.emailFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>Currency</h2>\n          <nggv-input\n            [inputMask]="currencyInputMask"\n            formControlName="currencyFC"\n            placeholder="$ 0.00"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.currencyFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.currencyFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.currencyFC.errors | json }} </div>\n        </div>\n      </div>\n\n      <div class="row">\n        <div class="column">\n          <h2>Phone</h2>\n          <nggv-input\n            [inputMask]="phoneMask"\n            formControlName="phoneFC"\n            placeholder="(___) ___-____"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.phoneFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.phoneFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.phoneFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>License</h2>\n          <nggv-input\n            [inputMask]="licenseInputMask"\n            formControlName="licenseFC"\n            placeholder="___-___"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.licenseFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.licenseFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.licenseFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>IP address</h2>\n          <nggv-input\n            [inputMask]="ipAddressMask"\n            formControlName="ipFC"\n            placeholder="_._._._"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.ipFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.ipFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.ipFC.errors }} </div>\n        </div>\n      </div>\n    </div>\n    ',styles:['\n      * {\n        box-sizing: border-box;\n        width: 100%;\n      }\n\n      .column {\n        float: left;\n        width: 33.33%;\n        padding: 16px;\n        min-height: 150px;\n        max-height: 250px;\n      }\n\n      .row:after {\n        content: "";\n        display: table;\n        clear: both;\n      }\n    '],props:{formGroup,dateInputMask,emailInputMask,licenseInputMask:createMask("[9-]AAA-999"),currencyInputMask,ipAddressMask:createMask({alias:"ip"}),phoneMask,locked:args.locked}}}).bind({});WithInputMask.args={locked:!1};const WithLockedInput=Template.bind({});WithLockedInput.args={...Primary.args,locked:!0,description:void 0,label:"Bank charges"};const WithDisplayDisabledAsLocked=TemplateWithFormControl.bind({});WithDisplayDisabledAsLocked.args={...Primary.args,invalid:void 0,required:void 0,optional:void 0,valid:void 0,locked:!1,description:void 0,label:"Bank charges",displayDisabledAsLocked:!0};const WithTypeAhead=(args=>{const options=[{key:"hej",label:"Hej"},{key:"tja",label:"Tja"},{key:"hejsan",label:"Hejsan"},{key:"tjo",label:"Tjo"},{key:"tjena",label:"Tjena"}];return{template:'\n      <nggv-input class="toggle"\n        [label]="label"\n        [nggvTypeahead]="searchFunction"\n        [resultFormatter]="resultFormatter"\n        [selectedFormatter]="selectedFormatter"\n        [autocomplete]="\'off\'">\n      </nggv-input>\n    ',styles:["\n      nggv-dropdown-list {\n        width: 100%;\n      }\n    "],props:{...args,searchFunction:value$=>value$.pipe((0,debounceTime.B)(100),(0,tap.M)((x=>console.log("entered value in input: ",x))),(0,map.T)((inputValue=>options.filter((option=>option.key.toUpperCase().includes(inputValue.toUpperCase())))))),selectedFormatter:value=>value.label.toUpperCase()}}}).bind({});WithTypeAhead.args={...Primary.args};const __namedExportsOrder=["Primary","WithFormControl","WithCustomErrorAndCountdown","WithCustomError","WithCustomLabel","WithPrefixAndOrSuffix","WithResetObservable","WithMaxLength","WithInputMask","WithLockedInput","WithDisplayDisabledAsLocked","WithTypeAhead"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: args\n})",...Primary.parameters?.docs?.source}}},WithFormControl.parameters={...WithFormControl.parameters,docs:{...WithFormControl.parameters?.docs,source:{originalSource:'(args: any) => {\n  const ctrl = new UntypedFormControl(args.ngModel, [Validators.required, Validators.maxLength(12)]);\n  ctrl.valueChanges.subscribe(val => {\n    console.log(\'input control value:\', val);\n    console.log({\n      required: required()\n    });\n  });\n  const toggleDisableField = () => {\n    if (ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  const required = () => {\n    const error = ctrl.validator && ctrl.validator(({} as AbstractControl));\n    return error && error.required;\n  };\n  return {\n    template: /*html*/`\n    <nggv-input\n      [label]="label"\n      [placeholder]="placeholder"\n      [description]="description"\n      [invalid]="invalid"\n      [valid]="valid"\n      [required]="required"\n      [optional]="optional"\n      [locked]="locked"\n      [displayDisabledAsLocked]="displayDisabledAsLocked"\n      [formControl]="formControl"\n      [withErrorIcon]="withErrorIcon">\n    </nggv-input>\n    <div style="margin-top: 1rem">\n      <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n    </div>\n    `,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithFormControl.parameters?.docs?.source}}},WithCustomErrorAndCountdown.parameters={...WithCustomErrorAndCountdown.parameters,docs:{...WithCustomErrorAndCountdown.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: {\n    ...args\n  }\n})",...WithCustomErrorAndCountdown.parameters?.docs?.source}}},WithCustomError.parameters={...WithCustomError.parameters,docs:{...WithCustomError.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: {\n    ...args\n  }\n})",...WithCustomError.parameters?.docs?.source}}},WithCustomLabel.parameters={...WithCustomLabel.parameters,docs:{...WithCustomLabel.parameters?.docs,source:{originalSource:'(args: any) => ({\n  template: /*html*/`\n    <nggv-input [label]="label"\n      [disabled]="disabled"\n      [invalid]="invalid"\n      [required]="required">\n      <ng-template #labelTpl>\n        <i>{{ customLabelText }}</i>\n        <nggv-info-circle [info]="info"></nggv-info-circle>\n        <span>{{ text }}</span>\n      </ng-template>\n    </nggv-input>`,\n  props: args\n})',...WithCustomLabel.parameters?.docs?.source}}},WithPrefixAndOrSuffix.parameters={...WithPrefixAndOrSuffix.parameters,docs:{...WithPrefixAndOrSuffix.parameters?.docs,source:{originalSource:'(args: NgvInputComponent & WithExtras & any) => ({\n  styles: [`.suffix-prefix-padding{ padding: 0.75em }`],\n  template: /*html*/`\n  <h2>Prefix and/or suffix</h2>\n  <p>\n    Prefix and/or suffix demontrations with simple HTML-elements and with other components.\n  </p>\n  <hr>\n  <nggv-input label="Default"\n    type="text"\n    description="Default"\n    [invalid]="invalid">\n  </nggv-input>\n  \x3c!--<nggv-input label="Prefix"\n    type="text"\n    description="Prefix with checkbox"\n    [invalid]="invalid">\n    <nggv-checkbox\n      slot="prefix"\n      label="Selected"\n      [value]="true">\n    </nggv-checkbox>\n  </nggv-input> --\x3e\n\n  <nggv-input label="Suffix"\n    type="text"\n    description="Suffix with simple text"\n    [invalid]="invalid">\n    <label slot="suffix" class="suffix-prefix-padding">SEB</label>\n  </nggv-input>\n\n  <nggv-input label="Default (suffix)"\n    type="text"\n    description="Suffix (default placement) with button"\n    [invalid]="invalid">\n    <nggv-button\n      class="suffix-prefix-padding"\n      [small]="true"\n      type="button">\n      SAVE\n    </nggv-button>\n  </nggv-input>\n\n  <nggv-input label="Large button with no padding (suffix)"\n  type="text"\n  description="Suffix (default placement) with button without padding"\n  [invalid]="invalid">\n  <nggv-button\n  class="integrated-btn"\n    [small]="false"\n    type="button"\n    [buttonStyle]="2">\n    x\n  </nggv-button>\n</nggv-input>\n\n  <nggv-input label="Prefix and default (suffix)"\n    type="number"\n    description="Prefix with simple label and suffix (default) with dropdown"\n    [invalid]="invalid">\n    <label slot="prefix" class="suffix-prefix-padding">Amount:</label>\n    <nggv-dropdown\n      placeholder="Currency"\n      [options]="[\n        { key: \'eur\', label: \'EUR\' },\n        { key: \'sek\', label: \'SEK\' },\n        { key: \'usd\', label: \'USD\' }\n      ]">\n    </nggv-dropdown>\n  </nggv-input>`,\n  props: args\n})',...WithPrefixAndOrSuffix.parameters?.docs?.source}}},WithResetObservable.parameters={...WithResetObservable.parameters,docs:{...WithResetObservable.parameters?.docs,source:{originalSource:'(_args: NgvInputComponent & WithExtras & any) => {\n  const formGroup = new UntypedFormGroup({\n    resetForm: new UntypedFormControl(\'Annoying orange\')\n  });\n  return {\n    template: /*html*/`\n    <ng-container [formGroup]="formGroup">\n      <nggv-input label="Reset demo"\n        type="text"\n        formControlName="resetForm"\n        [description]="description"\n        [defaultValue]="defaultValue"\n        [reset]="resetObservable$">\n      </nggv-input>\n    </ng-container>`,\n    props: {\n      description: `I will reset every ${resettime}ms`,\n      formGroup,\n      resetObservable$\n    }\n  };\n}',...WithResetObservable.parameters?.docs?.source}}},WithMaxLength.parameters={...WithMaxLength.parameters,docs:{...WithMaxLength.parameters?.docs,source:{originalSource:'(args: NgvInputComponent & WithExtras & any) => {\n  const formGroup = new UntypedFormGroup({\n    remittanceInformation: new UntypedFormControl(\'This is a test of handling if the text is longer than the max length input\', Validators.maxLength(9))\n  });\n  const maxLength$ = of(10);\n  formGroup.get(\'remittanceInformation\')?.valueChanges.subscribe(val => console.log(val));\n  const toggleLang = () => {\n    const updateLang = translocoServiceInstance.getActiveLang() === \'sv\' ? \'en\' : \'sv\';\n    console.log(\'from:\', translocoServiceInstance.getActiveLang(), \'=>\', updateLang);\n    translocoServiceInstance.setActiveLang(updateLang);\n  };\n  return {\n    template: /*html*/`\n    <button (click)="show = !show">Toggle show/hide</button>\n    <button (click)="toggleLang()">Toggle lang</button>\n    <button (click)="setValue(\'another long value\')">Set form value</button>\n    <ng-container [formGroup]="formG">\n      <nggv-input *ngIf="show"\n        [label]="label"\n        [invalid]="invalid"\n        [maxLength]="maxLength$ | async"\n        formControlName="remittanceInformation"\n        >\n        <ng-template #labelTpl>\n          <i>{{ customLabelText }}</i>\n          <nggv-info-circle [info]="info"></nggv-info-circle>\n          <span>{{ text }}</span>\n        </ng-template>\n      </nggv-input>\n      <span>value: {{ formG.controls.remittanceInformation.value }}</span>\n    </ng-container>`,\n    props: {\n      ...args,\n      description: \'This is a field description\',\n      maxLength$: maxLength$,\n      formG: formGroup,\n      setValue: (value: any) => formGroup.controls.remittanceInformation.setValue(value),\n      toggleLang: () => toggleLang(),\n      show: false\n    }\n  };\n}',...WithMaxLength.parameters?.docs?.source}}},WithInputMask.parameters={...WithInputMask.parameters,docs:{...WithInputMask.parameters?.docs,source:{originalSource:'(args: NgvInputComponent & WithExtras & any) => {\n  const dateFC = new UntypedFormControl(dateFCValue, [Validators.required]);\n  const emailFC = new UntypedFormControl(emailFCValue);\n  const currencyFC = new UntypedFormControl(currencyFCValue);\n  const phoneFC = new UntypedFormControl(phoneFCValue);\n  const licenseFC = new UntypedFormControl(licenseFCValue);\n  const ipFC = new UntypedFormControl(ipFCValue);\n  const formGroup = new UntypedFormGroup({\n    dateFC,\n    emailFC,\n    currencyFC,\n    phoneFC,\n    licenseFC,\n    ipFC\n  });\n  dateFC?.valueChanges.subscribe(val => dateFCValue = val);\n  emailFC?.valueChanges.subscribe(val => emailFCValue = val);\n  currencyFC?.valueChanges.subscribe(val => currencyFCValue = val);\n  phoneFC?.valueChanges.subscribe(val => phoneFCValue = val);\n  licenseFC?.valueChanges.subscribe(val => licenseFCValue = val);\n  ipFC?.valueChanges.subscribe(val => ipFCValue = val);\n  const dateInputMask = createMask<Date>({\n    alias: \'datetime\',\n    inputFormat: \'yyyy-mm-dd\',\n    parser: (value: string) => {\n      const values = value.split(\'-\');\n      const year = +values[0];\n      const month = +values[1] - 1;\n      const day = +values[2];\n      return new Date(year, month, day);\n    }\n  });\n  const emailInputMask = createMask({\n    alias: \'email\'\n  });\n  const currencyInputMask = createMask({\n    alias: \'numeric\',\n    groupSeparator: \',\',\n    digits: 2,\n    digitsOptional: false,\n    prefix: \'$ \',\n    placeholder: \'0\',\n    shortcuts: null\n  });\n  const phoneMask = createMask(\'(999) 999-9999\');\n  const licenseInputMask = createMask(\'[9-]AAA-999\');\n  const ipAddressMask = createMask({\n    alias: \'ip\'\n  });\n  return {\n    template: /*html*/`\n    <div class="container" [formGroup]="formGroup">\n      <div class="row">\n        <div class="column">\n          <h2>Date</h2>\n          <nggv-input\n            [inputMask]="dateInputMask"\n            formControlName="dateFC"\n            placeholder="yyyy-mm-dd"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.dateFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.dateFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.dateFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>E-mail</h2>\n          <nggv-input\n            [inputMask]="emailInputMask"\n            formControlName="emailFC"\n            placeholder="_@_._"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.emailFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.emailFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.emailFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>Currency</h2>\n          <nggv-input\n            [inputMask]="currencyInputMask"\n            formControlName="currencyFC"\n            placeholder="$ 0.00"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.currencyFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.currencyFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.currencyFC.errors | json }} </div>\n        </div>\n      </div>\n\n      <div class="row">\n        <div class="column">\n          <h2>Phone</h2>\n          <nggv-input\n            [inputMask]="phoneMask"\n            formControlName="phoneFC"\n            placeholder="(___) ___-____"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.phoneFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.phoneFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.phoneFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>License</h2>\n          <nggv-input\n            [inputMask]="licenseInputMask"\n            formControlName="licenseFC"\n            placeholder="___-___"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.licenseFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.licenseFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.licenseFC.errors | json }} </div>\n        </div>\n\n        <div class="column">\n          <h2>IP address</h2>\n          <nggv-input\n            [inputMask]="ipAddressMask"\n            formControlName="ipFC"\n            placeholder="_._._._"\n            [locked]="locked">\n          </nggv-input>\n          <div> Valid: {{ formGroup.controls.ipFC.valid }} </div>\n          <div> Value: {{ formGroup.controls.ipFC.value }} </div>\n          <div> Errors: {{ formGroup.controls.ipFC.errors }} </div>\n        </div>\n      </div>\n    </div>\n    `,\n    styles: [/*css*/`\n      * {\n        box-sizing: border-box;\n        width: 100%;\n      }\n\n      .column {\n        float: left;\n        width: 33.33%;\n        padding: 16px;\n        min-height: 150px;\n        max-height: 250px;\n      }\n\n      .row:after {\n        content: "";\n        display: table;\n        clear: both;\n      }\n    `],\n    props: {\n      formGroup,\n      dateInputMask,\n      emailInputMask,\n      licenseInputMask,\n      currencyInputMask,\n      ipAddressMask,\n      phoneMask,\n      locked: args.locked\n    }\n  };\n}',...WithInputMask.parameters?.docs?.source}}},WithLockedInput.parameters={...WithLockedInput.parameters,docs:{...WithLockedInput.parameters?.docs,source:{originalSource:"(args: any) => ({\n  props: args\n})",...WithLockedInput.parameters?.docs?.source}}},WithDisplayDisabledAsLocked.parameters={...WithDisplayDisabledAsLocked.parameters,docs:{...WithDisplayDisabledAsLocked.parameters?.docs,source:{originalSource:'(args: any) => {\n  const ctrl = new UntypedFormControl(args.ngModel, [Validators.required, Validators.maxLength(12)]);\n  ctrl.valueChanges.subscribe(val => {\n    console.log(\'input control value:\', val);\n    console.log({\n      required: required()\n    });\n  });\n  const toggleDisableField = () => {\n    if (ctrl.disabled) return ctrl.enable();\n    ctrl.disable();\n  };\n  const required = () => {\n    const error = ctrl.validator && ctrl.validator(({} as AbstractControl));\n    return error && error.required;\n  };\n  return {\n    template: /*html*/`\n    <nggv-input\n      [label]="label"\n      [placeholder]="placeholder"\n      [description]="description"\n      [invalid]="invalid"\n      [valid]="valid"\n      [required]="required"\n      [optional]="optional"\n      [locked]="locked"\n      [displayDisabledAsLocked]="displayDisabledAsLocked"\n      [formControl]="formControl"\n      [withErrorIcon]="withErrorIcon">\n    </nggv-input>\n    <div style="margin-top: 1rem">\n      <button type="button" class="sdv-button" (click)="disableFn()">Toggle disable control</button>\n    </div>\n    `,\n    props: {\n      ...args,\n      formControl: ctrl,\n      disableFn: toggleDisableField\n    }\n  };\n}',...WithDisplayDisabledAsLocked.parameters?.docs?.source}}},WithTypeAhead.parameters={...WithTypeAhead.parameters,docs:{...WithTypeAhead.parameters?.docs,source:{originalSource:"(args: any) => {\n  const options = [{\n    key: 'hej',\n    label: 'Hej'\n  }, {\n    key: 'tja',\n    label: 'Tja'\n  }, {\n    key: 'hejsan',\n    label: 'Hejsan'\n  }, {\n    key: 'tjo',\n    label: 'Tjo'\n  }, {\n    key: 'tjena',\n    label: 'Tjena'\n  }];\n  const searchFunction = (value$: Observable<string>) => value$.pipe(debounceTime(100), tap(x => console.log('entered value in input: ', x)), map(inputValue => options.filter(option => option.key.toUpperCase().includes(inputValue.toUpperCase()))));\n  return {\n    template: /*html*/`\n      <nggv-input class=\"toggle\"\n        [label]=\"label\"\n        [nggvTypeahead]=\"searchFunction\"\n        [resultFormatter]=\"resultFormatter\"\n        [selectedFormatter]=\"selectedFormatter\"\n        [autocomplete]=\"'off'\">\n      </nggv-input>\n    `,\n    styles: [/*css*/`\n      nggv-dropdown-list {\n        width: 100%;\n      }\n    `],\n    props: {\n      ...args,\n      searchFunction: searchFunction,\n      selectedFormatter: (value: {\n        key: string;\n        label: string;\n      }) => value.label.toUpperCase()\n    }\n  };\n}",...WithTypeAhead.parameters?.docs?.source}}}}}]);